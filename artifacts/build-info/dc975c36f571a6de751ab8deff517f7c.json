{"id":"dc975c36f571a6de751ab8deff517f7c","_format":"hh-sol-build-info-1","solcVersion":"0.8.28","solcLongVersion":"0.8.28+commit.7893614a","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS\n    }\n\n    /**\n     * @dev The signature derives the `address(0)`.\n     */\n    error ECDSAInvalidSignature();\n\n    /**\n     * @dev The signature has an invalid length.\n     */\n    error ECDSAInvalidSignatureLength(uint256 length);\n\n    /**\n     * @dev The signature has an S value that is in the upper half order.\n     */\n    error ECDSAInvalidSignatureS(bytes32 s);\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n     * return address(0) without also returning an error description. Errors are documented using an enum (error type)\n     * and a bytes32 providing additional information about the error.\n     *\n     * If no error is returned, then the address can be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes memory signature\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            assembly (\"memory-safe\") {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length));\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, signature);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes32 r,\n        bytes32 vs\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        unchecked {\n            bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n            // We do not check for an overflow here since the shift operation results in 0 or 1.\n            uint8 v = uint8((uint256(vs) >> 255) + 27);\n            return tryRecover(hash, v, r, s);\n        }\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     */\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, r, vs);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function tryRecover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS, s);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature, bytes32(0));\n        }\n\n        return (signer, RecoverError.NoError, bytes32(0));\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, v, r, s);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Optionally reverts with the corresponding custom error according to the `error` argument provided.\n     */\n    function _throwError(RecoverError error, bytes32 errorArg) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert ECDSAInvalidSignature();\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert ECDSAInvalidSignatureLength(uint256(errorArg));\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert ECDSAInvalidSignatureS(errorArg);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/Hashes.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/cryptography/Hashes.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library of standard hash functions.\n *\n * _Available since v5.1._\n */\nlibrary Hashes {\n    /**\n     * @dev Commutative Keccak256 hash of a sorted pair of bytes32. Frequently used when working with merkle proofs.\n     *\n     * NOTE: Equivalent to the `standardNodeHash` in our https://github.com/OpenZeppelin/merkle-tree[JavaScript library].\n     */\n    function commutativeKeccak256(bytes32 a, bytes32 b) internal pure returns (bytes32) {\n        return a < b ? efficientKeccak256(a, b) : efficientKeccak256(b, a);\n    }\n\n    /**\n     * @dev Implementation of keccak256(abi.encode(a, b)) that doesn't allocate or expand memory.\n     */\n    function efficientKeccak256(bytes32 a, bytes32 b) internal pure returns (bytes32 value) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, a)\n            mstore(0x20, b)\n            value := keccak256(0x00, 0x40)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/cryptography/MerkleProof.sol)\n// This file was procedurally generated from scripts/generate/templates/MerkleProof.js.\n\npragma solidity ^0.8.20;\n\nimport {Hashes} from \"./Hashes.sol\";\n\n/**\n * @dev These functions deal with verification of Merkle Tree proofs.\n *\n * The tree and the proofs can be generated using our\n * https://github.com/OpenZeppelin/merkle-tree[JavaScript library].\n * You will find a quickstart guide in the readme.\n *\n * WARNING: You should avoid using leaf values that are 64 bytes long prior to\n * hashing, or use a hash function other than keccak256 for hashing leaves.\n * This is because the concatenation of a sorted pair of internal nodes in\n * the Merkle tree could be reinterpreted as a leaf value.\n * OpenZeppelin's JavaScript library generates Merkle trees that are safe\n * against this attack out of the box.\n *\n * IMPORTANT: Consider memory side-effects when using custom hashing functions\n * that access memory in an unsafe way.\n *\n * NOTE: This library supports proof verification for merkle trees built using\n * custom _commutative_ hashing functions (i.e. `H(a, b) == H(b, a)`). Proving\n * leaf inclusion in trees built using non-commutative hashing functions requires\n * additional logic that is not supported by this library.\n */\nlibrary MerkleProof {\n    /**\n     *@dev The multiproof provided is not valid.\n     */\n    error MerkleProofInvalidMultiproof();\n\n    /**\n     * @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\n     * defined by `root`. For this, a `proof` must be provided, containing\n     * sibling hashes on the branch from the leaf to the root of the tree. Each\n     * pair of leaves and each pair of pre-images are assumed to be sorted.\n     *\n     * This version handles proofs in memory with the default hashing function.\n     */\n    function verify(bytes32[] memory proof, bytes32 root, bytes32 leaf) internal pure returns (bool) {\n        return processProof(proof, leaf) == root;\n    }\n\n    /**\n     * @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\n     * from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\n     * hash matches the root of the tree. When processing the proof, the pairs\n     * of leaves & pre-images are assumed to be sorted.\n     *\n     * This version handles proofs in memory with the default hashing function.\n     */\n    function processProof(bytes32[] memory proof, bytes32 leaf) internal pure returns (bytes32) {\n        bytes32 computedHash = leaf;\n        for (uint256 i = 0; i < proof.length; i++) {\n            computedHash = Hashes.commutativeKeccak256(computedHash, proof[i]);\n        }\n        return computedHash;\n    }\n\n    /**\n     * @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\n     * defined by `root`. For this, a `proof` must be provided, containing\n     * sibling hashes on the branch from the leaf to the root of the tree. Each\n     * pair of leaves and each pair of pre-images are assumed to be sorted.\n     *\n     * This version handles proofs in memory with a custom hashing function.\n     */\n    function verify(\n        bytes32[] memory proof,\n        bytes32 root,\n        bytes32 leaf,\n        function(bytes32, bytes32) view returns (bytes32) hasher\n    ) internal view returns (bool) {\n        return processProof(proof, leaf, hasher) == root;\n    }\n\n    /**\n     * @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\n     * from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\n     * hash matches the root of the tree. When processing the proof, the pairs\n     * of leaves & pre-images are assumed to be sorted.\n     *\n     * This version handles proofs in memory with a custom hashing function.\n     */\n    function processProof(\n        bytes32[] memory proof,\n        bytes32 leaf,\n        function(bytes32, bytes32) view returns (bytes32) hasher\n    ) internal view returns (bytes32) {\n        bytes32 computedHash = leaf;\n        for (uint256 i = 0; i < proof.length; i++) {\n            computedHash = hasher(computedHash, proof[i]);\n        }\n        return computedHash;\n    }\n\n    /**\n     * @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\n     * defined by `root`. For this, a `proof` must be provided, containing\n     * sibling hashes on the branch from the leaf to the root of the tree. Each\n     * pair of leaves and each pair of pre-images are assumed to be sorted.\n     *\n     * This version handles proofs in calldata with the default hashing function.\n     */\n    function verifyCalldata(bytes32[] calldata proof, bytes32 root, bytes32 leaf) internal pure returns (bool) {\n        return processProofCalldata(proof, leaf) == root;\n    }\n\n    /**\n     * @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\n     * from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\n     * hash matches the root of the tree. When processing the proof, the pairs\n     * of leaves & pre-images are assumed to be sorted.\n     *\n     * This version handles proofs in calldata with the default hashing function.\n     */\n    function processProofCalldata(bytes32[] calldata proof, bytes32 leaf) internal pure returns (bytes32) {\n        bytes32 computedHash = leaf;\n        for (uint256 i = 0; i < proof.length; i++) {\n            computedHash = Hashes.commutativeKeccak256(computedHash, proof[i]);\n        }\n        return computedHash;\n    }\n\n    /**\n     * @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\n     * defined by `root`. For this, a `proof` must be provided, containing\n     * sibling hashes on the branch from the leaf to the root of the tree. Each\n     * pair of leaves and each pair of pre-images are assumed to be sorted.\n     *\n     * This version handles proofs in calldata with a custom hashing function.\n     */\n    function verifyCalldata(\n        bytes32[] calldata proof,\n        bytes32 root,\n        bytes32 leaf,\n        function(bytes32, bytes32) view returns (bytes32) hasher\n    ) internal view returns (bool) {\n        return processProofCalldata(proof, leaf, hasher) == root;\n    }\n\n    /**\n     * @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\n     * from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\n     * hash matches the root of the tree. When processing the proof, the pairs\n     * of leaves & pre-images are assumed to be sorted.\n     *\n     * This version handles proofs in calldata with a custom hashing function.\n     */\n    function processProofCalldata(\n        bytes32[] calldata proof,\n        bytes32 leaf,\n        function(bytes32, bytes32) view returns (bytes32) hasher\n    ) internal view returns (bytes32) {\n        bytes32 computedHash = leaf;\n        for (uint256 i = 0; i < proof.length; i++) {\n            computedHash = hasher(computedHash, proof[i]);\n        }\n        return computedHash;\n    }\n\n    /**\n     * @dev Returns true if the `leaves` can be simultaneously proven to be a part of a Merkle tree defined by\n     * `root`, according to `proof` and `proofFlags` as described in {processMultiProof}.\n     *\n     * This version handles multiproofs in memory with the default hashing function.\n     *\n     * CAUTION: Not all Merkle trees admit multiproofs. See {processMultiProof} for details.\n     *\n     * NOTE: Consider the case where `root == proof[0] && leaves.length == 0` as it will return `true`.\n     * The `leaves` must be validated independently. See {processMultiProof}.\n     */\n    function multiProofVerify(\n        bytes32[] memory proof,\n        bool[] memory proofFlags,\n        bytes32 root,\n        bytes32[] memory leaves\n    ) internal pure returns (bool) {\n        return processMultiProof(proof, proofFlags, leaves) == root;\n    }\n\n    /**\n     * @dev Returns the root of a tree reconstructed from `leaves` and sibling nodes in `proof`. The reconstruction\n     * proceeds by incrementally reconstructing all inner nodes by combining a leaf/inner node with either another\n     * leaf/inner node or a proof sibling node, depending on whether each `proofFlags` item is true or false\n     * respectively.\n     *\n     * This version handles multiproofs in memory with the default hashing function.\n     *\n     * CAUTION: Not all Merkle trees admit multiproofs. To use multiproofs, it is sufficient to ensure that: 1) the tree\n     * is complete (but not necessarily perfect), 2) the leaves to be proven are in the opposite order they are in the\n     * tree (i.e., as seen from right to left starting at the deepest layer and continuing at the next layer).\n     *\n     * NOTE: The _empty set_ (i.e. the case where `proof.length == 1 && leaves.length == 0`) is considered a no-op,\n     * and therefore a valid multiproof (i.e. it returns `proof[0]`). Consider disallowing this case if you're not\n     * validating the leaves elsewhere.\n     */\n    function processMultiProof(\n        bytes32[] memory proof,\n        bool[] memory proofFlags,\n        bytes32[] memory leaves\n    ) internal pure returns (bytes32 merkleRoot) {\n        // This function rebuilds the root hash by traversing the tree up from the leaves. The root is rebuilt by\n        // consuming and producing values on a queue. The queue starts with the `leaves` array, then goes onto the\n        // `hashes` array. At the end of the process, the last hash in the `hashes` array should contain the root of\n        // the Merkle tree.\n        uint256 leavesLen = leaves.length;\n        uint256 proofFlagsLen = proofFlags.length;\n\n        // Check proof validity.\n        if (leavesLen + proof.length != proofFlagsLen + 1) {\n            revert MerkleProofInvalidMultiproof();\n        }\n\n        // The xxxPos values are \"pointers\" to the next value to consume in each array. All accesses are done using\n        // `xxx[xxxPos++]`, which return the current value and increment the pointer, thus mimicking a queue's \"pop\".\n        bytes32[] memory hashes = new bytes32[](proofFlagsLen);\n        uint256 leafPos = 0;\n        uint256 hashPos = 0;\n        uint256 proofPos = 0;\n        // At each step, we compute the next hash using two values:\n        // - a value from the \"main queue\". If not all leaves have been consumed, we get the next leaf, otherwise we\n        //   get the next hash.\n        // - depending on the flag, either another value from the \"main queue\" (merging branches) or an element from the\n        //   `proof` array.\n        for (uint256 i = 0; i < proofFlagsLen; i++) {\n            bytes32 a = leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++];\n            bytes32 b = proofFlags[i]\n                ? (leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++])\n                : proof[proofPos++];\n            hashes[i] = Hashes.commutativeKeccak256(a, b);\n        }\n\n        if (proofFlagsLen > 0) {\n            if (proofPos != proof.length) {\n                revert MerkleProofInvalidMultiproof();\n            }\n            unchecked {\n                return hashes[proofFlagsLen - 1];\n            }\n        } else if (leavesLen > 0) {\n            return leaves[0];\n        } else {\n            return proof[0];\n        }\n    }\n\n    /**\n     * @dev Returns true if the `leaves` can be simultaneously proven to be a part of a Merkle tree defined by\n     * `root`, according to `proof` and `proofFlags` as described in {processMultiProof}.\n     *\n     * This version handles multiproofs in memory with a custom hashing function.\n     *\n     * CAUTION: Not all Merkle trees admit multiproofs. See {processMultiProof} for details.\n     *\n     * NOTE: Consider the case where `root == proof[0] && leaves.length == 0` as it will return `true`.\n     * The `leaves` must be validated independently. See {processMultiProof}.\n     */\n    function multiProofVerify(\n        bytes32[] memory proof,\n        bool[] memory proofFlags,\n        bytes32 root,\n        bytes32[] memory leaves,\n        function(bytes32, bytes32) view returns (bytes32) hasher\n    ) internal view returns (bool) {\n        return processMultiProof(proof, proofFlags, leaves, hasher) == root;\n    }\n\n    /**\n     * @dev Returns the root of a tree reconstructed from `leaves` and sibling nodes in `proof`. The reconstruction\n     * proceeds by incrementally reconstructing all inner nodes by combining a leaf/inner node with either another\n     * leaf/inner node or a proof sibling node, depending on whether each `proofFlags` item is true or false\n     * respectively.\n     *\n     * This version handles multiproofs in memory with a custom hashing function.\n     *\n     * CAUTION: Not all Merkle trees admit multiproofs. To use multiproofs, it is sufficient to ensure that: 1) the tree\n     * is complete (but not necessarily perfect), 2) the leaves to be proven are in the opposite order they are in the\n     * tree (i.e., as seen from right to left starting at the deepest layer and continuing at the next layer).\n     *\n     * NOTE: The _empty set_ (i.e. the case where `proof.length == 1 && leaves.length == 0`) is considered a no-op,\n     * and therefore a valid multiproof (i.e. it returns `proof[0]`). Consider disallowing this case if you're not\n     * validating the leaves elsewhere.\n     */\n    function processMultiProof(\n        bytes32[] memory proof,\n        bool[] memory proofFlags,\n        bytes32[] memory leaves,\n        function(bytes32, bytes32) view returns (bytes32) hasher\n    ) internal view returns (bytes32 merkleRoot) {\n        // This function rebuilds the root hash by traversing the tree up from the leaves. The root is rebuilt by\n        // consuming and producing values on a queue. The queue starts with the `leaves` array, then goes onto the\n        // `hashes` array. At the end of the process, the last hash in the `hashes` array should contain the root of\n        // the Merkle tree.\n        uint256 leavesLen = leaves.length;\n        uint256 proofFlagsLen = proofFlags.length;\n\n        // Check proof validity.\n        if (leavesLen + proof.length != proofFlagsLen + 1) {\n            revert MerkleProofInvalidMultiproof();\n        }\n\n        // The xxxPos values are \"pointers\" to the next value to consume in each array. All accesses are done using\n        // `xxx[xxxPos++]`, which return the current value and increment the pointer, thus mimicking a queue's \"pop\".\n        bytes32[] memory hashes = new bytes32[](proofFlagsLen);\n        uint256 leafPos = 0;\n        uint256 hashPos = 0;\n        uint256 proofPos = 0;\n        // At each step, we compute the next hash using two values:\n        // - a value from the \"main queue\". If not all leaves have been consumed, we get the next leaf, otherwise we\n        //   get the next hash.\n        // - depending on the flag, either another value from the \"main queue\" (merging branches) or an element from the\n        //   `proof` array.\n        for (uint256 i = 0; i < proofFlagsLen; i++) {\n            bytes32 a = leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++];\n            bytes32 b = proofFlags[i]\n                ? (leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++])\n                : proof[proofPos++];\n            hashes[i] = hasher(a, b);\n        }\n\n        if (proofFlagsLen > 0) {\n            if (proofPos != proof.length) {\n                revert MerkleProofInvalidMultiproof();\n            }\n            unchecked {\n                return hashes[proofFlagsLen - 1];\n            }\n        } else if (leavesLen > 0) {\n            return leaves[0];\n        } else {\n            return proof[0];\n        }\n    }\n\n    /**\n     * @dev Returns true if the `leaves` can be simultaneously proven to be a part of a Merkle tree defined by\n     * `root`, according to `proof` and `proofFlags` as described in {processMultiProof}.\n     *\n     * This version handles multiproofs in calldata with the default hashing function.\n     *\n     * CAUTION: Not all Merkle trees admit multiproofs. See {processMultiProof} for details.\n     *\n     * NOTE: Consider the case where `root == proof[0] && leaves.length == 0` as it will return `true`.\n     * The `leaves` must be validated independently. See {processMultiProofCalldata}.\n     */\n    function multiProofVerifyCalldata(\n        bytes32[] calldata proof,\n        bool[] calldata proofFlags,\n        bytes32 root,\n        bytes32[] memory leaves\n    ) internal pure returns (bool) {\n        return processMultiProofCalldata(proof, proofFlags, leaves) == root;\n    }\n\n    /**\n     * @dev Returns the root of a tree reconstructed from `leaves` and sibling nodes in `proof`. The reconstruction\n     * proceeds by incrementally reconstructing all inner nodes by combining a leaf/inner node with either another\n     * leaf/inner node or a proof sibling node, depending on whether each `proofFlags` item is true or false\n     * respectively.\n     *\n     * This version handles multiproofs in calldata with the default hashing function.\n     *\n     * CAUTION: Not all Merkle trees admit multiproofs. To use multiproofs, it is sufficient to ensure that: 1) the tree\n     * is complete (but not necessarily perfect), 2) the leaves to be proven are in the opposite order they are in the\n     * tree (i.e., as seen from right to left starting at the deepest layer and continuing at the next layer).\n     *\n     * NOTE: The _empty set_ (i.e. the case where `proof.length == 1 && leaves.length == 0`) is considered a no-op,\n     * and therefore a valid multiproof (i.e. it returns `proof[0]`). Consider disallowing this case if you're not\n     * validating the leaves elsewhere.\n     */\n    function processMultiProofCalldata(\n        bytes32[] calldata proof,\n        bool[] calldata proofFlags,\n        bytes32[] memory leaves\n    ) internal pure returns (bytes32 merkleRoot) {\n        // This function rebuilds the root hash by traversing the tree up from the leaves. The root is rebuilt by\n        // consuming and producing values on a queue. The queue starts with the `leaves` array, then goes onto the\n        // `hashes` array. At the end of the process, the last hash in the `hashes` array should contain the root of\n        // the Merkle tree.\n        uint256 leavesLen = leaves.length;\n        uint256 proofFlagsLen = proofFlags.length;\n\n        // Check proof validity.\n        if (leavesLen + proof.length != proofFlagsLen + 1) {\n            revert MerkleProofInvalidMultiproof();\n        }\n\n        // The xxxPos values are \"pointers\" to the next value to consume in each array. All accesses are done using\n        // `xxx[xxxPos++]`, which return the current value and increment the pointer, thus mimicking a queue's \"pop\".\n        bytes32[] memory hashes = new bytes32[](proofFlagsLen);\n        uint256 leafPos = 0;\n        uint256 hashPos = 0;\n        uint256 proofPos = 0;\n        // At each step, we compute the next hash using two values:\n        // - a value from the \"main queue\". If not all leaves have been consumed, we get the next leaf, otherwise we\n        //   get the next hash.\n        // - depending on the flag, either another value from the \"main queue\" (merging branches) or an element from the\n        //   `proof` array.\n        for (uint256 i = 0; i < proofFlagsLen; i++) {\n            bytes32 a = leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++];\n            bytes32 b = proofFlags[i]\n                ? (leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++])\n                : proof[proofPos++];\n            hashes[i] = Hashes.commutativeKeccak256(a, b);\n        }\n\n        if (proofFlagsLen > 0) {\n            if (proofPos != proof.length) {\n                revert MerkleProofInvalidMultiproof();\n            }\n            unchecked {\n                return hashes[proofFlagsLen - 1];\n            }\n        } else if (leavesLen > 0) {\n            return leaves[0];\n        } else {\n            return proof[0];\n        }\n    }\n\n    /**\n     * @dev Returns true if the `leaves` can be simultaneously proven to be a part of a Merkle tree defined by\n     * `root`, according to `proof` and `proofFlags` as described in {processMultiProof}.\n     *\n     * This version handles multiproofs in calldata with a custom hashing function.\n     *\n     * CAUTION: Not all Merkle trees admit multiproofs. See {processMultiProof} for details.\n     *\n     * NOTE: Consider the case where `root == proof[0] && leaves.length == 0` as it will return `true`.\n     * The `leaves` must be validated independently. See {processMultiProofCalldata}.\n     */\n    function multiProofVerifyCalldata(\n        bytes32[] calldata proof,\n        bool[] calldata proofFlags,\n        bytes32 root,\n        bytes32[] memory leaves,\n        function(bytes32, bytes32) view returns (bytes32) hasher\n    ) internal view returns (bool) {\n        return processMultiProofCalldata(proof, proofFlags, leaves, hasher) == root;\n    }\n\n    /**\n     * @dev Returns the root of a tree reconstructed from `leaves` and sibling nodes in `proof`. The reconstruction\n     * proceeds by incrementally reconstructing all inner nodes by combining a leaf/inner node with either another\n     * leaf/inner node or a proof sibling node, depending on whether each `proofFlags` item is true or false\n     * respectively.\n     *\n     * This version handles multiproofs in calldata with a custom hashing function.\n     *\n     * CAUTION: Not all Merkle trees admit multiproofs. To use multiproofs, it is sufficient to ensure that: 1) the tree\n     * is complete (but not necessarily perfect), 2) the leaves to be proven are in the opposite order they are in the\n     * tree (i.e., as seen from right to left starting at the deepest layer and continuing at the next layer).\n     *\n     * NOTE: The _empty set_ (i.e. the case where `proof.length == 1 && leaves.length == 0`) is considered a no-op,\n     * and therefore a valid multiproof (i.e. it returns `proof[0]`). Consider disallowing this case if you're not\n     * validating the leaves elsewhere.\n     */\n    function processMultiProofCalldata(\n        bytes32[] calldata proof,\n        bool[] calldata proofFlags,\n        bytes32[] memory leaves,\n        function(bytes32, bytes32) view returns (bytes32) hasher\n    ) internal view returns (bytes32 merkleRoot) {\n        // This function rebuilds the root hash by traversing the tree up from the leaves. The root is rebuilt by\n        // consuming and producing values on a queue. The queue starts with the `leaves` array, then goes onto the\n        // `hashes` array. At the end of the process, the last hash in the `hashes` array should contain the root of\n        // the Merkle tree.\n        uint256 leavesLen = leaves.length;\n        uint256 proofFlagsLen = proofFlags.length;\n\n        // Check proof validity.\n        if (leavesLen + proof.length != proofFlagsLen + 1) {\n            revert MerkleProofInvalidMultiproof();\n        }\n\n        // The xxxPos values are \"pointers\" to the next value to consume in each array. All accesses are done using\n        // `xxx[xxxPos++]`, which return the current value and increment the pointer, thus mimicking a queue's \"pop\".\n        bytes32[] memory hashes = new bytes32[](proofFlagsLen);\n        uint256 leafPos = 0;\n        uint256 hashPos = 0;\n        uint256 proofPos = 0;\n        // At each step, we compute the next hash using two values:\n        // - a value from the \"main queue\". If not all leaves have been consumed, we get the next leaf, otherwise we\n        //   get the next hash.\n        // - depending on the flag, either another value from the \"main queue\" (merging branches) or an element from the\n        //   `proof` array.\n        for (uint256 i = 0; i < proofFlagsLen; i++) {\n            bytes32 a = leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++];\n            bytes32 b = proofFlags[i]\n                ? (leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++])\n                : proof[proofPos++];\n            hashes[i] = hasher(a, b);\n        }\n\n        if (proofFlagsLen > 0) {\n            if (proofPos != proof.length) {\n                revert MerkleProofInvalidMultiproof();\n            }\n            unchecked {\n                return hashes[proofFlagsLen - 1];\n            }\n        } else if (leavesLen > 0) {\n            return leaves[0];\n        } else {\n            return proof[0];\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Pausable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    bool private _paused;\n\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    /**\n     * @dev The operation failed because the contract is paused.\n     */\n    error EnforcedPause();\n\n    /**\n     * @dev The operation failed because the contract is not paused.\n     */\n    error ExpectedPause();\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        if (paused()) {\n            revert EnforcedPause();\n        }\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        if (!paused()) {\n            revert ExpectedPause();\n        }\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n * consider using {ReentrancyGuardTransient} instead.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    uint256 private _status;\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    constructor() {\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if (_status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        _status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == ENTERED;\n    }\n}\n"},"contracts/BlocPol.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\ncontract BlocPol {\r\n    // --- Events ---\r\n    event CandidateRegistered(uint indexed candidateId, string name, string ipfsHash);\r\n    event VotingSessionStarted(uint startTime, uint endTime);\r\n    event VotingSessionStopped(uint stopTime);\r\n    event VoteCast(address indexed voter, uint indexed candidateId, bytes32 voteHash, bytes32 txHash);\r\n\r\n    // --- Structs ---\r\n    struct Candidate {\r\n        uint id;\r\n        string name;\r\n        string ipfsHash; // Optional IPFS hash for off-chain profile\r\n        uint voteCount;\r\n    }\r\n\r\n    // --- State Variables ---\r\n    address public admin;\r\n    uint public deploymentTimestamp;\r\n    bool public votingActive;\r\n    uint public votingStartTime;\r\n    uint public votingEndTime;\r\n    uint private nextCandidateId;\r\n\r\n    mapping(uint => Candidate) private candidates;\r\n    uint[] private candidateIds;\r\n    mapping(address => bool) private hasVoted;\r\n    mapping(address => uint) private voterToCandidate;\r\n    mapping(address => bytes32) private voterToVoteHash;\r\n    mapping(address => bytes32) private voterToTxHash;\r\n\r\n    // --- Modifiers ---\r\n    modifier onlyAdmin() {\r\n        require(msg.sender == admin, \"Only admin can perform this action\");\r\n        _;\r\n    }\r\n    modifier onlyDuringVoting() {\r\n        require(votingActive, \"Voting is not active\");\r\n        require(block.timestamp >= votingStartTime && block.timestamp <= votingEndTime, \"Voting not in allowed period\");\r\n        _;\r\n    }\r\n    modifier onlyOnce() {\r\n        require(!hasVoted[msg.sender], \"You have already voted\");\r\n        _;\r\n    }\r\n\r\n    // --- Constructor ---\r\n    constructor() {\r\n        admin = msg.sender;\r\n        deploymentTimestamp = block.timestamp;\r\n    }\r\n\r\n    // --- Admin Functions ---\r\n    function registerCandidate(string calldata name, string calldata ipfsHash) external onlyAdmin {\r\n        uint candidateId = nextCandidateId++;\r\n        candidates[candidateId] = Candidate(candidateId, name, ipfsHash, 0);\r\n        candidateIds.push(candidateId);\r\n        emit CandidateRegistered(candidateId, name, ipfsHash);\r\n    }\r\n\r\n    function startVotingSession(uint durationSeconds) external onlyAdmin {\r\n        require(!votingActive, \"Voting already active\");\r\n        votingActive = true;\r\n        votingStartTime = block.timestamp;\r\n        votingEndTime = block.timestamp + durationSeconds;\r\n        emit VotingSessionStarted(votingStartTime, votingEndTime);\r\n    }\r\n\r\n    function stopVotingSession() external onlyAdmin {\r\n        require(votingActive, \"Voting not active\");\r\n        votingActive = false;\r\n        votingEndTime = block.timestamp;\r\n        emit VotingSessionStopped(votingEndTime);\r\n    }\r\n\r\n    // --- Voting Functions ---\r\n    function vote(uint candidateId) external onlyDuringVoting onlyOnce {\r\n        require(candidates[candidateId].id == candidateId, \"Invalid candidate\");\r\n        candidates[candidateId].voteCount++;\r\n        hasVoted[msg.sender] = true;\r\n        voterToCandidate[msg.sender] = candidateId;\r\n        bytes32 voteHash = keccak256(abi.encodePacked(msg.sender, candidateId, block.timestamp));\r\n        voterToVoteHash[msg.sender] = voteHash;\r\n        bytes32 txHash = keccak256(abi.encodePacked(msg.sender, candidateId, block.number, blockhash(block.number - 1)));\r\n        voterToTxHash[msg.sender] = txHash;\r\n        emit VoteCast(msg.sender, candidateId, voteHash, txHash);\r\n    }\r\n\r\n    // --- View Functions ---\r\n    function getCandidates() external view returns (Candidate[] memory) {\r\n        Candidate[] memory list = new Candidate[](candidateIds.length);\r\n        for (uint i = 0; i < candidateIds.length; i++) {\r\n            list[i] = candidates[candidateIds[i]];\r\n        }\r\n        return list;\r\n    }\r\n\r\n    function getCandidate(uint candidateId) external view returns (Candidate memory) {\r\n        return candidates[candidateId];\r\n    }\r\n\r\n    function getTotalVotes(uint candidateId) external view returns (uint) {\r\n        return candidates[candidateId].voteCount;\r\n    }\r\n\r\n    function isVotingActive() external view returns (bool) {\r\n        return votingActive && block.timestamp >= votingStartTime && block.timestamp <= votingEndTime;\r\n    }\r\n\r\n    function hasAddressVoted(address addr) external view returns (bool) {\r\n        return hasVoted[addr];\r\n    }\r\n\r\n    function getVoteHash(address voter) external view returns (bytes32) {\r\n        require(hasVoted[voter], \"No vote found for this address\");\r\n        return voterToVoteHash[voter];\r\n    }\r\n\r\n    function getVoteTxHash(address voter) external view returns (bytes32) {\r\n        require(hasVoted[voter], \"No vote found for this address\");\r\n        return voterToTxHash[voter];\r\n    }\r\n\r\n    function getDeploymentTimestamp() external view returns (uint) {\r\n        return deploymentTimestamp;\r\n    }\r\n\r\n    function getVotedCandidate(address voter) external view returns (uint) {\r\n        require(hasVoted[voter], \"No vote found for this address\");\r\n        return voterToCandidate[voter];\r\n    }\r\n\r\n    // --- Transparent Vote Viewing (anonymous) ---\r\n    function getAllVotes() external view returns (uint[] memory) {\r\n        uint[] memory votes = new uint[](candidateIds.length);\r\n        for (uint i = 0; i < candidateIds.length; i++) {\r\n            votes[i] = candidates[candidateIds[i]].voteCount;\r\n        }\r\n        return votes;\r\n    }\r\n} "},"contracts/BlocPolAdvanced.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\r\nimport \"@openzeppelin/contracts/utils/Pausable.sol\";\r\nimport \"./libraries/CryptographicUtils.sol\";\r\nimport \"./ZKProofVerifier.sol\";\r\nimport \"./LiquidDemocracy.sol\";\r\nimport \"./VoteMixing.sol\";\r\n\r\n/**\r\n * @title BlocPolAdvanced\r\n * @dev Advanced blockchain voting system with ZK-proofs, liquid democracy, and vote mixing\r\n * @notice Comprehensive voting system with privacy, scalability, and transparency features\r\n */\r\ncontract BlocPolAdvanced is Ownable, ReentrancyGuard, Pausable {\r\n    using CryptographicUtils for *;\r\n\r\n    // --- Structs ---\r\n    struct Candidate {\r\n        uint256 id;\r\n        string name;\r\n        string ipfsHash;\r\n        uint256 voteCount;\r\n        uint256 delegatedVoteCount;\r\n        bool isActive;\r\n        uint256 registrationTime;\r\n    }\r\n\r\n    struct AdvancedVote {\r\n        address voter;\r\n        uint256 candidateId;\r\n        uint256[] rankedChoices;      // For ranked choice voting\r\n        bytes32 commitmentHash;       // For commitment scheme\r\n        bytes32 zkProofHash;          // For ZK-proof verification\r\n        bytes32 mixedVoteHash;        // For vote mixing\r\n        uint256 votingPower;          // For liquid democracy\r\n        uint256 timestamp;\r\n        bool isRevealed;\r\n        VoteType voteType;\r\n    }\r\n\r\n    struct VotingSession {\r\n        uint256 sessionId;\r\n        uint256 startTime;\r\n        uint256 endTime;\r\n        uint256 revealTime;\r\n        bool isActive;\r\n        bool isRevealed;\r\n        uint256 totalVotes;\r\n        uint256 totalVotingPower;\r\n        VotingMode mode;\r\n        bytes32 merkleRoot;\r\n    }\r\n\r\n    struct AuditTrail {\r\n        bytes32 actionHash;\r\n        address actor;\r\n        string action;\r\n        uint256 timestamp;\r\n        bytes32[] proof;\r\n    }\r\n\r\n    enum VoteType {\r\n        DIRECT,         // Direct vote\r\n        DELEGATED,      // Delegated vote\r\n        MIXED,          // Mixed vote\r\n        ZK_PROOF        // Zero-knowledge proof vote\r\n    }\r\n\r\n    enum VotingMode {\r\n        SIMPLE_MAJORITY,\r\n        RANKED_CHOICE,\r\n        LIQUID_DEMOCRACY,\r\n        MIXED_ANONYMOUS\r\n    }\r\n\r\n    // --- State Variables ---\r\n    mapping(uint256 => Candidate) private candidates;\r\n    mapping(uint256 => AdvancedVote) private votes;\r\n    mapping(uint256 => VotingSession) private votingSessions;\r\n    mapping(address => mapping(uint256 => bool)) private hasVoted;\r\n    mapping(address => uint256[]) private voterVotes;\r\n    mapping(bytes32 => AuditTrail) private auditTrails;\r\n    \r\n    uint256 private candidateCounter;\r\n    uint256 private voteCounter;\r\n    uint256 private sessionCounter;\r\n    uint256 private auditCounter;\r\n    \r\n    // Contract references\r\n    ZKProofVerifier public zkProofVerifier;\r\n    LiquidDemocracy public liquidDemocracy;\r\n    VoteMixing public voteMixing;\r\n    \r\n    // Configuration\r\n    uint256 public minVotingPower;\r\n    uint256 public maxVotingPower;\r\n    uint256 public commitmentPeriod;\r\n    uint256 public revealPeriod;\r\n    bool public zkProofsEnabled;\r\n    bool public liquidDemocracyEnabled;\r\n    bool public voteMixingEnabled;\r\n    \r\n    // --- Events ---\r\n    event CandidateRegistered(uint256 indexed candidateId, string name, string ipfsHash, uint256 timestamp);\r\n    event VotingSessionCreated(uint256 indexed sessionId, VotingMode mode, uint256 startTime, uint256 endTime);\r\n    event VoteCast(address indexed voter, uint256 indexed candidateId, VoteType voteType, uint256 timestamp);\r\n    event VoteRevealed(address indexed voter, uint256 indexed candidateId, uint256 timestamp);\r\n    event VotingSessionEnded(uint256 indexed sessionId, uint256 totalVotes, uint256 timestamp);\r\n    event AuditLogCreated(bytes32 indexed actionHash, address indexed actor, string action, uint256 timestamp);\r\n    event ZKProofVerified(bytes32 indexed proofHash, bool isValid, uint256 timestamp);\r\n    event DelegationCreated(address indexed from, address indexed to, uint256 power, uint256 timestamp);\r\n    event VoteMixed(bytes32 indexed originalVote, bytes32 indexed mixedVote, uint256 timestamp);\r\n\r\n    // --- Modifiers ---\r\n    modifier onlyActiveSession(uint256 sessionId) {\r\n        require(votingSessions[sessionId].isActive, \"Session not active\");\r\n        _;\r\n    }\r\n\r\n    modifier onlyValidCandidate(uint256 candidateId) {\r\n        require(candidates[candidateId].isActive, \"Invalid candidate\");\r\n        _;\r\n    }\r\n\r\n    modifier onlyValidVotingPower(uint256 power) {\r\n        require(power >= minVotingPower && power <= maxVotingPower, \"Invalid voting power\");\r\n        _;\r\n    }\r\n\r\n    // --- Constructor ---\r\n    constructor(\r\n        address _zkProofVerifier,\r\n        address _liquidDemocracy,\r\n        address _voteMixing,\r\n        uint256 _minVotingPower,\r\n        uint256 _maxVotingPower,\r\n        uint256 _commitmentPeriod,\r\n        uint256 _revealPeriod\r\n    ) Ownable(msg.sender) {\r\n        zkProofVerifier = ZKProofVerifier(_zkProofVerifier);\r\n        liquidDemocracy = LiquidDemocracy(_liquidDemocracy);\r\n        voteMixing = VoteMixing(_voteMixing);\r\n        \r\n        minVotingPower = _minVotingPower;\r\n        maxVotingPower = _maxVotingPower;\r\n        commitmentPeriod = _commitmentPeriod;\r\n        revealPeriod = _revealPeriod;\r\n        \r\n        candidateCounter = 0;\r\n        voteCounter = 0;\r\n        sessionCounter = 0;\r\n        auditCounter = 0;\r\n        \r\n        zkProofsEnabled = true;\r\n        liquidDemocracyEnabled = true;\r\n        voteMixingEnabled = true;\r\n    }\r\n\r\n    // --- Core Functions ---\r\n\r\n    /**\r\n     * @dev Registers a new candidate\r\n     * @param name Candidate name\r\n     * @param ipfsHash IPFS hash for candidate profile\r\n     * @return candidateId The ID of the registered candidate\r\n     */\r\n    function registerCandidate(\r\n        string calldata name,\r\n        string calldata ipfsHash\r\n    ) external onlyOwner returns (uint256 candidateId) {\r\n        candidateId = candidateCounter++;\r\n        \r\n        candidates[candidateId] = Candidate({\r\n            id: candidateId,\r\n            name: name,\r\n            ipfsHash: ipfsHash,\r\n            voteCount: 0,\r\n            delegatedVoteCount: 0,\r\n            isActive: true,\r\n            registrationTime: block.timestamp\r\n        });\r\n        \r\n        logAuditTrail(\"CANDIDATE_REGISTERED\", abi.encodePacked(candidateId, name, ipfsHash));\r\n        \r\n        emit CandidateRegistered(candidateId, name, ipfsHash, block.timestamp);\r\n        \r\n        return candidateId;\r\n    }\r\n\r\n    /**\r\n     * @dev Creates a new voting session\r\n     * @param durationSeconds Duration of the voting session\r\n     * @param mode Voting mode to use\r\n     * @return sessionId The ID of the created session\r\n     */\r\n    function createVotingSession(\r\n        uint256 durationSeconds,\r\n        VotingMode mode\r\n    ) external onlyOwner returns (uint256 sessionId) {\r\n        sessionId = sessionCounter++;\r\n        \r\n        VotingSession memory newSession = VotingSession({\r\n            sessionId: sessionId,\r\n            startTime: block.timestamp,\r\n            endTime: block.timestamp + durationSeconds,\r\n            revealTime: block.timestamp + durationSeconds + revealPeriod,\r\n            isActive: true,\r\n            isRevealed: false,\r\n            totalVotes: 0,\r\n            totalVotingPower: 0,\r\n            mode: mode,\r\n            merkleRoot: bytes32(0)\r\n        });\r\n        \r\n        votingSessions[sessionId] = newSession;\r\n        \r\n        logAuditTrail(\"VOTING_SESSION_CREATED\", abi.encodePacked(sessionId, mode, durationSeconds));\r\n        \r\n        emit VotingSessionCreated(sessionId, mode, newSession.startTime, newSession.endTime);\r\n        \r\n        return sessionId;\r\n    }\r\n\r\n    /**\r\n     * @dev Casts a vote with commitment scheme\r\n     * @param sessionId The voting session ID\r\n     * @param candidateId The candidate to vote for\r\n     * @param commitmentHash Commitment hash of the vote\r\n     * @param votingPower The voting power to use\r\n     * @return voteId The ID of the cast vote\r\n     */\r\n    function castVote(\r\n        uint256 sessionId,\r\n        uint256 candidateId,\r\n        bytes32 commitmentHash,\r\n        uint256 votingPower\r\n    ) external \r\n        onlyActiveSession(sessionId)\r\n        onlyValidCandidate(candidateId)\r\n        onlyValidVotingPower(votingPower)\r\n        returns (uint256 voteId) \r\n    {\r\n        require(!hasVoted[msg.sender][sessionId], \"Already voted in this session\");\r\n        require(block.timestamp <= votingSessions[sessionId].endTime, \"Voting period ended\");\r\n        \r\n        voteId = voteCounter++;\r\n        \r\n        AdvancedVote memory newVote = AdvancedVote({\r\n            voter: msg.sender,\r\n            candidateId: candidateId,\r\n            rankedChoices: new uint256[](0),\r\n            commitmentHash: commitmentHash,\r\n            zkProofHash: bytes32(0),\r\n            mixedVoteHash: bytes32(0),\r\n            votingPower: votingPower,\r\n            timestamp: block.timestamp,\r\n            isRevealed: false,\r\n            voteType: VoteType.DIRECT\r\n        });\r\n        \r\n        votes[voteId] = newVote;\r\n        hasVoted[msg.sender][sessionId] = true;\r\n        voterVotes[msg.sender].push(voteId);\r\n        \r\n        // Update session statistics\r\n        votingSessions[sessionId].totalVotes++;\r\n        votingSessions[sessionId].totalVotingPower += votingPower;\r\n        \r\n        logAuditTrail(\"VOTE_CAST\", abi.encodePacked(voteId, sessionId, candidateId, votingPower));\r\n        \r\n        emit VoteCast(msg.sender, candidateId, VoteType.DIRECT, block.timestamp);\r\n        \r\n        return voteId;\r\n    }\r\n\r\n    /**\r\n     * @dev Casts a vote with ZK-proof verification\r\n     * @param sessionId The voting session ID\r\n     * @param candidateId The candidate to vote for\r\n     * @param zkProofHash ZK-proof hash\r\n     * @param votingPower The voting power to use\r\n     * @return voteId The ID of the cast vote\r\n     */\r\n    function castZKVote(\r\n        uint256 sessionId,\r\n        uint256 candidateId,\r\n        bytes32 zkProofHash,\r\n        uint256 votingPower\r\n    ) external \r\n        onlyActiveSession(sessionId)\r\n        onlyValidCandidate(candidateId)\r\n        onlyValidVotingPower(votingPower)\r\n        returns (uint256 voteId) \r\n    {\r\n        require(zkProofsEnabled, \"ZK-proofs disabled\");\r\n        require(!hasVoted[msg.sender][sessionId], \"Already voted in this session\");\r\n        \r\n        voteId = voteCounter++;\r\n        \r\n        AdvancedVote memory newVote = AdvancedVote({\r\n            voter: msg.sender,\r\n            candidateId: candidateId,\r\n            rankedChoices: new uint256[](0),\r\n            commitmentHash: bytes32(0),\r\n            zkProofHash: zkProofHash,\r\n            mixedVoteHash: bytes32(0),\r\n            votingPower: votingPower,\r\n            timestamp: block.timestamp,\r\n            isRevealed: false,\r\n            voteType: VoteType.ZK_PROOF\r\n        });\r\n        \r\n        votes[voteId] = newVote;\r\n        hasVoted[msg.sender][sessionId] = true;\r\n        voterVotes[msg.sender].push(voteId);\r\n        \r\n        // Update session statistics\r\n        votingSessions[sessionId].totalVotes++;\r\n        votingSessions[sessionId].totalVotingPower += votingPower;\r\n        \r\n        logAuditTrail(\"ZK_VOTE_CAST\", abi.encodePacked(voteId, sessionId, candidateId, zkProofHash));\r\n        \r\n        emit VoteCast(msg.sender, candidateId, VoteType.ZK_PROOF, block.timestamp);\r\n        \r\n        return voteId;\r\n    }\r\n\r\n    /**\r\n     * @dev Casts a delegated vote using liquid democracy\r\n     * @param sessionId The voting session ID\r\n     * @param candidateId The candidate to vote for\r\n     * @param votingPower The voting power to use\r\n     * @return voteId The ID of the cast vote\r\n     */\r\n    function castDelegatedVote(\r\n        uint256 sessionId,\r\n        uint256 candidateId,\r\n        uint256 votingPower\r\n    ) external \r\n        onlyActiveSession(sessionId)\r\n        onlyValidCandidate(candidateId)\r\n        onlyValidVotingPower(votingPower)\r\n        returns (uint256 voteId) \r\n    {\r\n        require(liquidDemocracyEnabled, \"Liquid democracy disabled\");\r\n        require(!hasVoted[msg.sender][sessionId], \"Already voted in this session\");\r\n        \r\n        // Verify voter has sufficient power in liquid democracy\r\n        LiquidDemocracy.Voter memory voter = liquidDemocracy.getVoter(msg.sender);\r\n        require(voter.totalPower >= votingPower, \"Insufficient voting power\");\r\n        \r\n        voteId = voteCounter++;\r\n        \r\n        AdvancedVote memory newVote = AdvancedVote({\r\n            voter: msg.sender,\r\n            candidateId: candidateId,\r\n            rankedChoices: new uint256[](0),\r\n            commitmentHash: bytes32(0),\r\n            zkProofHash: bytes32(0),\r\n            mixedVoteHash: bytes32(0),\r\n            votingPower: votingPower,\r\n            timestamp: block.timestamp,\r\n            isRevealed: false,\r\n            voteType: VoteType.DELEGATED\r\n        });\r\n        \r\n        votes[voteId] = newVote;\r\n        hasVoted[msg.sender][sessionId] = true;\r\n        voterVotes[msg.sender].push(voteId);\r\n        \r\n        // Update session statistics\r\n        votingSessions[sessionId].totalVotes++;\r\n        votingSessions[sessionId].totalVotingPower += votingPower;\r\n        \r\n        logAuditTrail(\"DELEGATED_VOTE_CAST\", abi.encodePacked(voteId, sessionId, candidateId, votingPower));\r\n        \r\n        emit VoteCast(msg.sender, candidateId, VoteType.DELEGATED, block.timestamp);\r\n        \r\n        return voteId;\r\n    }\r\n\r\n    /**\r\n     * @dev Reveals a committed vote\r\n     * @param voteId The vote ID to reveal\r\n     * @param originalVote The original vote value\r\n     * @param randomness The randomness used in commitment\r\n     */\r\n    function revealVote(\r\n        uint256 voteId,\r\n        bytes32 originalVote,\r\n        bytes32 randomness\r\n    ) external {\r\n        AdvancedVote storage vote = votes[voteId];\r\n        require(vote.voter == msg.sender, \"Not your vote\");\r\n        require(!vote.isRevealed, \"Vote already revealed\");\r\n        require(vote.voteType == VoteType.DIRECT, \"Not a direct vote\");\r\n        \r\n        // Verify commitment\r\n        require(CryptographicUtils.verifyCommitment(originalVote, randomness, vote.commitmentHash), \"Invalid commitment\");\r\n        \r\n        vote.isRevealed = true;\r\n        \r\n        // Update candidate vote count\r\n        candidates[vote.candidateId].voteCount += vote.votingPower;\r\n        \r\n        logAuditTrail(\"VOTE_REVEALED\", abi.encodePacked(voteId, originalVote));\r\n        \r\n        emit VoteRevealed(msg.sender, vote.candidateId, block.timestamp);\r\n    }\r\n\r\n    /**\r\n     * @dev Ends a voting session and calculates results\r\n     * @param sessionId The session ID to end\r\n     */\r\n    function endVotingSession(uint256 sessionId) external onlyOwner {\r\n        VotingSession storage session = votingSessions[sessionId];\r\n        require(session.isActive, \"Session not active\");\r\n        require(block.timestamp >= session.endTime, \"Session not ended\");\r\n        \r\n        session.isActive = false;\r\n        \r\n        // Create Merkle root from all votes\r\n        bytes32[] memory voteHashes = new bytes32[](session.totalVotes);\r\n        for (uint256 i = 0; i < session.totalVotes; i++) {\r\n            voteHashes[i] = keccak256(abi.encodePacked(i, votes[i].voter, votes[i].candidateId));\r\n        }\r\n        session.merkleRoot = CryptographicUtils.createMerkleRootFromMemory(voteHashes);\r\n        \r\n        logAuditTrail(\"VOTING_SESSION_ENDED\", abi.encodePacked(sessionId, session.totalVotes, session.totalVotingPower));\r\n        \r\n        emit VotingSessionEnded(sessionId, session.totalVotes, block.timestamp);\r\n    }\r\n\r\n    // --- View Functions ---\r\n\r\n    /**\r\n     * @dev Gets candidate information\r\n     * @param candidateId The candidate ID\r\n     * @return The candidate structure\r\n     */\r\n    function getCandidate(uint256 candidateId) external view returns (Candidate memory) {\r\n        return candidates[candidateId];\r\n    }\r\n\r\n    /**\r\n     * @dev Gets all candidates\r\n     * @return Array of candidate structures\r\n     */\r\n    function getAllCandidates() external view returns (Candidate[] memory) {\r\n        Candidate[] memory allCandidates = new Candidate[](candidateCounter);\r\n        for (uint256 i = 0; i < candidateCounter; i++) {\r\n            allCandidates[i] = candidates[i];\r\n        }\r\n        return allCandidates;\r\n    }\r\n\r\n    /**\r\n     * @dev Gets vote information\r\n     * @param voteId The vote ID\r\n     * @return The vote structure\r\n     */\r\n    function getVote(uint256 voteId) external view returns (AdvancedVote memory) {\r\n        return votes[voteId];\r\n    }\r\n\r\n    /**\r\n     * @dev Gets voting session information\r\n     * @param sessionId The session ID\r\n     * @return The session structure\r\n     */\r\n    function getVotingSession(uint256 sessionId) external view returns (VotingSession memory) {\r\n        return votingSessions[sessionId];\r\n    }\r\n\r\n    /**\r\n     * @dev Gets all votes for a voter\r\n     * @param voter The voter address\r\n     * @return Array of vote IDs\r\n     */\r\n    function getVoterVotes(address voter) external view returns (uint256[] memory) {\r\n        return voterVotes[voter];\r\n    }\r\n\r\n    /**\r\n     * @dev Checks if a voter has voted in a session\r\n     * @param voter The voter address\r\n     * @param sessionId The session ID\r\n     * @return Whether the voter has voted\r\n     */\r\n    function hasVoterVoted(address voter, uint256 sessionId) external view returns (bool) {\r\n        return hasVoted[voter][sessionId];\r\n    }\r\n\r\n    /**\r\n     * @dev Gets audit trail information\r\n     * @param actionHash The action hash\r\n     * @return The audit trail structure\r\n     */\r\n    function getAuditTrail(bytes32 actionHash) external view returns (AuditTrail memory) {\r\n        return auditTrails[actionHash];\r\n    }\r\n\r\n    // --- Admin Functions ---\r\n\r\n    /**\r\n     * @dev Updates voting parameters\r\n     * @param _minVotingPower New minimum voting power\r\n     * @param _maxVotingPower New maximum voting power\r\n     * @param _commitmentPeriod New commitment period\r\n     * @param _revealPeriod New reveal period\r\n     */\r\n    function updateVotingParameters(\r\n        uint256 _minVotingPower,\r\n        uint256 _maxVotingPower,\r\n        uint256 _commitmentPeriod,\r\n        uint256 _revealPeriod\r\n    ) external onlyOwner {\r\n        minVotingPower = _minVotingPower;\r\n        maxVotingPower = _maxVotingPower;\r\n        commitmentPeriod = _commitmentPeriod;\r\n        revealPeriod = _revealPeriod;\r\n    }\r\n\r\n    /**\r\n     * @dev Enables or disables features\r\n     * @param _zkProofsEnabled Whether ZK-proofs are enabled\r\n     * @param _liquidDemocracyEnabled Whether liquid democracy is enabled\r\n     * @param _voteMixingEnabled Whether vote mixing is enabled\r\n     */\r\n    function setFeatures(\r\n        bool _zkProofsEnabled,\r\n        bool _liquidDemocracyEnabled,\r\n        bool _voteMixingEnabled\r\n    ) external onlyOwner {\r\n        zkProofsEnabled = _zkProofsEnabled;\r\n        liquidDemocracyEnabled = _liquidDemocracyEnabled;\r\n        voteMixingEnabled = _voteMixingEnabled;\r\n    }\r\n\r\n    /**\r\n     * @dev Pauses the contract\r\n     */\r\n    function pause() external onlyOwner {\r\n        _pause();\r\n    }\r\n\r\n    /**\r\n     * @dev Unpauses the contract\r\n     */\r\n    function unpause() external onlyOwner {\r\n        _unpause();\r\n    }\r\n\r\n    // --- Internal Functions ---\r\n\r\n    /**\r\n     * @dev Logs an audit trail entry\r\n     * @param action The action performed\r\n     * @param data Additional data\r\n     */\r\n    function logAuditTrail(string memory action, bytes memory data) internal {\r\n        bytes32 actionHash = keccak256(abi.encodePacked(action, data, block.timestamp, auditCounter));\r\n        \r\n        AuditTrail memory trail = AuditTrail({\r\n            actionHash: actionHash,\r\n            actor: msg.sender,\r\n            action: action,\r\n            timestamp: block.timestamp,\r\n            proof: new bytes32[](0)\r\n        });\r\n        \r\n        auditTrails[actionHash] = trail;\r\n        auditCounter++;\r\n        \r\n        emit AuditLogCreated(actionHash, msg.sender, action, block.timestamp);\r\n    }\r\n\r\n    /**\r\n     * @dev Gets total vote count for a candidate\r\n     * @param candidateId The candidate ID\r\n     * @return Total vote count\r\n     */\r\n    function getCandidateTotalVotes(uint256 candidateId) external view returns (uint256) {\r\n        return candidates[candidateId].voteCount + candidates[candidateId].delegatedVoteCount;\r\n    }\r\n\r\n    /**\r\n     * @dev Gets total votes in a session\r\n     * @param sessionId The session ID\r\n     * @return totalVotes Total number of votes cast\r\n     * @return totalVotingPower Total voting power used\r\n     */\r\n    function getSessionTotals(uint256 sessionId) external view returns (uint256 totalVotes, uint256 totalVotingPower) {\r\n        VotingSession memory session = votingSessions[sessionId];\r\n        return (session.totalVotes, session.totalVotingPower);\r\n    }\r\n} "},"contracts/libraries/CryptographicUtils.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nimport \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\";\r\nimport \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\";\r\n\r\n/**\r\n * @title CryptographicUtils\r\n * @dev Advanced cryptographic utilities for secure voting\r\n * @notice Provides commitment schemes, threshold cryptography, and vote mixing\r\n */\r\nlibrary CryptographicUtils {\r\n    using ECDSA for bytes32;\r\n\r\n    // --- Structs ---\r\n    struct Commitment {\r\n        bytes32 commitmentHash;\r\n        uint256 timestamp;\r\n        bool revealed;\r\n        bytes32 revealedValue;\r\n    }\r\n\r\n    struct ThresholdSignature {\r\n        bytes32 messageHash;\r\n        bytes[] signatures;\r\n        uint256 threshold;\r\n        uint256 totalSigners;\r\n    }\r\n\r\n    struct VoteMix {\r\n        bytes32 originalVote;\r\n        bytes32 mixedVote;\r\n        uint256 mixIndex;\r\n        bytes32 randomness;\r\n    }\r\n\r\n    // --- Events ---\r\n    event CommitmentCreated(address indexed voter, bytes32 commitmentHash, uint256 timestamp);\r\n    event CommitmentRevealed(address indexed voter, bytes32 originalValue, bytes32 commitmentHash);\r\n    event ThresholdSignatureCreated(bytes32 indexed messageHash, uint256 threshold, uint256 totalSigners);\r\n    event VoteMixed(bytes32 indexed originalVote, bytes32 mixedVote, uint256 mixIndex);\r\n\r\n    // --- Commitment Scheme Functions ---\r\n    \r\n    /**\r\n     * @dev Creates a commitment hash for vote hiding\r\n     * @param vote The vote to commit\r\n     * @param randomness Random value for commitment\r\n     * @return commitmentHash The commitment hash\r\n     */\r\n    function createCommitment(bytes32 vote, bytes32 randomness) \r\n        internal \r\n        pure \r\n        returns (bytes32 commitmentHash) \r\n    {\r\n        commitmentHash = keccak256(abi.encodePacked(vote, randomness));\r\n        return commitmentHash;\r\n    }\r\n\r\n    /**\r\n     * @dev Verifies a commitment reveal\r\n     * @param vote The revealed vote\r\n     * @param randomness The randomness used in commitment\r\n     * @param commitmentHash The original commitment hash\r\n     * @return isValid Whether the reveal is valid\r\n     */\r\n    function verifyCommitment(\r\n        bytes32 vote, \r\n        bytes32 randomness, \r\n        bytes32 commitmentHash\r\n    ) internal pure returns (bool isValid) {\r\n        bytes32 computedHash = keccak256(abi.encodePacked(vote, randomness));\r\n        return computedHash == commitmentHash;\r\n    }\r\n\r\n    // --- Threshold Cryptography Functions ---\r\n\r\n    /**\r\n     * @dev Creates a threshold signature verification\r\n     * @param messageHash Hash of the message to verify\r\n     * @param signatures Array of signatures\r\n     * @param signers Array of signer addresses\r\n     * @param threshold Minimum number of valid signatures required\r\n     * @return isValid Whether threshold is met\r\n     */\r\n    function verifyThresholdSignature(\r\n        bytes32 messageHash,\r\n        bytes[] calldata signatures,\r\n        address[] calldata signers,\r\n        uint256 threshold\r\n    ) internal pure returns (bool isValid) {\r\n        require(signatures.length == signers.length, \"Signature count mismatch\");\r\n        require(signatures.length >= threshold, \"Insufficient signatures for threshold\");\r\n        \r\n        uint256 validSignatures = 0;\r\n        address[] memory recoveredSigners = new address[](signatures.length);\r\n        \r\n        for (uint256 i = 0; i < signatures.length; i++) {\r\n            address recoveredSigner = messageHash.recover(signatures[i]);\r\n            if (recoveredSigner == signers[i]) {\r\n                recoveredSigners[validSignatures] = recoveredSigner;\r\n                validSignatures++;\r\n            }\r\n        }\r\n        \r\n        // Check for duplicate signers\r\n        for (uint256 i = 0; i < validSignatures; i++) {\r\n            for (uint256 j = i + 1; j < validSignatures; j++) {\r\n                require(recoveredSigners[i] != recoveredSigners[j], \"Duplicate signer\");\r\n            }\r\n        }\r\n        \r\n        return validSignatures >= threshold;\r\n    }\r\n\r\n    // --- Vote Mixing Functions ---\r\n\r\n    /**\r\n     * @dev Creates a mixed vote using Chaum mixing\r\n     * @param originalVote The original vote\r\n     * @param randomness Random value for mixing\r\n     * @param mixIndex Index in the mixing round\r\n     * @return mixedVote The mixed vote\r\n     */\r\n    function mixVote(\r\n        bytes32 originalVote,\r\n        bytes32 randomness,\r\n        uint256 mixIndex\r\n    ) internal pure returns (bytes32 mixedVote) {\r\n        // Chaum mixing: vote' = vote ⊕ H(randomness || mixIndex)\r\n        bytes32 mixHash = keccak256(abi.encodePacked(randomness, mixIndex));\r\n        mixedVote = originalVote ^ mixHash;\r\n        return mixedVote;\r\n    }\r\n\r\n    /**\r\n     * @dev Unmixes a vote using the same parameters\r\n     * @param mixedVote The mixed vote\r\n     * @param randomness Random value used in mixing\r\n     * @param mixIndex Index used in mixing\r\n     * @return originalVote The original vote\r\n     */\r\n    function unmixVote(\r\n        bytes32 mixedVote,\r\n        bytes32 randomness,\r\n        uint256 mixIndex\r\n    ) internal pure returns (bytes32 originalVote) {\r\n        // Reverse Chaum mixing: vote = vote' ⊕ H(randomness || mixIndex)\r\n        bytes32 mixHash = keccak256(abi.encodePacked(randomness, mixIndex));\r\n        originalVote = mixedVote ^ mixHash;\r\n        return originalVote;\r\n    }\r\n\r\n    // --- Advanced Cryptographic Functions ---\r\n\r\n    /**\r\n     * @dev Creates a zero-knowledge proof hash for vote verification\r\n     * @param vote The vote to prove\r\n     * @param nullifier Random value to prevent double-spending\r\n     * @param secret Secret value for proof generation\r\n     * @return proofHash The proof hash\r\n     */\r\n    function createZKProofHash(\r\n        bytes32 vote,\r\n        bytes32 nullifier,\r\n        bytes32 secret\r\n    ) internal pure returns (bytes32 proofHash) {\r\n        proofHash = keccak256(abi.encodePacked(vote, nullifier, secret));\r\n        return proofHash;\r\n    }\r\n\r\n    /**\r\n     * @dev Verifies a Merkle proof for inclusion\r\n     * @param leaf The leaf node\r\n     * @param proof The Merkle proof\r\n     * @param root The Merkle root\r\n     * @return isValid Whether the proof is valid\r\n     */\r\n    function verifyMerkleProof(\r\n        bytes32 leaf,\r\n        bytes32[] calldata proof,\r\n        bytes32 root\r\n    ) internal pure returns (bool isValid) {\r\n        return MerkleProof.verify(proof, root, leaf);\r\n    }\r\n\r\n    /**\r\n     * @dev Creates a Merkle root from leaves (calldata version)\r\n     * @param leaves Array of leaf nodes\r\n     * @return root The Merkle root\r\n     */\r\n    function createMerkleRoot(bytes32[] calldata leaves) \r\n        internal \r\n        pure \r\n        returns (bytes32 root) \r\n    {\r\n        require(leaves.length > 0, \"Empty leaves array\");\r\n        \r\n        if (leaves.length == 1) {\r\n            return leaves[0];\r\n        }\r\n        \r\n        bytes32[] memory currentLevel = new bytes32[]((leaves.length + 1) / 2);\r\n        \r\n        for (uint256 i = 0; i < leaves.length; i += 2) {\r\n            if (i + 1 < leaves.length) {\r\n                currentLevel[i / 2] = keccak256(abi.encodePacked(leaves[i], leaves[i + 1]));\r\n            } else {\r\n                currentLevel[i / 2] = leaves[i];\r\n            }\r\n        }\r\n        \r\n        return createMerkleRootFromLevel(currentLevel);\r\n    }\r\n\r\n    /**\r\n     * @dev Creates a Merkle root from leaves (memory version)\r\n     * @param leaves Array of leaf nodes\r\n     * @return root The Merkle root\r\n     */\r\n    function createMerkleRootFromMemory(bytes32[] memory leaves) \r\n        internal \r\n        pure \r\n        returns (bytes32 root) \r\n    {\r\n        require(leaves.length > 0, \"Empty leaves array\");\r\n        \r\n        if (leaves.length == 1) {\r\n            return leaves[0];\r\n        }\r\n        \r\n        bytes32[] memory currentLevel = new bytes32[]((leaves.length + 1) / 2);\r\n        \r\n        for (uint256 i = 0; i < leaves.length; i += 2) {\r\n            if (i + 1 < leaves.length) {\r\n                currentLevel[i / 2] = keccak256(abi.encodePacked(leaves[i], leaves[i + 1]));\r\n            } else {\r\n                currentLevel[i / 2] = leaves[i];\r\n            }\r\n        }\r\n        \r\n        return createMerkleRootFromLevel(currentLevel);\r\n    }\r\n\r\n    /**\r\n     * @dev Recursive function to build Merkle tree\r\n     * @param level Current level of the tree\r\n     * @return root The Merkle root\r\n     */\r\n    function createMerkleRootFromLevel(bytes32[] memory level) \r\n        private \r\n        pure \r\n        returns (bytes32 root) \r\n    {\r\n        if (level.length == 1) {\r\n            return level[0];\r\n        }\r\n        \r\n        bytes32[] memory nextLevel = new bytes32[]((level.length + 1) / 2);\r\n        \r\n        for (uint256 i = 0; i < level.length; i += 2) {\r\n            if (i + 1 < level.length) {\r\n                nextLevel[i / 2] = keccak256(abi.encodePacked(level[i], level[i + 1]));\r\n            } else {\r\n                nextLevel[i / 2] = level[i];\r\n            }\r\n        }\r\n        \r\n        return createMerkleRootFromLevel(nextLevel);\r\n    }\r\n\r\n    // --- Utility Functions ---\r\n\r\n    /**\r\n     * @dev Generates a pseudo-random number based on block data\r\n     * @param seed Additional seed for randomness\r\n     * @return randomNumber The generated random number\r\n     */\r\n    function generateRandomNumber(bytes32 seed) \r\n        internal \r\n        view \r\n        returns (bytes32 randomNumber) \r\n    {\r\n        return keccak256(abi.encodePacked(\r\n            blockhash(block.number - 1),\r\n            block.timestamp,\r\n            block.prevrandao,\r\n            seed\r\n        ));\r\n    }\r\n\r\n    /**\r\n     * @dev Creates a deterministic hash for vote verification\r\n     * @param voter The voter address\r\n     * @param vote The vote value\r\n     * @param nonce The nonce for uniqueness\r\n     * @return voteHash The deterministic vote hash\r\n     */\r\n    function createVoteHash(\r\n        address voter,\r\n        bytes32 vote,\r\n        uint256 nonce\r\n    ) internal pure returns (bytes32 voteHash) {\r\n        voteHash = keccak256(abi.encodePacked(voter, vote, nonce));\r\n        return voteHash;\r\n    }\r\n} "},"contracts/LiquidDemocracy.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\r\nimport \"./libraries/CryptographicUtils.sol\";\r\n\r\n/**\r\n * @title LiquidDemocracy\r\n * @dev Implements liquid democracy with vote delegation capabilities\r\n * @notice Allows voters to delegate their voting power to trusted representatives\r\n */\r\ncontract LiquidDemocracy is Ownable, ReentrancyGuard {\r\n    using CryptographicUtils for *;\r\n\r\n    // --- Structs ---\r\n    struct Voter {\r\n        address voterAddress;\r\n        uint256 votingPower;           // Base voting power\r\n        uint256 delegatedPower;        // Power received from delegations\r\n        uint256 totalPower;            // votingPower + delegatedPower\r\n        address delegate;              // Who this voter delegates to\r\n        address[] delegates;           // Who delegates to this voter\r\n        bool isActive;                 // Whether voter is active\r\n        uint256 lastVoteTime;          // Last time they voted\r\n        uint256 delegationCount;       // Number of active delegations\r\n    }\r\n\r\n    struct Delegation {\r\n        address from;\r\n        address to;\r\n        uint256 power;\r\n        uint256 timestamp;\r\n        bool isActive;\r\n        uint256 delegationId;\r\n    }\r\n\r\n    struct Vote {\r\n        address voter;\r\n        uint256 candidateId;\r\n        uint256 powerUsed;\r\n        uint256 timestamp;\r\n        bytes32 voteHash;\r\n        bool isDelegated;\r\n    }\r\n\r\n    // --- State Variables ---\r\n    mapping(address => Voter) private voters;\r\n    mapping(uint256 => Delegation) private delegations;\r\n    mapping(address => uint256[]) private voterDelegations;\r\n    mapping(uint256 => Vote[]) private candidateVotes;\r\n    mapping(address => mapping(uint256 => bool)) private hasVoted;\r\n    \r\n    address[] private registeredVoters;\r\n    uint256 private delegationCounter;\r\n    uint256 private totalVotingPower;\r\n    uint256 private activeDelegations;\r\n    \r\n    bool public votingActive;\r\n    uint256 public votingStartTime;\r\n    uint256 public votingEndTime;\r\n    uint256 public maxDelegationDepth;\r\n    uint256 public minDelegationPower;\r\n    \r\n    // --- Events ---\r\n    event VoterRegistered(address indexed voter, uint256 power, uint256 timestamp);\r\n    event DelegationCreated(\r\n        address indexed from, \r\n        address indexed to, \r\n        uint256 power, \r\n        uint256 delegationId,\r\n        uint256 timestamp\r\n    );\r\n    event DelegationRevoked(\r\n        address indexed from, \r\n        address indexed to, \r\n        uint256 delegationId,\r\n        uint256 timestamp\r\n    );\r\n    event VoteCast(\r\n        address indexed voter, \r\n        uint256 candidateId, \r\n        uint256 powerUsed, \r\n        bool isDelegated,\r\n        uint256 timestamp\r\n    );\r\n    event VotingSessionStarted(uint256 startTime, uint256 endTime);\r\n    event VotingSessionEnded(uint256 endTime);\r\n    event DelegationChainUpdated(address indexed voter, uint256 newTotalPower);\r\n\r\n    // --- Modifiers ---\r\n    modifier onlyRegisteredVoter(address voter) {\r\n        require(voters[voter].isActive, \"Voter not registered\");\r\n        _;\r\n    }\r\n\r\n    modifier onlyDuringVoting() {\r\n        require(votingActive, \"Voting not active\");\r\n        require(block.timestamp >= votingStartTime && block.timestamp <= votingEndTime, \"Outside voting period\");\r\n        _;\r\n    }\r\n\r\n    modifier onlyValidDelegation(address from, address to) {\r\n        require(from != to, \"Cannot delegate to self\");\r\n        require(voters[from].isActive, \"Delegator not registered\");\r\n        require(voters[to].isActive, \"Delegate not registered\");\r\n        require(voters[from].delegate == address(0), \"Already has delegate\");\r\n        _;\r\n    }\r\n\r\n    // --- Constructor ---\r\n    constructor(\r\n        uint256 _maxDelegationDepth,\r\n        uint256 _minDelegationPower\r\n    ) Ownable(msg.sender) {\r\n        maxDelegationDepth = _maxDelegationDepth;\r\n        minDelegationPower = _minDelegationPower;\r\n        delegationCounter = 0;\r\n        activeDelegations = 0;\r\n        totalVotingPower = 0;\r\n    }\r\n\r\n    // --- Core Functions ---\r\n\r\n    /**\r\n     * @dev Registers a new voter with base voting power\r\n     * @param voter The voter address\r\n     * @param power The base voting power\r\n     */\r\n    function registerVoter(address voter, uint256 power) external onlyOwner {\r\n        require(!voters[voter].isActive, \"Voter already registered\");\r\n        require(power > 0, \"Power must be greater than 0\");\r\n        \r\n        Voter memory newVoter = Voter({\r\n            voterAddress: voter,\r\n            votingPower: power,\r\n            delegatedPower: 0,\r\n            totalPower: power,\r\n            delegate: address(0),\r\n            delegates: new address[](0),\r\n            isActive: true,\r\n            lastVoteTime: 0,\r\n            delegationCount: 0\r\n        });\r\n        \r\n        voters[voter] = newVoter;\r\n        registeredVoters.push(voter);\r\n        totalVotingPower += power;\r\n        \r\n        emit VoterRegistered(voter, power, block.timestamp);\r\n    }\r\n\r\n    /**\r\n     * @dev Creates a delegation from one voter to another\r\n     * @param delegate The address to delegate to\r\n     * @param power The amount of power to delegate\r\n     * @return delegationId The ID of the created delegation\r\n     */\r\n    function createDelegation(\r\n        address delegate, \r\n        uint256 power\r\n    ) external \r\n        onlyRegisteredVoter(msg.sender)\r\n        onlyValidDelegation(msg.sender, delegate)\r\n        returns (uint256 delegationId) \r\n    {\r\n        require(power >= minDelegationPower, \"Power below minimum\");\r\n        require(power <= voters[msg.sender].votingPower, \"Insufficient power\");\r\n        require(!hasDelegationChain(msg.sender, delegate), \"Circular delegation detected\");\r\n        \r\n        delegationId = delegationCounter++;\r\n        \r\n        Delegation memory newDelegation = Delegation({\r\n            from: msg.sender,\r\n            to: delegate,\r\n            power: power,\r\n            timestamp: block.timestamp,\r\n            isActive: true,\r\n            delegationId: delegationId\r\n        });\r\n        \r\n        delegations[delegationId] = newDelegation;\r\n        voterDelegations[msg.sender].push(delegationId);\r\n        \r\n        // Update voter states\r\n        voters[msg.sender].delegate = delegate;\r\n        voters[msg.sender].votingPower -= power;\r\n        voters[delegate].delegatedPower += power;\r\n        voters[delegate].delegates.push(msg.sender);\r\n        voters[delegate].delegationCount++;\r\n        \r\n        // Update total powers\r\n        updateTotalPower(msg.sender);\r\n        updateTotalPower(delegate);\r\n        \r\n        activeDelegations++;\r\n        \r\n        emit DelegationCreated(msg.sender, delegate, power, delegationId, block.timestamp);\r\n        \r\n        return delegationId;\r\n    }\r\n\r\n    /**\r\n     * @dev Revokes an active delegation\r\n     * @param delegationId The ID of the delegation to revoke\r\n     */\r\n    function revokeDelegation(uint256 delegationId) external nonReentrant {\r\n        Delegation storage delegation = delegations[delegationId];\r\n        require(delegation.isActive, \"Delegation not active\");\r\n        require(delegation.from == msg.sender, \"Not the delegator\");\r\n        \r\n        delegation.isActive = false;\r\n        \r\n        // Update voter states\r\n        voters[msg.sender].delegate = address(0);\r\n        voters[msg.sender].votingPower += delegation.power;\r\n        voters[delegation.to].delegatedPower -= delegation.power;\r\n        voters[delegation.to].delegationCount--;\r\n        \r\n        // Remove from delegates array\r\n        removeFromDelegates(delegation.to, msg.sender);\r\n        \r\n        // Update total powers\r\n        updateTotalPower(msg.sender);\r\n        updateTotalPower(delegation.to);\r\n        \r\n        activeDelegations--;\r\n        \r\n        emit DelegationRevoked(msg.sender, delegation.to, delegationId, block.timestamp);\r\n    }\r\n\r\n    /**\r\n     * @dev Casts a vote using available voting power\r\n     * @param candidateId The candidate to vote for\r\n     * @param power The amount of power to use\r\n     */\r\n    function vote(uint256 candidateId, uint256 power) \r\n        external \r\n        onlyRegisteredVoter(msg.sender)\r\n        onlyDuringVoting \r\n    {\r\n        require(!hasVoted[msg.sender][candidateId], \"Already voted for this candidate\");\r\n        require(power > 0, \"Power must be greater than 0\");\r\n        require(power <= voters[msg.sender].totalPower, \"Insufficient voting power\");\r\n        \r\n        // Create vote\r\n        Vote memory newVote = Vote({\r\n            voter: msg.sender,\r\n            candidateId: candidateId,\r\n            powerUsed: power,\r\n            timestamp: block.timestamp,\r\n            voteHash: CryptographicUtils.createVoteHash(msg.sender, bytes32(candidateId), block.timestamp),\r\n            isDelegated: voters[msg.sender].delegatedPower > 0\r\n        });\r\n        \r\n        candidateVotes[candidateId].push(newVote);\r\n        hasVoted[msg.sender][candidateId] = true;\r\n        voters[msg.sender].lastVoteTime = block.timestamp;\r\n        \r\n        emit VoteCast(msg.sender, candidateId, power, newVote.isDelegated, block.timestamp);\r\n    }\r\n\r\n    // --- Admin Functions ---\r\n\r\n    /**\r\n     * @dev Starts a voting session\r\n     * @param durationSeconds Duration of the voting session\r\n     */\r\n    function startVotingSession(uint256 durationSeconds) external onlyOwner {\r\n        require(!votingActive, \"Voting already active\");\r\n        votingActive = true;\r\n        votingStartTime = block.timestamp;\r\n        votingEndTime = block.timestamp + durationSeconds;\r\n        emit VotingSessionStarted(votingStartTime, votingEndTime);\r\n    }\r\n\r\n    /**\r\n     * @dev Ends the current voting session\r\n     */\r\n    function endVotingSession() external onlyOwner {\r\n        require(votingActive, \"Voting not active\");\r\n        votingActive = false;\r\n        votingEndTime = block.timestamp;\r\n        emit VotingSessionEnded(votingEndTime);\r\n    }\r\n\r\n    /**\r\n     * @dev Updates delegation parameters\r\n     * @param _maxDelegationDepth New maximum delegation depth\r\n     * @param _minDelegationPower New minimum delegation power\r\n     */\r\n    function updateDelegationParameters(\r\n        uint256 _maxDelegationDepth,\r\n        uint256 _minDelegationPower\r\n    ) external onlyOwner {\r\n        maxDelegationDepth = _maxDelegationDepth;\r\n        minDelegationPower = _minDelegationPower;\r\n    }\r\n\r\n    // --- View Functions ---\r\n\r\n    /**\r\n     * @dev Gets voter information\r\n     * @param voter The voter address\r\n     * @return The voter structure\r\n     */\r\n    function getVoter(address voter) external view returns (Voter memory) {\r\n        return voters[voter];\r\n    }\r\n\r\n    /**\r\n     * @dev Gets delegation information\r\n     * @param delegationId The delegation ID\r\n     * @return The delegation structure\r\n     */\r\n    function getDelegation(uint256 delegationId) external view returns (Delegation memory) {\r\n        return delegations[delegationId];\r\n    }\r\n\r\n    /**\r\n     * @dev Gets all votes for a candidate\r\n     * @param candidateId The candidate ID\r\n     * @return Array of votes\r\n     */\r\n    function getCandidateVotes(uint256 candidateId) external view returns (Vote[] memory) {\r\n        return candidateVotes[candidateId];\r\n    }\r\n\r\n    /**\r\n     * @dev Gets total votes for a candidate\r\n     * @param candidateId The candidate ID\r\n     * @return Total voting power used\r\n     */\r\n    function getCandidateTotalVotes(uint256 candidateId) external view returns (uint256) {\r\n        uint256 total = 0;\r\n        for (uint256 i = 0; i < candidateVotes[candidateId].length; i++) {\r\n            total += candidateVotes[candidateId][i].powerUsed;\r\n        }\r\n        return total;\r\n    }\r\n\r\n    /**\r\n     * @dev Gets all registered voters\r\n     * @return Array of voter addresses\r\n     */\r\n    function getRegisteredVoters() external view returns (address[] memory) {\r\n        return registeredVoters;\r\n    }\r\n\r\n    /**\r\n     * @dev Gets delegations for a voter\r\n     * @param voter The voter address\r\n     * @return Array of delegation IDs\r\n     */\r\n    function getVoterDelegations(address voter) external view returns (uint256[] memory) {\r\n        return voterDelegations[voter];\r\n    }\r\n\r\n    /**\r\n     * @dev Checks if a voter has voted for a candidate\r\n     * @param voter The voter address\r\n     * @param candidateId The candidate ID\r\n     * @return Whether the voter has voted\r\n     */\r\n    function hasVoterVoted(address voter, uint256 candidateId) external view returns (bool) {\r\n        return hasVoted[voter][candidateId];\r\n    }\r\n\r\n    /**\r\n     * @dev Gets total voting power in the system\r\n     * @return Total voting power\r\n     */\r\n    function getTotalVotingPower() external view returns (uint256) {\r\n        return totalVotingPower;\r\n    }\r\n\r\n    /**\r\n     * @dev Gets active delegations count\r\n     * @return Number of active delegations\r\n     */\r\n    function getActiveDelegations() external view returns (uint256) {\r\n        return activeDelegations;\r\n    }\r\n\r\n    // --- Internal Functions ---\r\n\r\n    /**\r\n     * @dev Updates total power for a voter\r\n     * @param voter The voter address\r\n     */\r\n    function updateTotalPower(address voter) internal {\r\n        voters[voter].totalPower = voters[voter].votingPower + voters[voter].delegatedPower;\r\n        emit DelegationChainUpdated(voter, voters[voter].totalPower);\r\n    }\r\n\r\n    /**\r\n     * @dev Checks for circular delegation chains\r\n     * @param from Starting address\r\n     * @param to Target address\r\n     * @return Whether a circular delegation exists\r\n     */\r\n    function hasDelegationChain(address from, address to) internal view returns (bool) {\r\n        if (from == to) return true;\r\n        \r\n        address current = to;\r\n        uint256 depth = 0;\r\n        \r\n        while (voters[current].delegate != address(0) && depth < maxDelegationDepth) {\r\n            current = voters[current].delegate;\r\n            if (current == from) return true;\r\n            depth++;\r\n        }\r\n        \r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * @dev Removes a delegate from the delegates array\r\n     * @param voter The voter address\r\n     * @param delegate The delegate to remove\r\n     */\r\n    function removeFromDelegates(address voter, address delegate) internal {\r\n        address[] storage delegates = voters[voter].delegates;\r\n        for (uint256 i = 0; i < delegates.length; i++) {\r\n            if (delegates[i] == delegate) {\r\n                delegates[i] = delegates[delegates.length - 1];\r\n                delegates.pop();\r\n                break;\r\n            }\r\n        }\r\n    }\r\n} "},"contracts/Lock.sol":{"content":"// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.28;\n\n// Uncomment this line to use console.log\n// import \"hardhat/console.sol\";\n\ncontract Lock {\n    uint public unlockTime;\n    address payable public owner;\n\n    event Withdrawal(uint amount, uint when);\n\n    constructor(uint _unlockTime) payable {\n        require(\n            block.timestamp < _unlockTime,\n            \"Unlock time should be in the future\"\n        );\n\n        unlockTime = _unlockTime;\n        owner = payable(msg.sender);\n    }\n\n    function withdraw() public {\n        // Uncomment this line, and the import of \"hardhat/console.sol\", to print a log in your terminal\n        // console.log(\"Unlock time is %o and block timestamp is %o\", unlockTime, block.timestamp);\n\n        require(block.timestamp >= unlockTime, \"You can't withdraw yet\");\n        require(msg.sender == owner, \"You aren't the owner\");\n\n        emit Withdrawal(address(this).balance, block.timestamp);\n\n        owner.transfer(address(this).balance);\n    }\n}\n"},"contracts/VoteMixing.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\r\nimport \"./libraries/CryptographicUtils.sol\";\r\n\r\n/**\r\n * @title VoteMixing\r\n * @dev Implements Chaum mixing for vote anonymity\r\n * @notice Provides vote mixing capabilities to enhance voter privacy\r\n */\r\ncontract VoteMixing is Ownable, ReentrancyGuard {\r\n    using CryptographicUtils for *;\r\n\r\n    // --- Structs ---\r\n    struct MixedVote {\r\n        bytes32 originalVote;\r\n        bytes32 mixedVote;\r\n        bytes32 randomness;\r\n        uint256 mixIndex;\r\n        uint256 timestamp;\r\n        bool isRevealed;\r\n        address voter;\r\n    }\r\n\r\n    struct MixingRound {\r\n        uint256 roundId;\r\n        bytes32[] mixedVotes;\r\n        bytes32[] randomness;\r\n        uint256[] mixIndices;\r\n        uint256 startTime;\r\n        uint256 endTime;\r\n        uint256 revealTime;\r\n        bool isActive;\r\n        bool isRevealed;\r\n        uint256 participantCount;\r\n        bytes32 merkleRoot;\r\n    }\r\n\r\n    struct MixingProof {\r\n        bytes32 originalVote;\r\n        bytes32 mixedVote;\r\n        bytes32 randomness;\r\n        uint256 mixIndex;\r\n        bytes32[] merkleProof;\r\n    }\r\n\r\n    // --- State Variables ---\r\n    mapping(uint256 => MixingRound) private mixingRounds;\r\n    mapping(bytes32 => MixedVote) private mixedVotes;\r\n    mapping(address => uint256[]) private voterRounds;\r\n    mapping(uint256 => address[]) private roundParticipants;\r\n    mapping(bytes32 => bool) private usedRandomness;\r\n    \r\n    uint256 private roundCounter;\r\n    uint256 private minParticipants;\r\n    uint256 private maxParticipants;\r\n    uint256 private mixingDuration;\r\n    uint256 private revealDelay;\r\n    \r\n    bool public mixingEnabled;\r\n    \r\n    // --- Events ---\r\n    event MixingRoundCreated(\r\n        uint256 indexed roundId,\r\n        uint256 startTime,\r\n        uint256 endTime,\r\n        uint256 minParticipants\r\n    );\r\n    \r\n    event VoteSubmitted(\r\n        uint256 indexed roundId,\r\n        address indexed voter,\r\n        bytes32 mixedVote,\r\n        uint256 mixIndex,\r\n        uint256 timestamp\r\n    );\r\n    \r\n    event MixingRoundCompleted(\r\n        uint256 indexed roundId,\r\n        uint256 participantCount,\r\n        bytes32 merkleRoot,\r\n        uint256 timestamp\r\n    );\r\n    \r\n    event VoteRevealed(\r\n        uint256 indexed roundId,\r\n        address indexed voter,\r\n        bytes32 originalVote,\r\n        bytes32 mixedVote,\r\n        uint256 timestamp\r\n    );\r\n    \r\n    event MixingRoundRevealed(\r\n        uint256 indexed roundId,\r\n        uint256 totalVotes,\r\n        uint256 timestamp\r\n    );\r\n\r\n    // --- Modifiers ---\r\n    modifier onlyActiveRound(uint256 roundId) {\r\n        require(mixingRounds[roundId].isActive, \"Round not active\");\r\n        _;\r\n    }\r\n\r\n    modifier onlyRevealTime(uint256 roundId) {\r\n        require(block.timestamp >= mixingRounds[roundId].revealTime, \"Reveal time not reached\");\r\n        _;\r\n    }\r\n\r\n    modifier onlyValidRandomness(bytes32 randomness) {\r\n        require(!usedRandomness[randomness], \"Randomness already used\");\r\n        _;\r\n    }\r\n\r\n    // --- Constructor ---\r\n    constructor(\r\n        uint256 _minParticipants,\r\n        uint256 _maxParticipants,\r\n        uint256 _mixingDuration,\r\n        uint256 _revealDelay\r\n    ) Ownable(msg.sender) {\r\n        minParticipants = _minParticipants;\r\n        maxParticipants = _maxParticipants;\r\n        mixingDuration = _mixingDuration;\r\n        revealDelay = _revealDelay;\r\n        roundCounter = 0;\r\n        mixingEnabled = true;\r\n    }\r\n\r\n    // --- Core Functions ---\r\n\r\n    /**\r\n     * @dev Creates a new mixing round\r\n     * @return roundId The ID of the created round\r\n     */\r\n    function createMixingRound() external onlyOwner returns (uint256 roundId) {\r\n        require(mixingEnabled, \"Mixing disabled\");\r\n        \r\n        roundId = roundCounter++;\r\n        \r\n        MixingRound memory newRound = MixingRound({\r\n            roundId: roundId,\r\n            mixedVotes: new bytes32[](0),\r\n            randomness: new bytes32[](0),\r\n            mixIndices: new uint256[](0),\r\n            startTime: block.timestamp,\r\n            endTime: block.timestamp + mixingDuration,\r\n            revealTime: block.timestamp + mixingDuration + revealDelay,\r\n            isActive: true,\r\n            isRevealed: false,\r\n            participantCount: 0,\r\n            merkleRoot: bytes32(0)\r\n        });\r\n        \r\n        mixingRounds[roundId] = newRound;\r\n        \r\n        emit MixingRoundCreated(roundId, newRound.startTime, newRound.endTime, minParticipants);\r\n        \r\n        return roundId;\r\n    }\r\n\r\n    /**\r\n     * @dev Submits a vote to the mixing round\r\n     * @param roundId The mixing round ID\r\n     * @param originalVote The original vote to mix\r\n     * @param randomness Random value for mixing\r\n     * @param mixIndex Index for mixing\r\n     * @return mixedVote The mixed vote\r\n     */\r\n    function submitVote(\r\n        uint256 roundId,\r\n        bytes32 originalVote,\r\n        bytes32 randomness,\r\n        uint256 mixIndex\r\n    ) external \r\n        onlyActiveRound(roundId)\r\n        onlyValidRandomness(randomness)\r\n        returns (bytes32 mixedVote) \r\n    {\r\n        MixingRound storage round = mixingRounds[roundId];\r\n        require(block.timestamp <= round.endTime, \"Round ended\");\r\n        require(round.participantCount < maxParticipants, \"Round full\");\r\n        \r\n        // Check if voter already participated\r\n        require(!hasVoterParticipated(roundId, msg.sender), \"Already participated\");\r\n        \r\n        // Create mixed vote\r\n        mixedVote = CryptographicUtils.mixVote(originalVote, randomness, mixIndex);\r\n        \r\n        // Store mixed vote\r\n        MixedVote memory newMixedVote = MixedVote({\r\n            originalVote: originalVote,\r\n            mixedVote: mixedVote,\r\n            randomness: randomness,\r\n            mixIndex: mixIndex,\r\n            timestamp: block.timestamp,\r\n            isRevealed: false,\r\n            voter: msg.sender\r\n        });\r\n        \r\n        mixedVotes[mixedVote] = newMixedVote;\r\n        \r\n        // Add to round\r\n        round.mixedVotes.push(mixedVote);\r\n        round.randomness.push(randomness);\r\n        round.mixIndices.push(mixIndex);\r\n        round.participantCount++;\r\n        roundParticipants[roundId].push(msg.sender);\r\n        voterRounds[msg.sender].push(roundId);\r\n        \r\n        usedRandomness[randomness] = true;\r\n        \r\n        emit VoteSubmitted(roundId, msg.sender, mixedVote, mixIndex, block.timestamp);\r\n        \r\n        return mixedVote;\r\n    }\r\n\r\n    /**\r\n     * @dev Completes a mixing round and creates Merkle tree\r\n     * @param roundId The mixing round ID\r\n     */\r\n    function completeMixingRound(uint256 roundId) external onlyOwner {\r\n        MixingRound storage round = mixingRounds[roundId];\r\n        require(round.isActive, \"Round not active\");\r\n        require(block.timestamp >= round.endTime, \"Round not ended\");\r\n        require(round.participantCount >= minParticipants, \"Insufficient participants\");\r\n        \r\n        round.isActive = false;\r\n        \r\n        // Create Merkle root from mixed votes\r\n        // Convert storage array to memory for Merkle root calculation\r\n        bytes32[] memory mixedVotes = new bytes32[](round.mixedVotes.length);\r\n        for (uint256 i = 0; i < round.mixedVotes.length; i++) {\r\n            mixedVotes[i] = round.mixedVotes[i];\r\n        }\r\n        round.merkleRoot = CryptographicUtils.createMerkleRootFromMemory(mixedVotes);\r\n        \r\n        emit MixingRoundCompleted(roundId, round.participantCount, round.merkleRoot, block.timestamp);\r\n    }\r\n\r\n    /**\r\n     * @dev Reveals a vote after mixing round completion\r\n     * @param roundId The mixing round ID\r\n     * @param mixedVote The mixed vote to reveal\r\n     * @param originalVote The original vote\r\n     * @param randomness The randomness used\r\n     * @param mixIndex The mix index used\r\n     */\r\n    function revealVote(\r\n        uint256 roundId,\r\n        bytes32 mixedVote,\r\n        bytes32 originalVote,\r\n        bytes32 randomness,\r\n        uint256 mixIndex\r\n    ) external onlyRevealTime(roundId) {\r\n        MixedVote storage vote = mixedVotes[mixedVote];\r\n        require(vote.voter == msg.sender, \"Not your vote\");\r\n        require(!vote.isRevealed, \"Vote already revealed\");\r\n        \r\n        // Verify the mixing\r\n        bytes32 computedMixedVote = CryptographicUtils.mixVote(originalVote, randomness, mixIndex);\r\n        require(computedMixedVote == mixedVote, \"Invalid reveal\");\r\n        \r\n        vote.isRevealed = true;\r\n        \r\n        emit VoteRevealed(roundId, msg.sender, originalVote, mixedVote, block.timestamp);\r\n    }\r\n\r\n    /**\r\n     * @dev Reveals all votes in a mixing round\r\n     * @param roundId The mixing round ID\r\n     * @return revealedCount Number of votes revealed\r\n     */\r\n    function revealMixingRound(uint256 roundId) \r\n        external \r\n        onlyOwner \r\n        onlyRevealTime(roundId) \r\n        returns (uint256 revealedCount) \r\n    {\r\n        MixingRound storage round = mixingRounds[roundId];\r\n        require(!round.isRevealed, \"Round already revealed\");\r\n        \r\n        round.isRevealed = true;\r\n        revealedCount = round.participantCount;\r\n        \r\n        emit MixingRoundRevealed(roundId, revealedCount, block.timestamp);\r\n        \r\n        return revealedCount;\r\n    }\r\n\r\n    // --- View Functions ---\r\n\r\n    /**\r\n     * @dev Gets mixing round information\r\n     * @param roundId The round ID\r\n     * @return The mixing round structure\r\n     */\r\n    function getMixingRound(uint256 roundId) external view returns (MixingRound memory) {\r\n        return mixingRounds[roundId];\r\n    }\r\n\r\n    /**\r\n     * @dev Gets mixed vote information\r\n     * @param mixedVote The mixed vote hash\r\n     * @return The mixed vote structure\r\n     */\r\n    function getMixedVote(bytes32 mixedVote) external view returns (MixedVote memory) {\r\n        return mixedVotes[mixedVote];\r\n    }\r\n\r\n    /**\r\n     * @dev Gets all participants in a round\r\n     * @param roundId The round ID\r\n     * @return Array of participant addresses\r\n     */\r\n    function getRoundParticipants(uint256 roundId) external view returns (address[] memory) {\r\n        return roundParticipants[roundId];\r\n    }\r\n\r\n    /**\r\n     * @dev Gets all rounds a voter participated in\r\n     * @param voter The voter address\r\n     * @return Array of round IDs\r\n     */\r\n    function getVoterRounds(address voter) external view returns (uint256[] memory) {\r\n        return voterRounds[voter];\r\n    }\r\n\r\n    /**\r\n     * @dev Gets all mixed votes in a round\r\n     * @param roundId The round ID\r\n     * @return Array of mixed vote hashes\r\n     */\r\n    function getRoundMixedVotes(uint256 roundId) external view returns (bytes32[] memory) {\r\n        return mixingRounds[roundId].mixedVotes;\r\n    }\r\n\r\n    /**\r\n     * @dev Verifies a vote's inclusion in the mixing round\r\n     * @param roundId The round ID\r\n     * @param mixedVote The mixed vote\r\n     * @param proof The Merkle proof\r\n     * @return Whether the vote is included\r\n     */\r\n    function verifyVoteInclusion(\r\n        uint256 roundId,\r\n        bytes32 mixedVote,\r\n        bytes32[] calldata proof\r\n    ) external view returns (bool) {\r\n        return CryptographicUtils.verifyMerkleProof(\r\n            mixedVote, \r\n            proof, \r\n            mixingRounds[roundId].merkleRoot\r\n        );\r\n    }\r\n\r\n    /**\r\n     * @dev Checks if a voter participated in a round\r\n     * @param roundId The round ID\r\n     * @param voter The voter address\r\n     * @return Whether the voter participated\r\n     */\r\n    function hasVoterParticipated(uint256 roundId, address voter) public view returns (bool) {\r\n        address[] memory participants = roundParticipants[roundId];\r\n        for (uint256 i = 0; i < participants.length; i++) {\r\n            if (participants[i] == voter) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * @dev Gets mixing parameters\r\n     * @return minParticipants Minimum participants required\r\n     * @return maxParticipants Maximum participants allowed\r\n     * @return mixingDuration Duration of mixing phase\r\n     * @return revealDelay Delay before reveal phase\r\n     */\r\n    function getMixingParameters() external view returns (\r\n        uint256 minParticipants,\r\n        uint256 maxParticipants,\r\n        uint256 mixingDuration,\r\n        uint256 revealDelay\r\n    ) {\r\n        return (minParticipants, maxParticipants, mixingDuration, revealDelay);\r\n    }\r\n\r\n    /**\r\n     * @dev Gets total number of rounds\r\n     * @return Total round count\r\n     */\r\n    function getTotalRounds() external view returns (uint256) {\r\n        return roundCounter;\r\n    }\r\n\r\n    // --- Admin Functions ---\r\n\r\n    /**\r\n     * @dev Updates mixing parameters\r\n     * @param _minParticipants New minimum participants\r\n     * @param _maxParticipants New maximum participants\r\n     * @param _mixingDuration New mixing duration\r\n     * @param _revealDelay New reveal delay\r\n     */\r\n    function updateMixingParameters(\r\n        uint256 _minParticipants,\r\n        uint256 _maxParticipants,\r\n        uint256 _mixingDuration,\r\n        uint256 _revealDelay\r\n    ) external onlyOwner {\r\n        minParticipants = _minParticipants;\r\n        maxParticipants = _maxParticipants;\r\n        mixingDuration = _mixingDuration;\r\n        revealDelay = _revealDelay;\r\n    }\r\n\r\n    /**\r\n     * @dev Enables or disables mixing\r\n     * @param enabled Whether mixing should be enabled\r\n     */\r\n    function setMixingEnabled(bool enabled) external onlyOwner {\r\n        mixingEnabled = enabled;\r\n    }\r\n\r\n    /**\r\n     * @dev Emergency function to invalidate a mixing round\r\n     * @param roundId The round ID to invalidate\r\n     */\r\n    function emergencyInvalidateRound(uint256 roundId) external onlyOwner {\r\n        require(mixingRounds[roundId].isActive, \"Round not active\");\r\n        mixingRounds[roundId].isActive = false;\r\n    }\r\n\r\n    // --- Utility Functions ---\r\n\r\n    /**\r\n     * @dev Generates a random mixing index\r\n     * @param seed Additional seed for randomness\r\n     * @return mixIndex The generated mix index\r\n     */\r\n    function generateMixIndex(bytes32 seed) external view returns (uint256 mixIndex) {\r\n        bytes32 random = CryptographicUtils.generateRandomNumber(seed);\r\n        return uint256(random) % maxParticipants;\r\n    }\r\n\r\n    /**\r\n     * @dev Creates a mixing proof for verification\r\n     * @param originalVote The original vote\r\n     * @param mixedVote The mixed vote\r\n     * @param randomness The randomness used\r\n     * @param mixIndex The mix index used\r\n     * @return proof The mixing proof structure\r\n     */\r\n    function createMixingProof(\r\n        bytes32 originalVote,\r\n        bytes32 mixedVote,\r\n        bytes32 randomness,\r\n        uint256 mixIndex\r\n    ) external pure returns (MixingProof memory proof) {\r\n        proof = MixingProof({\r\n            originalVote: originalVote,\r\n            mixedVote: mixedVote,\r\n            randomness: randomness,\r\n            mixIndex: mixIndex,\r\n            merkleProof: new bytes32[](0)\r\n        });\r\n        return proof;\r\n    }\r\n} "},"contracts/ZKProofVerifier.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"./libraries/CryptographicUtils.sol\";\r\n\r\n/**\r\n * @title ZKProofVerifier\r\n * @dev Zero-Knowledge Proof verification for vote privacy and verifiability\r\n * @notice Implements zk-SNARKs principles for secure voting\r\n */\r\ncontract ZKProofVerifier is Ownable {\r\n    using CryptographicUtils for *;\r\n\r\n    // --- Structs ---\r\n    struct ZKProof {\r\n        bytes32 publicInputs;      // Public inputs to the proof\r\n        bytes32 nullifierHash;     // Hash to prevent double-spending\r\n        bytes32 commitmentHash;    // Commitment to the vote\r\n        bytes32 proofHash;         // Hash of the zero-knowledge proof\r\n        uint256 timestamp;         // When the proof was created\r\n        bool verified;             // Whether the proof has been verified\r\n    }\r\n\r\n    struct VoteProof {\r\n        address voter;             // Voter address (hidden in ZK)\r\n        bytes32 voteHash;          // Hash of the actual vote\r\n        bytes32 nullifier;         // Unique nullifier\r\n        bytes32 secret;            // Secret for proof generation\r\n        ZKProof zkProof;          // Zero-knowledge proof\r\n    }\r\n\r\n    // --- State Variables ---\r\n    mapping(bytes32 => ZKProof) private proofs;\r\n    mapping(bytes32 => bool) private nullifiers;\r\n    mapping(address => bytes32[]) private voterProofs;\r\n    mapping(bytes32 => VoteProof) private voteProofs;\r\n    \r\n    uint256 public proofCounter;\r\n    bytes32 public merkleRoot;\r\n    uint256 public verificationThreshold;\r\n    \r\n    // --- Events ---\r\n    event ZKProofCreated(\r\n        bytes32 indexed proofHash,\r\n        bytes32 indexed nullifierHash,\r\n        bytes32 commitmentHash,\r\n        uint256 timestamp\r\n    );\r\n    \r\n    event ZKProofVerified(\r\n        bytes32 indexed proofHash,\r\n        bool isValid,\r\n        uint256 timestamp\r\n    );\r\n    \r\n    event VoteProofSubmitted(\r\n        address indexed voter,\r\n        bytes32 indexed voteHash,\r\n        bytes32 proofHash,\r\n        uint256 timestamp\r\n    );\r\n    \r\n    event NullifierUsed(\r\n        bytes32 indexed nullifier,\r\n        bytes32 indexed proofHash,\r\n        uint256 timestamp\r\n    );\r\n\r\n    // --- Modifiers ---\r\n    modifier onlyValidProof(bytes32 proofHash) {\r\n        require(proofs[proofHash].proofHash != bytes32(0), \"Proof does not exist\");\r\n        _;\r\n    }\r\n\r\n    modifier onlyUnusedNullifier(bytes32 nullifier) {\r\n        require(!nullifiers[nullifier], \"Nullifier already used\");\r\n        _;\r\n    }\r\n\r\n    // --- Constructor ---\r\n    constructor(uint256 _verificationThreshold) Ownable(msg.sender) {\r\n        verificationThreshold = _verificationThreshold;\r\n        proofCounter = 0;\r\n    }\r\n\r\n    // --- Core ZK Proof Functions ---\r\n\r\n    /**\r\n     * @dev Creates a zero-knowledge proof for vote verification\r\n     * @param voteHash Hash of the vote to prove\r\n     * @param nullifier Unique nullifier to prevent double-spending\r\n     * @param secret Secret value for proof generation\r\n     * @param commitmentHash Commitment to the vote\r\n     * @return proofHash The created proof hash\r\n     */\r\n    function createZKProof(\r\n        bytes32 voteHash,\r\n        bytes32 nullifier,\r\n        bytes32 secret,\r\n        bytes32 commitmentHash\r\n    ) external onlyUnusedNullifier(nullifier) returns (bytes32 proofHash) {\r\n        // Create ZK proof hash\r\n        proofHash = CryptographicUtils.createZKProofHash(voteHash, nullifier, secret);\r\n        \r\n        // Create ZK proof structure\r\n        ZKProof memory newProof = ZKProof({\r\n            publicInputs: commitmentHash,\r\n            nullifierHash: keccak256(abi.encodePacked(nullifier)),\r\n            commitmentHash: commitmentHash,\r\n            proofHash: proofHash,\r\n            timestamp: block.timestamp,\r\n            verified: false\r\n        });\r\n        \r\n        // Store the proof\r\n        proofs[proofHash] = newProof;\r\n        nullifiers[nullifier] = true;\r\n        proofCounter++;\r\n        \r\n        emit ZKProofCreated(proofHash, newProof.nullifierHash, commitmentHash, block.timestamp);\r\n        emit NullifierUsed(nullifier, proofHash, block.timestamp);\r\n        \r\n        return proofHash;\r\n    }\r\n\r\n    /**\r\n     * @dev Verifies a zero-knowledge proof\r\n     * @param proofHash The proof hash to verify\r\n     * @param voteHash The vote hash being proved\r\n     * @param nullifier The nullifier used in the proof\r\n     * @param secret The secret used in the proof\r\n     * @return isValid Whether the proof is valid\r\n     */\r\n    function verifyZKProof(\r\n        bytes32 proofHash,\r\n        bytes32 voteHash,\r\n        bytes32 nullifier,\r\n        bytes32 secret\r\n    ) external onlyValidProof(proofHash) returns (bool isValid) {\r\n        ZKProof storage proof = proofs[proofHash];\r\n        \r\n        // Verify the proof hasn't been used before\r\n        require(!proof.verified, \"Proof already verified\");\r\n        \r\n        // Verify the nullifier hasn't been used\r\n        require(nullifiers[nullifier], \"Nullifier not found\");\r\n        \r\n        // Recreate the proof hash to verify\r\n        bytes32 computedProofHash = CryptographicUtils.createZKProofHash(voteHash, nullifier, secret);\r\n        \r\n        // Verify the proof hash matches\r\n        isValid = (computedProofHash == proofHash);\r\n        \r\n        if (isValid) {\r\n            proof.verified = true;\r\n            emit ZKProofVerified(proofHash, true, block.timestamp);\r\n        } else {\r\n            emit ZKProofVerified(proofHash, false, block.timestamp);\r\n        }\r\n        \r\n        return isValid;\r\n    }\r\n\r\n    /**\r\n     * @dev Submits a complete vote proof with ZK verification\r\n     * @param voteHash Hash of the vote\r\n     * @param nullifier Unique nullifier\r\n     * @param secret Secret for proof generation\r\n     * @param commitmentHash Commitment to the vote\r\n     * @return proofHash The created proof hash\r\n     */\r\n    function submitVoteProof(\r\n        bytes32 voteHash,\r\n        bytes32 nullifier,\r\n        bytes32 secret,\r\n        bytes32 commitmentHash\r\n    ) external returns (bytes32 proofHash) {\r\n        // Create the ZK proof\r\n        proofHash = this.createZKProof(voteHash, nullifier, secret, commitmentHash);\r\n        \r\n        // Create vote proof structure\r\n        VoteProof memory voteProof = VoteProof({\r\n            voter: msg.sender,\r\n            voteHash: voteHash,\r\n            nullifier: nullifier,\r\n            secret: secret,\r\n            zkProof: proofs[proofHash]\r\n        });\r\n        \r\n        // Store the vote proof\r\n        voteProofs[proofHash] = voteProof;\r\n        voterProofs[msg.sender].push(proofHash);\r\n        \r\n        emit VoteProofSubmitted(msg.sender, voteHash, proofHash, block.timestamp);\r\n        \r\n        return proofHash;\r\n    }\r\n\r\n    // --- Merkle Tree Functions ---\r\n\r\n    /**\r\n     * @dev Updates the Merkle root for voter verification\r\n     * @param newRoot The new Merkle root\r\n     */\r\n    function updateMerkleRoot(bytes32 newRoot) external onlyOwner {\r\n        merkleRoot = newRoot;\r\n    }\r\n\r\n    /**\r\n     * @dev Verifies a voter's inclusion in the Merkle tree\r\n     * @param voter The voter address\r\n     * @param proof The Merkle proof\r\n     * @return isValid Whether the voter is included\r\n     */\r\n    function verifyVoterInclusion(\r\n        address voter,\r\n        bytes32[] calldata proof\r\n    ) external view returns (bool isValid) {\r\n        bytes32 leaf = keccak256(abi.encodePacked(voter));\r\n        return CryptographicUtils.verifyMerkleProof(leaf, proof, merkleRoot);\r\n    }\r\n\r\n    // --- View Functions ---\r\n\r\n    /**\r\n     * @dev Gets a ZK proof by hash\r\n     * @param proofHash The proof hash\r\n     * @return The ZK proof structure\r\n     */\r\n    function getZKProof(bytes32 proofHash) \r\n        external \r\n        view \r\n        onlyValidProof(proofHash) \r\n        returns (ZKProof memory) \r\n    {\r\n        return proofs[proofHash];\r\n    }\r\n\r\n    /**\r\n     * @dev Gets a vote proof by hash\r\n     * @param proofHash The proof hash\r\n     * @return The vote proof structure\r\n     */\r\n    function getVoteProof(bytes32 proofHash) \r\n        external \r\n        view \r\n        returns (VoteProof memory) \r\n    {\r\n        return voteProofs[proofHash];\r\n    }\r\n\r\n    /**\r\n     * @dev Gets all proofs for a voter\r\n     * @param voter The voter address\r\n     * @return Array of proof hashes\r\n     */\r\n    function getVoterProofs(address voter) \r\n        external \r\n        view \r\n        returns (bytes32[] memory) \r\n    {\r\n        return voterProofs[voter];\r\n    }\r\n\r\n    /**\r\n     * @dev Checks if a nullifier has been used\r\n     * @param nullifier The nullifier to check\r\n     * @return Whether the nullifier has been used\r\n     */\r\n    function isNullifierUsed(bytes32 nullifier) external view returns (bool) {\r\n        return nullifiers[nullifier];\r\n    }\r\n\r\n    /**\r\n     * @dev Gets the total number of proofs created\r\n     * @return The proof counter\r\n     */\r\n    function getProofCount() external view returns (uint256) {\r\n        return proofCounter;\r\n    }\r\n\r\n    /**\r\n     * @dev Gets the current Merkle root\r\n     * @return The Merkle root\r\n     */\r\n    function getMerkleRoot() external view returns (bytes32) {\r\n        return merkleRoot;\r\n    }\r\n\r\n    // --- Admin Functions ---\r\n\r\n    /**\r\n     * @dev Updates the verification threshold\r\n     * @param newThreshold The new threshold value\r\n     */\r\n    function updateVerificationThreshold(uint256 newThreshold) external onlyOwner {\r\n        verificationThreshold = newThreshold;\r\n    }\r\n\r\n    /**\r\n     * @dev Batch verifies multiple proofs\r\n     * @param proofHashes Array of proof hashes to verify\r\n     * @param voteHashes Array of vote hashes\r\n     * @param nullifiers Array of nullifiers\r\n     * @param secrets Array of secrets\r\n     * @return validCount Number of valid proofs\r\n     */\r\n    function batchVerifyProofs(\r\n        bytes32[] calldata proofHashes,\r\n        bytes32[] calldata voteHashes,\r\n        bytes32[] calldata nullifiers,\r\n        bytes32[] calldata secrets\r\n    ) external onlyOwner returns (uint256 validCount) {\r\n        require(\r\n            proofHashes.length == voteHashes.length &&\r\n            voteHashes.length == nullifiers.length &&\r\n            nullifiers.length == secrets.length,\r\n            \"Array lengths must match\"\r\n        );\r\n        \r\n        for (uint256 i = 0; i < proofHashes.length; i++) {\r\n            if (this.verifyZKProof(proofHashes[i], voteHashes[i], nullifiers[i], secrets[i])) {\r\n                validCount++;\r\n            }\r\n        }\r\n        \r\n        return validCount;\r\n    }\r\n\r\n    // --- Emergency Functions ---\r\n\r\n    /**\r\n     * @dev Emergency function to invalidate a proof (admin only)\r\n     * @param proofHash The proof hash to invalidate\r\n     */\r\n    function emergencyInvalidateProof(bytes32 proofHash) external onlyOwner {\r\n        require(proofs[proofHash].proofHash != bytes32(0), \"Proof does not exist\");\r\n        delete proofs[proofHash];\r\n    }\r\n} "}},"settings":{"optimizer":{"enabled":true,"runs":200,"details":{"yul":true,"yulDetails":{"stackAllocation":true,"optimizerSteps":"dhfoDgvulfnTUtnIf"}}},"viaIR":true,"evmVersion":"paris","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"errors":[{"component":"general","errorCode":"2519","formattedMessage":"Warning: This declaration shadows an existing declaration.\n   --> contracts/ZKProofVerifier.sol:312:9:\n    |\n312 |         bytes32[] calldata nullifiers,\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nNote: The shadowed declaration is here:\n  --> contracts/ZKProofVerifier.sol:35:5:\n   |\n35 |     mapping(bytes32 => bool) private nullifiers;\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","message":"This declaration shadows an existing declaration.","secondarySourceLocations":[{"end":1358,"file":"contracts/ZKProofVerifier.sol","message":"The shadowed declaration is here:","start":1315}],"severity":"warning","sourceLocation":{"end":9964,"file":"contracts/ZKProofVerifier.sol","start":9935},"type":"Warning"},{"component":"general","errorCode":"2519","formattedMessage":"Warning: This declaration shadows an existing declaration.\n   --> contracts/VoteMixing.sol:234:9:\n    |\n234 |         bytes32[] memory mixedVotes = new bytes32[](round.mixedVotes.length);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^\nNote: The shadowed declaration is here:\n  --> contracts/VoteMixing.sol:51:5:\n   |\n51 |     mapping(bytes32 => MixedVote) private mixedVotes;\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","message":"This declaration shadows an existing declaration.","secondarySourceLocations":[{"end":1394,"file":"contracts/VoteMixing.sol","message":"The shadowed declaration is here:","start":1346}],"severity":"warning","sourceLocation":{"end":7294,"file":"contracts/VoteMixing.sol","start":7267},"type":"Warning"},{"component":"general","errorCode":"2519","formattedMessage":"Warning: This declaration shadows an existing declaration.\n   --> contracts/VoteMixing.sol:383:9:\n    |\n383 |         uint256 minParticipants,\n    |         ^^^^^^^^^^^^^^^^^^^^^^^\nNote: The shadowed declaration is here:\n  --> contracts/VoteMixing.sol:57:5:\n   |\n57 |     uint256 private minParticipants;\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","message":"This declaration shadows an existing declaration.","secondarySourceLocations":[{"end":1645,"file":"contracts/VoteMixing.sol","message":"The shadowed declaration is here:","start":1614}],"severity":"warning","sourceLocation":{"end":12374,"file":"contracts/VoteMixing.sol","start":12351},"type":"Warning"},{"component":"general","errorCode":"2519","formattedMessage":"Warning: This declaration shadows an existing declaration.\n   --> contracts/VoteMixing.sol:384:9:\n    |\n384 |         uint256 maxParticipants,\n    |         ^^^^^^^^^^^^^^^^^^^^^^^\nNote: The shadowed declaration is here:\n  --> contracts/VoteMixing.sol:58:5:\n   |\n58 |     uint256 private maxParticipants;\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","message":"This declaration shadows an existing declaration.","secondarySourceLocations":[{"end":1683,"file":"contracts/VoteMixing.sol","message":"The shadowed declaration is here:","start":1652}],"severity":"warning","sourceLocation":{"end":12408,"file":"contracts/VoteMixing.sol","start":12385},"type":"Warning"},{"component":"general","errorCode":"2519","formattedMessage":"Warning: This declaration shadows an existing declaration.\n   --> contracts/VoteMixing.sol:385:9:\n    |\n385 |         uint256 mixingDuration,\n    |         ^^^^^^^^^^^^^^^^^^^^^^\nNote: The shadowed declaration is here:\n  --> contracts/VoteMixing.sol:59:5:\n   |\n59 |     uint256 private mixingDuration;\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","message":"This declaration shadows an existing declaration.","secondarySourceLocations":[{"end":1720,"file":"contracts/VoteMixing.sol","message":"The shadowed declaration is here:","start":1690}],"severity":"warning","sourceLocation":{"end":12441,"file":"contracts/VoteMixing.sol","start":12419},"type":"Warning"},{"component":"general","errorCode":"2519","formattedMessage":"Warning: This declaration shadows an existing declaration.\n   --> contracts/VoteMixing.sol:386:9:\n    |\n386 |         uint256 revealDelay\n    |         ^^^^^^^^^^^^^^^^^^^\nNote: The shadowed declaration is here:\n  --> contracts/VoteMixing.sol:60:5:\n   |\n60 |     uint256 private revealDelay;\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","message":"This declaration shadows an existing declaration.","secondarySourceLocations":[{"end":1754,"file":"contracts/VoteMixing.sol","message":"The shadowed declaration is here:","start":1727}],"severity":"warning","sourceLocation":{"end":12471,"file":"contracts/VoteMixing.sol","start":12452},"type":"Warning"},{"component":"general","errorCode":"2018","formattedMessage":"Warning: Function state mutability can be restricted to pure\n   --> contracts/VoteMixing.sol:382:5:\n    |\n382 |     function getMixingParameters() external view returns (\n    |     ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"Function state mutability can be restricted to pure","severity":"warning","sourceLocation":{"end":12568,"file":"contracts/VoteMixing.sol","start":12287},"type":"Warning"}],"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[177],"Ownable":[147]},"id":148,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":148,"sourceUnit":178,"src":"128:45:0","symbolAliases":[{"foreign":{"id":2,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":177,"src":"136:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":5,"name":"Context","nameLocations":["692:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":177,"src":"692:7:0"},"id":6,"nodeType":"InheritanceSpecifier","src":"692:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":4,"nodeType":"StructuredDocumentation","src":"175:487:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":147,"linearizedBaseContracts":[147,177],"name":"Ownable","nameLocation":"681:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":8,"mutability":"mutable","name":"_owner","nameLocation":"722:6:0","nodeType":"VariableDeclaration","scope":147,"src":"706:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"documentation":{"id":9,"nodeType":"StructuredDocumentation","src":"735:85:0","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":13,"name":"OwnableUnauthorizedAccount","nameLocation":"831:26:0","nodeType":"ErrorDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11,"mutability":"mutable","name":"account","nameLocation":"866:7:0","nodeType":"VariableDeclaration","scope":13,"src":"858:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"858:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"857:17:0"},"src":"825:50:0"},{"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"881:82:0","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":18,"name":"OwnableInvalidOwner","nameLocation":"974:19:0","nodeType":"ErrorDefinition","parameters":{"id":17,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16,"mutability":"mutable","name":"owner","nameLocation":"1002:5:0","nodeType":"VariableDeclaration","scope":18,"src":"994:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"993:15:0"},"src":"968:41:0"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":24,"name":"OwnershipTransferred","nameLocation":"1021:20:0","nodeType":"EventDefinition","parameters":{"id":23,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1058:13:0","nodeType":"VariableDeclaration","scope":24,"src":"1042:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19,"name":"address","nodeType":"ElementaryTypeName","src":"1042:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":22,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1089:8:0","nodeType":"VariableDeclaration","scope":24,"src":"1073:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":21,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1041:57:0"},"src":"1015:84:0"},{"body":{"id":49,"nodeType":"Block","src":"1259:153:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":35,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":30,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1273:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":33,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":32,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1289:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":31,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:0","typeDescriptions":{}}},"id":34,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1289:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1273:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":44,"nodeType":"IfStatement","src":"1269:95:0","trueBody":{"id":43,"nodeType":"Block","src":"1301:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":39,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1350:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":38,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1342:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":37,"name":"address","nodeType":"ElementaryTypeName","src":"1342:7:0","typeDescriptions":{}}},"id":40,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1342:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":36,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"1322:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":41,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":42,"nodeType":"RevertStatement","src":"1315:38:0"}]}},{"expression":{"arguments":[{"id":46,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1392:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":45,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"1373:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":47,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1373:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":48,"nodeType":"ExpressionStatement","src":"1373:32:0"}]},"documentation":{"id":25,"nodeType":"StructuredDocumentation","src":"1105:115:0","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":50,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":28,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27,"mutability":"mutable","name":"initialOwner","nameLocation":"1245:12:0","nodeType":"VariableDeclaration","scope":50,"src":"1237:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":26,"name":"address","nodeType":"ElementaryTypeName","src":"1237:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1236:22:0"},"returnParameters":{"id":29,"nodeType":"ParameterList","parameters":[],"src":"1259:0:0"},"scope":147,"src":"1225:187:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":57,"nodeType":"Block","src":"1521:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":53,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"1531:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1531:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":55,"nodeType":"ExpressionStatement","src":"1531:13:0"},{"id":56,"nodeType":"PlaceholderStatement","src":"1554:1:0"}]},"documentation":{"id":51,"nodeType":"StructuredDocumentation","src":"1418:77:0","text":" @dev Throws if called by any account other than the owner."},"id":58,"name":"onlyOwner","nameLocation":"1509:9:0","nodeType":"ModifierDefinition","parameters":{"id":52,"nodeType":"ParameterList","parameters":[],"src":"1518:2:0"},"src":"1500:62:0","virtual":false,"visibility":"internal"},{"body":{"id":66,"nodeType":"Block","src":"1693:30:0","statements":[{"expression":{"id":64,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"1710:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":63,"id":65,"nodeType":"Return","src":"1703:13:0"}]},"documentation":{"id":59,"nodeType":"StructuredDocumentation","src":"1568:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":67,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1647:5:0","nodeType":"FunctionDefinition","parameters":{"id":60,"nodeType":"ParameterList","parameters":[],"src":"1652:2:0"},"returnParameters":{"id":63,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":67,"src":"1684:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1684:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1683:9:0"},"scope":147,"src":"1638:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":83,"nodeType":"Block","src":"1841:117:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":75,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":71,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"1855:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1855:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":73,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":159,"src":"1866:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":74,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1866:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1855:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":82,"nodeType":"IfStatement","src":"1851:101:0","trueBody":{"id":81,"nodeType":"Block","src":"1880:72:0","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":77,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":159,"src":"1928:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1928:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":76,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"1901:26:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":79,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1901:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":80,"nodeType":"RevertStatement","src":"1894:47:0"}]}}]},"documentation":{"id":68,"nodeType":"StructuredDocumentation","src":"1729:62:0","text":" @dev Throws if the sender is not the owner."},"id":84,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1805:11:0","nodeType":"FunctionDefinition","parameters":{"id":69,"nodeType":"ParameterList","parameters":[],"src":"1816:2:0"},"returnParameters":{"id":70,"nodeType":"ParameterList","parameters":[],"src":"1841:0:0"},"scope":147,"src":"1796:162:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":97,"nodeType":"Block","src":"2347:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":93,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2384:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":92,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2376:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":91,"name":"address","nodeType":"ElementaryTypeName","src":"2376:7:0","typeDescriptions":{}}},"id":94,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2376:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":90,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2357:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":95,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2357:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":96,"nodeType":"ExpressionStatement","src":"2357:30:0"}]},"documentation":{"id":85,"nodeType":"StructuredDocumentation","src":"1964:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":98,"implemented":true,"kind":"function","modifiers":[{"id":88,"kind":"modifierInvocation","modifierName":{"id":87,"name":"onlyOwner","nameLocations":["2337:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2337:9:0"},"nodeType":"ModifierInvocation","src":"2337:9:0"}],"name":"renounceOwnership","nameLocation":"2302:17:0","nodeType":"FunctionDefinition","parameters":{"id":86,"nodeType":"ParameterList","parameters":[],"src":"2319:2:0"},"returnParameters":{"id":89,"nodeType":"ParameterList","parameters":[],"src":"2347:0:0"},"scope":147,"src":"2293:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":125,"nodeType":"Block","src":"2613:145:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":106,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2627:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2639:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":107,"name":"address","nodeType":"ElementaryTypeName","src":"2639:7:0","typeDescriptions":{}}},"id":110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2627:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":120,"nodeType":"IfStatement","src":"2623:91:0","trueBody":{"id":119,"nodeType":"Block","src":"2651:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2700:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2692:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":113,"name":"address","nodeType":"ElementaryTypeName","src":"2692:7:0","typeDescriptions":{}}},"id":116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2692:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":112,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"2672:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2672:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":118,"nodeType":"RevertStatement","src":"2665:38:0"}]}},{"expression":{"arguments":[{"id":122,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2742:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":121,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2723:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":124,"nodeType":"ExpressionStatement","src":"2723:28:0"}]},"documentation":{"id":99,"nodeType":"StructuredDocumentation","src":"2400:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":126,"implemented":true,"kind":"function","modifiers":[{"id":104,"kind":"modifierInvocation","modifierName":{"id":103,"name":"onlyOwner","nameLocations":["2603:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2603:9:0"},"nodeType":"ModifierInvocation","src":"2603:9:0"}],"name":"transferOwnership","nameLocation":"2552:17:0","nodeType":"FunctionDefinition","parameters":{"id":102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101,"mutability":"mutable","name":"newOwner","nameLocation":"2578:8:0","nodeType":"VariableDeclaration","scope":126,"src":"2570:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":100,"name":"address","nodeType":"ElementaryTypeName","src":"2570:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2569:18:0"},"returnParameters":{"id":105,"nodeType":"ParameterList","parameters":[],"src":"2613:0:0"},"scope":147,"src":"2543:215:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":145,"nodeType":"Block","src":"2975:124:0","statements":[{"assignments":[133],"declarations":[{"constant":false,"id":133,"mutability":"mutable","name":"oldOwner","nameLocation":"2993:8:0","nodeType":"VariableDeclaration","scope":145,"src":"2985:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":132,"name":"address","nodeType":"ElementaryTypeName","src":"2985:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":135,"initialValue":{"id":134,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3004:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2985:25:0"},{"expression":{"id":138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":136,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3020:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":137,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3029:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3020:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":139,"nodeType":"ExpressionStatement","src":"3020:17:0"},{"eventCall":{"arguments":[{"id":141,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"3073:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":142,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3083:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":140,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"3052:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3052:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":144,"nodeType":"EmitStatement","src":"3047:45:0"}]},"documentation":{"id":127,"nodeType":"StructuredDocumentation","src":"2764:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":146,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2921:18:0","nodeType":"FunctionDefinition","parameters":{"id":130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":129,"mutability":"mutable","name":"newOwner","nameLocation":"2948:8:0","nodeType":"VariableDeclaration","scope":146,"src":"2940:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":128,"name":"address","nodeType":"ElementaryTypeName","src":"2940:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2939:18:0"},"returnParameters":{"id":131,"nodeType":"ParameterList","parameters":[],"src":"2975:0:0"},"scope":147,"src":"2912:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":148,"src":"663:2438:0","usedErrors":[13,18],"usedEvents":[24]}],"src":"102:3000:0"},"id":0},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[177]},"id":178,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":149,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:1"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":150,"nodeType":"StructuredDocumentation","src":"127:496:1","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":177,"linearizedBaseContracts":[177],"name":"Context","nameLocation":"642:7:1","nodeType":"ContractDefinition","nodes":[{"body":{"id":158,"nodeType":"Block","src":"718:34:1","statements":[{"expression":{"expression":{"id":155,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:1","memberName":"sender","nodeType":"MemberAccess","src":"735:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":154,"id":157,"nodeType":"Return","src":"728:17:1"}]},"id":159,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:1","nodeType":"FunctionDefinition","parameters":{"id":151,"nodeType":"ParameterList","parameters":[],"src":"675:2:1"},"returnParameters":{"id":154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":153,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":159,"src":"709:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":152,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:1"},"scope":177,"src":"656:96:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":167,"nodeType":"Block","src":"825:32:1","statements":[{"expression":{"expression":{"id":164,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:1","memberName":"data","nodeType":"MemberAccess","src":"842:8:1","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":163,"id":166,"nodeType":"Return","src":"835:15:1"}]},"id":168,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:1","nodeType":"FunctionDefinition","parameters":{"id":160,"nodeType":"ParameterList","parameters":[],"src":"775:2:1"},"returnParameters":{"id":163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":162,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":168,"src":"809:14:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":161,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:1"},"scope":177,"src":"758:99:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":175,"nodeType":"Block","src":"935:25:1","statements":[{"expression":{"hexValue":"30","id":173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":172,"id":174,"nodeType":"Return","src":"945:8:1"}]},"id":176,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:1","nodeType":"FunctionDefinition","parameters":{"id":169,"nodeType":"ParameterList","parameters":[],"src":"892:2:1"},"returnParameters":{"id":172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":171,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":176,"src":"926:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":170,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:1"},"scope":177,"src":"863:97:1","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":178,"src":"624:338:1","usedErrors":[],"usedEvents":[]}],"src":"101:862:1"},"id":1},"@openzeppelin/contracts/utils/Pausable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Pausable.sol","exportedSymbols":{"Context":[177],"Pausable":[285]},"id":286,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":179,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:2"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":181,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":286,"sourceUnit":178,"src":"128:45:2","symbolAliases":[{"foreign":{"id":180,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":177,"src":"136:7:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":183,"name":"Context","nameLocations":["645:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":177,"src":"645:7:2"},"id":184,"nodeType":"InheritanceSpecifier","src":"645:7:2"}],"canonicalName":"Pausable","contractDependencies":[],"contractKind":"contract","documentation":{"id":182,"nodeType":"StructuredDocumentation","src":"175:439:2","text":" @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."},"fullyImplemented":true,"id":285,"linearizedBaseContracts":[285,177],"name":"Pausable","nameLocation":"633:8:2","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":186,"mutability":"mutable","name":"_paused","nameLocation":"672:7:2","nodeType":"VariableDeclaration","scope":285,"src":"659:20:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":185,"name":"bool","nodeType":"ElementaryTypeName","src":"659:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"private"},{"anonymous":false,"documentation":{"id":187,"nodeType":"StructuredDocumentation","src":"686:73:2","text":" @dev Emitted when the pause is triggered by `account`."},"eventSelector":"62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258","id":191,"name":"Paused","nameLocation":"770:6:2","nodeType":"EventDefinition","parameters":{"id":190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":189,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"785:7:2","nodeType":"VariableDeclaration","scope":191,"src":"777:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":188,"name":"address","nodeType":"ElementaryTypeName","src":"777:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"776:17:2"},"src":"764:30:2"},{"anonymous":false,"documentation":{"id":192,"nodeType":"StructuredDocumentation","src":"800:70:2","text":" @dev Emitted when the pause is lifted by `account`."},"eventSelector":"5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa","id":196,"name":"Unpaused","nameLocation":"881:8:2","nodeType":"EventDefinition","parameters":{"id":195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":194,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"898:7:2","nodeType":"VariableDeclaration","scope":196,"src":"890:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":193,"name":"address","nodeType":"ElementaryTypeName","src":"890:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"889:17:2"},"src":"875:32:2"},{"documentation":{"id":197,"nodeType":"StructuredDocumentation","src":"913:76:2","text":" @dev The operation failed because the contract is paused."},"errorSelector":"d93c0665","id":199,"name":"EnforcedPause","nameLocation":"1000:13:2","nodeType":"ErrorDefinition","parameters":{"id":198,"nodeType":"ParameterList","parameters":[],"src":"1013:2:2"},"src":"994:22:2"},{"documentation":{"id":200,"nodeType":"StructuredDocumentation","src":"1022:80:2","text":" @dev The operation failed because the contract is not paused."},"errorSelector":"8dfc202b","id":202,"name":"ExpectedPause","nameLocation":"1113:13:2","nodeType":"ErrorDefinition","parameters":{"id":201,"nodeType":"ParameterList","parameters":[],"src":"1126:2:2"},"src":"1107:22:2"},{"body":{"id":209,"nodeType":"Block","src":"1340:47:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":205,"name":"_requireNotPaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":239,"src":"1350:17:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1350:19:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":207,"nodeType":"ExpressionStatement","src":"1350:19:2"},{"id":208,"nodeType":"PlaceholderStatement","src":"1379:1:2"}]},"documentation":{"id":203,"nodeType":"StructuredDocumentation","src":"1135:175:2","text":" @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."},"id":210,"name":"whenNotPaused","nameLocation":"1324:13:2","nodeType":"ModifierDefinition","parameters":{"id":204,"nodeType":"ParameterList","parameters":[],"src":"1337:2:2"},"src":"1315:72:2","virtual":false,"visibility":"internal"},{"body":{"id":217,"nodeType":"Block","src":"1587:44:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":213,"name":"_requirePaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":252,"src":"1597:14:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1597:16:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":215,"nodeType":"ExpressionStatement","src":"1597:16:2"},{"id":216,"nodeType":"PlaceholderStatement","src":"1623:1:2"}]},"documentation":{"id":211,"nodeType":"StructuredDocumentation","src":"1393:167:2","text":" @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."},"id":218,"name":"whenPaused","nameLocation":"1574:10:2","nodeType":"ModifierDefinition","parameters":{"id":212,"nodeType":"ParameterList","parameters":[],"src":"1584:2:2"},"src":"1565:66:2","virtual":false,"visibility":"internal"},{"body":{"id":226,"nodeType":"Block","src":"1779:31:2","statements":[{"expression":{"id":224,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":186,"src":"1796:7:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":223,"id":225,"nodeType":"Return","src":"1789:14:2"}]},"documentation":{"id":219,"nodeType":"StructuredDocumentation","src":"1637:84:2","text":" @dev Returns true if the contract is paused, and false otherwise."},"functionSelector":"5c975abb","id":227,"implemented":true,"kind":"function","modifiers":[],"name":"paused","nameLocation":"1735:6:2","nodeType":"FunctionDefinition","parameters":{"id":220,"nodeType":"ParameterList","parameters":[],"src":"1741:2:2"},"returnParameters":{"id":223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":222,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":227,"src":"1773:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":221,"name":"bool","nodeType":"ElementaryTypeName","src":"1773:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1772:6:2"},"scope":285,"src":"1726:84:2","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":238,"nodeType":"Block","src":"1929:77:2","statements":[{"condition":{"arguments":[],"expression":{"argumentTypes":[],"id":231,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":227,"src":"1943:6:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":232,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1943:8:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":237,"nodeType":"IfStatement","src":"1939:61:2","trueBody":{"id":236,"nodeType":"Block","src":"1953:47:2","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":233,"name":"EnforcedPause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":199,"src":"1974:13:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":234,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1974:15:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":235,"nodeType":"RevertStatement","src":"1967:22:2"}]}}]},"documentation":{"id":228,"nodeType":"StructuredDocumentation","src":"1816:57:2","text":" @dev Throws if the contract is paused."},"id":239,"implemented":true,"kind":"function","modifiers":[],"name":"_requireNotPaused","nameLocation":"1887:17:2","nodeType":"FunctionDefinition","parameters":{"id":229,"nodeType":"ParameterList","parameters":[],"src":"1904:2:2"},"returnParameters":{"id":230,"nodeType":"ParameterList","parameters":[],"src":"1929:0:2"},"scope":285,"src":"1878:128:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":251,"nodeType":"Block","src":"2126:78:2","statements":[{"condition":{"id":245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2140:9:2","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":243,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":227,"src":"2141:6:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":244,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2141:8:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":250,"nodeType":"IfStatement","src":"2136:62:2","trueBody":{"id":249,"nodeType":"Block","src":"2151:47:2","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":246,"name":"ExpectedPause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":202,"src":"2172:13:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":247,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2172:15:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":248,"nodeType":"RevertStatement","src":"2165:22:2"}]}}]},"documentation":{"id":240,"nodeType":"StructuredDocumentation","src":"2012:61:2","text":" @dev Throws if the contract is not paused."},"id":252,"implemented":true,"kind":"function","modifiers":[],"name":"_requirePaused","nameLocation":"2087:14:2","nodeType":"FunctionDefinition","parameters":{"id":241,"nodeType":"ParameterList","parameters":[],"src":"2101:2:2"},"returnParameters":{"id":242,"nodeType":"ParameterList","parameters":[],"src":"2126:0:2"},"scope":285,"src":"2078:126:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":267,"nodeType":"Block","src":"2388:66:2","statements":[{"expression":{"id":260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":258,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":186,"src":"2398:7:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":259,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2408:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2398:14:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":261,"nodeType":"ExpressionStatement","src":"2398:14:2"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":263,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":159,"src":"2434:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":264,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2434:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":262,"name":"Paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":191,"src":"2427:6:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2427:20:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":266,"nodeType":"EmitStatement","src":"2422:25:2"}]},"documentation":{"id":253,"nodeType":"StructuredDocumentation","src":"2210:124:2","text":" @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."},"id":268,"implemented":true,"kind":"function","modifiers":[{"id":256,"kind":"modifierInvocation","modifierName":{"id":255,"name":"whenNotPaused","nameLocations":["2374:13:2"],"nodeType":"IdentifierPath","referencedDeclaration":210,"src":"2374:13:2"},"nodeType":"ModifierInvocation","src":"2374:13:2"}],"name":"_pause","nameLocation":"2348:6:2","nodeType":"FunctionDefinition","parameters":{"id":254,"nodeType":"ParameterList","parameters":[],"src":"2354:2:2"},"returnParameters":{"id":257,"nodeType":"ParameterList","parameters":[],"src":"2388:0:2"},"scope":285,"src":"2339:115:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":283,"nodeType":"Block","src":"2634:69:2","statements":[{"expression":{"id":276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":274,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":186,"src":"2644:7:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2654:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"2644:15:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":277,"nodeType":"ExpressionStatement","src":"2644:15:2"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":279,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":159,"src":"2683:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":280,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2683:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":278,"name":"Unpaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":196,"src":"2674:8:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":281,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2674:22:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":282,"nodeType":"EmitStatement","src":"2669:27:2"}]},"documentation":{"id":269,"nodeType":"StructuredDocumentation","src":"2460:121:2","text":" @dev Returns to normal state.\n Requirements:\n - The contract must be paused."},"id":284,"implemented":true,"kind":"function","modifiers":[{"id":272,"kind":"modifierInvocation","modifierName":{"id":271,"name":"whenPaused","nameLocations":["2623:10:2"],"nodeType":"IdentifierPath","referencedDeclaration":218,"src":"2623:10:2"},"nodeType":"ModifierInvocation","src":"2623:10:2"}],"name":"_unpause","nameLocation":"2595:8:2","nodeType":"FunctionDefinition","parameters":{"id":270,"nodeType":"ParameterList","parameters":[],"src":"2603:2:2"},"returnParameters":{"id":273,"nodeType":"ParameterList","parameters":[],"src":"2634:0:2"},"scope":285,"src":"2586:117:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":286,"src":"615:2090:2","usedErrors":[199,202],"usedEvents":[191,196]}],"src":"102:2604:2"},"id":2},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","exportedSymbols":{"ReentrancyGuard":[354]},"id":355,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":287,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:3"},{"abstract":true,"baseContracts":[],"canonicalName":"ReentrancyGuard","contractDependencies":[],"contractKind":"contract","documentation":{"id":288,"nodeType":"StructuredDocumentation","src":"135:894:3","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n consider using {ReentrancyGuardTransient} instead.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":354,"linearizedBaseContracts":[354],"name":"ReentrancyGuard","nameLocation":"1048:15:3","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":291,"mutability":"constant","name":"NOT_ENTERED","nameLocation":"1843:11:3","nodeType":"VariableDeclaration","scope":354,"src":"1818:40:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":289,"name":"uint256","nodeType":"ElementaryTypeName","src":"1818:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":290,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1857:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":294,"mutability":"constant","name":"ENTERED","nameLocation":"1889:7:3","nodeType":"VariableDeclaration","scope":354,"src":"1864:36:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":292,"name":"uint256","nodeType":"ElementaryTypeName","src":"1864:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1899:1:3","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":false,"id":296,"mutability":"mutable","name":"_status","nameLocation":"1923:7:3","nodeType":"VariableDeclaration","scope":354,"src":"1907:23:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":295,"name":"uint256","nodeType":"ElementaryTypeName","src":"1907:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"documentation":{"id":297,"nodeType":"StructuredDocumentation","src":"1937:52:3","text":" @dev Unauthorized reentrant call."},"errorSelector":"3ee5aeb5","id":299,"name":"ReentrancyGuardReentrantCall","nameLocation":"2000:28:3","nodeType":"ErrorDefinition","parameters":{"id":298,"nodeType":"ParameterList","parameters":[],"src":"2028:2:3"},"src":"1994:37:3"},{"body":{"id":306,"nodeType":"Block","src":"2051:38:3","statements":[{"expression":{"id":304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":302,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":296,"src":"2061:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":303,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":291,"src":"2071:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2061:21:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":305,"nodeType":"ExpressionStatement","src":"2061:21:3"}]},"id":307,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":300,"nodeType":"ParameterList","parameters":[],"src":"2048:2:3"},"returnParameters":{"id":301,"nodeType":"ParameterList","parameters":[],"src":"2051:0:3"},"scope":354,"src":"2037:52:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":317,"nodeType":"Block","src":"2490:79:3","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":310,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":334,"src":"2500:19:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2500:21:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":312,"nodeType":"ExpressionStatement","src":"2500:21:3"},{"id":313,"nodeType":"PlaceholderStatement","src":"2531:1:3"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":314,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":342,"src":"2542:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":315,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2542:20:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":316,"nodeType":"ExpressionStatement","src":"2542:20:3"}]},"documentation":{"id":308,"nodeType":"StructuredDocumentation","src":"2095:366:3","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":318,"name":"nonReentrant","nameLocation":"2475:12:3","nodeType":"ModifierDefinition","parameters":{"id":309,"nodeType":"ParameterList","parameters":[],"src":"2487:2:3"},"src":"2466:103:3","virtual":false,"visibility":"internal"},{"body":{"id":333,"nodeType":"Block","src":"2614:268:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":321,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":296,"src":"2702:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":322,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":294,"src":"2713:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2702:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":328,"nodeType":"IfStatement","src":"2698:86:3","trueBody":{"id":327,"nodeType":"Block","src":"2722:62:3","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":324,"name":"ReentrancyGuardReentrantCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":299,"src":"2743:28:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":325,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2743:30:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":326,"nodeType":"RevertStatement","src":"2736:37:3"}]}},{"expression":{"id":331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":329,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":296,"src":"2858:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":330,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":294,"src":"2868:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2858:17:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":332,"nodeType":"ExpressionStatement","src":"2858:17:3"}]},"id":334,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"2584:19:3","nodeType":"FunctionDefinition","parameters":{"id":319,"nodeType":"ParameterList","parameters":[],"src":"2603:2:3"},"returnParameters":{"id":320,"nodeType":"ParameterList","parameters":[],"src":"2614:0:3"},"scope":354,"src":"2575:307:3","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":341,"nodeType":"Block","src":"2926:170:3","statements":[{"expression":{"id":339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":337,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":296,"src":"3068:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":338,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":291,"src":"3078:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3068:21:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":340,"nodeType":"ExpressionStatement","src":"3068:21:3"}]},"id":342,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"2897:18:3","nodeType":"FunctionDefinition","parameters":{"id":335,"nodeType":"ParameterList","parameters":[],"src":"2915:2:3"},"returnParameters":{"id":336,"nodeType":"ParameterList","parameters":[],"src":"2926:0:3"},"scope":354,"src":"2888:208:3","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":352,"nodeType":"Block","src":"3339:42:3","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":348,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":296,"src":"3356:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":349,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":294,"src":"3367:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3356:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":347,"id":351,"nodeType":"Return","src":"3349:25:3"}]},"documentation":{"id":343,"nodeType":"StructuredDocumentation","src":"3102:168:3","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"id":353,"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nameLocation":"3284:23:3","nodeType":"FunctionDefinition","parameters":{"id":344,"nodeType":"ParameterList","parameters":[],"src":"3307:2:3"},"returnParameters":{"id":347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":346,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":353,"src":"3333:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":345,"name":"bool","nodeType":"ElementaryTypeName","src":"3333:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3332:6:3"},"scope":354,"src":"3275:106:3","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":355,"src":"1030:2353:3","usedErrors":[299],"usedEvents":[]}],"src":"109:3275:3"},"id":3},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","exportedSymbols":{"ECDSA":[702]},"id":703,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":356,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:4"},{"abstract":false,"baseContracts":[],"canonicalName":"ECDSA","contractDependencies":[],"contractKind":"library","documentation":{"id":357,"nodeType":"StructuredDocumentation","src":"138:205:4","text":" @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."},"fullyImplemented":true,"id":702,"linearizedBaseContracts":[702],"name":"ECDSA","nameLocation":"352:5:4","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ECDSA.RecoverError","id":362,"members":[{"id":358,"name":"NoError","nameLocation":"392:7:4","nodeType":"EnumValue","src":"392:7:4"},{"id":359,"name":"InvalidSignature","nameLocation":"409:16:4","nodeType":"EnumValue","src":"409:16:4"},{"id":360,"name":"InvalidSignatureLength","nameLocation":"435:22:4","nodeType":"EnumValue","src":"435:22:4"},{"id":361,"name":"InvalidSignatureS","nameLocation":"467:17:4","nodeType":"EnumValue","src":"467:17:4"}],"name":"RecoverError","nameLocation":"369:12:4","nodeType":"EnumDefinition","src":"364:126:4"},{"documentation":{"id":363,"nodeType":"StructuredDocumentation","src":"496:63:4","text":" @dev The signature derives the `address(0)`."},"errorSelector":"f645eedf","id":365,"name":"ECDSAInvalidSignature","nameLocation":"570:21:4","nodeType":"ErrorDefinition","parameters":{"id":364,"nodeType":"ParameterList","parameters":[],"src":"591:2:4"},"src":"564:30:4"},{"documentation":{"id":366,"nodeType":"StructuredDocumentation","src":"600:60:4","text":" @dev The signature has an invalid length."},"errorSelector":"fce698f7","id":370,"name":"ECDSAInvalidSignatureLength","nameLocation":"671:27:4","nodeType":"ErrorDefinition","parameters":{"id":369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":368,"mutability":"mutable","name":"length","nameLocation":"707:6:4","nodeType":"VariableDeclaration","scope":370,"src":"699:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":367,"name":"uint256","nodeType":"ElementaryTypeName","src":"699:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"698:16:4"},"src":"665:50:4"},{"documentation":{"id":371,"nodeType":"StructuredDocumentation","src":"721:85:4","text":" @dev The signature has an S value that is in the upper half order."},"errorSelector":"d78bce0c","id":375,"name":"ECDSAInvalidSignatureS","nameLocation":"817:22:4","nodeType":"ErrorDefinition","parameters":{"id":374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":373,"mutability":"mutable","name":"s","nameLocation":"848:1:4","nodeType":"VariableDeclaration","scope":375,"src":"840:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":372,"name":"bytes32","nodeType":"ElementaryTypeName","src":"840:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"839:11:4"},"src":"811:40:4"},{"body":{"id":427,"nodeType":"Block","src":"2285:622:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":390,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":380,"src":"2299:9:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2309:6:4","memberName":"length","nodeType":"MemberAccess","src":"2299:16:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3635","id":392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2319:2:4","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"src":"2299:22:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":425,"nodeType":"Block","src":"2793:108:4","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":414,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2823:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":413,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2815:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":412,"name":"address","nodeType":"ElementaryTypeName","src":"2815:7:4","typeDescriptions":{}}},"id":415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2815:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":416,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":362,"src":"2827:12:4","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$362_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":417,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2840:22:4","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":360,"src":"2827:35:4","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$362","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"expression":{"id":420,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":380,"src":"2872:9:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2882:6:4","memberName":"length","nodeType":"MemberAccess","src":"2872:16:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":419,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2864:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":418,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2864:7:4","typeDescriptions":{}}},"id":422,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2864:25:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":423,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2814:76:4","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$362_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":389,"id":424,"nodeType":"Return","src":"2807:83:4"}]},"id":426,"nodeType":"IfStatement","src":"2295:606:4","trueBody":{"id":411,"nodeType":"Block","src":"2323:464:4","statements":[{"assignments":[395],"declarations":[{"constant":false,"id":395,"mutability":"mutable","name":"r","nameLocation":"2345:1:4","nodeType":"VariableDeclaration","scope":411,"src":"2337:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":394,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2337:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":396,"nodeType":"VariableDeclarationStatement","src":"2337:9:4"},{"assignments":[398],"declarations":[{"constant":false,"id":398,"mutability":"mutable","name":"s","nameLocation":"2368:1:4","nodeType":"VariableDeclaration","scope":411,"src":"2360:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":397,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2360:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":399,"nodeType":"VariableDeclarationStatement","src":"2360:9:4"},{"assignments":[401],"declarations":[{"constant":false,"id":401,"mutability":"mutable","name":"v","nameLocation":"2389:1:4","nodeType":"VariableDeclaration","scope":411,"src":"2383:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":400,"name":"uint8","nodeType":"ElementaryTypeName","src":"2383:5:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":402,"nodeType":"VariableDeclarationStatement","src":"2383:7:4"},{"AST":{"nativeSrc":"2560:171:4","nodeType":"YulBlock","src":"2560:171:4","statements":[{"nativeSrc":"2578:32:4","nodeType":"YulAssignment","src":"2578:32:4","value":{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2593:9:4","nodeType":"YulIdentifier","src":"2593:9:4"},{"kind":"number","nativeSrc":"2604:4:4","nodeType":"YulLiteral","src":"2604:4:4","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2589:3:4","nodeType":"YulIdentifier","src":"2589:3:4"},"nativeSrc":"2589:20:4","nodeType":"YulFunctionCall","src":"2589:20:4"}],"functionName":{"name":"mload","nativeSrc":"2583:5:4","nodeType":"YulIdentifier","src":"2583:5:4"},"nativeSrc":"2583:27:4","nodeType":"YulFunctionCall","src":"2583:27:4"},"variableNames":[{"name":"r","nativeSrc":"2578:1:4","nodeType":"YulIdentifier","src":"2578:1:4"}]},{"nativeSrc":"2627:32:4","nodeType":"YulAssignment","src":"2627:32:4","value":{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2642:9:4","nodeType":"YulIdentifier","src":"2642:9:4"},{"kind":"number","nativeSrc":"2653:4:4","nodeType":"YulLiteral","src":"2653:4:4","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"2638:3:4","nodeType":"YulIdentifier","src":"2638:3:4"},"nativeSrc":"2638:20:4","nodeType":"YulFunctionCall","src":"2638:20:4"}],"functionName":{"name":"mload","nativeSrc":"2632:5:4","nodeType":"YulIdentifier","src":"2632:5:4"},"nativeSrc":"2632:27:4","nodeType":"YulFunctionCall","src":"2632:27:4"},"variableNames":[{"name":"s","nativeSrc":"2627:1:4","nodeType":"YulIdentifier","src":"2627:1:4"}]},{"nativeSrc":"2676:41:4","nodeType":"YulAssignment","src":"2676:41:4","value":{"arguments":[{"kind":"number","nativeSrc":"2686:1:4","nodeType":"YulLiteral","src":"2686:1:4","type":"","value":"0"},{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2699:9:4","nodeType":"YulIdentifier","src":"2699:9:4"},{"kind":"number","nativeSrc":"2710:4:4","nodeType":"YulLiteral","src":"2710:4:4","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"2695:3:4","nodeType":"YulIdentifier","src":"2695:3:4"},"nativeSrc":"2695:20:4","nodeType":"YulFunctionCall","src":"2695:20:4"}],"functionName":{"name":"mload","nativeSrc":"2689:5:4","nodeType":"YulIdentifier","src":"2689:5:4"},"nativeSrc":"2689:27:4","nodeType":"YulFunctionCall","src":"2689:27:4"}],"functionName":{"name":"byte","nativeSrc":"2681:4:4","nodeType":"YulIdentifier","src":"2681:4:4"},"nativeSrc":"2681:36:4","nodeType":"YulFunctionCall","src":"2681:36:4"},"variableNames":[{"name":"v","nativeSrc":"2676:1:4","nodeType":"YulIdentifier","src":"2676:1:4"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":395,"isOffset":false,"isSlot":false,"src":"2578:1:4","valueSize":1},{"declaration":398,"isOffset":false,"isSlot":false,"src":"2627:1:4","valueSize":1},{"declaration":380,"isOffset":false,"isSlot":false,"src":"2593:9:4","valueSize":1},{"declaration":380,"isOffset":false,"isSlot":false,"src":"2642:9:4","valueSize":1},{"declaration":380,"isOffset":false,"isSlot":false,"src":"2699:9:4","valueSize":1},{"declaration":401,"isOffset":false,"isSlot":false,"src":"2676:1:4","valueSize":1}],"flags":["memory-safe"],"id":403,"nodeType":"InlineAssembly","src":"2535:196:4"},{"expression":{"arguments":[{"id":405,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":378,"src":"2762:4:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":406,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":401,"src":"2768:1:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":407,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":395,"src":"2771:1:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":408,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":398,"src":"2774:1:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":404,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[428,508,616],"referencedDeclaration":616,"src":"2751:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$362_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":409,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2751:25:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$362_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":389,"id":410,"nodeType":"Return","src":"2744:32:4"}]}}]},"documentation":{"id":376,"nodeType":"StructuredDocumentation","src":"857:1267:4","text":" @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n return address(0) without also returning an error description. Errors are documented using an enum (error type)\n and a bytes32 providing additional information about the error.\n If no error is returned, then the address can be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]"},"id":428,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"2138:10:4","nodeType":"FunctionDefinition","parameters":{"id":381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":378,"mutability":"mutable","name":"hash","nameLocation":"2166:4:4","nodeType":"VariableDeclaration","scope":428,"src":"2158:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":377,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2158:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":380,"mutability":"mutable","name":"signature","nameLocation":"2193:9:4","nodeType":"VariableDeclaration","scope":428,"src":"2180:22:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":379,"name":"bytes","nodeType":"ElementaryTypeName","src":"2180:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2148:60:4"},"returnParameters":{"id":389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":383,"mutability":"mutable","name":"recovered","nameLocation":"2240:9:4","nodeType":"VariableDeclaration","scope":428,"src":"2232:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":382,"name":"address","nodeType":"ElementaryTypeName","src":"2232:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":386,"mutability":"mutable","name":"err","nameLocation":"2264:3:4","nodeType":"VariableDeclaration","scope":428,"src":"2251:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$362","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":385,"nodeType":"UserDefinedTypeName","pathNode":{"id":384,"name":"RecoverError","nameLocations":["2251:12:4"],"nodeType":"IdentifierPath","referencedDeclaration":362,"src":"2251:12:4"},"referencedDeclaration":362,"src":"2251:12:4","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$362","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":388,"mutability":"mutable","name":"errArg","nameLocation":"2277:6:4","nodeType":"VariableDeclaration","scope":428,"src":"2269:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":387,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2269:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2231:53:4"},"scope":702,"src":"2129:778:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":457,"nodeType":"Block","src":"3801:168:4","statements":[{"assignments":[439,442,444],"declarations":[{"constant":false,"id":439,"mutability":"mutable","name":"recovered","nameLocation":"3820:9:4","nodeType":"VariableDeclaration","scope":457,"src":"3812:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":438,"name":"address","nodeType":"ElementaryTypeName","src":"3812:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":442,"mutability":"mutable","name":"error","nameLocation":"3844:5:4","nodeType":"VariableDeclaration","scope":457,"src":"3831:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$362","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":441,"nodeType":"UserDefinedTypeName","pathNode":{"id":440,"name":"RecoverError","nameLocations":["3831:12:4"],"nodeType":"IdentifierPath","referencedDeclaration":362,"src":"3831:12:4"},"referencedDeclaration":362,"src":"3831:12:4","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$362","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":444,"mutability":"mutable","name":"errorArg","nameLocation":"3859:8:4","nodeType":"VariableDeclaration","scope":457,"src":"3851:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":443,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3851:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":449,"initialValue":{"arguments":[{"id":446,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":431,"src":"3882:4:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":447,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":433,"src":"3888:9:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":445,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[428,508,616],"referencedDeclaration":428,"src":"3871:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$362_$_t_bytes32_$","typeString":"function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":448,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3871:27:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$362_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"3811:87:4"},{"expression":{"arguments":[{"id":451,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":442,"src":"3920:5:4","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$362","typeString":"enum ECDSA.RecoverError"}},{"id":452,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":444,"src":"3927:8:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$362","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":450,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":701,"src":"3908:11:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$362_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":453,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3908:28:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":454,"nodeType":"ExpressionStatement","src":"3908:28:4"},{"expression":{"id":455,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":439,"src":"3953:9:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":437,"id":456,"nodeType":"Return","src":"3946:16:4"}]},"documentation":{"id":429,"nodeType":"StructuredDocumentation","src":"2913:796:4","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it."},"id":458,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"3723:7:4","nodeType":"FunctionDefinition","parameters":{"id":434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":431,"mutability":"mutable","name":"hash","nameLocation":"3739:4:4","nodeType":"VariableDeclaration","scope":458,"src":"3731:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":430,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3731:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":433,"mutability":"mutable","name":"signature","nameLocation":"3758:9:4","nodeType":"VariableDeclaration","scope":458,"src":"3745:22:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":432,"name":"bytes","nodeType":"ElementaryTypeName","src":"3745:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3730:38:4"},"returnParameters":{"id":437,"nodeType":"ParameterList","parameters":[{"constant":false,"id":436,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":458,"src":"3792:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":435,"name":"address","nodeType":"ElementaryTypeName","src":"3792:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3791:9:4"},"scope":702,"src":"3714:255:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":507,"nodeType":"Block","src":"4348:342:4","statements":[{"id":506,"nodeType":"UncheckedBlock","src":"4358:326:4","statements":[{"assignments":[476],"declarations":[{"constant":false,"id":476,"mutability":"mutable","name":"s","nameLocation":"4390:1:4","nodeType":"VariableDeclaration","scope":506,"src":"4382:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":475,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4382:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":483,"initialValue":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":477,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":465,"src":"4394:2:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"arguments":[{"hexValue":"307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666","id":480,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4407:66:4","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"},"value":"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"}],"id":479,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4399:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":478,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4399:7:4","typeDescriptions":{}}},"id":481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4399:75:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4394:80:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4382:92:4"},{"assignments":[485],"declarations":[{"constant":false,"id":485,"mutability":"mutable","name":"v","nameLocation":"4591:1:4","nodeType":"VariableDeclaration","scope":506,"src":"4585:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":484,"name":"uint8","nodeType":"ElementaryTypeName","src":"4585:5:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":498,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":490,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":465,"src":"4610:2:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":489,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4602:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":488,"name":"uint256","nodeType":"ElementaryTypeName","src":"4602:7:4","typeDescriptions":{}}},"id":491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4602:11:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":492,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4617:3:4","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"4602:18:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":494,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4601:20:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3237","id":495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4624:2:4","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"4601:25:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":487,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4595:5:4","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":486,"name":"uint8","nodeType":"ElementaryTypeName","src":"4595:5:4","typeDescriptions":{}}},"id":497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4595:32:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"4585:42:4"},{"expression":{"arguments":[{"id":500,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":461,"src":"4659:4:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":501,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":485,"src":"4665:1:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":502,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":463,"src":"4668:1:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":503,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":476,"src":"4671:1:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":499,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[428,508,616],"referencedDeclaration":616,"src":"4648:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$362_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":504,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4648:25:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$362_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":474,"id":505,"nodeType":"Return","src":"4641:32:4"}]}]},"documentation":{"id":459,"nodeType":"StructuredDocumentation","src":"3975:205:4","text":" @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]"},"id":508,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"4194:10:4","nodeType":"FunctionDefinition","parameters":{"id":466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":461,"mutability":"mutable","name":"hash","nameLocation":"4222:4:4","nodeType":"VariableDeclaration","scope":508,"src":"4214:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":460,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4214:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":463,"mutability":"mutable","name":"r","nameLocation":"4244:1:4","nodeType":"VariableDeclaration","scope":508,"src":"4236:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":462,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4236:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":465,"mutability":"mutable","name":"vs","nameLocation":"4263:2:4","nodeType":"VariableDeclaration","scope":508,"src":"4255:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":464,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4255:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4204:67:4"},"returnParameters":{"id":474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":468,"mutability":"mutable","name":"recovered","nameLocation":"4303:9:4","nodeType":"VariableDeclaration","scope":508,"src":"4295:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":467,"name":"address","nodeType":"ElementaryTypeName","src":"4295:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":471,"mutability":"mutable","name":"err","nameLocation":"4327:3:4","nodeType":"VariableDeclaration","scope":508,"src":"4314:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$362","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":470,"nodeType":"UserDefinedTypeName","pathNode":{"id":469,"name":"RecoverError","nameLocations":["4314:12:4"],"nodeType":"IdentifierPath","referencedDeclaration":362,"src":"4314:12:4"},"referencedDeclaration":362,"src":"4314:12:4","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$362","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":473,"mutability":"mutable","name":"errArg","nameLocation":"4340:6:4","nodeType":"VariableDeclaration","scope":508,"src":"4332:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":472,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4332:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4294:53:4"},"scope":702,"src":"4185:505:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":540,"nodeType":"Block","src":"4903:164:4","statements":[{"assignments":[521,524,526],"declarations":[{"constant":false,"id":521,"mutability":"mutable","name":"recovered","nameLocation":"4922:9:4","nodeType":"VariableDeclaration","scope":540,"src":"4914:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":520,"name":"address","nodeType":"ElementaryTypeName","src":"4914:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":524,"mutability":"mutable","name":"error","nameLocation":"4946:5:4","nodeType":"VariableDeclaration","scope":540,"src":"4933:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$362","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":523,"nodeType":"UserDefinedTypeName","pathNode":{"id":522,"name":"RecoverError","nameLocations":["4933:12:4"],"nodeType":"IdentifierPath","referencedDeclaration":362,"src":"4933:12:4"},"referencedDeclaration":362,"src":"4933:12:4","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$362","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":526,"mutability":"mutable","name":"errorArg","nameLocation":"4961:8:4","nodeType":"VariableDeclaration","scope":540,"src":"4953:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":525,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4953:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":532,"initialValue":{"arguments":[{"id":528,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":511,"src":"4984:4:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":529,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":513,"src":"4990:1:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":530,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":515,"src":"4993:2:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":527,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[428,508,616],"referencedDeclaration":508,"src":"4973:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$362_$_t_bytes32_$","typeString":"function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":531,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4973:23:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$362_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"4913:83:4"},{"expression":{"arguments":[{"id":534,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":524,"src":"5018:5:4","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$362","typeString":"enum ECDSA.RecoverError"}},{"id":535,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":526,"src":"5025:8:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$362","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":533,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":701,"src":"5006:11:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$362_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":536,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5006:28:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":537,"nodeType":"ExpressionStatement","src":"5006:28:4"},{"expression":{"id":538,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":521,"src":"5051:9:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":519,"id":539,"nodeType":"Return","src":"5044:16:4"}]},"documentation":{"id":509,"nodeType":"StructuredDocumentation","src":"4696:116:4","text":" @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately."},"id":541,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"4826:7:4","nodeType":"FunctionDefinition","parameters":{"id":516,"nodeType":"ParameterList","parameters":[{"constant":false,"id":511,"mutability":"mutable","name":"hash","nameLocation":"4842:4:4","nodeType":"VariableDeclaration","scope":541,"src":"4834:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":510,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4834:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":513,"mutability":"mutable","name":"r","nameLocation":"4856:1:4","nodeType":"VariableDeclaration","scope":541,"src":"4848:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":512,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4848:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":515,"mutability":"mutable","name":"vs","nameLocation":"4867:2:4","nodeType":"VariableDeclaration","scope":541,"src":"4859:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":514,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4859:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4833:37:4"},"returnParameters":{"id":519,"nodeType":"ParameterList","parameters":[{"constant":false,"id":518,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":541,"src":"4894:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":517,"name":"address","nodeType":"ElementaryTypeName","src":"4894:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4893:9:4"},"scope":702,"src":"4817:250:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":615,"nodeType":"Block","src":"5382:1372:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":562,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":550,"src":"6278:1:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":561,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6270:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":560,"name":"uint256","nodeType":"ElementaryTypeName","src":"6270:7:4","typeDescriptions":{}}},"id":563,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6270:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130","id":564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6283:66:4","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1","typeString":"int_const 5789...(69 digits omitted)...7168"},"value":"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"},"src":"6270:79:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":576,"nodeType":"IfStatement","src":"6266:164:4","trueBody":{"id":575,"nodeType":"Block","src":"6351:79:4","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6381:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":567,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6373:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":566,"name":"address","nodeType":"ElementaryTypeName","src":"6373:7:4","typeDescriptions":{}}},"id":569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6373:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":570,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":362,"src":"6385:12:4","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$362_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":571,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6398:17:4","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":361,"src":"6385:30:4","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$362","typeString":"enum ECDSA.RecoverError"}},{"id":572,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":550,"src":"6417:1:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":573,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6372:47:4","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$362_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":559,"id":574,"nodeType":"Return","src":"6365:54:4"}]}},{"assignments":[578],"declarations":[{"constant":false,"id":578,"mutability":"mutable","name":"signer","nameLocation":"6532:6:4","nodeType":"VariableDeclaration","scope":615,"src":"6524:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":577,"name":"address","nodeType":"ElementaryTypeName","src":"6524:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":585,"initialValue":{"arguments":[{"id":580,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":544,"src":"6551:4:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":581,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":546,"src":"6557:1:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":582,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":548,"src":"6560:1:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":583,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":550,"src":"6563:1:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":579,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"6541:9:4","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":584,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6541:24:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6524:41:4"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":586,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":578,"src":"6579:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":589,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6597:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":588,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6589:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":587,"name":"address","nodeType":"ElementaryTypeName","src":"6589:7:4","typeDescriptions":{}}},"id":590,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6589:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6579:20:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":605,"nodeType":"IfStatement","src":"6575:113:4","trueBody":{"id":604,"nodeType":"Block","src":"6601:87:4","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6631:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":593,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6623:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":592,"name":"address","nodeType":"ElementaryTypeName","src":"6623:7:4","typeDescriptions":{}}},"id":595,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6623:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":596,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":362,"src":"6635:12:4","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$362_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":597,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6648:16:4","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":359,"src":"6635:29:4","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$362","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":600,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6674:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":599,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6666:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":598,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6666:7:4","typeDescriptions":{}}},"id":601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6666:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":602,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6622:55:4","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$362_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":559,"id":603,"nodeType":"Return","src":"6615:62:4"}]}},{"expression":{"components":[{"id":606,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":578,"src":"6706:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":607,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":362,"src":"6714:12:4","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$362_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":608,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6727:7:4","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":358,"src":"6714:20:4","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$362","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6744:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":610,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6736:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":609,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6736:7:4","typeDescriptions":{}}},"id":612,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6736:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":613,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6705:42:4","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$362_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":559,"id":614,"nodeType":"Return","src":"6698:49:4"}]},"documentation":{"id":542,"nodeType":"StructuredDocumentation","src":"5073:125:4","text":" @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":616,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"5212:10:4","nodeType":"FunctionDefinition","parameters":{"id":551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":544,"mutability":"mutable","name":"hash","nameLocation":"5240:4:4","nodeType":"VariableDeclaration","scope":616,"src":"5232:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":543,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5232:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":546,"mutability":"mutable","name":"v","nameLocation":"5260:1:4","nodeType":"VariableDeclaration","scope":616,"src":"5254:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":545,"name":"uint8","nodeType":"ElementaryTypeName","src":"5254:5:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":548,"mutability":"mutable","name":"r","nameLocation":"5279:1:4","nodeType":"VariableDeclaration","scope":616,"src":"5271:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":547,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5271:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":550,"mutability":"mutable","name":"s","nameLocation":"5298:1:4","nodeType":"VariableDeclaration","scope":616,"src":"5290:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":549,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5290:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5222:83:4"},"returnParameters":{"id":559,"nodeType":"ParameterList","parameters":[{"constant":false,"id":553,"mutability":"mutable","name":"recovered","nameLocation":"5337:9:4","nodeType":"VariableDeclaration","scope":616,"src":"5329:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":552,"name":"address","nodeType":"ElementaryTypeName","src":"5329:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":556,"mutability":"mutable","name":"err","nameLocation":"5361:3:4","nodeType":"VariableDeclaration","scope":616,"src":"5348:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$362","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":555,"nodeType":"UserDefinedTypeName","pathNode":{"id":554,"name":"RecoverError","nameLocations":["5348:12:4"],"nodeType":"IdentifierPath","referencedDeclaration":362,"src":"5348:12:4"},"referencedDeclaration":362,"src":"5348:12:4","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$362","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":558,"mutability":"mutable","name":"errArg","nameLocation":"5374:6:4","nodeType":"VariableDeclaration","scope":616,"src":"5366:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":557,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5366:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5328:53:4"},"scope":702,"src":"5203:1551:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":651,"nodeType":"Block","src":"6981:166:4","statements":[{"assignments":[631,634,636],"declarations":[{"constant":false,"id":631,"mutability":"mutable","name":"recovered","nameLocation":"7000:9:4","nodeType":"VariableDeclaration","scope":651,"src":"6992:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":630,"name":"address","nodeType":"ElementaryTypeName","src":"6992:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":634,"mutability":"mutable","name":"error","nameLocation":"7024:5:4","nodeType":"VariableDeclaration","scope":651,"src":"7011:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$362","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":633,"nodeType":"UserDefinedTypeName","pathNode":{"id":632,"name":"RecoverError","nameLocations":["7011:12:4"],"nodeType":"IdentifierPath","referencedDeclaration":362,"src":"7011:12:4"},"referencedDeclaration":362,"src":"7011:12:4","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$362","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":636,"mutability":"mutable","name":"errorArg","nameLocation":"7039:8:4","nodeType":"VariableDeclaration","scope":651,"src":"7031:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":635,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7031:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":643,"initialValue":{"arguments":[{"id":638,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":619,"src":"7062:4:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":639,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":621,"src":"7068:1:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":640,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":623,"src":"7071:1:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":641,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":625,"src":"7074:1:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":637,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[428,508,616],"referencedDeclaration":616,"src":"7051:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$362_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":642,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7051:25:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$362_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"6991:85:4"},{"expression":{"arguments":[{"id":645,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":634,"src":"7098:5:4","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$362","typeString":"enum ECDSA.RecoverError"}},{"id":646,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":636,"src":"7105:8:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$362","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":644,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":701,"src":"7086:11:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$362_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":647,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7086:28:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":648,"nodeType":"ExpressionStatement","src":"7086:28:4"},{"expression":{"id":649,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"7131:9:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":629,"id":650,"nodeType":"Return","src":"7124:16:4"}]},"documentation":{"id":617,"nodeType":"StructuredDocumentation","src":"6760:122:4","text":" @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":652,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"6896:7:4","nodeType":"FunctionDefinition","parameters":{"id":626,"nodeType":"ParameterList","parameters":[{"constant":false,"id":619,"mutability":"mutable","name":"hash","nameLocation":"6912:4:4","nodeType":"VariableDeclaration","scope":652,"src":"6904:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":618,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6904:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":621,"mutability":"mutable","name":"v","nameLocation":"6924:1:4","nodeType":"VariableDeclaration","scope":652,"src":"6918:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":620,"name":"uint8","nodeType":"ElementaryTypeName","src":"6918:5:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":623,"mutability":"mutable","name":"r","nameLocation":"6935:1:4","nodeType":"VariableDeclaration","scope":652,"src":"6927:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":622,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6927:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":625,"mutability":"mutable","name":"s","nameLocation":"6946:1:4","nodeType":"VariableDeclaration","scope":652,"src":"6938:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":624,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6938:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6903:45:4"},"returnParameters":{"id":629,"nodeType":"ParameterList","parameters":[{"constant":false,"id":628,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":652,"src":"6972:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":627,"name":"address","nodeType":"ElementaryTypeName","src":"6972:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6971:9:4"},"scope":702,"src":"6887:260:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":700,"nodeType":"Block","src":"7352:460:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$362","typeString":"enum ECDSA.RecoverError"},"id":664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":661,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":656,"src":"7366:5:4","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$362","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":662,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":362,"src":"7375:12:4","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$362_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":663,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7388:7:4","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":358,"src":"7375:20:4","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$362","typeString":"enum ECDSA.RecoverError"}},"src":"7366:29:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$362","typeString":"enum ECDSA.RecoverError"},"id":670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":667,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":656,"src":"7462:5:4","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$362","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":668,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":362,"src":"7471:12:4","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$362_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":669,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7484:16:4","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":359,"src":"7471:29:4","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$362","typeString":"enum ECDSA.RecoverError"}},"src":"7462:38:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$362","typeString":"enum ECDSA.RecoverError"},"id":678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":675,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":656,"src":"7567:5:4","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$362","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":676,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":362,"src":"7576:12:4","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$362_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":677,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7589:22:4","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":360,"src":"7576:35:4","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$362","typeString":"enum ECDSA.RecoverError"}},"src":"7567:44:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$362","typeString":"enum ECDSA.RecoverError"},"id":690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":687,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":656,"src":"7701:5:4","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$362","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":688,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":362,"src":"7710:12:4","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$362_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":689,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7723:17:4","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":361,"src":"7710:30:4","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$362","typeString":"enum ECDSA.RecoverError"}},"src":"7701:39:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":696,"nodeType":"IfStatement","src":"7697:109:4","trueBody":{"id":695,"nodeType":"Block","src":"7742:64:4","statements":[{"errorCall":{"arguments":[{"id":692,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":658,"src":"7786:8:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":691,"name":"ECDSAInvalidSignatureS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":375,"src":"7763:22:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$_t_error_$","typeString":"function (bytes32) pure returns (error)"}},"id":693,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7763:32:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":694,"nodeType":"RevertStatement","src":"7756:39:4"}]}},"id":697,"nodeType":"IfStatement","src":"7563:243:4","trueBody":{"id":686,"nodeType":"Block","src":"7613:78:4","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":682,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":658,"src":"7670:8:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":681,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7662:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":680,"name":"uint256","nodeType":"ElementaryTypeName","src":"7662:7:4","typeDescriptions":{}}},"id":683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7662:17:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":679,"name":"ECDSAInvalidSignatureLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":370,"src":"7634:27:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$_t_error_$","typeString":"function (uint256) pure returns (error)"}},"id":684,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7634:46:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":685,"nodeType":"RevertStatement","src":"7627:53:4"}]}},"id":698,"nodeType":"IfStatement","src":"7458:348:4","trueBody":{"id":674,"nodeType":"Block","src":"7502:55:4","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":671,"name":"ECDSAInvalidSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":365,"src":"7523:21:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":672,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7523:23:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":673,"nodeType":"RevertStatement","src":"7516:30:4"}]}},"id":699,"nodeType":"IfStatement","src":"7362:444:4","trueBody":{"id":666,"nodeType":"Block","src":"7397:55:4","statements":[{"functionReturnParameters":660,"id":665,"nodeType":"Return","src":"7411:7:4"}]}}]},"documentation":{"id":653,"nodeType":"StructuredDocumentation","src":"7153:122:4","text":" @dev Optionally reverts with the corresponding custom error according to the `error` argument provided."},"id":701,"implemented":true,"kind":"function","modifiers":[],"name":"_throwError","nameLocation":"7289:11:4","nodeType":"FunctionDefinition","parameters":{"id":659,"nodeType":"ParameterList","parameters":[{"constant":false,"id":656,"mutability":"mutable","name":"error","nameLocation":"7314:5:4","nodeType":"VariableDeclaration","scope":701,"src":"7301:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$362","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":655,"nodeType":"UserDefinedTypeName","pathNode":{"id":654,"name":"RecoverError","nameLocations":["7301:12:4"],"nodeType":"IdentifierPath","referencedDeclaration":362,"src":"7301:12:4"},"referencedDeclaration":362,"src":"7301:12:4","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$362","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":658,"mutability":"mutable","name":"errorArg","nameLocation":"7329:8:4","nodeType":"VariableDeclaration","scope":701,"src":"7321:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":657,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7321:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7300:38:4"},"returnParameters":{"id":660,"nodeType":"ParameterList","parameters":[],"src":"7352:0:4"},"scope":702,"src":"7280:532:4","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":703,"src":"344:7470:4","usedErrors":[365,370,375],"usedEvents":[]}],"src":"112:7703:4"},"id":4},"@openzeppelin/contracts/utils/cryptography/Hashes.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/Hashes.sol","exportedSymbols":{"Hashes":[742]},"id":743,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":704,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"113:24:5"},{"abstract":false,"baseContracts":[],"canonicalName":"Hashes","contractDependencies":[],"contractKind":"library","documentation":{"id":705,"nodeType":"StructuredDocumentation","src":"139:81:5","text":" @dev Library of standard hash functions.\n _Available since v5.1._"},"fullyImplemented":true,"id":742,"linearizedBaseContracts":[742],"name":"Hashes","nameLocation":"229:6:5","nodeType":"ContractDefinition","nodes":[{"body":{"id":728,"nodeType":"Block","src":"588:83:5","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":715,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":708,"src":"605:1:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":716,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":710,"src":"609:1:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"605:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":723,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":710,"src":"659:1:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":724,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":708,"src":"662:1:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":722,"name":"efficientKeccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":741,"src":"640:18:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":725,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"640:24:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"605:59:5","trueExpression":{"arguments":[{"id":719,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":708,"src":"632:1:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":720,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":710,"src":"635:1:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":718,"name":"efficientKeccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":741,"src":"613:18:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"613:24:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":714,"id":727,"nodeType":"Return","src":"598:66:5"}]},"documentation":{"id":706,"nodeType":"StructuredDocumentation","src":"242:257:5","text":" @dev Commutative Keccak256 hash of a sorted pair of bytes32. Frequently used when working with merkle proofs.\n NOTE: Equivalent to the `standardNodeHash` in our https://github.com/OpenZeppelin/merkle-tree[JavaScript library]."},"id":729,"implemented":true,"kind":"function","modifiers":[],"name":"commutativeKeccak256","nameLocation":"513:20:5","nodeType":"FunctionDefinition","parameters":{"id":711,"nodeType":"ParameterList","parameters":[{"constant":false,"id":708,"mutability":"mutable","name":"a","nameLocation":"542:1:5","nodeType":"VariableDeclaration","scope":729,"src":"534:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":707,"name":"bytes32","nodeType":"ElementaryTypeName","src":"534:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":710,"mutability":"mutable","name":"b","nameLocation":"553:1:5","nodeType":"VariableDeclaration","scope":729,"src":"545:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":709,"name":"bytes32","nodeType":"ElementaryTypeName","src":"545:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"533:22:5"},"returnParameters":{"id":714,"nodeType":"ParameterList","parameters":[{"constant":false,"id":713,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":729,"src":"579:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":712,"name":"bytes32","nodeType":"ElementaryTypeName","src":"579:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"578:9:5"},"scope":742,"src":"504:167:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":740,"nodeType":"Block","src":"879:151:5","statements":[{"AST":{"nativeSrc":"914:110:5","nodeType":"YulBlock","src":"914:110:5","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"935:4:5","nodeType":"YulLiteral","src":"935:4:5","type":"","value":"0x00"},{"name":"a","nativeSrc":"941:1:5","nodeType":"YulIdentifier","src":"941:1:5"}],"functionName":{"name":"mstore","nativeSrc":"928:6:5","nodeType":"YulIdentifier","src":"928:6:5"},"nativeSrc":"928:15:5","nodeType":"YulFunctionCall","src":"928:15:5"},"nativeSrc":"928:15:5","nodeType":"YulExpressionStatement","src":"928:15:5"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"963:4:5","nodeType":"YulLiteral","src":"963:4:5","type":"","value":"0x20"},{"name":"b","nativeSrc":"969:1:5","nodeType":"YulIdentifier","src":"969:1:5"}],"functionName":{"name":"mstore","nativeSrc":"956:6:5","nodeType":"YulIdentifier","src":"956:6:5"},"nativeSrc":"956:15:5","nodeType":"YulFunctionCall","src":"956:15:5"},"nativeSrc":"956:15:5","nodeType":"YulExpressionStatement","src":"956:15:5"},{"nativeSrc":"984:30:5","nodeType":"YulAssignment","src":"984:30:5","value":{"arguments":[{"kind":"number","nativeSrc":"1003:4:5","nodeType":"YulLiteral","src":"1003:4:5","type":"","value":"0x00"},{"kind":"number","nativeSrc":"1009:4:5","nodeType":"YulLiteral","src":"1009:4:5","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nativeSrc":"993:9:5","nodeType":"YulIdentifier","src":"993:9:5"},"nativeSrc":"993:21:5","nodeType":"YulFunctionCall","src":"993:21:5"},"variableNames":[{"name":"value","nativeSrc":"984:5:5","nodeType":"YulIdentifier","src":"984:5:5"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":732,"isOffset":false,"isSlot":false,"src":"941:1:5","valueSize":1},{"declaration":734,"isOffset":false,"isSlot":false,"src":"969:1:5","valueSize":1},{"declaration":737,"isOffset":false,"isSlot":false,"src":"984:5:5","valueSize":1}],"flags":["memory-safe"],"id":739,"nodeType":"InlineAssembly","src":"889:135:5"}]},"documentation":{"id":730,"nodeType":"StructuredDocumentation","src":"677:109:5","text":" @dev Implementation of keccak256(abi.encode(a, b)) that doesn't allocate or expand memory."},"id":741,"implemented":true,"kind":"function","modifiers":[],"name":"efficientKeccak256","nameLocation":"800:18:5","nodeType":"FunctionDefinition","parameters":{"id":735,"nodeType":"ParameterList","parameters":[{"constant":false,"id":732,"mutability":"mutable","name":"a","nameLocation":"827:1:5","nodeType":"VariableDeclaration","scope":741,"src":"819:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":731,"name":"bytes32","nodeType":"ElementaryTypeName","src":"819:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":734,"mutability":"mutable","name":"b","nameLocation":"838:1:5","nodeType":"VariableDeclaration","scope":741,"src":"830:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":733,"name":"bytes32","nodeType":"ElementaryTypeName","src":"830:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"818:22:5"},"returnParameters":{"id":738,"nodeType":"ParameterList","parameters":[{"constant":false,"id":737,"mutability":"mutable","name":"value","nameLocation":"872:5:5","nodeType":"VariableDeclaration","scope":741,"src":"864:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":736,"name":"bytes32","nodeType":"ElementaryTypeName","src":"864:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"863:15:5"},"scope":742,"src":"791:239:5","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":743,"src":"221:811:5","usedErrors":[],"usedEvents":[]}],"src":"113:920:5"},"id":5},"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol","exportedSymbols":{"Hashes":[742],"MerkleProof":[1815]},"id":1816,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":744,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"206:24:6"},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/Hashes.sol","file":"./Hashes.sol","id":746,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1816,"sourceUnit":743,"src":"232:36:6","symbolAliases":[{"foreign":{"id":745,"name":"Hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":742,"src":"240:6:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"MerkleProof","contractDependencies":[],"contractKind":"library","documentation":{"id":747,"nodeType":"StructuredDocumentation","src":"270:1082:6","text":" @dev These functions deal with verification of Merkle Tree proofs.\n The tree and the proofs can be generated using our\n https://github.com/OpenZeppelin/merkle-tree[JavaScript library].\n You will find a quickstart guide in the readme.\n WARNING: You should avoid using leaf values that are 64 bytes long prior to\n hashing, or use a hash function other than keccak256 for hashing leaves.\n This is because the concatenation of a sorted pair of internal nodes in\n the Merkle tree could be reinterpreted as a leaf value.\n OpenZeppelin's JavaScript library generates Merkle trees that are safe\n against this attack out of the box.\n IMPORTANT: Consider memory side-effects when using custom hashing functions\n that access memory in an unsafe way.\n NOTE: This library supports proof verification for merkle trees built using\n custom _commutative_ hashing functions (i.e. `H(a, b) == H(b, a)`). Proving\n leaf inclusion in trees built using non-commutative hashing functions requires\n additional logic that is not supported by this library."},"fullyImplemented":true,"id":1815,"linearizedBaseContracts":[1815],"name":"MerkleProof","nameLocation":"1361:11:6","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":748,"nodeType":"StructuredDocumentation","src":"1379:60:6","text":"@dev The multiproof provided is not valid."},"errorSelector":"35140492","id":750,"name":"MerkleProofInvalidMultiproof","nameLocation":"1450:28:6","nodeType":"ErrorDefinition","parameters":{"id":749,"nodeType":"ParameterList","parameters":[],"src":"1478:2:6"},"src":"1444:37:6"},{"body":{"id":770,"nodeType":"Block","src":"1999:57:6","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":764,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":754,"src":"2029:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},{"id":765,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":758,"src":"2036:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":763,"name":"processProof","nodeType":"Identifier","overloadedDeclarations":[812,894],"referencedDeclaration":812,"src":"2016:12:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32[] memory,bytes32) pure returns (bytes32)"}},"id":766,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2016:25:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":767,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":756,"src":"2045:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2016:33:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":762,"id":769,"nodeType":"Return","src":"2009:40:6"}]},"documentation":{"id":751,"nodeType":"StructuredDocumentation","src":"1487:410:6","text":" @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\n defined by `root`. For this, a `proof` must be provided, containing\n sibling hashes on the branch from the leaf to the root of the tree. Each\n pair of leaves and each pair of pre-images are assumed to be sorted.\n This version handles proofs in memory with the default hashing function."},"id":771,"implemented":true,"kind":"function","modifiers":[],"name":"verify","nameLocation":"1911:6:6","nodeType":"FunctionDefinition","parameters":{"id":759,"nodeType":"ParameterList","parameters":[{"constant":false,"id":754,"mutability":"mutable","name":"proof","nameLocation":"1935:5:6","nodeType":"VariableDeclaration","scope":771,"src":"1918:22:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":752,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1918:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":753,"nodeType":"ArrayTypeName","src":"1918:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":756,"mutability":"mutable","name":"root","nameLocation":"1950:4:6","nodeType":"VariableDeclaration","scope":771,"src":"1942:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":755,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1942:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":758,"mutability":"mutable","name":"leaf","nameLocation":"1964:4:6","nodeType":"VariableDeclaration","scope":771,"src":"1956:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":757,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1956:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1917:52:6"},"returnParameters":{"id":762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":761,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":771,"src":"1993:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":760,"name":"bool","nodeType":"ElementaryTypeName","src":"1993:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1992:6:6"},"scope":1815,"src":"1902:154:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":811,"nodeType":"Block","src":"2549:216:6","statements":[{"assignments":[783],"declarations":[{"constant":false,"id":783,"mutability":"mutable","name":"computedHash","nameLocation":"2567:12:6","nodeType":"VariableDeclaration","scope":811,"src":"2559:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":782,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2559:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":785,"initialValue":{"id":784,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":777,"src":"2582:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2559:27:6"},{"body":{"id":807,"nodeType":"Block","src":"2639:91:6","statements":[{"expression":{"id":805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":797,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":783,"src":"2653:12:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":800,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":783,"src":"2696:12:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"baseExpression":{"id":801,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":775,"src":"2710:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":803,"indexExpression":{"id":802,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":787,"src":"2716:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2710:8:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":798,"name":"Hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":742,"src":"2668:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Hashes_$742_$","typeString":"type(library Hashes)"}},"id":799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2675:20:6","memberName":"commutativeKeccak256","nodeType":"MemberAccess","referencedDeclaration":729,"src":"2668:27:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":804,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2668:51:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2653:66:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":806,"nodeType":"ExpressionStatement","src":"2653:66:6"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":790,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":787,"src":"2616:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":791,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":775,"src":"2620:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2626:6:6","memberName":"length","nodeType":"MemberAccess","src":"2620:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2616:16:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":808,"initializationExpression":{"assignments":[787],"declarations":[{"constant":false,"id":787,"mutability":"mutable","name":"i","nameLocation":"2609:1:6","nodeType":"VariableDeclaration","scope":808,"src":"2601:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":786,"name":"uint256","nodeType":"ElementaryTypeName","src":"2601:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":789,"initialValue":{"hexValue":"30","id":788,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2613:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2601:13:6"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2634:3:6","subExpression":{"id":794,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":787,"src":"2634:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":796,"nodeType":"ExpressionStatement","src":"2634:3:6"},"nodeType":"ForStatement","src":"2596:134:6"},{"expression":{"id":809,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":783,"src":"2746:12:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":781,"id":810,"nodeType":"Return","src":"2739:19:6"}]},"documentation":{"id":772,"nodeType":"StructuredDocumentation","src":"2062:390:6","text":" @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\n from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\n hash matches the root of the tree. When processing the proof, the pairs\n of leaves & pre-images are assumed to be sorted.\n This version handles proofs in memory with the default hashing function."},"id":812,"implemented":true,"kind":"function","modifiers":[],"name":"processProof","nameLocation":"2466:12:6","nodeType":"FunctionDefinition","parameters":{"id":778,"nodeType":"ParameterList","parameters":[{"constant":false,"id":775,"mutability":"mutable","name":"proof","nameLocation":"2496:5:6","nodeType":"VariableDeclaration","scope":812,"src":"2479:22:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":773,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2479:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":774,"nodeType":"ArrayTypeName","src":"2479:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":777,"mutability":"mutable","name":"leaf","nameLocation":"2511:4:6","nodeType":"VariableDeclaration","scope":812,"src":"2503:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":776,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2503:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2478:38:6"},"returnParameters":{"id":781,"nodeType":"ParameterList","parameters":[{"constant":false,"id":780,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":812,"src":"2540:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":779,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2540:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2539:9:6"},"scope":1815,"src":"2457:308:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":843,"nodeType":"Block","src":"3376:65:6","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":836,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":816,"src":"3406:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},{"id":837,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":820,"src":"3413:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":838,"name":"hasher","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":830,"src":"3419:6:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"}],"id":835,"name":"processProof","nodeType":"Identifier","overloadedDeclarations":[812,894],"referencedDeclaration":894,"src":"3393:12:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$_t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$_$returns$_t_bytes32_$","typeString":"function (bytes32[] memory,bytes32,function (bytes32,bytes32) view returns (bytes32)) view returns (bytes32)"}},"id":839,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3393:33:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":840,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":818,"src":"3430:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3393:41:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":834,"id":842,"nodeType":"Return","src":"3386:48:6"}]},"documentation":{"id":813,"nodeType":"StructuredDocumentation","src":"2771:407:6","text":" @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\n defined by `root`. For this, a `proof` must be provided, containing\n sibling hashes on the branch from the leaf to the root of the tree. Each\n pair of leaves and each pair of pre-images are assumed to be sorted.\n This version handles proofs in memory with a custom hashing function."},"id":844,"implemented":true,"kind":"function","modifiers":[],"name":"verify","nameLocation":"3192:6:6","nodeType":"FunctionDefinition","parameters":{"id":831,"nodeType":"ParameterList","parameters":[{"constant":false,"id":816,"mutability":"mutable","name":"proof","nameLocation":"3225:5:6","nodeType":"VariableDeclaration","scope":844,"src":"3208:22:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":814,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3208:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":815,"nodeType":"ArrayTypeName","src":"3208:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":818,"mutability":"mutable","name":"root","nameLocation":"3248:4:6","nodeType":"VariableDeclaration","scope":844,"src":"3240:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":817,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3240:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":820,"mutability":"mutable","name":"leaf","nameLocation":"3270:4:6","nodeType":"VariableDeclaration","scope":844,"src":"3262:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":819,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3262:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":830,"mutability":"mutable","name":"hasher","nameLocation":"3334:6:6","nodeType":"VariableDeclaration","scope":844,"src":"3284:56:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"typeName":{"id":829,"nodeType":"FunctionTypeName","parameterTypes":{"id":825,"nodeType":"ParameterList","parameters":[{"constant":false,"id":822,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":829,"src":"3293:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":821,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3293:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":824,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":829,"src":"3302:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":823,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3302:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3292:18:6"},"returnParameterTypes":{"id":828,"nodeType":"ParameterList","parameters":[{"constant":false,"id":827,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":829,"src":"3325:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":826,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3325:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3324:9:6"},"src":"3284:56:6","stateMutability":"view","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"visibility":"internal"},"visibility":"internal"}],"src":"3198:148:6"},"returnParameters":{"id":834,"nodeType":"ParameterList","parameters":[{"constant":false,"id":833,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":844,"src":"3370:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":832,"name":"bool","nodeType":"ElementaryTypeName","src":"3370:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3369:6:6"},"scope":1815,"src":"3183:258:6","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":893,"nodeType":"Block","src":"4019:195:6","statements":[{"assignments":[866],"declarations":[{"constant":false,"id":866,"mutability":"mutable","name":"computedHash","nameLocation":"4037:12:6","nodeType":"VariableDeclaration","scope":893,"src":"4029:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":865,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4029:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":868,"initialValue":{"id":867,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":850,"src":"4052:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4029:27:6"},{"body":{"id":889,"nodeType":"Block","src":"4109:70:6","statements":[{"expression":{"id":887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":880,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":866,"src":"4123:12:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":882,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":866,"src":"4145:12:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"baseExpression":{"id":883,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":848,"src":"4159:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":885,"indexExpression":{"id":884,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":870,"src":"4165:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4159:8:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":881,"name":"hasher","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":860,"src":"4138:6:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"}},"id":886,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4138:30:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4123:45:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":888,"nodeType":"ExpressionStatement","src":"4123:45:6"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":873,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":870,"src":"4086:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":874,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":848,"src":"4090:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4096:6:6","memberName":"length","nodeType":"MemberAccess","src":"4090:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4086:16:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":890,"initializationExpression":{"assignments":[870],"declarations":[{"constant":false,"id":870,"mutability":"mutable","name":"i","nameLocation":"4079:1:6","nodeType":"VariableDeclaration","scope":890,"src":"4071:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":869,"name":"uint256","nodeType":"ElementaryTypeName","src":"4071:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":872,"initialValue":{"hexValue":"30","id":871,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4083:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4071:13:6"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4104:3:6","subExpression":{"id":877,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":870,"src":"4104:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":879,"nodeType":"ExpressionStatement","src":"4104:3:6"},"nodeType":"ForStatement","src":"4066:113:6"},{"expression":{"id":891,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":866,"src":"4195:12:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":864,"id":892,"nodeType":"Return","src":"4188:19:6"}]},"documentation":{"id":845,"nodeType":"StructuredDocumentation","src":"3447:387:6","text":" @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\n from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\n hash matches the root of the tree. When processing the proof, the pairs\n of leaves & pre-images are assumed to be sorted.\n This version handles proofs in memory with a custom hashing function."},"id":894,"implemented":true,"kind":"function","modifiers":[],"name":"processProof","nameLocation":"3848:12:6","nodeType":"FunctionDefinition","parameters":{"id":861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":848,"mutability":"mutable","name":"proof","nameLocation":"3887:5:6","nodeType":"VariableDeclaration","scope":894,"src":"3870:22:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":846,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3870:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":847,"nodeType":"ArrayTypeName","src":"3870:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":850,"mutability":"mutable","name":"leaf","nameLocation":"3910:4:6","nodeType":"VariableDeclaration","scope":894,"src":"3902:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":849,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3902:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":860,"mutability":"mutable","name":"hasher","nameLocation":"3974:6:6","nodeType":"VariableDeclaration","scope":894,"src":"3924:56:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"typeName":{"id":859,"nodeType":"FunctionTypeName","parameterTypes":{"id":855,"nodeType":"ParameterList","parameters":[{"constant":false,"id":852,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":859,"src":"3933:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":851,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3933:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":854,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":859,"src":"3942:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":853,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3942:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3932:18:6"},"returnParameterTypes":{"id":858,"nodeType":"ParameterList","parameters":[{"constant":false,"id":857,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":859,"src":"3965:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":856,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3965:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3964:9:6"},"src":"3924:56:6","stateMutability":"view","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"visibility":"internal"},"visibility":"internal"}],"src":"3860:126:6"},"returnParameters":{"id":864,"nodeType":"ParameterList","parameters":[{"constant":false,"id":863,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":894,"src":"4010:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":862,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4010:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4009:9:6"},"scope":1815,"src":"3839:375:6","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":914,"nodeType":"Block","src":"4744:65:6","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":908,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":898,"src":"4782:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},{"id":909,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":902,"src":"4789:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":907,"name":"processProofCalldata","nodeType":"Identifier","overloadedDeclarations":[956,1038],"referencedDeclaration":956,"src":"4761:20:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_calldata_ptr_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32[] calldata,bytes32) pure returns (bytes32)"}},"id":910,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4761:33:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":911,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":900,"src":"4798:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4761:41:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":906,"id":913,"nodeType":"Return","src":"4754:48:6"}]},"documentation":{"id":895,"nodeType":"StructuredDocumentation","src":"4220:412:6","text":" @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\n defined by `root`. For this, a `proof` must be provided, containing\n sibling hashes on the branch from the leaf to the root of the tree. Each\n pair of leaves and each pair of pre-images are assumed to be sorted.\n This version handles proofs in calldata with the default hashing function."},"id":915,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCalldata","nameLocation":"4646:14:6","nodeType":"FunctionDefinition","parameters":{"id":903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":898,"mutability":"mutable","name":"proof","nameLocation":"4680:5:6","nodeType":"VariableDeclaration","scope":915,"src":"4661:24:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":896,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4661:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":897,"nodeType":"ArrayTypeName","src":"4661:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":900,"mutability":"mutable","name":"root","nameLocation":"4695:4:6","nodeType":"VariableDeclaration","scope":915,"src":"4687:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":899,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4687:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":902,"mutability":"mutable","name":"leaf","nameLocation":"4709:4:6","nodeType":"VariableDeclaration","scope":915,"src":"4701:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":901,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4701:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4660:54:6"},"returnParameters":{"id":906,"nodeType":"ParameterList","parameters":[{"constant":false,"id":905,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":915,"src":"4738:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":904,"name":"bool","nodeType":"ElementaryTypeName","src":"4738:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4737:6:6"},"scope":1815,"src":"4637:172:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":955,"nodeType":"Block","src":"5314:216:6","statements":[{"assignments":[927],"declarations":[{"constant":false,"id":927,"mutability":"mutable","name":"computedHash","nameLocation":"5332:12:6","nodeType":"VariableDeclaration","scope":955,"src":"5324:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":926,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5324:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":929,"initialValue":{"id":928,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":921,"src":"5347:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"5324:27:6"},{"body":{"id":951,"nodeType":"Block","src":"5404:91:6","statements":[{"expression":{"id":949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":941,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":927,"src":"5418:12:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":944,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":927,"src":"5461:12:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"baseExpression":{"id":945,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":919,"src":"5475:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":947,"indexExpression":{"id":946,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":931,"src":"5481:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5475:8:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":942,"name":"Hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":742,"src":"5433:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Hashes_$742_$","typeString":"type(library Hashes)"}},"id":943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5440:20:6","memberName":"commutativeKeccak256","nodeType":"MemberAccess","referencedDeclaration":729,"src":"5433:27:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":948,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5433:51:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"5418:66:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":950,"nodeType":"ExpressionStatement","src":"5418:66:6"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":934,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":931,"src":"5381:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":935,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":919,"src":"5385:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5391:6:6","memberName":"length","nodeType":"MemberAccess","src":"5385:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5381:16:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":952,"initializationExpression":{"assignments":[931],"declarations":[{"constant":false,"id":931,"mutability":"mutable","name":"i","nameLocation":"5374:1:6","nodeType":"VariableDeclaration","scope":952,"src":"5366:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":930,"name":"uint256","nodeType":"ElementaryTypeName","src":"5366:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":933,"initialValue":{"hexValue":"30","id":932,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5378:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5366:13:6"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5399:3:6","subExpression":{"id":938,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":931,"src":"5399:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":940,"nodeType":"ExpressionStatement","src":"5399:3:6"},"nodeType":"ForStatement","src":"5361:134:6"},{"expression":{"id":953,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":927,"src":"5511:12:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":925,"id":954,"nodeType":"Return","src":"5504:19:6"}]},"documentation":{"id":916,"nodeType":"StructuredDocumentation","src":"4815:392:6","text":" @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\n from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\n hash matches the root of the tree. When processing the proof, the pairs\n of leaves & pre-images are assumed to be sorted.\n This version handles proofs in calldata with the default hashing function."},"id":956,"implemented":true,"kind":"function","modifiers":[],"name":"processProofCalldata","nameLocation":"5221:20:6","nodeType":"FunctionDefinition","parameters":{"id":922,"nodeType":"ParameterList","parameters":[{"constant":false,"id":919,"mutability":"mutable","name":"proof","nameLocation":"5261:5:6","nodeType":"VariableDeclaration","scope":956,"src":"5242:24:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":917,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5242:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":918,"nodeType":"ArrayTypeName","src":"5242:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":921,"mutability":"mutable","name":"leaf","nameLocation":"5276:4:6","nodeType":"VariableDeclaration","scope":956,"src":"5268:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":920,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5268:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5241:40:6"},"returnParameters":{"id":925,"nodeType":"ParameterList","parameters":[{"constant":false,"id":924,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":956,"src":"5305:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":923,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5305:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5304:9:6"},"scope":1815,"src":"5212:318:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":987,"nodeType":"Block","src":"6153:73:6","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":980,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":960,"src":"6191:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},{"id":981,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":964,"src":"6198:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":982,"name":"hasher","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":974,"src":"6204:6:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"}],"id":979,"name":"processProofCalldata","nodeType":"Identifier","overloadedDeclarations":[956,1038],"referencedDeclaration":1038,"src":"6170:20:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_bytes32_$dyn_calldata_ptr_$_t_bytes32_$_t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$_$returns$_t_bytes32_$","typeString":"function (bytes32[] calldata,bytes32,function (bytes32,bytes32) view returns (bytes32)) view returns (bytes32)"}},"id":983,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6170:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":984,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":962,"src":"6215:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"6170:49:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":978,"id":986,"nodeType":"Return","src":"6163:56:6"}]},"documentation":{"id":957,"nodeType":"StructuredDocumentation","src":"5536:409:6","text":" @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\n defined by `root`. For this, a `proof` must be provided, containing\n sibling hashes on the branch from the leaf to the root of the tree. Each\n pair of leaves and each pair of pre-images are assumed to be sorted.\n This version handles proofs in calldata with a custom hashing function."},"id":988,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCalldata","nameLocation":"5959:14:6","nodeType":"FunctionDefinition","parameters":{"id":975,"nodeType":"ParameterList","parameters":[{"constant":false,"id":960,"mutability":"mutable","name":"proof","nameLocation":"6002:5:6","nodeType":"VariableDeclaration","scope":988,"src":"5983:24:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":958,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5983:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":959,"nodeType":"ArrayTypeName","src":"5983:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":962,"mutability":"mutable","name":"root","nameLocation":"6025:4:6","nodeType":"VariableDeclaration","scope":988,"src":"6017:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":961,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6017:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":964,"mutability":"mutable","name":"leaf","nameLocation":"6047:4:6","nodeType":"VariableDeclaration","scope":988,"src":"6039:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":963,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6039:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":974,"mutability":"mutable","name":"hasher","nameLocation":"6111:6:6","nodeType":"VariableDeclaration","scope":988,"src":"6061:56:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"typeName":{"id":973,"nodeType":"FunctionTypeName","parameterTypes":{"id":969,"nodeType":"ParameterList","parameters":[{"constant":false,"id":966,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":973,"src":"6070:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":965,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6070:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":968,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":973,"src":"6079:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":967,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6079:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6069:18:6"},"returnParameterTypes":{"id":972,"nodeType":"ParameterList","parameters":[{"constant":false,"id":971,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":973,"src":"6102:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":970,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6102:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6101:9:6"},"src":"6061:56:6","stateMutability":"view","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"visibility":"internal"},"visibility":"internal"}],"src":"5973:150:6"},"returnParameters":{"id":978,"nodeType":"ParameterList","parameters":[{"constant":false,"id":977,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":988,"src":"6147:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":976,"name":"bool","nodeType":"ElementaryTypeName","src":"6147:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6146:6:6"},"scope":1815,"src":"5950:276:6","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1037,"nodeType":"Block","src":"6816:195:6","statements":[{"assignments":[1010],"declarations":[{"constant":false,"id":1010,"mutability":"mutable","name":"computedHash","nameLocation":"6834:12:6","nodeType":"VariableDeclaration","scope":1037,"src":"6826:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1009,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6826:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1012,"initialValue":{"id":1011,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":994,"src":"6849:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"6826:27:6"},{"body":{"id":1033,"nodeType":"Block","src":"6906:70:6","statements":[{"expression":{"id":1031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1024,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1010,"src":"6920:12:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1026,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1010,"src":"6942:12:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"baseExpression":{"id":1027,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":992,"src":"6956:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":1029,"indexExpression":{"id":1028,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1014,"src":"6962:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6956:8:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1025,"name":"hasher","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1004,"src":"6935:6:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"}},"id":1030,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6935:30:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"6920:45:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1032,"nodeType":"ExpressionStatement","src":"6920:45:6"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1017,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1014,"src":"6883:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1018,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":992,"src":"6887:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":1019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6893:6:6","memberName":"length","nodeType":"MemberAccess","src":"6887:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6883:16:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1034,"initializationExpression":{"assignments":[1014],"declarations":[{"constant":false,"id":1014,"mutability":"mutable","name":"i","nameLocation":"6876:1:6","nodeType":"VariableDeclaration","scope":1034,"src":"6868:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1013,"name":"uint256","nodeType":"ElementaryTypeName","src":"6868:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1016,"initialValue":{"hexValue":"30","id":1015,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6880:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6868:13:6"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":1022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6901:3:6","subExpression":{"id":1021,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1014,"src":"6901:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1023,"nodeType":"ExpressionStatement","src":"6901:3:6"},"nodeType":"ForStatement","src":"6863:113:6"},{"expression":{"id":1035,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1010,"src":"6992:12:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1008,"id":1036,"nodeType":"Return","src":"6985:19:6"}]},"documentation":{"id":989,"nodeType":"StructuredDocumentation","src":"6232:389:6","text":" @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\n from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\n hash matches the root of the tree. When processing the proof, the pairs\n of leaves & pre-images are assumed to be sorted.\n This version handles proofs in calldata with a custom hashing function."},"id":1038,"implemented":true,"kind":"function","modifiers":[],"name":"processProofCalldata","nameLocation":"6635:20:6","nodeType":"FunctionDefinition","parameters":{"id":1005,"nodeType":"ParameterList","parameters":[{"constant":false,"id":992,"mutability":"mutable","name":"proof","nameLocation":"6684:5:6","nodeType":"VariableDeclaration","scope":1038,"src":"6665:24:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":990,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6665:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":991,"nodeType":"ArrayTypeName","src":"6665:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":994,"mutability":"mutable","name":"leaf","nameLocation":"6707:4:6","nodeType":"VariableDeclaration","scope":1038,"src":"6699:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":993,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6699:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1004,"mutability":"mutable","name":"hasher","nameLocation":"6771:6:6","nodeType":"VariableDeclaration","scope":1038,"src":"6721:56:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"typeName":{"id":1003,"nodeType":"FunctionTypeName","parameterTypes":{"id":999,"nodeType":"ParameterList","parameters":[{"constant":false,"id":996,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1003,"src":"6730:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":995,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6730:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":998,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1003,"src":"6739:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":997,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6739:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6729:18:6"},"returnParameterTypes":{"id":1002,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1001,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1003,"src":"6762:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1000,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6762:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6761:9:6"},"src":"6721:56:6","stateMutability":"view","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"visibility":"internal"},"visibility":"internal"}],"src":"6655:128:6"},"returnParameters":{"id":1008,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1007,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1038,"src":"6807:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1006,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6807:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6806:9:6"},"scope":1815,"src":"6626:385:6","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1063,"nodeType":"Block","src":"7797:76:6","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1056,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1042,"src":"7832:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},{"id":1057,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1045,"src":"7839:10:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},{"id":1058,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1050,"src":"7851:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"},{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"},{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}],"id":1055,"name":"processMultiProof","nodeType":"Identifier","overloadedDeclarations":[1222,1426],"referencedDeclaration":1222,"src":"7814:17:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_array$_t_bool_$dyn_memory_ptr_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes32[] memory,bool[] memory,bytes32[] memory) pure returns (bytes32)"}},"id":1059,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7814:44:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1060,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1047,"src":"7862:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"7814:52:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1054,"id":1062,"nodeType":"Return","src":"7807:59:6"}]},"documentation":{"id":1039,"nodeType":"StructuredDocumentation","src":"7017:593:6","text":" @dev Returns true if the `leaves` can be simultaneously proven to be a part of a Merkle tree defined by\n `root`, according to `proof` and `proofFlags` as described in {processMultiProof}.\n This version handles multiproofs in memory with the default hashing function.\n CAUTION: Not all Merkle trees admit multiproofs. See {processMultiProof} for details.\n NOTE: Consider the case where `root == proof[0] && leaves.length == 0` as it will return `true`.\n The `leaves` must be validated independently. See {processMultiProof}."},"id":1064,"implemented":true,"kind":"function","modifiers":[],"name":"multiProofVerify","nameLocation":"7624:16:6","nodeType":"FunctionDefinition","parameters":{"id":1051,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1042,"mutability":"mutable","name":"proof","nameLocation":"7667:5:6","nodeType":"VariableDeclaration","scope":1064,"src":"7650:22:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1040,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7650:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1041,"nodeType":"ArrayTypeName","src":"7650:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1045,"mutability":"mutable","name":"proofFlags","nameLocation":"7696:10:6","nodeType":"VariableDeclaration","scope":1064,"src":"7682:24:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":1043,"name":"bool","nodeType":"ElementaryTypeName","src":"7682:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1044,"nodeType":"ArrayTypeName","src":"7682:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":1047,"mutability":"mutable","name":"root","nameLocation":"7724:4:6","nodeType":"VariableDeclaration","scope":1064,"src":"7716:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1046,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7716:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1050,"mutability":"mutable","name":"leaves","nameLocation":"7755:6:6","nodeType":"VariableDeclaration","scope":1064,"src":"7738:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1048,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7738:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1049,"nodeType":"ArrayTypeName","src":"7738:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"7640:127:6"},"returnParameters":{"id":1054,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1053,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1064,"src":"7791:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1052,"name":"bool","nodeType":"ElementaryTypeName","src":"7791:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7790:6:6"},"scope":1815,"src":"7615:258:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1221,"nodeType":"Block","src":"9159:2104:6","statements":[{"assignments":[1080],"declarations":[{"constant":false,"id":1080,"mutability":"mutable","name":"leavesLen","nameLocation":"9551:9:6","nodeType":"VariableDeclaration","scope":1221,"src":"9543:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1079,"name":"uint256","nodeType":"ElementaryTypeName","src":"9543:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1083,"initialValue":{"expression":{"id":1081,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1074,"src":"9563:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9570:6:6","memberName":"length","nodeType":"MemberAccess","src":"9563:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9543:33:6"},{"assignments":[1085],"declarations":[{"constant":false,"id":1085,"mutability":"mutable","name":"proofFlagsLen","nameLocation":"9594:13:6","nodeType":"VariableDeclaration","scope":1221,"src":"9586:21:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1084,"name":"uint256","nodeType":"ElementaryTypeName","src":"9586:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1088,"initialValue":{"expression":{"id":1086,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1071,"src":"9610:10:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":1087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9621:6:6","memberName":"length","nodeType":"MemberAccess","src":"9610:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9586:41:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1089,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1080,"src":"9675:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":1090,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1068,"src":"9687:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9693:6:6","memberName":"length","nodeType":"MemberAccess","src":"9687:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9675:24:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1093,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1085,"src":"9703:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1094,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9719:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9703:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9675:45:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1101,"nodeType":"IfStatement","src":"9671:113:6","trueBody":{"id":1100,"nodeType":"Block","src":"9722:62:6","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1097,"name":"MerkleProofInvalidMultiproof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":750,"src":"9743:28:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":1098,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9743:30:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1099,"nodeType":"RevertStatement","src":"9736:37:6"}]}},{"assignments":[1106],"declarations":[{"constant":false,"id":1106,"mutability":"mutable","name":"hashes","nameLocation":"10045:6:6","nodeType":"VariableDeclaration","scope":1221,"src":"10028:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1104,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10028:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1105,"nodeType":"ArrayTypeName","src":"10028:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":1112,"initialValue":{"arguments":[{"id":1110,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1085,"src":"10068:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1109,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"10054:13:6","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes32[] memory)"},"typeName":{"baseType":{"id":1107,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10058:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1108,"nodeType":"ArrayTypeName","src":"10058:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}}},"id":1111,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10054:28:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"10028:54:6"},{"assignments":[1114],"declarations":[{"constant":false,"id":1114,"mutability":"mutable","name":"leafPos","nameLocation":"10100:7:6","nodeType":"VariableDeclaration","scope":1221,"src":"10092:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1113,"name":"uint256","nodeType":"ElementaryTypeName","src":"10092:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1116,"initialValue":{"hexValue":"30","id":1115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10110:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10092:19:6"},{"assignments":[1118],"declarations":[{"constant":false,"id":1118,"mutability":"mutable","name":"hashPos","nameLocation":"10129:7:6","nodeType":"VariableDeclaration","scope":1221,"src":"10121:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1117,"name":"uint256","nodeType":"ElementaryTypeName","src":"10121:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1120,"initialValue":{"hexValue":"30","id":1119,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10139:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10121:19:6"},{"assignments":[1122],"declarations":[{"constant":false,"id":1122,"mutability":"mutable","name":"proofPos","nameLocation":"10158:8:6","nodeType":"VariableDeclaration","scope":1221,"src":"10150:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1121,"name":"uint256","nodeType":"ElementaryTypeName","src":"10150:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1124,"initialValue":{"hexValue":"30","id":1123,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10169:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10150:20:6"},{"body":{"id":1184,"nodeType":"Block","src":"10590:310:6","statements":[{"assignments":[1136],"declarations":[{"constant":false,"id":1136,"mutability":"mutable","name":"a","nameLocation":"10612:1:6","nodeType":"VariableDeclaration","scope":1184,"src":"10604:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1135,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10604:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1149,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1137,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1114,"src":"10616:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1138,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1080,"src":"10626:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10616:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":1144,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1106,"src":"10658:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1147,"indexExpression":{"id":1146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10665:9:6","subExpression":{"id":1145,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1118,"src":"10665:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10658:17:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10616:59:6","trueExpression":{"baseExpression":{"id":1140,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1074,"src":"10638:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1143,"indexExpression":{"id":1142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10645:9:6","subExpression":{"id":1141,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1114,"src":"10645:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10638:17:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"10604:71:6"},{"assignments":[1151],"declarations":[{"constant":false,"id":1151,"mutability":"mutable","name":"b","nameLocation":"10697:1:6","nodeType":"VariableDeclaration","scope":1184,"src":"10689:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1150,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10689:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1173,"initialValue":{"condition":{"baseExpression":{"id":1152,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1071,"src":"10701:10:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":1154,"indexExpression":{"id":1153,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1126,"src":"10712:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10701:13:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":1168,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1068,"src":"10813:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1171,"indexExpression":{"id":1170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10819:10:6","subExpression":{"id":1169,"name":"proofPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1122,"src":"10819:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10813:17:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10701:129:6","trueExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1155,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1114,"src":"10734:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1156,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1080,"src":"10744:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10734:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":1162,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1106,"src":"10776:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1165,"indexExpression":{"id":1164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10783:9:6","subExpression":{"id":1163,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1118,"src":"10783:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10776:17:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10734:59:6","trueExpression":{"baseExpression":{"id":1158,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1074,"src":"10756:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1161,"indexExpression":{"id":1160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10763:9:6","subExpression":{"id":1159,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1114,"src":"10763:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10756:17:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":1167,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10733:61:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"10689:141:6"},{"expression":{"id":1182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1174,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1106,"src":"10844:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1176,"indexExpression":{"id":1175,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1126,"src":"10851:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10844:9:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1179,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1136,"src":"10884:1:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1180,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1151,"src":"10887:1:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1177,"name":"Hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":742,"src":"10856:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Hashes_$742_$","typeString":"type(library Hashes)"}},"id":1178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10863:20:6","memberName":"commutativeKeccak256","nodeType":"MemberAccess","referencedDeclaration":729,"src":"10856:27:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":1181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10856:33:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"10844:45:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1183,"nodeType":"ExpressionStatement","src":"10844:45:6"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1129,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1126,"src":"10566:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1130,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1085,"src":"10570:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10566:17:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1185,"initializationExpression":{"assignments":[1126],"declarations":[{"constant":false,"id":1126,"mutability":"mutable","name":"i","nameLocation":"10559:1:6","nodeType":"VariableDeclaration","scope":1185,"src":"10551:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1125,"name":"uint256","nodeType":"ElementaryTypeName","src":"10551:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1128,"initialValue":{"hexValue":"30","id":1127,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10563:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10551:13:6"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":1133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10585:3:6","subExpression":{"id":1132,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1126,"src":"10585:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1134,"nodeType":"ExpressionStatement","src":"10585:3:6"},"nodeType":"ForStatement","src":"10546:354:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1186,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1085,"src":"10914:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10930:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10914:17:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1206,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1080,"src":"11155:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11167:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11155:13:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1218,"nodeType":"Block","src":"11217:40:6","statements":[{"expression":{"baseExpression":{"id":1214,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1068,"src":"11238:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1216,"indexExpression":{"hexValue":"30","id":1215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11244:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11238:8:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1078,"id":1217,"nodeType":"Return","src":"11231:15:6"}]},"id":1219,"nodeType":"IfStatement","src":"11151:106:6","trueBody":{"id":1213,"nodeType":"Block","src":"11170:41:6","statements":[{"expression":{"baseExpression":{"id":1209,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1074,"src":"11191:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1211,"indexExpression":{"hexValue":"30","id":1210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11198:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11191:9:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1078,"id":1212,"nodeType":"Return","src":"11184:16:6"}]}},"id":1220,"nodeType":"IfStatement","src":"10910:347:6","trueBody":{"id":1205,"nodeType":"Block","src":"10933:212:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1189,"name":"proofPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1122,"src":"10951:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":1190,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1068,"src":"10963:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10969:6:6","memberName":"length","nodeType":"MemberAccess","src":"10963:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10951:24:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1197,"nodeType":"IfStatement","src":"10947:100:6","trueBody":{"id":1196,"nodeType":"Block","src":"10977:70:6","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1193,"name":"MerkleProofInvalidMultiproof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":750,"src":"11002:28:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":1194,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11002:30:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1195,"nodeType":"RevertStatement","src":"10995:37:6"}]}},{"id":1204,"nodeType":"UncheckedBlock","src":"11060:75:6","statements":[{"expression":{"baseExpression":{"id":1198,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1106,"src":"11095:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1202,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1199,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1085,"src":"11102:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11118:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11102:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11095:25:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1078,"id":1203,"nodeType":"Return","src":"11088:32:6"}]}]}}]},"documentation":{"id":1065,"nodeType":"StructuredDocumentation","src":"7879:1100:6","text":" @dev Returns the root of a tree reconstructed from `leaves` and sibling nodes in `proof`. The reconstruction\n proceeds by incrementally reconstructing all inner nodes by combining a leaf/inner node with either another\n leaf/inner node or a proof sibling node, depending on whether each `proofFlags` item is true or false\n respectively.\n This version handles multiproofs in memory with the default hashing function.\n CAUTION: Not all Merkle trees admit multiproofs. To use multiproofs, it is sufficient to ensure that: 1) the tree\n is complete (but not necessarily perfect), 2) the leaves to be proven are in the opposite order they are in the\n tree (i.e., as seen from right to left starting at the deepest layer and continuing at the next layer).\n NOTE: The _empty set_ (i.e. the case where `proof.length == 1 && leaves.length == 0`) is considered a no-op,\n and therefore a valid multiproof (i.e. it returns `proof[0]`). Consider disallowing this case if you're not\n validating the leaves elsewhere."},"id":1222,"implemented":true,"kind":"function","modifiers":[],"name":"processMultiProof","nameLocation":"8993:17:6","nodeType":"FunctionDefinition","parameters":{"id":1075,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1068,"mutability":"mutable","name":"proof","nameLocation":"9037:5:6","nodeType":"VariableDeclaration","scope":1222,"src":"9020:22:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1066,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9020:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1067,"nodeType":"ArrayTypeName","src":"9020:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1071,"mutability":"mutable","name":"proofFlags","nameLocation":"9066:10:6","nodeType":"VariableDeclaration","scope":1222,"src":"9052:24:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":1069,"name":"bool","nodeType":"ElementaryTypeName","src":"9052:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1070,"nodeType":"ArrayTypeName","src":"9052:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":1074,"mutability":"mutable","name":"leaves","nameLocation":"9103:6:6","nodeType":"VariableDeclaration","scope":1222,"src":"9086:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1072,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9086:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1073,"nodeType":"ArrayTypeName","src":"9086:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"9010:105:6"},"returnParameters":{"id":1078,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1077,"mutability":"mutable","name":"merkleRoot","nameLocation":"9147:10:6","nodeType":"VariableDeclaration","scope":1222,"src":"9139:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1076,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9139:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"9138:20:6"},"scope":1815,"src":"8984:2279:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1258,"nodeType":"Block","src":"12112:84:6","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1250,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1226,"src":"12147:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},{"id":1251,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1229,"src":"12154:10:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},{"id":1252,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1234,"src":"12166:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},{"id":1253,"name":"hasher","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1244,"src":"12174:6:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"},{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"},{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"},{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"}],"id":1249,"name":"processMultiProof","nodeType":"Identifier","overloadedDeclarations":[1222,1426],"referencedDeclaration":1426,"src":"12129:17:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_array$_t_bool_$dyn_memory_ptr_$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$_$returns$_t_bytes32_$","typeString":"function (bytes32[] memory,bool[] memory,bytes32[] memory,function (bytes32,bytes32) view returns (bytes32)) view returns (bytes32)"}},"id":1254,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12129:52:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1255,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1231,"src":"12185:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"12129:60:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1248,"id":1257,"nodeType":"Return","src":"12122:67:6"}]},"documentation":{"id":1223,"nodeType":"StructuredDocumentation","src":"11269:590:6","text":" @dev Returns true if the `leaves` can be simultaneously proven to be a part of a Merkle tree defined by\n `root`, according to `proof` and `proofFlags` as described in {processMultiProof}.\n This version handles multiproofs in memory with a custom hashing function.\n CAUTION: Not all Merkle trees admit multiproofs. See {processMultiProof} for details.\n NOTE: Consider the case where `root == proof[0] && leaves.length == 0` as it will return `true`.\n The `leaves` must be validated independently. See {processMultiProof}."},"id":1259,"implemented":true,"kind":"function","modifiers":[],"name":"multiProofVerify","nameLocation":"11873:16:6","nodeType":"FunctionDefinition","parameters":{"id":1245,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1226,"mutability":"mutable","name":"proof","nameLocation":"11916:5:6","nodeType":"VariableDeclaration","scope":1259,"src":"11899:22:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1224,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11899:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1225,"nodeType":"ArrayTypeName","src":"11899:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1229,"mutability":"mutable","name":"proofFlags","nameLocation":"11945:10:6","nodeType":"VariableDeclaration","scope":1259,"src":"11931:24:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":1227,"name":"bool","nodeType":"ElementaryTypeName","src":"11931:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1228,"nodeType":"ArrayTypeName","src":"11931:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":1231,"mutability":"mutable","name":"root","nameLocation":"11973:4:6","nodeType":"VariableDeclaration","scope":1259,"src":"11965:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1230,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11965:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1234,"mutability":"mutable","name":"leaves","nameLocation":"12004:6:6","nodeType":"VariableDeclaration","scope":1259,"src":"11987:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1232,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11987:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1233,"nodeType":"ArrayTypeName","src":"11987:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1244,"mutability":"mutable","name":"hasher","nameLocation":"12070:6:6","nodeType":"VariableDeclaration","scope":1259,"src":"12020:56:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"typeName":{"id":1243,"nodeType":"FunctionTypeName","parameterTypes":{"id":1239,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1236,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1243,"src":"12029:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1235,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12029:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1238,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1243,"src":"12038:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1237,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12038:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"12028:18:6"},"returnParameterTypes":{"id":1242,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1241,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1243,"src":"12061:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1240,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12061:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"12060:9:6"},"src":"12020:56:6","stateMutability":"view","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"visibility":"internal"},"visibility":"internal"}],"src":"11889:193:6"},"returnParameters":{"id":1248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1247,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1259,"src":"12106:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1246,"name":"bool","nodeType":"ElementaryTypeName","src":"12106:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"12105:6:6"},"scope":1815,"src":"11864:332:6","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1425,"nodeType":"Block","src":"13545:2083:6","statements":[{"assignments":[1285],"declarations":[{"constant":false,"id":1285,"mutability":"mutable","name":"leavesLen","nameLocation":"13937:9:6","nodeType":"VariableDeclaration","scope":1425,"src":"13929:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1284,"name":"uint256","nodeType":"ElementaryTypeName","src":"13929:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1288,"initialValue":{"expression":{"id":1286,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1269,"src":"13949:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13956:6:6","memberName":"length","nodeType":"MemberAccess","src":"13949:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13929:33:6"},{"assignments":[1290],"declarations":[{"constant":false,"id":1290,"mutability":"mutable","name":"proofFlagsLen","nameLocation":"13980:13:6","nodeType":"VariableDeclaration","scope":1425,"src":"13972:21:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1289,"name":"uint256","nodeType":"ElementaryTypeName","src":"13972:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1293,"initialValue":{"expression":{"id":1291,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"13996:10:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":1292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14007:6:6","memberName":"length","nodeType":"MemberAccess","src":"13996:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13972:41:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1294,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1285,"src":"14061:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":1295,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1263,"src":"14073:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14079:6:6","memberName":"length","nodeType":"MemberAccess","src":"14073:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14061:24:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1298,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1290,"src":"14089:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14105:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14089:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14061:45:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1306,"nodeType":"IfStatement","src":"14057:113:6","trueBody":{"id":1305,"nodeType":"Block","src":"14108:62:6","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1302,"name":"MerkleProofInvalidMultiproof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":750,"src":"14129:28:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":1303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14129:30:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1304,"nodeType":"RevertStatement","src":"14122:37:6"}]}},{"assignments":[1311],"declarations":[{"constant":false,"id":1311,"mutability":"mutable","name":"hashes","nameLocation":"14431:6:6","nodeType":"VariableDeclaration","scope":1425,"src":"14414:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1309,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14414:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1310,"nodeType":"ArrayTypeName","src":"14414:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":1317,"initialValue":{"arguments":[{"id":1315,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1290,"src":"14454:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1314,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"14440:13:6","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes32[] memory)"},"typeName":{"baseType":{"id":1312,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14444:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1313,"nodeType":"ArrayTypeName","src":"14444:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}}},"id":1316,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14440:28:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"14414:54:6"},{"assignments":[1319],"declarations":[{"constant":false,"id":1319,"mutability":"mutable","name":"leafPos","nameLocation":"14486:7:6","nodeType":"VariableDeclaration","scope":1425,"src":"14478:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1318,"name":"uint256","nodeType":"ElementaryTypeName","src":"14478:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1321,"initialValue":{"hexValue":"30","id":1320,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14496:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"14478:19:6"},{"assignments":[1323],"declarations":[{"constant":false,"id":1323,"mutability":"mutable","name":"hashPos","nameLocation":"14515:7:6","nodeType":"VariableDeclaration","scope":1425,"src":"14507:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1322,"name":"uint256","nodeType":"ElementaryTypeName","src":"14507:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1325,"initialValue":{"hexValue":"30","id":1324,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14525:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"14507:19:6"},{"assignments":[1327],"declarations":[{"constant":false,"id":1327,"mutability":"mutable","name":"proofPos","nameLocation":"14544:8:6","nodeType":"VariableDeclaration","scope":1425,"src":"14536:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1326,"name":"uint256","nodeType":"ElementaryTypeName","src":"14536:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1329,"initialValue":{"hexValue":"30","id":1328,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14555:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"14536:20:6"},{"body":{"id":1388,"nodeType":"Block","src":"14976:289:6","statements":[{"assignments":[1341],"declarations":[{"constant":false,"id":1341,"mutability":"mutable","name":"a","nameLocation":"14998:1:6","nodeType":"VariableDeclaration","scope":1388,"src":"14990:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1340,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14990:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1354,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1342,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1319,"src":"15002:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1343,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1285,"src":"15012:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15002:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":1349,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1311,"src":"15044:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1352,"indexExpression":{"id":1351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"15051:9:6","subExpression":{"id":1350,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1323,"src":"15051:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15044:17:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"15002:59:6","trueExpression":{"baseExpression":{"id":1345,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1269,"src":"15024:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1348,"indexExpression":{"id":1347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"15031:9:6","subExpression":{"id":1346,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1319,"src":"15031:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15024:17:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"14990:71:6"},{"assignments":[1356],"declarations":[{"constant":false,"id":1356,"mutability":"mutable","name":"b","nameLocation":"15083:1:6","nodeType":"VariableDeclaration","scope":1388,"src":"15075:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1355,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15075:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1378,"initialValue":{"condition":{"baseExpression":{"id":1357,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"15087:10:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":1359,"indexExpression":{"id":1358,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1331,"src":"15098:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15087:13:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":1373,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1263,"src":"15199:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1376,"indexExpression":{"id":1375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"15205:10:6","subExpression":{"id":1374,"name":"proofPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1327,"src":"15205:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15199:17:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"15087:129:6","trueExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1360,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1319,"src":"15120:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1361,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1285,"src":"15130:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15120:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":1367,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1311,"src":"15162:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1370,"indexExpression":{"id":1369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"15169:9:6","subExpression":{"id":1368,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1323,"src":"15169:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15162:17:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"15120:59:6","trueExpression":{"baseExpression":{"id":1363,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1269,"src":"15142:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1366,"indexExpression":{"id":1365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"15149:9:6","subExpression":{"id":1364,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1319,"src":"15149:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15142:17:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":1372,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15119:61:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"15075:141:6"},{"expression":{"id":1386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1379,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1311,"src":"15230:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1381,"indexExpression":{"id":1380,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1331,"src":"15237:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15230:9:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1383,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1341,"src":"15249:1:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1384,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1356,"src":"15252:1:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1382,"name":"hasher","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1279,"src":"15242:6:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"}},"id":1385,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15242:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"15230:24:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1387,"nodeType":"ExpressionStatement","src":"15230:24:6"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1334,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1331,"src":"14952:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1335,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1290,"src":"14956:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14952:17:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1389,"initializationExpression":{"assignments":[1331],"declarations":[{"constant":false,"id":1331,"mutability":"mutable","name":"i","nameLocation":"14945:1:6","nodeType":"VariableDeclaration","scope":1389,"src":"14937:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1330,"name":"uint256","nodeType":"ElementaryTypeName","src":"14937:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1333,"initialValue":{"hexValue":"30","id":1332,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14949:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"14937:13:6"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":1338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"14971:3:6","subExpression":{"id":1337,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1331,"src":"14971:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1339,"nodeType":"ExpressionStatement","src":"14971:3:6"},"nodeType":"ForStatement","src":"14932:333:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1390,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1290,"src":"15279:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1391,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15295:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15279:17:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1410,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1285,"src":"15520:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15532:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15520:13:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1422,"nodeType":"Block","src":"15582:40:6","statements":[{"expression":{"baseExpression":{"id":1418,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1263,"src":"15603:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1420,"indexExpression":{"hexValue":"30","id":1419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15609:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15603:8:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1283,"id":1421,"nodeType":"Return","src":"15596:15:6"}]},"id":1423,"nodeType":"IfStatement","src":"15516:106:6","trueBody":{"id":1417,"nodeType":"Block","src":"15535:41:6","statements":[{"expression":{"baseExpression":{"id":1413,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1269,"src":"15556:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1415,"indexExpression":{"hexValue":"30","id":1414,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15563:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15556:9:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1283,"id":1416,"nodeType":"Return","src":"15549:16:6"}]}},"id":1424,"nodeType":"IfStatement","src":"15275:347:6","trueBody":{"id":1409,"nodeType":"Block","src":"15298:212:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1393,"name":"proofPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1327,"src":"15316:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":1394,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1263,"src":"15328:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15334:6:6","memberName":"length","nodeType":"MemberAccess","src":"15328:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15316:24:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1401,"nodeType":"IfStatement","src":"15312:100:6","trueBody":{"id":1400,"nodeType":"Block","src":"15342:70:6","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1397,"name":"MerkleProofInvalidMultiproof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":750,"src":"15367:28:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":1398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15367:30:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1399,"nodeType":"RevertStatement","src":"15360:37:6"}]}},{"id":1408,"nodeType":"UncheckedBlock","src":"15425:75:6","statements":[{"expression":{"baseExpression":{"id":1402,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1311,"src":"15460:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1406,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1403,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1290,"src":"15467:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1404,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15483:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15467:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15460:25:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1283,"id":1407,"nodeType":"Return","src":"15453:32:6"}]}]}}]},"documentation":{"id":1260,"nodeType":"StructuredDocumentation","src":"12202:1097:6","text":" @dev Returns the root of a tree reconstructed from `leaves` and sibling nodes in `proof`. The reconstruction\n proceeds by incrementally reconstructing all inner nodes by combining a leaf/inner node with either another\n leaf/inner node or a proof sibling node, depending on whether each `proofFlags` item is true or false\n respectively.\n This version handles multiproofs in memory with a custom hashing function.\n CAUTION: Not all Merkle trees admit multiproofs. To use multiproofs, it is sufficient to ensure that: 1) the tree\n is complete (but not necessarily perfect), 2) the leaves to be proven are in the opposite order they are in the\n tree (i.e., as seen from right to left starting at the deepest layer and continuing at the next layer).\n NOTE: The _empty set_ (i.e. the case where `proof.length == 1 && leaves.length == 0`) is considered a no-op,\n and therefore a valid multiproof (i.e. it returns `proof[0]`). Consider disallowing this case if you're not\n validating the leaves elsewhere."},"id":1426,"implemented":true,"kind":"function","modifiers":[],"name":"processMultiProof","nameLocation":"13313:17:6","nodeType":"FunctionDefinition","parameters":{"id":1280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1263,"mutability":"mutable","name":"proof","nameLocation":"13357:5:6","nodeType":"VariableDeclaration","scope":1426,"src":"13340:22:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1261,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13340:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1262,"nodeType":"ArrayTypeName","src":"13340:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1266,"mutability":"mutable","name":"proofFlags","nameLocation":"13386:10:6","nodeType":"VariableDeclaration","scope":1426,"src":"13372:24:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":1264,"name":"bool","nodeType":"ElementaryTypeName","src":"13372:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1265,"nodeType":"ArrayTypeName","src":"13372:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":1269,"mutability":"mutable","name":"leaves","nameLocation":"13423:6:6","nodeType":"VariableDeclaration","scope":1426,"src":"13406:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1267,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13406:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1268,"nodeType":"ArrayTypeName","src":"13406:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1279,"mutability":"mutable","name":"hasher","nameLocation":"13489:6:6","nodeType":"VariableDeclaration","scope":1426,"src":"13439:56:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"typeName":{"id":1278,"nodeType":"FunctionTypeName","parameterTypes":{"id":1274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1271,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1278,"src":"13448:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1270,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13448:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1273,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1278,"src":"13457:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1272,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13457:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"13447:18:6"},"returnParameterTypes":{"id":1277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1276,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1278,"src":"13480:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1275,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13480:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"13479:9:6"},"src":"13439:56:6","stateMutability":"view","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"visibility":"internal"},"visibility":"internal"}],"src":"13330:171:6"},"returnParameters":{"id":1283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1282,"mutability":"mutable","name":"merkleRoot","nameLocation":"13533:10:6","nodeType":"VariableDeclaration","scope":1426,"src":"13525:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1281,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13525:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"13524:20:6"},"scope":1815,"src":"13304:2324:6","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1451,"nodeType":"Block","src":"16436:84:6","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1444,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1430,"src":"16479:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},{"id":1445,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1433,"src":"16486:10:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"}},{"id":1446,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1438,"src":"16498:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"},{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"},{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}],"id":1443,"name":"processMultiProofCalldata","nodeType":"Identifier","overloadedDeclarations":[1610,1814],"referencedDeclaration":1610,"src":"16453:25:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_calldata_ptr_$_t_array$_t_bool_$dyn_calldata_ptr_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes32[] calldata,bool[] calldata,bytes32[] memory) pure returns (bytes32)"}},"id":1447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16453:52:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1448,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1435,"src":"16509:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"16453:60:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1442,"id":1450,"nodeType":"Return","src":"16446:67:6"}]},"documentation":{"id":1427,"nodeType":"StructuredDocumentation","src":"15634:603:6","text":" @dev Returns true if the `leaves` can be simultaneously proven to be a part of a Merkle tree defined by\n `root`, according to `proof` and `proofFlags` as described in {processMultiProof}.\n This version handles multiproofs in calldata with the default hashing function.\n CAUTION: Not all Merkle trees admit multiproofs. See {processMultiProof} for details.\n NOTE: Consider the case where `root == proof[0] && leaves.length == 0` as it will return `true`.\n The `leaves` must be validated independently. See {processMultiProofCalldata}."},"id":1452,"implemented":true,"kind":"function","modifiers":[],"name":"multiProofVerifyCalldata","nameLocation":"16251:24:6","nodeType":"FunctionDefinition","parameters":{"id":1439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1430,"mutability":"mutable","name":"proof","nameLocation":"16304:5:6","nodeType":"VariableDeclaration","scope":1452,"src":"16285:24:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1428,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16285:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1429,"nodeType":"ArrayTypeName","src":"16285:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1433,"mutability":"mutable","name":"proofFlags","nameLocation":"16335:10:6","nodeType":"VariableDeclaration","scope":1452,"src":"16319:26:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":1431,"name":"bool","nodeType":"ElementaryTypeName","src":"16319:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1432,"nodeType":"ArrayTypeName","src":"16319:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":1435,"mutability":"mutable","name":"root","nameLocation":"16363:4:6","nodeType":"VariableDeclaration","scope":1452,"src":"16355:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1434,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16355:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1438,"mutability":"mutable","name":"leaves","nameLocation":"16394:6:6","nodeType":"VariableDeclaration","scope":1452,"src":"16377:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1436,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16377:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1437,"nodeType":"ArrayTypeName","src":"16377:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"16275:131:6"},"returnParameters":{"id":1442,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1441,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1452,"src":"16430:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1440,"name":"bool","nodeType":"ElementaryTypeName","src":"16430:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"16429:6:6"},"scope":1815,"src":"16242:278:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1609,"nodeType":"Block","src":"17820:2104:6","statements":[{"assignments":[1468],"declarations":[{"constant":false,"id":1468,"mutability":"mutable","name":"leavesLen","nameLocation":"18212:9:6","nodeType":"VariableDeclaration","scope":1609,"src":"18204:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1467,"name":"uint256","nodeType":"ElementaryTypeName","src":"18204:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1471,"initialValue":{"expression":{"id":1469,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1462,"src":"18224:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18231:6:6","memberName":"length","nodeType":"MemberAccess","src":"18224:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"18204:33:6"},{"assignments":[1473],"declarations":[{"constant":false,"id":1473,"mutability":"mutable","name":"proofFlagsLen","nameLocation":"18255:13:6","nodeType":"VariableDeclaration","scope":1609,"src":"18247:21:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1472,"name":"uint256","nodeType":"ElementaryTypeName","src":"18247:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1476,"initialValue":{"expression":{"id":1474,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1459,"src":"18271:10:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"}},"id":1475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18282:6:6","memberName":"length","nodeType":"MemberAccess","src":"18271:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"18247:41:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1477,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1468,"src":"18336:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":1478,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1456,"src":"18348:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":1479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18354:6:6","memberName":"length","nodeType":"MemberAccess","src":"18348:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18336:24:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1481,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1473,"src":"18364:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1482,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18380:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"18364:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18336:45:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1489,"nodeType":"IfStatement","src":"18332:113:6","trueBody":{"id":1488,"nodeType":"Block","src":"18383:62:6","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1485,"name":"MerkleProofInvalidMultiproof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":750,"src":"18404:28:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":1486,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18404:30:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1487,"nodeType":"RevertStatement","src":"18397:37:6"}]}},{"assignments":[1494],"declarations":[{"constant":false,"id":1494,"mutability":"mutable","name":"hashes","nameLocation":"18706:6:6","nodeType":"VariableDeclaration","scope":1609,"src":"18689:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1492,"name":"bytes32","nodeType":"ElementaryTypeName","src":"18689:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1493,"nodeType":"ArrayTypeName","src":"18689:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":1500,"initialValue":{"arguments":[{"id":1498,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1473,"src":"18729:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1497,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"18715:13:6","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes32[] memory)"},"typeName":{"baseType":{"id":1495,"name":"bytes32","nodeType":"ElementaryTypeName","src":"18719:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1496,"nodeType":"ArrayTypeName","src":"18719:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}}},"id":1499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18715:28:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"18689:54:6"},{"assignments":[1502],"declarations":[{"constant":false,"id":1502,"mutability":"mutable","name":"leafPos","nameLocation":"18761:7:6","nodeType":"VariableDeclaration","scope":1609,"src":"18753:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1501,"name":"uint256","nodeType":"ElementaryTypeName","src":"18753:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1504,"initialValue":{"hexValue":"30","id":1503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18771:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"18753:19:6"},{"assignments":[1506],"declarations":[{"constant":false,"id":1506,"mutability":"mutable","name":"hashPos","nameLocation":"18790:7:6","nodeType":"VariableDeclaration","scope":1609,"src":"18782:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1505,"name":"uint256","nodeType":"ElementaryTypeName","src":"18782:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1508,"initialValue":{"hexValue":"30","id":1507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18800:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"18782:19:6"},{"assignments":[1510],"declarations":[{"constant":false,"id":1510,"mutability":"mutable","name":"proofPos","nameLocation":"18819:8:6","nodeType":"VariableDeclaration","scope":1609,"src":"18811:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1509,"name":"uint256","nodeType":"ElementaryTypeName","src":"18811:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1512,"initialValue":{"hexValue":"30","id":1511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18830:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"18811:20:6"},{"body":{"id":1572,"nodeType":"Block","src":"19251:310:6","statements":[{"assignments":[1524],"declarations":[{"constant":false,"id":1524,"mutability":"mutable","name":"a","nameLocation":"19273:1:6","nodeType":"VariableDeclaration","scope":1572,"src":"19265:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1523,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19265:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1537,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1525,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1502,"src":"19277:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1526,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1468,"src":"19287:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19277:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":1532,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1494,"src":"19319:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1535,"indexExpression":{"id":1534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"19326:9:6","subExpression":{"id":1533,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1506,"src":"19326:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19319:17:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"19277:59:6","trueExpression":{"baseExpression":{"id":1528,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1462,"src":"19299:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1531,"indexExpression":{"id":1530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"19306:9:6","subExpression":{"id":1529,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1502,"src":"19306:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19299:17:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"19265:71:6"},{"assignments":[1539],"declarations":[{"constant":false,"id":1539,"mutability":"mutable","name":"b","nameLocation":"19358:1:6","nodeType":"VariableDeclaration","scope":1572,"src":"19350:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1538,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19350:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1561,"initialValue":{"condition":{"baseExpression":{"id":1540,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1459,"src":"19362:10:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"}},"id":1542,"indexExpression":{"id":1541,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1514,"src":"19373:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19362:13:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":1556,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1456,"src":"19474:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":1559,"indexExpression":{"id":1558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"19480:10:6","subExpression":{"id":1557,"name":"proofPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1510,"src":"19480:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19474:17:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"19362:129:6","trueExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1543,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1502,"src":"19395:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1544,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1468,"src":"19405:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19395:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":1550,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1494,"src":"19437:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1553,"indexExpression":{"id":1552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"19444:9:6","subExpression":{"id":1551,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1506,"src":"19444:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19437:17:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"19395:59:6","trueExpression":{"baseExpression":{"id":1546,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1462,"src":"19417:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1549,"indexExpression":{"id":1548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"19424:9:6","subExpression":{"id":1547,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1502,"src":"19424:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19417:17:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":1555,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"19394:61:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"19350:141:6"},{"expression":{"id":1570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1562,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1494,"src":"19505:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1564,"indexExpression":{"id":1563,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1514,"src":"19512:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"19505:9:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1567,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1524,"src":"19545:1:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1568,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1539,"src":"19548:1:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1565,"name":"Hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":742,"src":"19517:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Hashes_$742_$","typeString":"type(library Hashes)"}},"id":1566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19524:20:6","memberName":"commutativeKeccak256","nodeType":"MemberAccess","referencedDeclaration":729,"src":"19517:27:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":1569,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19517:33:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"19505:45:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1571,"nodeType":"ExpressionStatement","src":"19505:45:6"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1517,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1514,"src":"19227:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1518,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1473,"src":"19231:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19227:17:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1573,"initializationExpression":{"assignments":[1514],"declarations":[{"constant":false,"id":1514,"mutability":"mutable","name":"i","nameLocation":"19220:1:6","nodeType":"VariableDeclaration","scope":1573,"src":"19212:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1513,"name":"uint256","nodeType":"ElementaryTypeName","src":"19212:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1516,"initialValue":{"hexValue":"30","id":1515,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19224:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"19212:13:6"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":1521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"19246:3:6","subExpression":{"id":1520,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1514,"src":"19246:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1522,"nodeType":"ExpressionStatement","src":"19246:3:6"},"nodeType":"ForStatement","src":"19207:354:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1574,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1473,"src":"19575:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19591:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"19575:17:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1594,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1468,"src":"19816:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1595,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19828:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"19816:13:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1606,"nodeType":"Block","src":"19878:40:6","statements":[{"expression":{"baseExpression":{"id":1602,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1456,"src":"19899:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":1604,"indexExpression":{"hexValue":"30","id":1603,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19905:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19899:8:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1466,"id":1605,"nodeType":"Return","src":"19892:15:6"}]},"id":1607,"nodeType":"IfStatement","src":"19812:106:6","trueBody":{"id":1601,"nodeType":"Block","src":"19831:41:6","statements":[{"expression":{"baseExpression":{"id":1597,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1462,"src":"19852:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1599,"indexExpression":{"hexValue":"30","id":1598,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19859:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19852:9:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1466,"id":1600,"nodeType":"Return","src":"19845:16:6"}]}},"id":1608,"nodeType":"IfStatement","src":"19571:347:6","trueBody":{"id":1593,"nodeType":"Block","src":"19594:212:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1577,"name":"proofPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1510,"src":"19612:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":1578,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1456,"src":"19624:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":1579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19630:6:6","memberName":"length","nodeType":"MemberAccess","src":"19624:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19612:24:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1585,"nodeType":"IfStatement","src":"19608:100:6","trueBody":{"id":1584,"nodeType":"Block","src":"19638:70:6","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1581,"name":"MerkleProofInvalidMultiproof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":750,"src":"19663:28:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":1582,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19663:30:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1583,"nodeType":"RevertStatement","src":"19656:37:6"}]}},{"id":1592,"nodeType":"UncheckedBlock","src":"19721:75:6","statements":[{"expression":{"baseExpression":{"id":1586,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1494,"src":"19756:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1590,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1587,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1473,"src":"19763:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1588,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19779:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"19763:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19756:25:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1466,"id":1591,"nodeType":"Return","src":"19749:32:6"}]}]}}]},"documentation":{"id":1453,"nodeType":"StructuredDocumentation","src":"16526:1102:6","text":" @dev Returns the root of a tree reconstructed from `leaves` and sibling nodes in `proof`. The reconstruction\n proceeds by incrementally reconstructing all inner nodes by combining a leaf/inner node with either another\n leaf/inner node or a proof sibling node, depending on whether each `proofFlags` item is true or false\n respectively.\n This version handles multiproofs in calldata with the default hashing function.\n CAUTION: Not all Merkle trees admit multiproofs. To use multiproofs, it is sufficient to ensure that: 1) the tree\n is complete (but not necessarily perfect), 2) the leaves to be proven are in the opposite order they are in the\n tree (i.e., as seen from right to left starting at the deepest layer and continuing at the next layer).\n NOTE: The _empty set_ (i.e. the case where `proof.length == 1 && leaves.length == 0`) is considered a no-op,\n and therefore a valid multiproof (i.e. it returns `proof[0]`). Consider disallowing this case if you're not\n validating the leaves elsewhere."},"id":1610,"implemented":true,"kind":"function","modifiers":[],"name":"processMultiProofCalldata","nameLocation":"17642:25:6","nodeType":"FunctionDefinition","parameters":{"id":1463,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1456,"mutability":"mutable","name":"proof","nameLocation":"17696:5:6","nodeType":"VariableDeclaration","scope":1610,"src":"17677:24:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1454,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17677:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1455,"nodeType":"ArrayTypeName","src":"17677:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1459,"mutability":"mutable","name":"proofFlags","nameLocation":"17727:10:6","nodeType":"VariableDeclaration","scope":1610,"src":"17711:26:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":1457,"name":"bool","nodeType":"ElementaryTypeName","src":"17711:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1458,"nodeType":"ArrayTypeName","src":"17711:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":1462,"mutability":"mutable","name":"leaves","nameLocation":"17764:6:6","nodeType":"VariableDeclaration","scope":1610,"src":"17747:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1460,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17747:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1461,"nodeType":"ArrayTypeName","src":"17747:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"17667:109:6"},"returnParameters":{"id":1466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1465,"mutability":"mutable","name":"merkleRoot","nameLocation":"17808:10:6","nodeType":"VariableDeclaration","scope":1610,"src":"17800:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1464,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17800:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"17799:20:6"},"scope":1815,"src":"17633:2291:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1646,"nodeType":"Block","src":"20795:92:6","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1638,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1614,"src":"20838:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},{"id":1639,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1617,"src":"20845:10:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"}},{"id":1640,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1622,"src":"20857:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},{"id":1641,"name":"hasher","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1632,"src":"20865:6:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"},{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"},{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"},{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"}],"id":1637,"name":"processMultiProofCalldata","nodeType":"Identifier","overloadedDeclarations":[1610,1814],"referencedDeclaration":1814,"src":"20812:25:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_bytes32_$dyn_calldata_ptr_$_t_array$_t_bool_$dyn_calldata_ptr_$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$_$returns$_t_bytes32_$","typeString":"function (bytes32[] calldata,bool[] calldata,bytes32[] memory,function (bytes32,bytes32) view returns (bytes32)) view returns (bytes32)"}},"id":1642,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20812:60:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1643,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1619,"src":"20876:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"20812:68:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1636,"id":1645,"nodeType":"Return","src":"20805:75:6"}]},"documentation":{"id":1611,"nodeType":"StructuredDocumentation","src":"19930:600:6","text":" @dev Returns true if the `leaves` can be simultaneously proven to be a part of a Merkle tree defined by\n `root`, according to `proof` and `proofFlags` as described in {processMultiProof}.\n This version handles multiproofs in calldata with a custom hashing function.\n CAUTION: Not all Merkle trees admit multiproofs. See {processMultiProof} for details.\n NOTE: Consider the case where `root == proof[0] && leaves.length == 0` as it will return `true`.\n The `leaves` must be validated independently. See {processMultiProofCalldata}."},"id":1647,"implemented":true,"kind":"function","modifiers":[],"name":"multiProofVerifyCalldata","nameLocation":"20544:24:6","nodeType":"FunctionDefinition","parameters":{"id":1633,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1614,"mutability":"mutable","name":"proof","nameLocation":"20597:5:6","nodeType":"VariableDeclaration","scope":1647,"src":"20578:24:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1612,"name":"bytes32","nodeType":"ElementaryTypeName","src":"20578:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1613,"nodeType":"ArrayTypeName","src":"20578:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1617,"mutability":"mutable","name":"proofFlags","nameLocation":"20628:10:6","nodeType":"VariableDeclaration","scope":1647,"src":"20612:26:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":1615,"name":"bool","nodeType":"ElementaryTypeName","src":"20612:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1616,"nodeType":"ArrayTypeName","src":"20612:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":1619,"mutability":"mutable","name":"root","nameLocation":"20656:4:6","nodeType":"VariableDeclaration","scope":1647,"src":"20648:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1618,"name":"bytes32","nodeType":"ElementaryTypeName","src":"20648:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1622,"mutability":"mutable","name":"leaves","nameLocation":"20687:6:6","nodeType":"VariableDeclaration","scope":1647,"src":"20670:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1620,"name":"bytes32","nodeType":"ElementaryTypeName","src":"20670:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1621,"nodeType":"ArrayTypeName","src":"20670:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1632,"mutability":"mutable","name":"hasher","nameLocation":"20753:6:6","nodeType":"VariableDeclaration","scope":1647,"src":"20703:56:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"typeName":{"id":1631,"nodeType":"FunctionTypeName","parameterTypes":{"id":1627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1624,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1631,"src":"20712:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1623,"name":"bytes32","nodeType":"ElementaryTypeName","src":"20712:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1626,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1631,"src":"20721:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1625,"name":"bytes32","nodeType":"ElementaryTypeName","src":"20721:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"20711:18:6"},"returnParameterTypes":{"id":1630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1629,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1631,"src":"20744:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1628,"name":"bytes32","nodeType":"ElementaryTypeName","src":"20744:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"20743:9:6"},"src":"20703:56:6","stateMutability":"view","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"visibility":"internal"},"visibility":"internal"}],"src":"20568:197:6"},"returnParameters":{"id":1636,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1635,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1647,"src":"20789:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1634,"name":"bool","nodeType":"ElementaryTypeName","src":"20789:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"20788:6:6"},"scope":1815,"src":"20535:352:6","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1813,"nodeType":"Block","src":"22250:2083:6","statements":[{"assignments":[1673],"declarations":[{"constant":false,"id":1673,"mutability":"mutable","name":"leavesLen","nameLocation":"22642:9:6","nodeType":"VariableDeclaration","scope":1813,"src":"22634:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1672,"name":"uint256","nodeType":"ElementaryTypeName","src":"22634:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1676,"initialValue":{"expression":{"id":1674,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1657,"src":"22654:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"22661:6:6","memberName":"length","nodeType":"MemberAccess","src":"22654:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"22634:33:6"},{"assignments":[1678],"declarations":[{"constant":false,"id":1678,"mutability":"mutable","name":"proofFlagsLen","nameLocation":"22685:13:6","nodeType":"VariableDeclaration","scope":1813,"src":"22677:21:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1677,"name":"uint256","nodeType":"ElementaryTypeName","src":"22677:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1681,"initialValue":{"expression":{"id":1679,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1654,"src":"22701:10:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"}},"id":1680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"22712:6:6","memberName":"length","nodeType":"MemberAccess","src":"22701:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"22677:41:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1682,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1673,"src":"22766:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":1683,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1651,"src":"22778:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":1684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"22784:6:6","memberName":"length","nodeType":"MemberAccess","src":"22778:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22766:24:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1686,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1678,"src":"22794:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1687,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22810:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22794:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22766:45:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1694,"nodeType":"IfStatement","src":"22762:113:6","trueBody":{"id":1693,"nodeType":"Block","src":"22813:62:6","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1690,"name":"MerkleProofInvalidMultiproof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":750,"src":"22834:28:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":1691,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22834:30:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1692,"nodeType":"RevertStatement","src":"22827:37:6"}]}},{"assignments":[1699],"declarations":[{"constant":false,"id":1699,"mutability":"mutable","name":"hashes","nameLocation":"23136:6:6","nodeType":"VariableDeclaration","scope":1813,"src":"23119:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1697,"name":"bytes32","nodeType":"ElementaryTypeName","src":"23119:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1698,"nodeType":"ArrayTypeName","src":"23119:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":1705,"initialValue":{"arguments":[{"id":1703,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1678,"src":"23159:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1702,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"23145:13:6","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes32[] memory)"},"typeName":{"baseType":{"id":1700,"name":"bytes32","nodeType":"ElementaryTypeName","src":"23149:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1701,"nodeType":"ArrayTypeName","src":"23149:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}}},"id":1704,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23145:28:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"23119:54:6"},{"assignments":[1707],"declarations":[{"constant":false,"id":1707,"mutability":"mutable","name":"leafPos","nameLocation":"23191:7:6","nodeType":"VariableDeclaration","scope":1813,"src":"23183:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1706,"name":"uint256","nodeType":"ElementaryTypeName","src":"23183:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1709,"initialValue":{"hexValue":"30","id":1708,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23201:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"23183:19:6"},{"assignments":[1711],"declarations":[{"constant":false,"id":1711,"mutability":"mutable","name":"hashPos","nameLocation":"23220:7:6","nodeType":"VariableDeclaration","scope":1813,"src":"23212:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1710,"name":"uint256","nodeType":"ElementaryTypeName","src":"23212:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1713,"initialValue":{"hexValue":"30","id":1712,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23230:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"23212:19:6"},{"assignments":[1715],"declarations":[{"constant":false,"id":1715,"mutability":"mutable","name":"proofPos","nameLocation":"23249:8:6","nodeType":"VariableDeclaration","scope":1813,"src":"23241:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1714,"name":"uint256","nodeType":"ElementaryTypeName","src":"23241:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1717,"initialValue":{"hexValue":"30","id":1716,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23260:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"23241:20:6"},{"body":{"id":1776,"nodeType":"Block","src":"23681:289:6","statements":[{"assignments":[1729],"declarations":[{"constant":false,"id":1729,"mutability":"mutable","name":"a","nameLocation":"23703:1:6","nodeType":"VariableDeclaration","scope":1776,"src":"23695:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1728,"name":"bytes32","nodeType":"ElementaryTypeName","src":"23695:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1742,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1730,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1707,"src":"23707:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1731,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1673,"src":"23717:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23707:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":1737,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1699,"src":"23749:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1740,"indexExpression":{"id":1739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"23756:9:6","subExpression":{"id":1738,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1711,"src":"23756:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"23749:17:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"23707:59:6","trueExpression":{"baseExpression":{"id":1733,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1657,"src":"23729:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1736,"indexExpression":{"id":1735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"23736:9:6","subExpression":{"id":1734,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1707,"src":"23736:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"23729:17:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"23695:71:6"},{"assignments":[1744],"declarations":[{"constant":false,"id":1744,"mutability":"mutable","name":"b","nameLocation":"23788:1:6","nodeType":"VariableDeclaration","scope":1776,"src":"23780:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1743,"name":"bytes32","nodeType":"ElementaryTypeName","src":"23780:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1766,"initialValue":{"condition":{"baseExpression":{"id":1745,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1654,"src":"23792:10:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"}},"id":1747,"indexExpression":{"id":1746,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1719,"src":"23803:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"23792:13:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":1761,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1651,"src":"23904:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":1764,"indexExpression":{"id":1763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"23910:10:6","subExpression":{"id":1762,"name":"proofPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1715,"src":"23910:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"23904:17:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"23792:129:6","trueExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1748,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1707,"src":"23825:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1749,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1673,"src":"23835:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23825:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":1755,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1699,"src":"23867:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1758,"indexExpression":{"id":1757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"23874:9:6","subExpression":{"id":1756,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1711,"src":"23874:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"23867:17:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"23825:59:6","trueExpression":{"baseExpression":{"id":1751,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1657,"src":"23847:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1754,"indexExpression":{"id":1753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"23854:9:6","subExpression":{"id":1752,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1707,"src":"23854:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"23847:17:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":1760,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"23824:61:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"23780:141:6"},{"expression":{"id":1774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1767,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1699,"src":"23935:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1769,"indexExpression":{"id":1768,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1719,"src":"23942:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"23935:9:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1771,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1729,"src":"23954:1:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1772,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1744,"src":"23957:1:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1770,"name":"hasher","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1667,"src":"23947:6:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"}},"id":1773,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23947:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"23935:24:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1775,"nodeType":"ExpressionStatement","src":"23935:24:6"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1722,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1719,"src":"23657:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1723,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1678,"src":"23661:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23657:17:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1777,"initializationExpression":{"assignments":[1719],"declarations":[{"constant":false,"id":1719,"mutability":"mutable","name":"i","nameLocation":"23650:1:6","nodeType":"VariableDeclaration","scope":1777,"src":"23642:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1718,"name":"uint256","nodeType":"ElementaryTypeName","src":"23642:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1721,"initialValue":{"hexValue":"30","id":1720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23654:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"23642:13:6"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":1726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"23676:3:6","subExpression":{"id":1725,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1719,"src":"23676:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1727,"nodeType":"ExpressionStatement","src":"23676:3:6"},"nodeType":"ForStatement","src":"23637:333:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1778,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1678,"src":"23984:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1779,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24000:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"23984:17:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1798,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1673,"src":"24225:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24237:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"24225:13:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1810,"nodeType":"Block","src":"24287:40:6","statements":[{"expression":{"baseExpression":{"id":1806,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1651,"src":"24308:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":1808,"indexExpression":{"hexValue":"30","id":1807,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24314:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"24308:8:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1671,"id":1809,"nodeType":"Return","src":"24301:15:6"}]},"id":1811,"nodeType":"IfStatement","src":"24221:106:6","trueBody":{"id":1805,"nodeType":"Block","src":"24240:41:6","statements":[{"expression":{"baseExpression":{"id":1801,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1657,"src":"24261:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1803,"indexExpression":{"hexValue":"30","id":1802,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24268:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"24261:9:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1671,"id":1804,"nodeType":"Return","src":"24254:16:6"}]}},"id":1812,"nodeType":"IfStatement","src":"23980:347:6","trueBody":{"id":1797,"nodeType":"Block","src":"24003:212:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1781,"name":"proofPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1715,"src":"24021:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":1782,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1651,"src":"24033:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":1783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24039:6:6","memberName":"length","nodeType":"MemberAccess","src":"24033:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24021:24:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1789,"nodeType":"IfStatement","src":"24017:100:6","trueBody":{"id":1788,"nodeType":"Block","src":"24047:70:6","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1785,"name":"MerkleProofInvalidMultiproof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":750,"src":"24072:28:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":1786,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24072:30:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1787,"nodeType":"RevertStatement","src":"24065:37:6"}]}},{"id":1796,"nodeType":"UncheckedBlock","src":"24130:75:6","statements":[{"expression":{"baseExpression":{"id":1790,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1699,"src":"24165:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1794,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1791,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1678,"src":"24172:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1792,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24188:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24172:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"24165:25:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1671,"id":1795,"nodeType":"Return","src":"24158:32:6"}]}]}}]},"documentation":{"id":1648,"nodeType":"StructuredDocumentation","src":"20893:1099:6","text":" @dev Returns the root of a tree reconstructed from `leaves` and sibling nodes in `proof`. The reconstruction\n proceeds by incrementally reconstructing all inner nodes by combining a leaf/inner node with either another\n leaf/inner node or a proof sibling node, depending on whether each `proofFlags` item is true or false\n respectively.\n This version handles multiproofs in calldata with a custom hashing function.\n CAUTION: Not all Merkle trees admit multiproofs. To use multiproofs, it is sufficient to ensure that: 1) the tree\n is complete (but not necessarily perfect), 2) the leaves to be proven are in the opposite order they are in the\n tree (i.e., as seen from right to left starting at the deepest layer and continuing at the next layer).\n NOTE: The _empty set_ (i.e. the case where `proof.length == 1 && leaves.length == 0`) is considered a no-op,\n and therefore a valid multiproof (i.e. it returns `proof[0]`). Consider disallowing this case if you're not\n validating the leaves elsewhere."},"id":1814,"implemented":true,"kind":"function","modifiers":[],"name":"processMultiProofCalldata","nameLocation":"22006:25:6","nodeType":"FunctionDefinition","parameters":{"id":1668,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1651,"mutability":"mutable","name":"proof","nameLocation":"22060:5:6","nodeType":"VariableDeclaration","scope":1814,"src":"22041:24:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1649,"name":"bytes32","nodeType":"ElementaryTypeName","src":"22041:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1650,"nodeType":"ArrayTypeName","src":"22041:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1654,"mutability":"mutable","name":"proofFlags","nameLocation":"22091:10:6","nodeType":"VariableDeclaration","scope":1814,"src":"22075:26:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":1652,"name":"bool","nodeType":"ElementaryTypeName","src":"22075:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1653,"nodeType":"ArrayTypeName","src":"22075:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":1657,"mutability":"mutable","name":"leaves","nameLocation":"22128:6:6","nodeType":"VariableDeclaration","scope":1814,"src":"22111:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1655,"name":"bytes32","nodeType":"ElementaryTypeName","src":"22111:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1656,"nodeType":"ArrayTypeName","src":"22111:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1667,"mutability":"mutable","name":"hasher","nameLocation":"22194:6:6","nodeType":"VariableDeclaration","scope":1814,"src":"22144:56:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"typeName":{"id":1666,"nodeType":"FunctionTypeName","parameterTypes":{"id":1662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1659,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1666,"src":"22153:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1658,"name":"bytes32","nodeType":"ElementaryTypeName","src":"22153:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1661,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1666,"src":"22162:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1660,"name":"bytes32","nodeType":"ElementaryTypeName","src":"22162:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"22152:18:6"},"returnParameterTypes":{"id":1665,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1664,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1666,"src":"22185:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1663,"name":"bytes32","nodeType":"ElementaryTypeName","src":"22185:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"22184:9:6"},"src":"22144:56:6","stateMutability":"view","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"visibility":"internal"},"visibility":"internal"}],"src":"22031:175:6"},"returnParameters":{"id":1671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1670,"mutability":"mutable","name":"merkleRoot","nameLocation":"22238:10:6","nodeType":"VariableDeclaration","scope":1814,"src":"22230:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1669,"name":"bytes32","nodeType":"ElementaryTypeName","src":"22230:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"22229:20:6"},"scope":1815,"src":"21997:2336:6","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":1816,"src":"1353:22982:6","usedErrors":[750],"usedEvents":[]}],"src":"206:24130:6"},"id":6},"contracts/BlocPol.sol":{"ast":{"absolutePath":"contracts/BlocPol.sol","exportedSymbols":{"BlocPol":[2355]},"id":2356,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1817,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:7"},{"abstract":false,"baseContracts":[],"canonicalName":"BlocPol","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":2355,"linearizedBaseContracts":[2355],"name":"BlocPol","nameLocation":"69:7:7","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"0ec1a365aeeec255796bf50d7a2a8f24d0d5f5c6ada0167b6c647428d9164582","id":1825,"name":"CandidateRegistered","nameLocation":"113:19:7","nodeType":"EventDefinition","parameters":{"id":1824,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1819,"indexed":true,"mutability":"mutable","name":"candidateId","nameLocation":"146:11:7","nodeType":"VariableDeclaration","scope":1825,"src":"133:24:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1818,"name":"uint","nodeType":"ElementaryTypeName","src":"133:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1821,"indexed":false,"mutability":"mutable","name":"name","nameLocation":"166:4:7","nodeType":"VariableDeclaration","scope":1825,"src":"159:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1820,"name":"string","nodeType":"ElementaryTypeName","src":"159:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1823,"indexed":false,"mutability":"mutable","name":"ipfsHash","nameLocation":"179:8:7","nodeType":"VariableDeclaration","scope":1825,"src":"172:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1822,"name":"string","nodeType":"ElementaryTypeName","src":"172:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"132:56:7"},"src":"107:82:7"},{"anonymous":false,"eventSelector":"e280a408633821740a429fb671e01cacf8d1d70d5c2735f4f94ec0edef4ea6de","id":1831,"name":"VotingSessionStarted","nameLocation":"201:20:7","nodeType":"EventDefinition","parameters":{"id":1830,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1827,"indexed":false,"mutability":"mutable","name":"startTime","nameLocation":"227:9:7","nodeType":"VariableDeclaration","scope":1831,"src":"222:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1826,"name":"uint","nodeType":"ElementaryTypeName","src":"222:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1829,"indexed":false,"mutability":"mutable","name":"endTime","nameLocation":"243:7:7","nodeType":"VariableDeclaration","scope":1831,"src":"238:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1828,"name":"uint","nodeType":"ElementaryTypeName","src":"238:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"221:30:7"},"src":"195:57:7"},{"anonymous":false,"eventSelector":"74fd836262d1ad6bbd13b40f5a80a5415f4d2db6ee1d7d8f9c9bb515d9f04e01","id":1835,"name":"VotingSessionStopped","nameLocation":"264:20:7","nodeType":"EventDefinition","parameters":{"id":1834,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1833,"indexed":false,"mutability":"mutable","name":"stopTime","nameLocation":"290:8:7","nodeType":"VariableDeclaration","scope":1835,"src":"285:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1832,"name":"uint","nodeType":"ElementaryTypeName","src":"285:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"284:15:7"},"src":"258:42:7"},{"anonymous":false,"eventSelector":"effd419499491389e01fe2774ed0a6fddd60460399033fda8e42ce83081db172","id":1845,"name":"VoteCast","nameLocation":"312:8:7","nodeType":"EventDefinition","parameters":{"id":1844,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1837,"indexed":true,"mutability":"mutable","name":"voter","nameLocation":"337:5:7","nodeType":"VariableDeclaration","scope":1845,"src":"321:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1836,"name":"address","nodeType":"ElementaryTypeName","src":"321:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1839,"indexed":true,"mutability":"mutable","name":"candidateId","nameLocation":"357:11:7","nodeType":"VariableDeclaration","scope":1845,"src":"344:24:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1838,"name":"uint","nodeType":"ElementaryTypeName","src":"344:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1841,"indexed":false,"mutability":"mutable","name":"voteHash","nameLocation":"378:8:7","nodeType":"VariableDeclaration","scope":1845,"src":"370:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1840,"name":"bytes32","nodeType":"ElementaryTypeName","src":"370:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1843,"indexed":false,"mutability":"mutable","name":"txHash","nameLocation":"396:6:7","nodeType":"VariableDeclaration","scope":1845,"src":"388:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1842,"name":"bytes32","nodeType":"ElementaryTypeName","src":"388:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"320:83:7"},"src":"306:98:7"},{"canonicalName":"BlocPol.Candidate","id":1854,"members":[{"constant":false,"id":1847,"mutability":"mutable","name":"id","nameLocation":"469:2:7","nodeType":"VariableDeclaration","scope":1854,"src":"464:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1846,"name":"uint","nodeType":"ElementaryTypeName","src":"464:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1849,"mutability":"mutable","name":"name","nameLocation":"489:4:7","nodeType":"VariableDeclaration","scope":1854,"src":"482:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1848,"name":"string","nodeType":"ElementaryTypeName","src":"482:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1851,"mutability":"mutable","name":"ipfsHash","nameLocation":"511:8:7","nodeType":"VariableDeclaration","scope":1854,"src":"504:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1850,"name":"string","nodeType":"ElementaryTypeName","src":"504:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1853,"mutability":"mutable","name":"voteCount","nameLocation":"579:9:7","nodeType":"VariableDeclaration","scope":1854,"src":"574:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1852,"name":"uint","nodeType":"ElementaryTypeName","src":"574:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Candidate","nameLocation":"443:9:7","nodeType":"StructDefinition","scope":2355,"src":"436:160:7","visibility":"public"},{"constant":false,"functionSelector":"f851a440","id":1856,"mutability":"mutable","name":"admin","nameLocation":"651:5:7","nodeType":"VariableDeclaration","scope":2355,"src":"636:20:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1855,"name":"address","nodeType":"ElementaryTypeName","src":"636:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"bfc12c05","id":1858,"mutability":"mutable","name":"deploymentTimestamp","nameLocation":"675:19:7","nodeType":"VariableDeclaration","scope":2355,"src":"663:31:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1857,"name":"uint","nodeType":"ElementaryTypeName","src":"663:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"408e2727","id":1860,"mutability":"mutable","name":"votingActive","nameLocation":"713:12:7","nodeType":"VariableDeclaration","scope":2355,"src":"701:24:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1859,"name":"bool","nodeType":"ElementaryTypeName","src":"701:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"public"},{"constant":false,"functionSelector":"2019a608","id":1862,"mutability":"mutable","name":"votingStartTime","nameLocation":"744:15:7","nodeType":"VariableDeclaration","scope":2355,"src":"732:27:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1861,"name":"uint","nodeType":"ElementaryTypeName","src":"732:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"1ea736e0","id":1864,"mutability":"mutable","name":"votingEndTime","nameLocation":"778:13:7","nodeType":"VariableDeclaration","scope":2355,"src":"766:25:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1863,"name":"uint","nodeType":"ElementaryTypeName","src":"766:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"id":1866,"mutability":"mutable","name":"nextCandidateId","nameLocation":"811:15:7","nodeType":"VariableDeclaration","scope":2355,"src":"798:28:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1865,"name":"uint","nodeType":"ElementaryTypeName","src":"798:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":1871,"mutability":"mutable","name":"candidates","nameLocation":"870:10:7","nodeType":"VariableDeclaration","scope":2355,"src":"835:45:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Candidate_$1854_storage_$","typeString":"mapping(uint256 => struct BlocPol.Candidate)"},"typeName":{"id":1870,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1867,"name":"uint","nodeType":"ElementaryTypeName","src":"843:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"835:26:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Candidate_$1854_storage_$","typeString":"mapping(uint256 => struct BlocPol.Candidate)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1869,"nodeType":"UserDefinedTypeName","pathNode":{"id":1868,"name":"Candidate","nameLocations":["851:9:7"],"nodeType":"IdentifierPath","referencedDeclaration":1854,"src":"851:9:7"},"referencedDeclaration":1854,"src":"851:9:7","typeDescriptions":{"typeIdentifier":"t_struct$_Candidate_$1854_storage_ptr","typeString":"struct BlocPol.Candidate"}}},"visibility":"private"},{"constant":false,"id":1874,"mutability":"mutable","name":"candidateIds","nameLocation":"902:12:7","nodeType":"VariableDeclaration","scope":2355,"src":"887:27:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[]"},"typeName":{"baseType":{"id":1872,"name":"uint","nodeType":"ElementaryTypeName","src":"887:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1873,"nodeType":"ArrayTypeName","src":"887:6:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"private"},{"constant":false,"id":1878,"mutability":"mutable","name":"hasVoted","nameLocation":"954:8:7","nodeType":"VariableDeclaration","scope":2355,"src":"921:41:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":1877,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1875,"name":"address","nodeType":"ElementaryTypeName","src":"929:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"921:24:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1876,"name":"bool","nodeType":"ElementaryTypeName","src":"940:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"private"},{"constant":false,"id":1882,"mutability":"mutable","name":"voterToCandidate","nameLocation":"1002:16:7","nodeType":"VariableDeclaration","scope":2355,"src":"969:49:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":1881,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1879,"name":"address","nodeType":"ElementaryTypeName","src":"977:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"969:24:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1880,"name":"uint","nodeType":"ElementaryTypeName","src":"988:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":1886,"mutability":"mutable","name":"voterToVoteHash","nameLocation":"1061:15:7","nodeType":"VariableDeclaration","scope":2355,"src":"1025:51:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bytes32_$","typeString":"mapping(address => bytes32)"},"typeName":{"id":1885,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1883,"name":"address","nodeType":"ElementaryTypeName","src":"1033:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1025:27:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bytes32_$","typeString":"mapping(address => bytes32)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1884,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1044:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},"visibility":"private"},{"constant":false,"id":1890,"mutability":"mutable","name":"voterToTxHash","nameLocation":"1119:13:7","nodeType":"VariableDeclaration","scope":2355,"src":"1083:49:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bytes32_$","typeString":"mapping(address => bytes32)"},"typeName":{"id":1889,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1887,"name":"address","nodeType":"ElementaryTypeName","src":"1091:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1083:27:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bytes32_$","typeString":"mapping(address => bytes32)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1888,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1102:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},"visibility":"private"},{"body":{"id":1901,"nodeType":"Block","src":"1188:97:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1893,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1207:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1211:6:7","memberName":"sender","nodeType":"MemberAccess","src":"1207:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1895,"name":"admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1856,"src":"1221:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1207:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c792061646d696e2063616e20706572666f726d207468697320616374696f6e","id":1897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1228:36:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_bd60e0b05a8fda2ba656c4aa2dafb250f5de988439f87c5e504029f988ca599b","typeString":"literal_string \"Only admin can perform this action\""},"value":"Only admin can perform this action"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_bd60e0b05a8fda2ba656c4aa2dafb250f5de988439f87c5e504029f988ca599b","typeString":"literal_string \"Only admin can perform this action\""}],"id":1892,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"1199:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1898,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1199:66:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1899,"nodeType":"ExpressionStatement","src":"1199:66:7"},{"id":1900,"nodeType":"PlaceholderStatement","src":"1276:1:7"}]},"id":1902,"name":"onlyAdmin","nameLocation":"1176:9:7","nodeType":"ModifierDefinition","parameters":{"id":1891,"nodeType":"ParameterList","parameters":[],"src":"1185:2:7"},"src":"1167:118:7","virtual":false,"visibility":"internal"},{"body":{"id":1923,"nodeType":"Block","src":"1319:198:7","statements":[{"expression":{"arguments":[{"id":1905,"name":"votingActive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1860,"src":"1338:12:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"566f74696e67206973206e6f7420616374697665","id":1906,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1352:22:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_5e1ccd0e56e280ec3a5d0205315110ca5cef988766a0ae364ddc07c51c65fe48","typeString":"literal_string \"Voting is not active\""},"value":"Voting is not active"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5e1ccd0e56e280ec3a5d0205315110ca5cef988766a0ae364ddc07c51c65fe48","typeString":"literal_string \"Voting is not active\""}],"id":1904,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"1330:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1907,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1330:45:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1908,"nodeType":"ExpressionStatement","src":"1330:45:7"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1910,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1394:5:7","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1400:9:7","memberName":"timestamp","nodeType":"MemberAccess","src":"1394:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1912,"name":"votingStartTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1862,"src":"1413:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1394:34:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1914,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1432:5:7","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1438:9:7","memberName":"timestamp","nodeType":"MemberAccess","src":"1432:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":1916,"name":"votingEndTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1864,"src":"1451:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1432:32:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1394:70:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"566f74696e67206e6f7420696e20616c6c6f77656420706572696f64","id":1919,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1466:30:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_e87dcbaad14ef148f0a4562e364235fe9715a3707f1535c018ac07bfb7628205","typeString":"literal_string \"Voting not in allowed period\""},"value":"Voting not in allowed period"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e87dcbaad14ef148f0a4562e364235fe9715a3707f1535c018ac07bfb7628205","typeString":"literal_string \"Voting not in allowed period\""}],"id":1909,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"1386:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1920,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1386:111:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1921,"nodeType":"ExpressionStatement","src":"1386:111:7"},{"id":1922,"nodeType":"PlaceholderStatement","src":"1508:1:7"}]},"id":1924,"name":"onlyDuringVoting","nameLocation":"1300:16:7","nodeType":"ModifierDefinition","parameters":{"id":1903,"nodeType":"ParameterList","parameters":[],"src":"1316:2:7"},"src":"1291:226:7","virtual":false,"visibility":"internal"},{"body":{"id":1936,"nodeType":"Block","src":"1543:87:7","statements":[{"expression":{"arguments":[{"id":1931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1562:21:7","subExpression":{"baseExpression":{"id":1927,"name":"hasVoted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1878,"src":"1563:8:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1930,"indexExpression":{"expression":{"id":1928,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1572:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1576:6:7","memberName":"sender","nodeType":"MemberAccess","src":"1572:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1563:20:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"596f75206861766520616c726561647920766f746564","id":1932,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1585:24:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_f717c48f565c1f6c8c7139cf54f577e481ac65760eb92c077a08597c622f2a8a","typeString":"literal_string \"You have already voted\""},"value":"You have already voted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f717c48f565c1f6c8c7139cf54f577e481ac65760eb92c077a08597c622f2a8a","typeString":"literal_string \"You have already voted\""}],"id":1926,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"1554:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1933,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1554:56:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1934,"nodeType":"ExpressionStatement","src":"1554:56:7"},{"id":1935,"nodeType":"PlaceholderStatement","src":"1621:1:7"}]},"id":1937,"name":"onlyOnce","nameLocation":"1532:8:7","nodeType":"ModifierDefinition","parameters":{"id":1925,"nodeType":"ParameterList","parameters":[],"src":"1540:2:7"},"src":"1523:107:7","virtual":false,"visibility":"internal"},{"body":{"id":1950,"nodeType":"Block","src":"1680:85:7","statements":[{"expression":{"id":1943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1940,"name":"admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1856,"src":"1691:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1941,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1699:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1703:6:7","memberName":"sender","nodeType":"MemberAccess","src":"1699:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1691:18:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1944,"nodeType":"ExpressionStatement","src":"1691:18:7"},{"expression":{"id":1948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1945,"name":"deploymentTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1858,"src":"1720:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1946,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1742:5:7","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1748:9:7","memberName":"timestamp","nodeType":"MemberAccess","src":"1742:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1720:37:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1949,"nodeType":"ExpressionStatement","src":"1720:37:7"}]},"id":1951,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1938,"nodeType":"ParameterList","parameters":[],"src":"1677:2:7"},"returnParameters":{"id":1939,"nodeType":"ParameterList","parameters":[],"src":"1680:0:7"},"scope":2355,"src":"1666:99:7","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1988,"nodeType":"Block","src":"1899:238:7","statements":[{"assignments":[1961],"declarations":[{"constant":false,"id":1961,"mutability":"mutable","name":"candidateId","nameLocation":"1915:11:7","nodeType":"VariableDeclaration","scope":1988,"src":"1910:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1960,"name":"uint","nodeType":"ElementaryTypeName","src":"1910:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1964,"initialValue":{"id":1963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1929:17:7","subExpression":{"id":1962,"name":"nextCandidateId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1866,"src":"1929:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1910:36:7"},{"expression":{"id":1974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1965,"name":"candidates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1871,"src":"1957:10:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Candidate_$1854_storage_$","typeString":"mapping(uint256 => struct BlocPol.Candidate storage ref)"}},"id":1967,"indexExpression":{"id":1966,"name":"candidateId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1961,"src":"1968:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1957:23:7","typeDescriptions":{"typeIdentifier":"t_struct$_Candidate_$1854_storage","typeString":"struct BlocPol.Candidate storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1969,"name":"candidateId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1961,"src":"1993:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1970,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1953,"src":"2006:4:7","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"id":1971,"name":"ipfsHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1955,"src":"2012:8:7","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"hexValue":"30","id":1972,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2022:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1968,"name":"Candidate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1854,"src":"1983:9:7","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Candidate_$1854_storage_ptr_$","typeString":"type(struct BlocPol.Candidate storage pointer)"}},"id":1973,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1983:41:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Candidate_$1854_memory_ptr","typeString":"struct BlocPol.Candidate memory"}},"src":"1957:67:7","typeDescriptions":{"typeIdentifier":"t_struct$_Candidate_$1854_storage","typeString":"struct BlocPol.Candidate storage ref"}},"id":1975,"nodeType":"ExpressionStatement","src":"1957:67:7"},{"expression":{"arguments":[{"id":1979,"name":"candidateId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1961,"src":"2053:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1976,"name":"candidateIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1874,"src":"2035:12:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":1978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2048:4:7","memberName":"push","nodeType":"MemberAccess","src":"2035:17:7","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256)"}},"id":1980,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2035:30:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1981,"nodeType":"ExpressionStatement","src":"2035:30:7"},{"eventCall":{"arguments":[{"id":1983,"name":"candidateId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1961,"src":"2101:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1984,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1953,"src":"2114:4:7","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"id":1985,"name":"ipfsHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1955,"src":"2120:8:7","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}],"id":1982,"name":"CandidateRegistered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1825,"src":"2081:19:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,string memory,string memory)"}},"id":1986,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2081:48:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1987,"nodeType":"EmitStatement","src":"2076:53:7"}]},"functionSelector":"0dbce4dd","id":1989,"implemented":true,"kind":"function","modifiers":[{"id":1958,"kind":"modifierInvocation","modifierName":{"id":1957,"name":"onlyAdmin","nameLocations":["1889:9:7"],"nodeType":"IdentifierPath","referencedDeclaration":1902,"src":"1889:9:7"},"nodeType":"ModifierInvocation","src":"1889:9:7"}],"name":"registerCandidate","nameLocation":"1814:17:7","nodeType":"FunctionDefinition","parameters":{"id":1956,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1953,"mutability":"mutable","name":"name","nameLocation":"1848:4:7","nodeType":"VariableDeclaration","scope":1989,"src":"1832:20:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":1952,"name":"string","nodeType":"ElementaryTypeName","src":"1832:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1955,"mutability":"mutable","name":"ipfsHash","nameLocation":"1870:8:7","nodeType":"VariableDeclaration","scope":1989,"src":"1854:24:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":1954,"name":"string","nodeType":"ElementaryTypeName","src":"1854:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1831:48:7"},"returnParameters":{"id":1959,"nodeType":"ParameterList","parameters":[],"src":"1899:0:7"},"scope":2355,"src":"1805:332:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2023,"nodeType":"Block","src":"2214:268:7","statements":[{"expression":{"arguments":[{"id":1998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2233:13:7","subExpression":{"id":1997,"name":"votingActive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1860,"src":"2234:12:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"566f74696e6720616c726561647920616374697665","id":1999,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2248:23:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc030520df3aefef2c03c6e97ccc60431aa6bc0780bf1796a5706e22e40f5f0f","typeString":"literal_string \"Voting already active\""},"value":"Voting already active"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc030520df3aefef2c03c6e97ccc60431aa6bc0780bf1796a5706e22e40f5f0f","typeString":"literal_string \"Voting already active\""}],"id":1996,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"2225:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2000,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2225:47:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2001,"nodeType":"ExpressionStatement","src":"2225:47:7"},{"expression":{"id":2004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2002,"name":"votingActive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1860,"src":"2283:12:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":2003,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2298:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2283:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2005,"nodeType":"ExpressionStatement","src":"2283:19:7"},{"expression":{"id":2009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2006,"name":"votingStartTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1862,"src":"2313:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2007,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2331:5:7","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2337:9:7","memberName":"timestamp","nodeType":"MemberAccess","src":"2331:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2313:33:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2010,"nodeType":"ExpressionStatement","src":"2313:33:7"},{"expression":{"id":2016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2011,"name":"votingEndTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1864,"src":"2357:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2012,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2373:5:7","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2379:9:7","memberName":"timestamp","nodeType":"MemberAccess","src":"2373:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2014,"name":"durationSeconds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1991,"src":"2391:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2373:33:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2357:49:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2017,"nodeType":"ExpressionStatement","src":"2357:49:7"},{"eventCall":{"arguments":[{"id":2019,"name":"votingStartTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1862,"src":"2443:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2020,"name":"votingEndTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1864,"src":"2460:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2018,"name":"VotingSessionStarted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1831,"src":"2422:20:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256)"}},"id":2021,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2422:52:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2022,"nodeType":"EmitStatement","src":"2417:57:7"}]},"functionSelector":"9980a55a","id":2024,"implemented":true,"kind":"function","modifiers":[{"id":1994,"kind":"modifierInvocation","modifierName":{"id":1993,"name":"onlyAdmin","nameLocations":["2204:9:7"],"nodeType":"IdentifierPath","referencedDeclaration":1902,"src":"2204:9:7"},"nodeType":"ModifierInvocation","src":"2204:9:7"}],"name":"startVotingSession","nameLocation":"2154:18:7","nodeType":"FunctionDefinition","parameters":{"id":1992,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1991,"mutability":"mutable","name":"durationSeconds","nameLocation":"2178:15:7","nodeType":"VariableDeclaration","scope":2024,"src":"2173:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1990,"name":"uint","nodeType":"ElementaryTypeName","src":"2173:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2172:22:7"},"returnParameters":{"id":1995,"nodeType":"ParameterList","parameters":[],"src":"2214:0:7"},"scope":2355,"src":"2145:337:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2047,"nodeType":"Block","src":"2538:185:7","statements":[{"expression":{"arguments":[{"id":2030,"name":"votingActive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1860,"src":"2557:12:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"566f74696e67206e6f7420616374697665","id":2031,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2571:19:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_4753b041641313f1ca2fbfa3890c4d0c79c5ac55aa0cd2bcb91e0eb948ae8f7c","typeString":"literal_string \"Voting not active\""},"value":"Voting not active"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4753b041641313f1ca2fbfa3890c4d0c79c5ac55aa0cd2bcb91e0eb948ae8f7c","typeString":"literal_string \"Voting not active\""}],"id":2029,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"2549:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2032,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2549:42:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2033,"nodeType":"ExpressionStatement","src":"2549:42:7"},{"expression":{"id":2036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2034,"name":"votingActive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1860,"src":"2602:12:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":2035,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2617:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"2602:20:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2037,"nodeType":"ExpressionStatement","src":"2602:20:7"},{"expression":{"id":2041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2038,"name":"votingEndTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1864,"src":"2633:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2039,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2649:5:7","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2655:9:7","memberName":"timestamp","nodeType":"MemberAccess","src":"2649:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2633:31:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2042,"nodeType":"ExpressionStatement","src":"2633:31:7"},{"eventCall":{"arguments":[{"id":2044,"name":"votingEndTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1864,"src":"2701:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2043,"name":"VotingSessionStopped","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1835,"src":"2680:20:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":2045,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2680:35:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2046,"nodeType":"EmitStatement","src":"2675:40:7"}]},"functionSelector":"17a0ad8e","id":2048,"implemented":true,"kind":"function","modifiers":[{"id":2027,"kind":"modifierInvocation","modifierName":{"id":2026,"name":"onlyAdmin","nameLocations":["2528:9:7"],"nodeType":"IdentifierPath","referencedDeclaration":1902,"src":"2528:9:7"},"nodeType":"ModifierInvocation","src":"2528:9:7"}],"name":"stopVotingSession","nameLocation":"2499:17:7","nodeType":"FunctionDefinition","parameters":{"id":2025,"nodeType":"ParameterList","parameters":[],"src":"2516:2:7"},"returnParameters":{"id":2028,"nodeType":"ParameterList","parameters":[],"src":"2538:0:7"},"scope":2355,"src":"2490:233:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2141,"nodeType":"Block","src":"2831:610:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":2058,"name":"candidates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1871,"src":"2850:10:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Candidate_$1854_storage_$","typeString":"mapping(uint256 => struct BlocPol.Candidate storage ref)"}},"id":2060,"indexExpression":{"id":2059,"name":"candidateId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2050,"src":"2861:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2850:23:7","typeDescriptions":{"typeIdentifier":"t_struct$_Candidate_$1854_storage","typeString":"struct BlocPol.Candidate storage ref"}},"id":2061,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2874:2:7","memberName":"id","nodeType":"MemberAccess","referencedDeclaration":1847,"src":"2850:26:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2062,"name":"candidateId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2050,"src":"2880:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2850:41:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642063616e646964617465","id":2064,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2893:19:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_5e08d3f48383789a6de57bd1ce2690d9c2e7e2730c9898292987cc6cddf215e1","typeString":"literal_string \"Invalid candidate\""},"value":"Invalid candidate"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5e08d3f48383789a6de57bd1ce2690d9c2e7e2730c9898292987cc6cddf215e1","typeString":"literal_string \"Invalid candidate\""}],"id":2057,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"2842:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2065,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2842:71:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2066,"nodeType":"ExpressionStatement","src":"2842:71:7"},{"expression":{"id":2071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2924:35:7","subExpression":{"expression":{"baseExpression":{"id":2067,"name":"candidates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1871,"src":"2924:10:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Candidate_$1854_storage_$","typeString":"mapping(uint256 => struct BlocPol.Candidate storage ref)"}},"id":2069,"indexExpression":{"id":2068,"name":"candidateId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2050,"src":"2935:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2924:23:7","typeDescriptions":{"typeIdentifier":"t_struct$_Candidate_$1854_storage","typeString":"struct BlocPol.Candidate storage ref"}},"id":2070,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2948:9:7","memberName":"voteCount","nodeType":"MemberAccess","referencedDeclaration":1853,"src":"2924:33:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2072,"nodeType":"ExpressionStatement","src":"2924:35:7"},{"expression":{"id":2078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2073,"name":"hasVoted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1878,"src":"2970:8:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":2076,"indexExpression":{"expression":{"id":2074,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2979:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2983:6:7","memberName":"sender","nodeType":"MemberAccess","src":"2979:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2970:20:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":2077,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2993:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2970:27:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2079,"nodeType":"ExpressionStatement","src":"2970:27:7"},{"expression":{"id":2085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2080,"name":"voterToCandidate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1882,"src":"3008:16:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2083,"indexExpression":{"expression":{"id":2081,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3025:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3029:6:7","memberName":"sender","nodeType":"MemberAccess","src":"3025:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3008:28:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2084,"name":"candidateId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2050,"src":"3039:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3008:42:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2086,"nodeType":"ExpressionStatement","src":"3008:42:7"},{"assignments":[2088],"declarations":[{"constant":false,"id":2088,"mutability":"mutable","name":"voteHash","nameLocation":"3069:8:7","nodeType":"VariableDeclaration","scope":2141,"src":"3061:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2087,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3061:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2099,"initialValue":{"arguments":[{"arguments":[{"expression":{"id":2092,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3107:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3111:6:7","memberName":"sender","nodeType":"MemberAccess","src":"3107:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2094,"name":"candidateId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2050,"src":"3119:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2095,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3132:5:7","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3138:9:7","memberName":"timestamp","nodeType":"MemberAccess","src":"3132:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2090,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3090:3:7","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2091,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3094:12:7","memberName":"encodePacked","nodeType":"MemberAccess","src":"3090:16:7","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2097,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3090:58:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2089,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3080:9:7","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2098,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3080:69:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"3061:88:7"},{"expression":{"id":2105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2100,"name":"voterToVoteHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1886,"src":"3160:15:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bytes32_$","typeString":"mapping(address => bytes32)"}},"id":2103,"indexExpression":{"expression":{"id":2101,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3176:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3180:6:7","memberName":"sender","nodeType":"MemberAccess","src":"3176:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3160:27:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2104,"name":"voteHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2088,"src":"3190:8:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3160:38:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2106,"nodeType":"ExpressionStatement","src":"3160:38:7"},{"assignments":[2108],"declarations":[{"constant":false,"id":2108,"mutability":"mutable","name":"txHash","nameLocation":"3217:6:7","nodeType":"VariableDeclaration","scope":2141,"src":"3209:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2107,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3209:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2125,"initialValue":{"arguments":[{"arguments":[{"expression":{"id":2112,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3253:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3257:6:7","memberName":"sender","nodeType":"MemberAccess","src":"3253:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2114,"name":"candidateId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2050,"src":"3265:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2115,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3278:5:7","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3284:6:7","memberName":"number","nodeType":"MemberAccess","src":"3278:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2118,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3302:5:7","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3308:6:7","memberName":"number","nodeType":"MemberAccess","src":"3302:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3317:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3302:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2117,"name":"blockhash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-5,"src":"3292:9:7","typeDescriptions":{"typeIdentifier":"t_function_blockhash_view$_t_uint256_$returns$_t_bytes32_$","typeString":"function (uint256) view returns (bytes32)"}},"id":2122,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3292:27:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2110,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3236:3:7","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2111,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3240:12:7","memberName":"encodePacked","nodeType":"MemberAccess","src":"3236:16:7","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3236:84:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2109,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3226:9:7","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3226:95:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"3209:112:7"},{"expression":{"id":2131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2126,"name":"voterToTxHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1890,"src":"3332:13:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bytes32_$","typeString":"mapping(address => bytes32)"}},"id":2129,"indexExpression":{"expression":{"id":2127,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3346:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3350:6:7","memberName":"sender","nodeType":"MemberAccess","src":"3346:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3332:25:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2130,"name":"txHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2108,"src":"3360:6:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3332:34:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2132,"nodeType":"ExpressionStatement","src":"3332:34:7"},{"eventCall":{"arguments":[{"expression":{"id":2134,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3391:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3395:6:7","memberName":"sender","nodeType":"MemberAccess","src":"3391:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2136,"name":"candidateId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2050,"src":"3403:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2137,"name":"voteHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2088,"src":"3416:8:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2138,"name":"txHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2108,"src":"3426:6:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2133,"name":"VoteCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1845,"src":"3382:8:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (address,uint256,bytes32,bytes32)"}},"id":2139,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3382:51:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2140,"nodeType":"EmitStatement","src":"3377:56:7"}]},"functionSelector":"0121b93f","id":2142,"implemented":true,"kind":"function","modifiers":[{"id":2053,"kind":"modifierInvocation","modifierName":{"id":2052,"name":"onlyDuringVoting","nameLocations":["2805:16:7"],"nodeType":"IdentifierPath","referencedDeclaration":1924,"src":"2805:16:7"},"nodeType":"ModifierInvocation","src":"2805:16:7"},{"id":2055,"kind":"modifierInvocation","modifierName":{"id":2054,"name":"onlyOnce","nameLocations":["2822:8:7"],"nodeType":"IdentifierPath","referencedDeclaration":1937,"src":"2822:8:7"},"nodeType":"ModifierInvocation","src":"2822:8:7"}],"name":"vote","nameLocation":"2773:4:7","nodeType":"FunctionDefinition","parameters":{"id":2051,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2050,"mutability":"mutable","name":"candidateId","nameLocation":"2783:11:7","nodeType":"VariableDeclaration","scope":2142,"src":"2778:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2049,"name":"uint","nodeType":"ElementaryTypeName","src":"2778:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2777:18:7"},"returnParameters":{"id":2056,"nodeType":"ParameterList","parameters":[],"src":"2831:0:7"},"scope":2355,"src":"2764:677:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2187,"nodeType":"Block","src":"3548:224:7","statements":[{"assignments":[2153],"declarations":[{"constant":false,"id":2153,"mutability":"mutable","name":"list","nameLocation":"3578:4:7","nodeType":"VariableDeclaration","scope":2187,"src":"3559:23:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Candidate_$1854_memory_ptr_$dyn_memory_ptr","typeString":"struct BlocPol.Candidate[]"},"typeName":{"baseType":{"id":2151,"nodeType":"UserDefinedTypeName","pathNode":{"id":2150,"name":"Candidate","nameLocations":["3559:9:7"],"nodeType":"IdentifierPath","referencedDeclaration":1854,"src":"3559:9:7"},"referencedDeclaration":1854,"src":"3559:9:7","typeDescriptions":{"typeIdentifier":"t_struct$_Candidate_$1854_storage_ptr","typeString":"struct BlocPol.Candidate"}},"id":2152,"nodeType":"ArrayTypeName","src":"3559:11:7","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Candidate_$1854_storage_$dyn_storage_ptr","typeString":"struct BlocPol.Candidate[]"}},"visibility":"internal"}],"id":2161,"initialValue":{"arguments":[{"expression":{"id":2158,"name":"candidateIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1874,"src":"3601:12:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":2159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3614:6:7","memberName":"length","nodeType":"MemberAccess","src":"3601:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2157,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"3585:15:7","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Candidate_$1854_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (struct BlocPol.Candidate memory[] memory)"},"typeName":{"baseType":{"id":2155,"nodeType":"UserDefinedTypeName","pathNode":{"id":2154,"name":"Candidate","nameLocations":["3589:9:7"],"nodeType":"IdentifierPath","referencedDeclaration":1854,"src":"3589:9:7"},"referencedDeclaration":1854,"src":"3589:9:7","typeDescriptions":{"typeIdentifier":"t_struct$_Candidate_$1854_storage_ptr","typeString":"struct BlocPol.Candidate"}},"id":2156,"nodeType":"ArrayTypeName","src":"3589:11:7","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Candidate_$1854_storage_$dyn_storage_ptr","typeString":"struct BlocPol.Candidate[]"}}},"id":2160,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3585:36:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Candidate_$1854_memory_ptr_$dyn_memory_ptr","typeString":"struct BlocPol.Candidate memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"3559:62:7"},{"body":{"id":2183,"nodeType":"Block","src":"3679:64:7","statements":[{"expression":{"id":2181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2173,"name":"list","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2153,"src":"3694:4:7","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Candidate_$1854_memory_ptr_$dyn_memory_ptr","typeString":"struct BlocPol.Candidate memory[] memory"}},"id":2175,"indexExpression":{"id":2174,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2163,"src":"3699:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3694:7:7","typeDescriptions":{"typeIdentifier":"t_struct$_Candidate_$1854_memory_ptr","typeString":"struct BlocPol.Candidate memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":2176,"name":"candidates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1871,"src":"3704:10:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Candidate_$1854_storage_$","typeString":"mapping(uint256 => struct BlocPol.Candidate storage ref)"}},"id":2180,"indexExpression":{"baseExpression":{"id":2177,"name":"candidateIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1874,"src":"3715:12:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":2179,"indexExpression":{"id":2178,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2163,"src":"3728:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3715:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3704:27:7","typeDescriptions":{"typeIdentifier":"t_struct$_Candidate_$1854_storage","typeString":"struct BlocPol.Candidate storage ref"}},"src":"3694:37:7","typeDescriptions":{"typeIdentifier":"t_struct$_Candidate_$1854_memory_ptr","typeString":"struct BlocPol.Candidate memory"}},"id":2182,"nodeType":"ExpressionStatement","src":"3694:37:7"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2166,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2163,"src":"3649:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2167,"name":"candidateIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1874,"src":"3653:12:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":2168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3666:6:7","memberName":"length","nodeType":"MemberAccess","src":"3653:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3649:23:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2184,"initializationExpression":{"assignments":[2163],"declarations":[{"constant":false,"id":2163,"mutability":"mutable","name":"i","nameLocation":"3642:1:7","nodeType":"VariableDeclaration","scope":2184,"src":"3637:6:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2162,"name":"uint","nodeType":"ElementaryTypeName","src":"3637:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2165,"initialValue":{"hexValue":"30","id":2164,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3646:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3637:10:7"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":2171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3674:3:7","subExpression":{"id":2170,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2163,"src":"3674:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2172,"nodeType":"ExpressionStatement","src":"3674:3:7"},"nodeType":"ForStatement","src":"3632:111:7"},{"expression":{"id":2185,"name":"list","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2153,"src":"3760:4:7","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Candidate_$1854_memory_ptr_$dyn_memory_ptr","typeString":"struct BlocPol.Candidate memory[] memory"}},"functionReturnParameters":2148,"id":2186,"nodeType":"Return","src":"3753:11:7"}]},"functionSelector":"06a49fce","id":2188,"implemented":true,"kind":"function","modifiers":[],"name":"getCandidates","nameLocation":"3489:13:7","nodeType":"FunctionDefinition","parameters":{"id":2143,"nodeType":"ParameterList","parameters":[],"src":"3502:2:7"},"returnParameters":{"id":2148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2147,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2188,"src":"3528:18:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Candidate_$1854_memory_ptr_$dyn_memory_ptr","typeString":"struct BlocPol.Candidate[]"},"typeName":{"baseType":{"id":2145,"nodeType":"UserDefinedTypeName","pathNode":{"id":2144,"name":"Candidate","nameLocations":["3528:9:7"],"nodeType":"IdentifierPath","referencedDeclaration":1854,"src":"3528:9:7"},"referencedDeclaration":1854,"src":"3528:9:7","typeDescriptions":{"typeIdentifier":"t_struct$_Candidate_$1854_storage_ptr","typeString":"struct BlocPol.Candidate"}},"id":2146,"nodeType":"ArrayTypeName","src":"3528:11:7","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Candidate_$1854_storage_$dyn_storage_ptr","typeString":"struct BlocPol.Candidate[]"}},"visibility":"internal"}],"src":"3527:20:7"},"scope":2355,"src":"3480:292:7","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2200,"nodeType":"Block","src":"3861:49:7","statements":[{"expression":{"baseExpression":{"id":2196,"name":"candidates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1871,"src":"3879:10:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Candidate_$1854_storage_$","typeString":"mapping(uint256 => struct BlocPol.Candidate storage ref)"}},"id":2198,"indexExpression":{"id":2197,"name":"candidateId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2190,"src":"3890:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3879:23:7","typeDescriptions":{"typeIdentifier":"t_struct$_Candidate_$1854_storage","typeString":"struct BlocPol.Candidate storage ref"}},"functionReturnParameters":2195,"id":2199,"nodeType":"Return","src":"3872:30:7"}]},"functionSelector":"35b8e820","id":2201,"implemented":true,"kind":"function","modifiers":[],"name":"getCandidate","nameLocation":"3789:12:7","nodeType":"FunctionDefinition","parameters":{"id":2191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2190,"mutability":"mutable","name":"candidateId","nameLocation":"3807:11:7","nodeType":"VariableDeclaration","scope":2201,"src":"3802:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2189,"name":"uint","nodeType":"ElementaryTypeName","src":"3802:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3801:18:7"},"returnParameters":{"id":2195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2194,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2201,"src":"3843:16:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Candidate_$1854_memory_ptr","typeString":"struct BlocPol.Candidate"},"typeName":{"id":2193,"nodeType":"UserDefinedTypeName","pathNode":{"id":2192,"name":"Candidate","nameLocations":["3843:9:7"],"nodeType":"IdentifierPath","referencedDeclaration":1854,"src":"3843:9:7"},"referencedDeclaration":1854,"src":"3843:9:7","typeDescriptions":{"typeIdentifier":"t_struct$_Candidate_$1854_storage_ptr","typeString":"struct BlocPol.Candidate"}},"visibility":"internal"}],"src":"3842:18:7"},"scope":2355,"src":"3780:130:7","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2213,"nodeType":"Block","src":"3988:59:7","statements":[{"expression":{"expression":{"baseExpression":{"id":2208,"name":"candidates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1871,"src":"4006:10:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Candidate_$1854_storage_$","typeString":"mapping(uint256 => struct BlocPol.Candidate storage ref)"}},"id":2210,"indexExpression":{"id":2209,"name":"candidateId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2203,"src":"4017:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4006:23:7","typeDescriptions":{"typeIdentifier":"t_struct$_Candidate_$1854_storage","typeString":"struct BlocPol.Candidate storage ref"}},"id":2211,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4030:9:7","memberName":"voteCount","nodeType":"MemberAccess","referencedDeclaration":1853,"src":"4006:33:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2207,"id":2212,"nodeType":"Return","src":"3999:40:7"}]},"functionSelector":"2ce35e11","id":2214,"implemented":true,"kind":"function","modifiers":[],"name":"getTotalVotes","nameLocation":"3927:13:7","nodeType":"FunctionDefinition","parameters":{"id":2204,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2203,"mutability":"mutable","name":"candidateId","nameLocation":"3946:11:7","nodeType":"VariableDeclaration","scope":2214,"src":"3941:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2202,"name":"uint","nodeType":"ElementaryTypeName","src":"3941:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3940:18:7"},"returnParameters":{"id":2207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2206,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2214,"src":"3982:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2205,"name":"uint","nodeType":"ElementaryTypeName","src":"3982:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3981:6:7"},"scope":2355,"src":"3918:129:7","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2231,"nodeType":"Block","src":"4110:112:7","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2219,"name":"votingActive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1860,"src":"4128:12:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2220,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4144:5:7","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4150:9:7","memberName":"timestamp","nodeType":"MemberAccess","src":"4144:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2222,"name":"votingStartTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1862,"src":"4163:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4144:34:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4128:50:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2225,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4182:5:7","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4188:9:7","memberName":"timestamp","nodeType":"MemberAccess","src":"4182:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":2227,"name":"votingEndTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1864,"src":"4201:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4182:32:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4128:86:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2218,"id":2230,"nodeType":"Return","src":"4121:93:7"}]},"functionSelector":"47cf6f76","id":2232,"implemented":true,"kind":"function","modifiers":[],"name":"isVotingActive","nameLocation":"4064:14:7","nodeType":"FunctionDefinition","parameters":{"id":2215,"nodeType":"ParameterList","parameters":[],"src":"4078:2:7"},"returnParameters":{"id":2218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2217,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2232,"src":"4104:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2216,"name":"bool","nodeType":"ElementaryTypeName","src":"4104:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4103:6:7"},"scope":2355,"src":"4055:167:7","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2243,"nodeType":"Block","src":"4298:40:7","statements":[{"expression":{"baseExpression":{"id":2239,"name":"hasVoted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1878,"src":"4316:8:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":2241,"indexExpression":{"id":2240,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2234,"src":"4325:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4316:14:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2238,"id":2242,"nodeType":"Return","src":"4309:21:7"}]},"functionSelector":"e3e6ca7d","id":2244,"implemented":true,"kind":"function","modifiers":[],"name":"hasAddressVoted","nameLocation":"4239:15:7","nodeType":"FunctionDefinition","parameters":{"id":2235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2234,"mutability":"mutable","name":"addr","nameLocation":"4263:4:7","nodeType":"VariableDeclaration","scope":2244,"src":"4255:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2233,"name":"address","nodeType":"ElementaryTypeName","src":"4255:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4254:14:7"},"returnParameters":{"id":2238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2237,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2244,"src":"4292:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2236,"name":"bool","nodeType":"ElementaryTypeName","src":"4292:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4291:6:7"},"scope":2355,"src":"4230:108:7","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2262,"nodeType":"Block","src":"4414:117:7","statements":[{"expression":{"arguments":[{"baseExpression":{"id":2252,"name":"hasVoted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1878,"src":"4433:8:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":2254,"indexExpression":{"id":2253,"name":"voter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2246,"src":"4442:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4433:15:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f20766f746520666f756e6420666f7220746869732061646472657373","id":2255,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4450:32:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_a1ffdd4658c7200ed7760116cfeeb47dde15c13b38def0dfcf72d73343842a17","typeString":"literal_string \"No vote found for this address\""},"value":"No vote found for this address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a1ffdd4658c7200ed7760116cfeeb47dde15c13b38def0dfcf72d73343842a17","typeString":"literal_string \"No vote found for this address\""}],"id":2251,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"4425:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2256,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4425:58:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2257,"nodeType":"ExpressionStatement","src":"4425:58:7"},{"expression":{"baseExpression":{"id":2258,"name":"voterToVoteHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1886,"src":"4501:15:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bytes32_$","typeString":"mapping(address => bytes32)"}},"id":2260,"indexExpression":{"id":2259,"name":"voter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2246,"src":"4517:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4501:22:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2250,"id":2261,"nodeType":"Return","src":"4494:29:7"}]},"functionSelector":"959812f8","id":2263,"implemented":true,"kind":"function","modifiers":[],"name":"getVoteHash","nameLocation":"4355:11:7","nodeType":"FunctionDefinition","parameters":{"id":2247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2246,"mutability":"mutable","name":"voter","nameLocation":"4375:5:7","nodeType":"VariableDeclaration","scope":2263,"src":"4367:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2245,"name":"address","nodeType":"ElementaryTypeName","src":"4367:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4366:15:7"},"returnParameters":{"id":2250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2249,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2263,"src":"4405:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2248,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4405:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4404:9:7"},"scope":2355,"src":"4346:185:7","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2281,"nodeType":"Block","src":"4609:115:7","statements":[{"expression":{"arguments":[{"baseExpression":{"id":2271,"name":"hasVoted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1878,"src":"4628:8:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":2273,"indexExpression":{"id":2272,"name":"voter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2265,"src":"4637:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4628:15:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f20766f746520666f756e6420666f7220746869732061646472657373","id":2274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4645:32:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_a1ffdd4658c7200ed7760116cfeeb47dde15c13b38def0dfcf72d73343842a17","typeString":"literal_string \"No vote found for this address\""},"value":"No vote found for this address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a1ffdd4658c7200ed7760116cfeeb47dde15c13b38def0dfcf72d73343842a17","typeString":"literal_string \"No vote found for this address\""}],"id":2270,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"4620:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4620:58:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2276,"nodeType":"ExpressionStatement","src":"4620:58:7"},{"expression":{"baseExpression":{"id":2277,"name":"voterToTxHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1890,"src":"4696:13:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bytes32_$","typeString":"mapping(address => bytes32)"}},"id":2279,"indexExpression":{"id":2278,"name":"voter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2265,"src":"4710:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4696:20:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2269,"id":2280,"nodeType":"Return","src":"4689:27:7"}]},"functionSelector":"e061a858","id":2282,"implemented":true,"kind":"function","modifiers":[],"name":"getVoteTxHash","nameLocation":"4548:13:7","nodeType":"FunctionDefinition","parameters":{"id":2266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2265,"mutability":"mutable","name":"voter","nameLocation":"4570:5:7","nodeType":"VariableDeclaration","scope":2282,"src":"4562:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2264,"name":"address","nodeType":"ElementaryTypeName","src":"4562:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4561:15:7"},"returnParameters":{"id":2269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2268,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2282,"src":"4600:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2267,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4600:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4599:9:7"},"scope":2355,"src":"4539:185:7","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2289,"nodeType":"Block","src":"4795:45:7","statements":[{"expression":{"id":2287,"name":"deploymentTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1858,"src":"4813:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2286,"id":2288,"nodeType":"Return","src":"4806:26:7"}]},"functionSelector":"96a379d8","id":2290,"implemented":true,"kind":"function","modifiers":[],"name":"getDeploymentTimestamp","nameLocation":"4741:22:7","nodeType":"FunctionDefinition","parameters":{"id":2283,"nodeType":"ParameterList","parameters":[],"src":"4763:2:7"},"returnParameters":{"id":2286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2285,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2290,"src":"4789:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2284,"name":"uint","nodeType":"ElementaryTypeName","src":"4789:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4788:6:7"},"scope":2355,"src":"4732:108:7","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2308,"nodeType":"Block","src":"4919:118:7","statements":[{"expression":{"arguments":[{"baseExpression":{"id":2298,"name":"hasVoted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1878,"src":"4938:8:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":2300,"indexExpression":{"id":2299,"name":"voter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2292,"src":"4947:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4938:15:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f20766f746520666f756e6420666f7220746869732061646472657373","id":2301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4955:32:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_a1ffdd4658c7200ed7760116cfeeb47dde15c13b38def0dfcf72d73343842a17","typeString":"literal_string \"No vote found for this address\""},"value":"No vote found for this address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a1ffdd4658c7200ed7760116cfeeb47dde15c13b38def0dfcf72d73343842a17","typeString":"literal_string \"No vote found for this address\""}],"id":2297,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"4930:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2302,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4930:58:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2303,"nodeType":"ExpressionStatement","src":"4930:58:7"},{"expression":{"baseExpression":{"id":2304,"name":"voterToCandidate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1882,"src":"5006:16:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2306,"indexExpression":{"id":2305,"name":"voter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2292,"src":"5023:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5006:23:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2296,"id":2307,"nodeType":"Return","src":"4999:30:7"}]},"functionSelector":"edaa5dfc","id":2309,"implemented":true,"kind":"function","modifiers":[],"name":"getVotedCandidate","nameLocation":"4857:17:7","nodeType":"FunctionDefinition","parameters":{"id":2293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2292,"mutability":"mutable","name":"voter","nameLocation":"4883:5:7","nodeType":"VariableDeclaration","scope":2309,"src":"4875:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2291,"name":"address","nodeType":"ElementaryTypeName","src":"4875:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4874:15:7"},"returnParameters":{"id":2296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2295,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2309,"src":"4913:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2294,"name":"uint","nodeType":"ElementaryTypeName","src":"4913:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4912:6:7"},"scope":2355,"src":"4848:189:7","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2353,"nodeType":"Block","src":"5159:227:7","statements":[{"assignments":[2319],"declarations":[{"constant":false,"id":2319,"mutability":"mutable","name":"votes","nameLocation":"5184:5:7","nodeType":"VariableDeclaration","scope":2353,"src":"5170:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2317,"name":"uint","nodeType":"ElementaryTypeName","src":"5170:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2318,"nodeType":"ArrayTypeName","src":"5170:6:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":2326,"initialValue":{"arguments":[{"expression":{"id":2323,"name":"candidateIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1874,"src":"5203:12:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":2324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5216:6:7","memberName":"length","nodeType":"MemberAccess","src":"5203:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2322,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5192:10:7","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":2320,"name":"uint","nodeType":"ElementaryTypeName","src":"5196:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2321,"nodeType":"ArrayTypeName","src":"5196:6:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":2325,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5192:31:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"5170:53:7"},{"body":{"id":2349,"nodeType":"Block","src":"5281:75:7","statements":[{"expression":{"id":2347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2338,"name":"votes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2319,"src":"5296:5:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2340,"indexExpression":{"id":2339,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2328,"src":"5302:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5296:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":2341,"name":"candidates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1871,"src":"5307:10:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Candidate_$1854_storage_$","typeString":"mapping(uint256 => struct BlocPol.Candidate storage ref)"}},"id":2345,"indexExpression":{"baseExpression":{"id":2342,"name":"candidateIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1874,"src":"5318:12:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":2344,"indexExpression":{"id":2343,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2328,"src":"5331:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5318:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5307:27:7","typeDescriptions":{"typeIdentifier":"t_struct$_Candidate_$1854_storage","typeString":"struct BlocPol.Candidate storage ref"}},"id":2346,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5335:9:7","memberName":"voteCount","nodeType":"MemberAccess","referencedDeclaration":1853,"src":"5307:37:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5296:48:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2348,"nodeType":"ExpressionStatement","src":"5296:48:7"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2331,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2328,"src":"5251:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2332,"name":"candidateIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1874,"src":"5255:12:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":2333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5268:6:7","memberName":"length","nodeType":"MemberAccess","src":"5255:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5251:23:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2350,"initializationExpression":{"assignments":[2328],"declarations":[{"constant":false,"id":2328,"mutability":"mutable","name":"i","nameLocation":"5244:1:7","nodeType":"VariableDeclaration","scope":2350,"src":"5239:6:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2327,"name":"uint","nodeType":"ElementaryTypeName","src":"5239:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2330,"initialValue":{"hexValue":"30","id":2329,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5248:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5239:10:7"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":2336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5276:3:7","subExpression":{"id":2335,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2328,"src":"5276:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2337,"nodeType":"ExpressionStatement","src":"5276:3:7"},"nodeType":"ForStatement","src":"5234:122:7"},{"expression":{"id":2351,"name":"votes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2319,"src":"5373:5:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":2314,"id":2352,"nodeType":"Return","src":"5366:12:7"}]},"functionSelector":"851b6ef2","id":2354,"implemented":true,"kind":"function","modifiers":[],"name":"getAllVotes","nameLocation":"5107:11:7","nodeType":"FunctionDefinition","parameters":{"id":2310,"nodeType":"ParameterList","parameters":[],"src":"5118:2:7"},"returnParameters":{"id":2314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2313,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2354,"src":"5144:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2311,"name":"uint","nodeType":"ElementaryTypeName","src":"5144:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2312,"nodeType":"ArrayTypeName","src":"5144:6:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"5143:15:7"},"scope":2355,"src":"5098:288:7","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2356,"src":"60:5329:7","usedErrors":[],"usedEvents":[1825,1831,1835,1845]}],"src":"33:5357:7"},"id":7},"contracts/BlocPolAdvanced.sol":{"ast":{"absolutePath":"contracts/BlocPolAdvanced.sol","exportedSymbols":{"BlocPolAdvanced":[3786],"Context":[177],"CryptographicUtils":[7219],"ECDSA":[702],"Hashes":[742],"LiquidDemocracy":[4854],"MerkleProof":[1815],"Ownable":[147],"Pausable":[285],"ReentrancyGuard":[354],"VoteMixing":[5908],"ZKProofVerifier":[6512]},"id":3787,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2357,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:8"},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":2358,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3787,"sourceUnit":148,"src":"60:52:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","file":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","id":2359,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3787,"sourceUnit":355,"src":"114:59:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Pausable.sol","file":"@openzeppelin/contracts/utils/Pausable.sol","id":2360,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3787,"sourceUnit":286,"src":"175:52:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/libraries/CryptographicUtils.sol","file":"./libraries/CryptographicUtils.sol","id":2361,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3787,"sourceUnit":7220,"src":"229:44:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/ZKProofVerifier.sol","file":"./ZKProofVerifier.sol","id":2362,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3787,"sourceUnit":6513,"src":"275:31:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/LiquidDemocracy.sol","file":"./LiquidDemocracy.sol","id":2363,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3787,"sourceUnit":4855,"src":"308:31:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/VoteMixing.sol","file":"./VoteMixing.sol","id":2364,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3787,"sourceUnit":5909,"src":"341:26:8","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2366,"name":"Ownable","nameLocations":["622:7:8"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"622:7:8"},"id":2367,"nodeType":"InheritanceSpecifier","src":"622:7:8"},{"baseName":{"id":2368,"name":"ReentrancyGuard","nameLocations":["631:15:8"],"nodeType":"IdentifierPath","referencedDeclaration":354,"src":"631:15:8"},"id":2369,"nodeType":"InheritanceSpecifier","src":"631:15:8"},{"baseName":{"id":2370,"name":"Pausable","nameLocations":["648:8:8"],"nodeType":"IdentifierPath","referencedDeclaration":285,"src":"648:8:8"},"id":2371,"nodeType":"InheritanceSpecifier","src":"648:8:8"}],"canonicalName":"BlocPolAdvanced","contractDependencies":[],"contractKind":"contract","documentation":{"id":2365,"nodeType":"StructuredDocumentation","src":"371:221:8","text":" @title BlocPolAdvanced\n @dev Advanced blockchain voting system with ZK-proofs, liquid democracy, and vote mixing\n @notice Comprehensive voting system with privacy, scalability, and transparency features"},"fullyImplemented":true,"id":3786,"linearizedBaseContracts":[3786,285,354,147,177],"name":"BlocPolAdvanced","nameLocation":"603:15:8","nodeType":"ContractDefinition","nodes":[{"global":false,"id":2373,"libraryName":{"id":2372,"name":"CryptographicUtils","nameLocations":["670:18:8"],"nodeType":"IdentifierPath","referencedDeclaration":7219,"src":"670:18:8"},"nodeType":"UsingForDirective","src":"664:31:8"},{"canonicalName":"BlocPolAdvanced.Candidate","id":2388,"members":[{"constant":false,"id":2375,"mutability":"mutable","name":"id","nameLocation":"763:2:8","nodeType":"VariableDeclaration","scope":2388,"src":"755:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2374,"name":"uint256","nodeType":"ElementaryTypeName","src":"755:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2377,"mutability":"mutable","name":"name","nameLocation":"783:4:8","nodeType":"VariableDeclaration","scope":2388,"src":"776:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2376,"name":"string","nodeType":"ElementaryTypeName","src":"776:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2379,"mutability":"mutable","name":"ipfsHash","nameLocation":"805:8:8","nodeType":"VariableDeclaration","scope":2388,"src":"798:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2378,"name":"string","nodeType":"ElementaryTypeName","src":"798:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2381,"mutability":"mutable","name":"voteCount","nameLocation":"832:9:8","nodeType":"VariableDeclaration","scope":2388,"src":"824:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2380,"name":"uint256","nodeType":"ElementaryTypeName","src":"824:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2383,"mutability":"mutable","name":"delegatedVoteCount","nameLocation":"860:18:8","nodeType":"VariableDeclaration","scope":2388,"src":"852:26:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2382,"name":"uint256","nodeType":"ElementaryTypeName","src":"852:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2385,"mutability":"mutable","name":"isActive","nameLocation":"894:8:8","nodeType":"VariableDeclaration","scope":2388,"src":"889:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2384,"name":"bool","nodeType":"ElementaryTypeName","src":"889:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2387,"mutability":"mutable","name":"registrationTime","nameLocation":"921:16:8","nodeType":"VariableDeclaration","scope":2388,"src":"913:24:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2386,"name":"uint256","nodeType":"ElementaryTypeName","src":"913:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Candidate","nameLocation":"734:9:8","nodeType":"StructDefinition","scope":3786,"src":"727:218:8","visibility":"public"},{"canonicalName":"BlocPolAdvanced.AdvancedVote","id":2411,"members":[{"constant":false,"id":2390,"mutability":"mutable","name":"voter","nameLocation":"992:5:8","nodeType":"VariableDeclaration","scope":2411,"src":"984:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2389,"name":"address","nodeType":"ElementaryTypeName","src":"984:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2392,"mutability":"mutable","name":"candidateId","nameLocation":"1016:11:8","nodeType":"VariableDeclaration","scope":2411,"src":"1008:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2391,"name":"uint256","nodeType":"ElementaryTypeName","src":"1008:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2395,"mutability":"mutable","name":"rankedChoices","nameLocation":"1048:13:8","nodeType":"VariableDeclaration","scope":2411,"src":"1038:23:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2393,"name":"uint256","nodeType":"ElementaryTypeName","src":"1038:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2394,"nodeType":"ArrayTypeName","src":"1038:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2397,"mutability":"mutable","name":"commitmentHash","nameLocation":"1113:14:8","nodeType":"VariableDeclaration","scope":2411,"src":"1105:22:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2396,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1105:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2399,"mutability":"mutable","name":"zkProofHash","nameLocation":"1177:11:8","nodeType":"VariableDeclaration","scope":2411,"src":"1169:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2398,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1169:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2401,"mutability":"mutable","name":"mixedVoteHash","nameLocation":"1245:13:8","nodeType":"VariableDeclaration","scope":2411,"src":"1237:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2400,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1237:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2403,"mutability":"mutable","name":"votingPower","nameLocation":"1303:11:8","nodeType":"VariableDeclaration","scope":2411,"src":"1295:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2402,"name":"uint256","nodeType":"ElementaryTypeName","src":"1295:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2405,"mutability":"mutable","name":"timestamp","nameLocation":"1366:9:8","nodeType":"VariableDeclaration","scope":2411,"src":"1358:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2404,"name":"uint256","nodeType":"ElementaryTypeName","src":"1358:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2407,"mutability":"mutable","name":"isRevealed","nameLocation":"1391:10:8","nodeType":"VariableDeclaration","scope":2411,"src":"1386:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2406,"name":"bool","nodeType":"ElementaryTypeName","src":"1386:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2410,"mutability":"mutable","name":"voteType","nameLocation":"1421:8:8","nodeType":"VariableDeclaration","scope":2411,"src":"1412:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_VoteType_$2450","typeString":"enum BlocPolAdvanced.VoteType"},"typeName":{"id":2409,"nodeType":"UserDefinedTypeName","pathNode":{"id":2408,"name":"VoteType","nameLocations":["1412:8:8"],"nodeType":"IdentifierPath","referencedDeclaration":2450,"src":"1412:8:8"},"referencedDeclaration":2450,"src":"1412:8:8","typeDescriptions":{"typeIdentifier":"t_enum$_VoteType_$2450","typeString":"enum BlocPolAdvanced.VoteType"}},"visibility":"internal"}],"name":"AdvancedVote","nameLocation":"960:12:8","nodeType":"StructDefinition","scope":3786,"src":"953:484:8","visibility":"public"},{"canonicalName":"BlocPolAdvanced.VotingSession","id":2433,"members":[{"constant":false,"id":2413,"mutability":"mutable","name":"sessionId","nameLocation":"1485:9:8","nodeType":"VariableDeclaration","scope":2433,"src":"1477:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2412,"name":"uint256","nodeType":"ElementaryTypeName","src":"1477:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2415,"mutability":"mutable","name":"startTime","nameLocation":"1513:9:8","nodeType":"VariableDeclaration","scope":2433,"src":"1505:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2414,"name":"uint256","nodeType":"ElementaryTypeName","src":"1505:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2417,"mutability":"mutable","name":"endTime","nameLocation":"1541:7:8","nodeType":"VariableDeclaration","scope":2433,"src":"1533:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2416,"name":"uint256","nodeType":"ElementaryTypeName","src":"1533:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2419,"mutability":"mutable","name":"revealTime","nameLocation":"1567:10:8","nodeType":"VariableDeclaration","scope":2433,"src":"1559:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2418,"name":"uint256","nodeType":"ElementaryTypeName","src":"1559:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2421,"mutability":"mutable","name":"isActive","nameLocation":"1593:8:8","nodeType":"VariableDeclaration","scope":2433,"src":"1588:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2420,"name":"bool","nodeType":"ElementaryTypeName","src":"1588:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2423,"mutability":"mutable","name":"isRevealed","nameLocation":"1617:10:8","nodeType":"VariableDeclaration","scope":2433,"src":"1612:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2422,"name":"bool","nodeType":"ElementaryTypeName","src":"1612:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2425,"mutability":"mutable","name":"totalVotes","nameLocation":"1646:10:8","nodeType":"VariableDeclaration","scope":2433,"src":"1638:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2424,"name":"uint256","nodeType":"ElementaryTypeName","src":"1638:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2427,"mutability":"mutable","name":"totalVotingPower","nameLocation":"1675:16:8","nodeType":"VariableDeclaration","scope":2433,"src":"1667:24:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2426,"name":"uint256","nodeType":"ElementaryTypeName","src":"1667:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2430,"mutability":"mutable","name":"mode","nameLocation":"1713:4:8","nodeType":"VariableDeclaration","scope":2433,"src":"1702:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_VotingMode_$2455","typeString":"enum BlocPolAdvanced.VotingMode"},"typeName":{"id":2429,"nodeType":"UserDefinedTypeName","pathNode":{"id":2428,"name":"VotingMode","nameLocations":["1702:10:8"],"nodeType":"IdentifierPath","referencedDeclaration":2455,"src":"1702:10:8"},"referencedDeclaration":2455,"src":"1702:10:8","typeDescriptions":{"typeIdentifier":"t_enum$_VotingMode_$2455","typeString":"enum BlocPolAdvanced.VotingMode"}},"visibility":"internal"},{"constant":false,"id":2432,"mutability":"mutable","name":"merkleRoot","nameLocation":"1736:10:8","nodeType":"VariableDeclaration","scope":2433,"src":"1728:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2431,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1728:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"VotingSession","nameLocation":"1452:13:8","nodeType":"StructDefinition","scope":3786,"src":"1445:309:8","visibility":"public"},{"canonicalName":"BlocPolAdvanced.AuditTrail","id":2445,"members":[{"constant":false,"id":2435,"mutability":"mutable","name":"actionHash","nameLocation":"1799:10:8","nodeType":"VariableDeclaration","scope":2445,"src":"1791:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2434,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1791:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2437,"mutability":"mutable","name":"actor","nameLocation":"1828:5:8","nodeType":"VariableDeclaration","scope":2445,"src":"1820:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2436,"name":"address","nodeType":"ElementaryTypeName","src":"1820:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2439,"mutability":"mutable","name":"action","nameLocation":"1851:6:8","nodeType":"VariableDeclaration","scope":2445,"src":"1844:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2438,"name":"string","nodeType":"ElementaryTypeName","src":"1844:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2441,"mutability":"mutable","name":"timestamp","nameLocation":"1876:9:8","nodeType":"VariableDeclaration","scope":2445,"src":"1868:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2440,"name":"uint256","nodeType":"ElementaryTypeName","src":"1868:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2444,"mutability":"mutable","name":"proof","nameLocation":"1906:5:8","nodeType":"VariableDeclaration","scope":2445,"src":"1896:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2442,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1896:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2443,"nodeType":"ArrayTypeName","src":"1896:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"name":"AuditTrail","nameLocation":"1769:10:8","nodeType":"StructDefinition","scope":3786,"src":"1762:157:8","visibility":"public"},{"canonicalName":"BlocPolAdvanced.VoteType","id":2450,"members":[{"id":2446,"name":"DIRECT","nameLocation":"1952:6:8","nodeType":"EnumValue","src":"1952:6:8"},{"id":2447,"name":"DELEGATED","nameLocation":"1992:9:8","nodeType":"EnumValue","src":"1992:9:8"},{"id":2448,"name":"MIXED","nameLocation":"2035:5:8","nodeType":"EnumValue","src":"2035:5:8"},{"id":2449,"name":"ZK_PROOF","nameLocation":"2074:8:8","nodeType":"EnumValue","src":"2074:8:8"}],"name":"VoteType","nameLocation":"1932:8:8","nodeType":"EnumDefinition","src":"1927:198:8"},{"canonicalName":"BlocPolAdvanced.VotingMode","id":2455,"members":[{"id":2451,"name":"SIMPLE_MAJORITY","nameLocation":"2160:15:8","nodeType":"EnumValue","src":"2160:15:8"},{"id":2452,"name":"RANKED_CHOICE","nameLocation":"2186:13:8","nodeType":"EnumValue","src":"2186:13:8"},{"id":2453,"name":"LIQUID_DEMOCRACY","nameLocation":"2210:16:8","nodeType":"EnumValue","src":"2210:16:8"},{"id":2454,"name":"MIXED_ANONYMOUS","nameLocation":"2237:15:8","nodeType":"EnumValue","src":"2237:15:8"}],"name":"VotingMode","nameLocation":"2138:10:8","nodeType":"EnumDefinition","src":"2133:126:8"},{"constant":false,"id":2460,"mutability":"mutable","name":"candidates","nameLocation":"2337:10:8","nodeType":"VariableDeclaration","scope":3786,"src":"2299:48:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Candidate_$2388_storage_$","typeString":"mapping(uint256 => struct BlocPolAdvanced.Candidate)"},"typeName":{"id":2459,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2456,"name":"uint256","nodeType":"ElementaryTypeName","src":"2307:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"2299:29:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Candidate_$2388_storage_$","typeString":"mapping(uint256 => struct BlocPolAdvanced.Candidate)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2458,"nodeType":"UserDefinedTypeName","pathNode":{"id":2457,"name":"Candidate","nameLocations":["2318:9:8"],"nodeType":"IdentifierPath","referencedDeclaration":2388,"src":"2318:9:8"},"referencedDeclaration":2388,"src":"2318:9:8","typeDescriptions":{"typeIdentifier":"t_struct$_Candidate_$2388_storage_ptr","typeString":"struct BlocPolAdvanced.Candidate"}}},"visibility":"private"},{"constant":false,"id":2465,"mutability":"mutable","name":"votes","nameLocation":"2395:5:8","nodeType":"VariableDeclaration","scope":3786,"src":"2354:46:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_AdvancedVote_$2411_storage_$","typeString":"mapping(uint256 => struct BlocPolAdvanced.AdvancedVote)"},"typeName":{"id":2464,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2461,"name":"uint256","nodeType":"ElementaryTypeName","src":"2362:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"2354:32:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_AdvancedVote_$2411_storage_$","typeString":"mapping(uint256 => struct BlocPolAdvanced.AdvancedVote)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2463,"nodeType":"UserDefinedTypeName","pathNode":{"id":2462,"name":"AdvancedVote","nameLocations":["2373:12:8"],"nodeType":"IdentifierPath","referencedDeclaration":2411,"src":"2373:12:8"},"referencedDeclaration":2411,"src":"2373:12:8","typeDescriptions":{"typeIdentifier":"t_struct$_AdvancedVote_$2411_storage_ptr","typeString":"struct BlocPolAdvanced.AdvancedVote"}}},"visibility":"private"},{"constant":false,"id":2470,"mutability":"mutable","name":"votingSessions","nameLocation":"2449:14:8","nodeType":"VariableDeclaration","scope":3786,"src":"2407:56:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_VotingSession_$2433_storage_$","typeString":"mapping(uint256 => struct BlocPolAdvanced.VotingSession)"},"typeName":{"id":2469,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2466,"name":"uint256","nodeType":"ElementaryTypeName","src":"2415:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"2407:33:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_VotingSession_$2433_storage_$","typeString":"mapping(uint256 => struct BlocPolAdvanced.VotingSession)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2468,"nodeType":"UserDefinedTypeName","pathNode":{"id":2467,"name":"VotingSession","nameLocations":["2426:13:8"],"nodeType":"IdentifierPath","referencedDeclaration":2433,"src":"2426:13:8"},"referencedDeclaration":2433,"src":"2426:13:8","typeDescriptions":{"typeIdentifier":"t_struct$_VotingSession_$2433_storage_ptr","typeString":"struct BlocPolAdvanced.VotingSession"}}},"visibility":"private"},{"constant":false,"id":2476,"mutability":"mutable","name":"hasVoted","nameLocation":"2523:8:8","nodeType":"VariableDeclaration","scope":3786,"src":"2470:61:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$","typeString":"mapping(address => mapping(uint256 => bool))"},"typeName":{"id":2475,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2471,"name":"address","nodeType":"ElementaryTypeName","src":"2478:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2470:44:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$","typeString":"mapping(address => mapping(uint256 => bool))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2474,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2472,"name":"uint256","nodeType":"ElementaryTypeName","src":"2497:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"2489:24:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2473,"name":"bool","nodeType":"ElementaryTypeName","src":"2508:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"private"},{"constant":false,"id":2481,"mutability":"mutable","name":"voterVotes","nameLocation":"2576:10:8","nodeType":"VariableDeclaration","scope":3786,"src":"2538:48:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[])"},"typeName":{"id":2480,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2477,"name":"address","nodeType":"ElementaryTypeName","src":"2546:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2538:29:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[])"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"baseType":{"id":2478,"name":"uint256","nodeType":"ElementaryTypeName","src":"2557:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2479,"nodeType":"ArrayTypeName","src":"2557:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"visibility":"private"},{"constant":false,"id":2486,"mutability":"mutable","name":"auditTrails","nameLocation":"2632:11:8","nodeType":"VariableDeclaration","scope":3786,"src":"2593:50:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AuditTrail_$2445_storage_$","typeString":"mapping(bytes32 => struct BlocPolAdvanced.AuditTrail)"},"typeName":{"id":2485,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2482,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2601:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"2593:30:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AuditTrail_$2445_storage_$","typeString":"mapping(bytes32 => struct BlocPolAdvanced.AuditTrail)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2484,"nodeType":"UserDefinedTypeName","pathNode":{"id":2483,"name":"AuditTrail","nameLocations":["2612:10:8"],"nodeType":"IdentifierPath","referencedDeclaration":2445,"src":"2612:10:8"},"referencedDeclaration":2445,"src":"2612:10:8","typeDescriptions":{"typeIdentifier":"t_struct$_AuditTrail_$2445_storage_ptr","typeString":"struct BlocPolAdvanced.AuditTrail"}}},"visibility":"private"},{"constant":false,"id":2488,"mutability":"mutable","name":"candidateCounter","nameLocation":"2672:16:8","nodeType":"VariableDeclaration","scope":3786,"src":"2656:32:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2487,"name":"uint256","nodeType":"ElementaryTypeName","src":"2656:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":2490,"mutability":"mutable","name":"voteCounter","nameLocation":"2711:11:8","nodeType":"VariableDeclaration","scope":3786,"src":"2695:27:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2489,"name":"uint256","nodeType":"ElementaryTypeName","src":"2695:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":2492,"mutability":"mutable","name":"sessionCounter","nameLocation":"2745:14:8","nodeType":"VariableDeclaration","scope":3786,"src":"2729:30:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2491,"name":"uint256","nodeType":"ElementaryTypeName","src":"2729:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":2494,"mutability":"mutable","name":"auditCounter","nameLocation":"2782:12:8","nodeType":"VariableDeclaration","scope":3786,"src":"2766:28:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2493,"name":"uint256","nodeType":"ElementaryTypeName","src":"2766:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"functionSelector":"2beb449e","id":2497,"mutability":"mutable","name":"zkProofVerifier","nameLocation":"2858:15:8","nodeType":"VariableDeclaration","scope":3786,"src":"2835:38:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ZKProofVerifier_$6512","typeString":"contract ZKProofVerifier"},"typeName":{"id":2496,"nodeType":"UserDefinedTypeName","pathNode":{"id":2495,"name":"ZKProofVerifier","nameLocations":["2835:15:8"],"nodeType":"IdentifierPath","referencedDeclaration":6512,"src":"2835:15:8"},"referencedDeclaration":6512,"src":"2835:15:8","typeDescriptions":{"typeIdentifier":"t_contract$_ZKProofVerifier_$6512","typeString":"contract ZKProofVerifier"}},"visibility":"public"},{"constant":false,"functionSelector":"7dabdd99","id":2500,"mutability":"mutable","name":"liquidDemocracy","nameLocation":"2903:15:8","nodeType":"VariableDeclaration","scope":3786,"src":"2880:38:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_LiquidDemocracy_$4854","typeString":"contract LiquidDemocracy"},"typeName":{"id":2499,"nodeType":"UserDefinedTypeName","pathNode":{"id":2498,"name":"LiquidDemocracy","nameLocations":["2880:15:8"],"nodeType":"IdentifierPath","referencedDeclaration":4854,"src":"2880:15:8"},"referencedDeclaration":4854,"src":"2880:15:8","typeDescriptions":{"typeIdentifier":"t_contract$_LiquidDemocracy_$4854","typeString":"contract LiquidDemocracy"}},"visibility":"public"},{"constant":false,"functionSelector":"4650baa1","id":2503,"mutability":"mutable","name":"voteMixing","nameLocation":"2943:10:8","nodeType":"VariableDeclaration","scope":3786,"src":"2925:28:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_VoteMixing_$5908","typeString":"contract VoteMixing"},"typeName":{"id":2502,"nodeType":"UserDefinedTypeName","pathNode":{"id":2501,"name":"VoteMixing","nameLocations":["2925:10:8"],"nodeType":"IdentifierPath","referencedDeclaration":5908,"src":"2925:10:8"},"referencedDeclaration":5908,"src":"2925:10:8","typeDescriptions":{"typeIdentifier":"t_contract$_VoteMixing_$5908","typeString":"contract VoteMixing"}},"visibility":"public"},{"constant":false,"functionSelector":"36fffde0","id":2505,"mutability":"mutable","name":"minVotingPower","nameLocation":"3003:14:8","nodeType":"VariableDeclaration","scope":3786,"src":"2988:29:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2504,"name":"uint256","nodeType":"ElementaryTypeName","src":"2988:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"9ef0fb85","id":2507,"mutability":"mutable","name":"maxVotingPower","nameLocation":"3039:14:8","nodeType":"VariableDeclaration","scope":3786,"src":"3024:29:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2506,"name":"uint256","nodeType":"ElementaryTypeName","src":"3024:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"8a3c5f9b","id":2509,"mutability":"mutable","name":"commitmentPeriod","nameLocation":"3075:16:8","nodeType":"VariableDeclaration","scope":3786,"src":"3060:31:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2508,"name":"uint256","nodeType":"ElementaryTypeName","src":"3060:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"f9604681","id":2511,"mutability":"mutable","name":"revealPeriod","nameLocation":"3113:12:8","nodeType":"VariableDeclaration","scope":3786,"src":"3098:27:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2510,"name":"uint256","nodeType":"ElementaryTypeName","src":"3098:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"dd304e3e","id":2513,"mutability":"mutable","name":"zkProofsEnabled","nameLocation":"3144:15:8","nodeType":"VariableDeclaration","scope":3786,"src":"3132:27:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2512,"name":"bool","nodeType":"ElementaryTypeName","src":"3132:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"public"},{"constant":false,"functionSelector":"5414e58e","id":2515,"mutability":"mutable","name":"liquidDemocracyEnabled","nameLocation":"3178:22:8","nodeType":"VariableDeclaration","scope":3786,"src":"3166:34:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2514,"name":"bool","nodeType":"ElementaryTypeName","src":"3166:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"public"},{"constant":false,"functionSelector":"c7a800af","id":2517,"mutability":"mutable","name":"voteMixingEnabled","nameLocation":"3219:17:8","nodeType":"VariableDeclaration","scope":3786,"src":"3207:29:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2516,"name":"bool","nodeType":"ElementaryTypeName","src":"3207:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"public"},{"anonymous":false,"eventSelector":"d97eaf93ad8386d19c4444905f34d814effa6ed87627bbbaa1e75e797f5b65d5","id":2527,"name":"CandidateRegistered","nameLocation":"3278:19:8","nodeType":"EventDefinition","parameters":{"id":2526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2519,"indexed":true,"mutability":"mutable","name":"candidateId","nameLocation":"3314:11:8","nodeType":"VariableDeclaration","scope":2527,"src":"3298:27:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2518,"name":"uint256","nodeType":"ElementaryTypeName","src":"3298:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2521,"indexed":false,"mutability":"mutable","name":"name","nameLocation":"3334:4:8","nodeType":"VariableDeclaration","scope":2527,"src":"3327:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2520,"name":"string","nodeType":"ElementaryTypeName","src":"3327:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2523,"indexed":false,"mutability":"mutable","name":"ipfsHash","nameLocation":"3347:8:8","nodeType":"VariableDeclaration","scope":2527,"src":"3340:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2522,"name":"string","nodeType":"ElementaryTypeName","src":"3340:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2525,"indexed":false,"mutability":"mutable","name":"timestamp","nameLocation":"3365:9:8","nodeType":"VariableDeclaration","scope":2527,"src":"3357:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2524,"name":"uint256","nodeType":"ElementaryTypeName","src":"3357:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3297:78:8"},"src":"3272:104:8"},{"anonymous":false,"eventSelector":"00914bb2a5e0ac4484c74b57ec82229700da233d0eed407c4cff3eb82aac23bf","id":2538,"name":"VotingSessionCreated","nameLocation":"3388:20:8","nodeType":"EventDefinition","parameters":{"id":2537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2529,"indexed":true,"mutability":"mutable","name":"sessionId","nameLocation":"3425:9:8","nodeType":"VariableDeclaration","scope":2538,"src":"3409:25:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2528,"name":"uint256","nodeType":"ElementaryTypeName","src":"3409:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2532,"indexed":false,"mutability":"mutable","name":"mode","nameLocation":"3447:4:8","nodeType":"VariableDeclaration","scope":2538,"src":"3436:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_VotingMode_$2455","typeString":"enum BlocPolAdvanced.VotingMode"},"typeName":{"id":2531,"nodeType":"UserDefinedTypeName","pathNode":{"id":2530,"name":"VotingMode","nameLocations":["3436:10:8"],"nodeType":"IdentifierPath","referencedDeclaration":2455,"src":"3436:10:8"},"referencedDeclaration":2455,"src":"3436:10:8","typeDescriptions":{"typeIdentifier":"t_enum$_VotingMode_$2455","typeString":"enum BlocPolAdvanced.VotingMode"}},"visibility":"internal"},{"constant":false,"id":2534,"indexed":false,"mutability":"mutable","name":"startTime","nameLocation":"3461:9:8","nodeType":"VariableDeclaration","scope":2538,"src":"3453:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2533,"name":"uint256","nodeType":"ElementaryTypeName","src":"3453:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2536,"indexed":false,"mutability":"mutable","name":"endTime","nameLocation":"3480:7:8","nodeType":"VariableDeclaration","scope":2538,"src":"3472:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2535,"name":"uint256","nodeType":"ElementaryTypeName","src":"3472:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3408:80:8"},"src":"3382:107:8"},{"anonymous":false,"eventSelector":"2c9deb38f462962eadbd85a9d3a4120503ee091f1582eaaa10aa8c6797651d29","id":2549,"name":"VoteCast","nameLocation":"3501:8:8","nodeType":"EventDefinition","parameters":{"id":2548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2540,"indexed":true,"mutability":"mutable","name":"voter","nameLocation":"3526:5:8","nodeType":"VariableDeclaration","scope":2549,"src":"3510:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2539,"name":"address","nodeType":"ElementaryTypeName","src":"3510:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2542,"indexed":true,"mutability":"mutable","name":"candidateId","nameLocation":"3549:11:8","nodeType":"VariableDeclaration","scope":2549,"src":"3533:27:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2541,"name":"uint256","nodeType":"ElementaryTypeName","src":"3533:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2545,"indexed":false,"mutability":"mutable","name":"voteType","nameLocation":"3571:8:8","nodeType":"VariableDeclaration","scope":2549,"src":"3562:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_VoteType_$2450","typeString":"enum BlocPolAdvanced.VoteType"},"typeName":{"id":2544,"nodeType":"UserDefinedTypeName","pathNode":{"id":2543,"name":"VoteType","nameLocations":["3562:8:8"],"nodeType":"IdentifierPath","referencedDeclaration":2450,"src":"3562:8:8"},"referencedDeclaration":2450,"src":"3562:8:8","typeDescriptions":{"typeIdentifier":"t_enum$_VoteType_$2450","typeString":"enum BlocPolAdvanced.VoteType"}},"visibility":"internal"},{"constant":false,"id":2547,"indexed":false,"mutability":"mutable","name":"timestamp","nameLocation":"3589:9:8","nodeType":"VariableDeclaration","scope":2549,"src":"3581:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2546,"name":"uint256","nodeType":"ElementaryTypeName","src":"3581:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3509:90:8"},"src":"3495:105:8"},{"anonymous":false,"eventSelector":"f65a04be847d83385f9a7abcf32cfb35055023a4affcc7eaa319160746f44528","id":2557,"name":"VoteRevealed","nameLocation":"3612:12:8","nodeType":"EventDefinition","parameters":{"id":2556,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2551,"indexed":true,"mutability":"mutable","name":"voter","nameLocation":"3641:5:8","nodeType":"VariableDeclaration","scope":2557,"src":"3625:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2550,"name":"address","nodeType":"ElementaryTypeName","src":"3625:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2553,"indexed":true,"mutability":"mutable","name":"candidateId","nameLocation":"3664:11:8","nodeType":"VariableDeclaration","scope":2557,"src":"3648:27:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2552,"name":"uint256","nodeType":"ElementaryTypeName","src":"3648:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2555,"indexed":false,"mutability":"mutable","name":"timestamp","nameLocation":"3685:9:8","nodeType":"VariableDeclaration","scope":2557,"src":"3677:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2554,"name":"uint256","nodeType":"ElementaryTypeName","src":"3677:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3624:71:8"},"src":"3606:90:8"},{"anonymous":false,"eventSelector":"5ebf5ba0a9d6578537b09fb99eac524839499181ce448f968b5c9ca6c1b82b47","id":2565,"name":"VotingSessionEnded","nameLocation":"3708:18:8","nodeType":"EventDefinition","parameters":{"id":2564,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2559,"indexed":true,"mutability":"mutable","name":"sessionId","nameLocation":"3743:9:8","nodeType":"VariableDeclaration","scope":2565,"src":"3727:25:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2558,"name":"uint256","nodeType":"ElementaryTypeName","src":"3727:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2561,"indexed":false,"mutability":"mutable","name":"totalVotes","nameLocation":"3762:10:8","nodeType":"VariableDeclaration","scope":2565,"src":"3754:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2560,"name":"uint256","nodeType":"ElementaryTypeName","src":"3754:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2563,"indexed":false,"mutability":"mutable","name":"timestamp","nameLocation":"3782:9:8","nodeType":"VariableDeclaration","scope":2565,"src":"3774:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2562,"name":"uint256","nodeType":"ElementaryTypeName","src":"3774:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3726:66:8"},"src":"3702:91:8"},{"anonymous":false,"eventSelector":"f6d3f32241786cad73e665a475dd59e4aff37ee43093b5504c05d73d3806f9ef","id":2575,"name":"AuditLogCreated","nameLocation":"3805:15:8","nodeType":"EventDefinition","parameters":{"id":2574,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2567,"indexed":true,"mutability":"mutable","name":"actionHash","nameLocation":"3837:10:8","nodeType":"VariableDeclaration","scope":2575,"src":"3821:26:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2566,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3821:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2569,"indexed":true,"mutability":"mutable","name":"actor","nameLocation":"3865:5:8","nodeType":"VariableDeclaration","scope":2575,"src":"3849:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2568,"name":"address","nodeType":"ElementaryTypeName","src":"3849:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2571,"indexed":false,"mutability":"mutable","name":"action","nameLocation":"3879:6:8","nodeType":"VariableDeclaration","scope":2575,"src":"3872:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2570,"name":"string","nodeType":"ElementaryTypeName","src":"3872:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2573,"indexed":false,"mutability":"mutable","name":"timestamp","nameLocation":"3895:9:8","nodeType":"VariableDeclaration","scope":2575,"src":"3887:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2572,"name":"uint256","nodeType":"ElementaryTypeName","src":"3887:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3820:85:8"},"src":"3799:107:8"},{"anonymous":false,"eventSelector":"bd1fe7a887205d9ede817440b4fad4e3d32dfac34d415a05fe22a6d6a68cf207","id":2583,"name":"ZKProofVerified","nameLocation":"3918:15:8","nodeType":"EventDefinition","parameters":{"id":2582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2577,"indexed":true,"mutability":"mutable","name":"proofHash","nameLocation":"3950:9:8","nodeType":"VariableDeclaration","scope":2583,"src":"3934:25:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2576,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3934:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2579,"indexed":false,"mutability":"mutable","name":"isValid","nameLocation":"3966:7:8","nodeType":"VariableDeclaration","scope":2583,"src":"3961:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2578,"name":"bool","nodeType":"ElementaryTypeName","src":"3961:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2581,"indexed":false,"mutability":"mutable","name":"timestamp","nameLocation":"3983:9:8","nodeType":"VariableDeclaration","scope":2583,"src":"3975:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2580,"name":"uint256","nodeType":"ElementaryTypeName","src":"3975:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3933:60:8"},"src":"3912:82:8"},{"anonymous":false,"eventSelector":"309ca083e74e3c0429759d9f435e557c24afc92d774ce7800051257548f3a41a","id":2593,"name":"DelegationCreated","nameLocation":"4006:17:8","nodeType":"EventDefinition","parameters":{"id":2592,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2585,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"4040:4:8","nodeType":"VariableDeclaration","scope":2593,"src":"4024:20:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2584,"name":"address","nodeType":"ElementaryTypeName","src":"4024:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2587,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"4062:2:8","nodeType":"VariableDeclaration","scope":2593,"src":"4046:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2586,"name":"address","nodeType":"ElementaryTypeName","src":"4046:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2589,"indexed":false,"mutability":"mutable","name":"power","nameLocation":"4074:5:8","nodeType":"VariableDeclaration","scope":2593,"src":"4066:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2588,"name":"uint256","nodeType":"ElementaryTypeName","src":"4066:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2591,"indexed":false,"mutability":"mutable","name":"timestamp","nameLocation":"4089:9:8","nodeType":"VariableDeclaration","scope":2593,"src":"4081:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2590,"name":"uint256","nodeType":"ElementaryTypeName","src":"4081:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4023:76:8"},"src":"4000:100:8"},{"anonymous":false,"eventSelector":"aac65b3c89cf2bdefe00c779ea6453621b54ad3caecfdf5bf36ccf447cf51772","id":2601,"name":"VoteMixed","nameLocation":"4112:9:8","nodeType":"EventDefinition","parameters":{"id":2600,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2595,"indexed":true,"mutability":"mutable","name":"originalVote","nameLocation":"4138:12:8","nodeType":"VariableDeclaration","scope":2601,"src":"4122:28:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2594,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4122:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2597,"indexed":true,"mutability":"mutable","name":"mixedVote","nameLocation":"4168:9:8","nodeType":"VariableDeclaration","scope":2601,"src":"4152:25:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2596,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4152:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2599,"indexed":false,"mutability":"mutable","name":"timestamp","nameLocation":"4187:9:8","nodeType":"VariableDeclaration","scope":2601,"src":"4179:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2598,"name":"uint256","nodeType":"ElementaryTypeName","src":"4179:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4121:76:8"},"src":"4106:92:8"},{"body":{"id":2614,"nodeType":"Block","src":"4278:96:8","statements":[{"expression":{"arguments":[{"expression":{"baseExpression":{"id":2606,"name":"votingSessions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2470,"src":"4297:14:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_VotingSession_$2433_storage_$","typeString":"mapping(uint256 => struct BlocPolAdvanced.VotingSession storage ref)"}},"id":2608,"indexExpression":{"id":2607,"name":"sessionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2603,"src":"4312:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4297:25:8","typeDescriptions":{"typeIdentifier":"t_struct$_VotingSession_$2433_storage","typeString":"struct BlocPolAdvanced.VotingSession storage ref"}},"id":2609,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4323:8:8","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":2421,"src":"4297:34:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53657373696f6e206e6f7420616374697665","id":2610,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4333:20:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_839544cc0fb5d16787f6441633a106424ee8a196fb189a6c1966ac6f3b81e51f","typeString":"literal_string \"Session not active\""},"value":"Session not active"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_839544cc0fb5d16787f6441633a106424ee8a196fb189a6c1966ac6f3b81e51f","typeString":"literal_string \"Session not active\""}],"id":2605,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"4289:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2611,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4289:65:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2612,"nodeType":"ExpressionStatement","src":"4289:65:8"},{"id":2613,"nodeType":"PlaceholderStatement","src":"4365:1:8"}]},"id":2615,"name":"onlyActiveSession","nameLocation":"4241:17:8","nodeType":"ModifierDefinition","parameters":{"id":2604,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2603,"mutability":"mutable","name":"sessionId","nameLocation":"4267:9:8","nodeType":"VariableDeclaration","scope":2615,"src":"4259:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2602,"name":"uint256","nodeType":"ElementaryTypeName","src":"4259:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4258:19:8"},"src":"4232:142:8","virtual":false,"visibility":"internal"},{"body":{"id":2628,"nodeType":"Block","src":"4431:93:8","statements":[{"expression":{"arguments":[{"expression":{"baseExpression":{"id":2620,"name":"candidates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2460,"src":"4450:10:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Candidate_$2388_storage_$","typeString":"mapping(uint256 => struct BlocPolAdvanced.Candidate storage ref)"}},"id":2622,"indexExpression":{"id":2621,"name":"candidateId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2617,"src":"4461:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4450:23:8","typeDescriptions":{"typeIdentifier":"t_struct$_Candidate_$2388_storage","typeString":"struct BlocPolAdvanced.Candidate storage ref"}},"id":2623,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4474:8:8","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":2385,"src":"4450:32:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642063616e646964617465","id":2624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4484:19:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_5e08d3f48383789a6de57bd1ce2690d9c2e7e2730c9898292987cc6cddf215e1","typeString":"literal_string \"Invalid candidate\""},"value":"Invalid candidate"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5e08d3f48383789a6de57bd1ce2690d9c2e7e2730c9898292987cc6cddf215e1","typeString":"literal_string \"Invalid candidate\""}],"id":2619,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"4442:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2625,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4442:62:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2626,"nodeType":"ExpressionStatement","src":"4442:62:8"},{"id":2627,"nodeType":"PlaceholderStatement","src":"4515:1:8"}]},"id":2629,"name":"onlyValidCandidate","nameLocation":"4391:18:8","nodeType":"ModifierDefinition","parameters":{"id":2618,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2617,"mutability":"mutable","name":"candidateId","nameLocation":"4418:11:8","nodeType":"VariableDeclaration","scope":2629,"src":"4410:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2616,"name":"uint256","nodeType":"ElementaryTypeName","src":"4410:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4409:21:8"},"src":"4382:142:8","virtual":false,"visibility":"internal"},{"body":{"id":2645,"nodeType":"Block","src":"4577:114:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2634,"name":"power","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2631,"src":"4596:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2635,"name":"minVotingPower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2505,"src":"4605:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4596:23:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2637,"name":"power","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2631,"src":"4623:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":2638,"name":"maxVotingPower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2507,"src":"4632:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4623:23:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4596:50:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420766f74696e6720706f776572","id":2641,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4648:22:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_56268e085e104397d934c0352c8a5df3fb368f3865f4c99a5e0a7d2f8d502cbe","typeString":"literal_string \"Invalid voting power\""},"value":"Invalid voting power"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_56268e085e104397d934c0352c8a5df3fb368f3865f4c99a5e0a7d2f8d502cbe","typeString":"literal_string \"Invalid voting power\""}],"id":2633,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"4588:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2642,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4588:83:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2643,"nodeType":"ExpressionStatement","src":"4588:83:8"},{"id":2644,"nodeType":"PlaceholderStatement","src":"4682:1:8"}]},"id":2646,"name":"onlyValidVotingPower","nameLocation":"4541:20:8","nodeType":"ModifierDefinition","parameters":{"id":2632,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2631,"mutability":"mutable","name":"power","nameLocation":"4570:5:8","nodeType":"VariableDeclaration","scope":2646,"src":"4562:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2630,"name":"uint256","nodeType":"ElementaryTypeName","src":"4562:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4561:15:8"},"src":"4532:159:8","virtual":false,"visibility":"internal"},{"body":{"id":2729,"nodeType":"Block","src":"5002:602:8","statements":[{"expression":{"id":2671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2667,"name":"zkProofVerifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2497,"src":"5013:15:8","typeDescriptions":{"typeIdentifier":"t_contract$_ZKProofVerifier_$6512","typeString":"contract ZKProofVerifier"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2669,"name":"_zkProofVerifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2648,"src":"5047:16:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2668,"name":"ZKProofVerifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6512,"src":"5031:15:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ZKProofVerifier_$6512_$","typeString":"type(contract ZKProofVerifier)"}},"id":2670,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5031:33:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ZKProofVerifier_$6512","typeString":"contract ZKProofVerifier"}},"src":"5013:51:8","typeDescriptions":{"typeIdentifier":"t_contract$_ZKProofVerifier_$6512","typeString":"contract ZKProofVerifier"}},"id":2672,"nodeType":"ExpressionStatement","src":"5013:51:8"},{"expression":{"id":2677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2673,"name":"liquidDemocracy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2500,"src":"5075:15:8","typeDescriptions":{"typeIdentifier":"t_contract$_LiquidDemocracy_$4854","typeString":"contract LiquidDemocracy"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2675,"name":"_liquidDemocracy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2650,"src":"5109:16:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2674,"name":"LiquidDemocracy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4854,"src":"5093:15:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LiquidDemocracy_$4854_$","typeString":"type(contract LiquidDemocracy)"}},"id":2676,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5093:33:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_LiquidDemocracy_$4854","typeString":"contract LiquidDemocracy"}},"src":"5075:51:8","typeDescriptions":{"typeIdentifier":"t_contract$_LiquidDemocracy_$4854","typeString":"contract LiquidDemocracy"}},"id":2678,"nodeType":"ExpressionStatement","src":"5075:51:8"},{"expression":{"id":2683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2679,"name":"voteMixing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2503,"src":"5137:10:8","typeDescriptions":{"typeIdentifier":"t_contract$_VoteMixing_$5908","typeString":"contract VoteMixing"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2681,"name":"_voteMixing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2652,"src":"5161:11:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2680,"name":"VoteMixing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5908,"src":"5150:10:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_VoteMixing_$5908_$","typeString":"type(contract VoteMixing)"}},"id":2682,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5150:23:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_VoteMixing_$5908","typeString":"contract VoteMixing"}},"src":"5137:36:8","typeDescriptions":{"typeIdentifier":"t_contract$_VoteMixing_$5908","typeString":"contract VoteMixing"}},"id":2684,"nodeType":"ExpressionStatement","src":"5137:36:8"},{"expression":{"id":2687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2685,"name":"minVotingPower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2505,"src":"5194:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2686,"name":"_minVotingPower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2654,"src":"5211:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5194:32:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2688,"nodeType":"ExpressionStatement","src":"5194:32:8"},{"expression":{"id":2691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2689,"name":"maxVotingPower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2507,"src":"5237:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2690,"name":"_maxVotingPower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2656,"src":"5254:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5237:32:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2692,"nodeType":"ExpressionStatement","src":"5237:32:8"},{"expression":{"id":2695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2693,"name":"commitmentPeriod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2509,"src":"5280:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2694,"name":"_commitmentPeriod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2658,"src":"5299:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5280:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2696,"nodeType":"ExpressionStatement","src":"5280:36:8"},{"expression":{"id":2699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2697,"name":"revealPeriod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2511,"src":"5327:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2698,"name":"_revealPeriod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2660,"src":"5342:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5327:28:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2700,"nodeType":"ExpressionStatement","src":"5327:28:8"},{"expression":{"id":2703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2701,"name":"candidateCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2488,"src":"5376:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5395:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5376:20:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2704,"nodeType":"ExpressionStatement","src":"5376:20:8"},{"expression":{"id":2707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2705,"name":"voteCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2490,"src":"5407:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5421:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5407:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2708,"nodeType":"ExpressionStatement","src":"5407:15:8"},{"expression":{"id":2711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2709,"name":"sessionCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2492,"src":"5433:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2710,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5450:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5433:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2712,"nodeType":"ExpressionStatement","src":"5433:18:8"},{"expression":{"id":2715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2713,"name":"auditCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2494,"src":"5462:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5477:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5462:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2716,"nodeType":"ExpressionStatement","src":"5462:16:8"},{"expression":{"id":2719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2717,"name":"zkProofsEnabled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2513,"src":"5499:15:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":2718,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5517:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5499:22:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2720,"nodeType":"ExpressionStatement","src":"5499:22:8"},{"expression":{"id":2723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2721,"name":"liquidDemocracyEnabled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2515,"src":"5532:22:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":2722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5557:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5532:29:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2724,"nodeType":"ExpressionStatement","src":"5532:29:8"},{"expression":{"id":2727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2725,"name":"voteMixingEnabled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2517,"src":"5572:17:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":2726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5592:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5572:24:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2728,"nodeType":"ExpressionStatement","src":"5572:24:8"}]},"id":2730,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"expression":{"id":2663,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4990:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4994:6:8","memberName":"sender","nodeType":"MemberAccess","src":"4990:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2665,"kind":"baseConstructorSpecifier","modifierName":{"id":2662,"name":"Ownable","nameLocations":["4982:7:8"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"4982:7:8"},"nodeType":"ModifierInvocation","src":"4982:19:8"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2648,"mutability":"mutable","name":"_zkProofVerifier","nameLocation":"4757:16:8","nodeType":"VariableDeclaration","scope":2730,"src":"4749:24:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2647,"name":"address","nodeType":"ElementaryTypeName","src":"4749:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2650,"mutability":"mutable","name":"_liquidDemocracy","nameLocation":"4792:16:8","nodeType":"VariableDeclaration","scope":2730,"src":"4784:24:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2649,"name":"address","nodeType":"ElementaryTypeName","src":"4784:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2652,"mutability":"mutable","name":"_voteMixing","nameLocation":"4827:11:8","nodeType":"VariableDeclaration","scope":2730,"src":"4819:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2651,"name":"address","nodeType":"ElementaryTypeName","src":"4819:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2654,"mutability":"mutable","name":"_minVotingPower","nameLocation":"4857:15:8","nodeType":"VariableDeclaration","scope":2730,"src":"4849:23:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2653,"name":"uint256","nodeType":"ElementaryTypeName","src":"4849:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2656,"mutability":"mutable","name":"_maxVotingPower","nameLocation":"4891:15:8","nodeType":"VariableDeclaration","scope":2730,"src":"4883:23:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2655,"name":"uint256","nodeType":"ElementaryTypeName","src":"4883:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2658,"mutability":"mutable","name":"_commitmentPeriod","nameLocation":"4925:17:8","nodeType":"VariableDeclaration","scope":2730,"src":"4917:25:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2657,"name":"uint256","nodeType":"ElementaryTypeName","src":"4917:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2660,"mutability":"mutable","name":"_revealPeriod","nameLocation":"4961:13:8","nodeType":"VariableDeclaration","scope":2730,"src":"4953:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2659,"name":"uint256","nodeType":"ElementaryTypeName","src":"4953:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4738:243:8"},"returnParameters":{"id":2666,"nodeType":"ParameterList","parameters":[],"src":"5002:0:8"},"scope":3786,"src":"4727:877:8","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2782,"nodeType":"Block","src":"6005:583:8","statements":[{"expression":{"id":2745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2742,"name":"candidateId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2740,"src":"6016:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6030:18:8","subExpression":{"id":2743,"name":"candidateCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2488,"src":"6030:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6016:32:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2746,"nodeType":"ExpressionStatement","src":"6016:32:8"},{"expression":{"id":2760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2747,"name":"candidates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2460,"src":"6069:10:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Candidate_$2388_storage_$","typeString":"mapping(uint256 => struct BlocPolAdvanced.Candidate storage ref)"}},"id":2749,"indexExpression":{"id":2748,"name":"candidateId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2740,"src":"6080:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6069:23:8","typeDescriptions":{"typeIdentifier":"t_struct$_Candidate_$2388_storage","typeString":"struct BlocPolAdvanced.Candidate storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2751,"name":"candidateId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2740,"src":"6124:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2752,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2733,"src":"6156:4:8","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"id":2753,"name":"ipfsHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2735,"src":"6185:8:8","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"hexValue":"30","id":2754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6219:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":2755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6255:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"74727565","id":2756,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6281:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"expression":{"id":2757,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"6318:5:8","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6324:9:8","memberName":"timestamp","nodeType":"MemberAccess","src":"6318:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2750,"name":"Candidate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2388,"src":"6095:9:8","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Candidate_$2388_storage_ptr_$","typeString":"type(struct BlocPolAdvanced.Candidate storage pointer)"}},"id":2759,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["6120:2:8","6150:4:8","6175:8:8","6208:9:8","6235:18:8","6271:8:8","6300:16:8"],"names":["id","name","ipfsHash","voteCount","delegatedVoteCount","isActive","registrationTime"],"nodeType":"FunctionCall","src":"6095:250:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Candidate_$2388_memory_ptr","typeString":"struct BlocPolAdvanced.Candidate memory"}},"src":"6069:276:8","typeDescriptions":{"typeIdentifier":"t_struct$_Candidate_$2388_storage","typeString":"struct BlocPolAdvanced.Candidate storage ref"}},"id":2761,"nodeType":"ExpressionStatement","src":"6069:276:8"},{"expression":{"arguments":[{"hexValue":"43414e4449444154455f52454749535445524544","id":2763,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6380:22:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_1e554539073ad9f83a4a13ba149be5fdf718b6c3f0c802a69f685ff25ece8944","typeString":"literal_string \"CANDIDATE_REGISTERED\""},"value":"CANDIDATE_REGISTERED"},{"arguments":[{"id":2766,"name":"candidateId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2740,"src":"6421:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2767,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2733,"src":"6434:4:8","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"id":2768,"name":"ipfsHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2735,"src":"6440:8:8","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}],"expression":{"id":2764,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"6404:3:8","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2765,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6408:12:8","memberName":"encodePacked","nodeType":"MemberAccess","src":"6404:16:8","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2769,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6404:45:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_1e554539073ad9f83a4a13ba149be5fdf718b6c3f0c802a69f685ff25ece8944","typeString":"literal_string \"CANDIDATE_REGISTERED\""},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2762,"name":"logAuditTrail","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3742,"src":"6366:13:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (string memory,bytes memory)"}},"id":2770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6366:84:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2771,"nodeType":"ExpressionStatement","src":"6366:84:8"},{"eventCall":{"arguments":[{"id":2773,"name":"candidateId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2740,"src":"6496:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2774,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2733,"src":"6509:4:8","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"id":2775,"name":"ipfsHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2735,"src":"6515:8:8","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"expression":{"id":2776,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"6525:5:8","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6531:9:8","memberName":"timestamp","nodeType":"MemberAccess","src":"6525:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2772,"name":"CandidateRegistered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2527,"src":"6476:19:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (uint256,string memory,string memory,uint256)"}},"id":2778,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6476:65:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2779,"nodeType":"EmitStatement","src":"6471:70:8"},{"expression":{"id":2780,"name":"candidateId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2740,"src":"6569:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2741,"id":2781,"nodeType":"Return","src":"6562:18:8"}]},"documentation":{"id":2731,"nodeType":"StructuredDocumentation","src":"5645:205:8","text":" @dev Registers a new candidate\n @param name Candidate name\n @param ipfsHash IPFS hash for candidate profile\n @return candidateId The ID of the registered candidate"},"functionSelector":"0dbce4dd","id":2783,"implemented":true,"kind":"function","modifiers":[{"id":2738,"kind":"modifierInvocation","modifierName":{"id":2737,"name":"onlyOwner","nameLocations":["5965:9:8"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"5965:9:8"},"nodeType":"ModifierInvocation","src":"5965:9:8"}],"name":"registerCandidate","nameLocation":"5865:17:8","nodeType":"FunctionDefinition","parameters":{"id":2736,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2733,"mutability":"mutable","name":"name","nameLocation":"5909:4:8","nodeType":"VariableDeclaration","scope":2783,"src":"5893:20:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":2732,"name":"string","nodeType":"ElementaryTypeName","src":"5893:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2735,"mutability":"mutable","name":"ipfsHash","nameLocation":"5940:8:8","nodeType":"VariableDeclaration","scope":2783,"src":"5924:24:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":2734,"name":"string","nodeType":"ElementaryTypeName","src":"5924:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5882:73:8"},"returnParameters":{"id":2741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2740,"mutability":"mutable","name":"candidateId","nameLocation":"5992:11:8","nodeType":"VariableDeclaration","scope":2783,"src":"5984:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2739,"name":"uint256","nodeType":"ElementaryTypeName","src":"5984:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5983:21:8"},"scope":3786,"src":"5856:732:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2856,"nodeType":"Block","src":"6956:834:8","statements":[{"expression":{"id":2799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2796,"name":"sessionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2794,"src":"6967:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6979:16:8","subExpression":{"id":2797,"name":"sessionCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2492,"src":"6979:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6967:28:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2800,"nodeType":"ExpressionStatement","src":"6967:28:8"},{"assignments":[2803],"declarations":[{"constant":false,"id":2803,"mutability":"mutable","name":"newSession","nameLocation":"7037:10:8","nodeType":"VariableDeclaration","scope":2856,"src":"7016:31:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_VotingSession_$2433_memory_ptr","typeString":"struct BlocPolAdvanced.VotingSession"},"typeName":{"id":2802,"nodeType":"UserDefinedTypeName","pathNode":{"id":2801,"name":"VotingSession","nameLocations":["7016:13:8"],"nodeType":"IdentifierPath","referencedDeclaration":2433,"src":"7016:13:8"},"referencedDeclaration":2433,"src":"7016:13:8","typeDescriptions":{"typeIdentifier":"t_struct$_VotingSession_$2433_storage_ptr","typeString":"struct BlocPolAdvanced.VotingSession"}},"visibility":"internal"}],"id":2828,"initialValue":{"arguments":[{"id":2805,"name":"sessionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2794,"src":"7090:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2806,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"7125:5:8","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7131:9:8","memberName":"timestamp","nodeType":"MemberAccess","src":"7125:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2808,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"7164:5:8","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7170:9:8","memberName":"timestamp","nodeType":"MemberAccess","src":"7164:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2810,"name":"durationSeconds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2786,"src":"7182:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7164:33:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2812,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"7224:5:8","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7230:9:8","memberName":"timestamp","nodeType":"MemberAccess","src":"7224:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2814,"name":"durationSeconds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2786,"src":"7242:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7224:33:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2816,"name":"revealPeriod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2511,"src":"7260:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7224:48:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":2818,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7297:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"66616c7365","id":2819,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7328:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2820,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7360:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":2821,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7394:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":2822,"name":"mode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2789,"src":"7416:4:8","typeDescriptions":{"typeIdentifier":"t_enum$_VotingMode_$2455","typeString":"enum BlocPolAdvanced.VotingMode"}},{"arguments":[{"hexValue":"30","id":2825,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7455:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2824,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7447:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2823,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7447:7:8","typeDescriptions":{}}},"id":2826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7447:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_enum$_VotingMode_$2455","typeString":"enum BlocPolAdvanced.VotingMode"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2804,"name":"VotingSession","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2433,"src":"7050:13:8","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_VotingSession_$2433_storage_ptr_$","typeString":"type(struct BlocPolAdvanced.VotingSession storage pointer)"}},"id":2827,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["7079:9:8","7114:9:8","7155:7:8","7212:10:8","7287:8:8","7316:10:8","7348:10:8","7376:16:8","7410:4:8","7435:10:8"],"names":["sessionId","startTime","endTime","revealTime","isActive","isRevealed","totalVotes","totalVotingPower","mode","merkleRoot"],"nodeType":"FunctionCall","src":"7050:419:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_VotingSession_$2433_memory_ptr","typeString":"struct BlocPolAdvanced.VotingSession memory"}},"nodeType":"VariableDeclarationStatement","src":"7016:453:8"},{"expression":{"id":2833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2829,"name":"votingSessions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2470,"src":"7490:14:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_VotingSession_$2433_storage_$","typeString":"mapping(uint256 => struct BlocPolAdvanced.VotingSession storage ref)"}},"id":2831,"indexExpression":{"id":2830,"name":"sessionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2794,"src":"7505:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7490:25:8","typeDescriptions":{"typeIdentifier":"t_struct$_VotingSession_$2433_storage","typeString":"struct BlocPolAdvanced.VotingSession storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2832,"name":"newSession","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2803,"src":"7518:10:8","typeDescriptions":{"typeIdentifier":"t_struct$_VotingSession_$2433_memory_ptr","typeString":"struct BlocPolAdvanced.VotingSession memory"}},"src":"7490:38:8","typeDescriptions":{"typeIdentifier":"t_struct$_VotingSession_$2433_storage","typeString":"struct BlocPolAdvanced.VotingSession storage ref"}},"id":2834,"nodeType":"ExpressionStatement","src":"7490:38:8"},{"expression":{"arguments":[{"hexValue":"564f54494e475f53455353494f4e5f43524541544544","id":2836,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7563:24:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_9375db90cee46d94fc88cffeeac29df7046a2805f376567511bfae52c46258dc","typeString":"literal_string \"VOTING_SESSION_CREATED\""},"value":"VOTING_SESSION_CREATED"},{"arguments":[{"id":2839,"name":"sessionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2794,"src":"7606:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2840,"name":"mode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2789,"src":"7617:4:8","typeDescriptions":{"typeIdentifier":"t_enum$_VotingMode_$2455","typeString":"enum BlocPolAdvanced.VotingMode"}},{"id":2841,"name":"durationSeconds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2786,"src":"7623:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_VotingMode_$2455","typeString":"enum BlocPolAdvanced.VotingMode"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2837,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"7589:3:8","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2838,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7593:12:8","memberName":"encodePacked","nodeType":"MemberAccess","src":"7589:16:8","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2842,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7589:50:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9375db90cee46d94fc88cffeeac29df7046a2805f376567511bfae52c46258dc","typeString":"literal_string \"VOTING_SESSION_CREATED\""},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2835,"name":"logAuditTrail","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3742,"src":"7549:13:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (string memory,bytes memory)"}},"id":2843,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7549:91:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2844,"nodeType":"ExpressionStatement","src":"7549:91:8"},{"eventCall":{"arguments":[{"id":2846,"name":"sessionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2794,"src":"7687:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2847,"name":"mode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2789,"src":"7698:4:8","typeDescriptions":{"typeIdentifier":"t_enum$_VotingMode_$2455","typeString":"enum BlocPolAdvanced.VotingMode"}},{"expression":{"id":2848,"name":"newSession","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2803,"src":"7704:10:8","typeDescriptions":{"typeIdentifier":"t_struct$_VotingSession_$2433_memory_ptr","typeString":"struct BlocPolAdvanced.VotingSession memory"}},"id":2849,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7715:9:8","memberName":"startTime","nodeType":"MemberAccess","referencedDeclaration":2415,"src":"7704:20:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2850,"name":"newSession","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2803,"src":"7726:10:8","typeDescriptions":{"typeIdentifier":"t_struct$_VotingSession_$2433_memory_ptr","typeString":"struct BlocPolAdvanced.VotingSession memory"}},"id":2851,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7737:7:8","memberName":"endTime","nodeType":"MemberAccess","referencedDeclaration":2417,"src":"7726:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_VotingMode_$2455","typeString":"enum BlocPolAdvanced.VotingMode"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2845,"name":"VotingSessionCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2538,"src":"7666:20:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_enum$_VotingMode_$2455_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,enum BlocPolAdvanced.VotingMode,uint256,uint256)"}},"id":2852,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7666:79:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2853,"nodeType":"EmitStatement","src":"7661:84:8"},{"expression":{"id":2854,"name":"sessionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2794,"src":"7773:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2795,"id":2855,"nodeType":"Return","src":"7766:16:8"}]},"documentation":{"id":2784,"nodeType":"StructuredDocumentation","src":"6596:211:8","text":" @dev Creates a new voting session\n @param durationSeconds Duration of the voting session\n @param mode Voting mode to use\n @return sessionId The ID of the created session"},"functionSelector":"42ab9786","id":2857,"implemented":true,"kind":"function","modifiers":[{"id":2792,"kind":"modifierInvocation","modifierName":{"id":2791,"name":"onlyOwner","nameLocations":["6918:9:8"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"6918:9:8"},"nodeType":"ModifierInvocation","src":"6918:9:8"}],"name":"createVotingSession","nameLocation":"6822:19:8","nodeType":"FunctionDefinition","parameters":{"id":2790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2786,"mutability":"mutable","name":"durationSeconds","nameLocation":"6860:15:8","nodeType":"VariableDeclaration","scope":2857,"src":"6852:23:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2785,"name":"uint256","nodeType":"ElementaryTypeName","src":"6852:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2789,"mutability":"mutable","name":"mode","nameLocation":"6897:4:8","nodeType":"VariableDeclaration","scope":2857,"src":"6886:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_VotingMode_$2455","typeString":"enum BlocPolAdvanced.VotingMode"},"typeName":{"id":2788,"nodeType":"UserDefinedTypeName","pathNode":{"id":2787,"name":"VotingMode","nameLocations":["6886:10:8"],"nodeType":"IdentifierPath","referencedDeclaration":2455,"src":"6886:10:8"},"referencedDeclaration":2455,"src":"6886:10:8","typeDescriptions":{"typeIdentifier":"t_enum$_VotingMode_$2455","typeString":"enum BlocPolAdvanced.VotingMode"}},"visibility":"internal"}],"src":"6841:67:8"},"returnParameters":{"id":2795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2794,"mutability":"mutable","name":"sessionId","nameLocation":"6945:9:8","nodeType":"VariableDeclaration","scope":2857,"src":"6937:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2793,"name":"uint256","nodeType":"ElementaryTypeName","src":"6937:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6936:19:8"},"scope":3786,"src":"6813:977:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2995,"nodeType":"Block","src":"8439:1240:8","statements":[{"expression":{"arguments":[{"id":2887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"8458:32:8","subExpression":{"baseExpression":{"baseExpression":{"id":2881,"name":"hasVoted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2476,"src":"8459:8:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$","typeString":"mapping(address => mapping(uint256 => bool))"}},"id":2884,"indexExpression":{"expression":{"id":2882,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8468:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8472:6:8","memberName":"sender","nodeType":"MemberAccess","src":"8468:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8459:20:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"}},"id":2886,"indexExpression":{"id":2885,"name":"sessionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2860,"src":"8480:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8459:31:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416c726561647920766f74656420696e20746869732073657373696f6e","id":2888,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8492:31:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_3840a5cc1a84a02085a692a9b758a13328803624db8bbb884e8a5a360a1930c3","typeString":"literal_string \"Already voted in this session\""},"value":"Already voted in this session"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3840a5cc1a84a02085a692a9b758a13328803624db8bbb884e8a5a360a1930c3","typeString":"literal_string \"Already voted in this session\""}],"id":2880,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"8450:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2889,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8450:74:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2890,"nodeType":"ExpressionStatement","src":"8450:74:8"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2892,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"8543:5:8","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8549:9:8","memberName":"timestamp","nodeType":"MemberAccess","src":"8543:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"baseExpression":{"id":2894,"name":"votingSessions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2470,"src":"8562:14:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_VotingSession_$2433_storage_$","typeString":"mapping(uint256 => struct BlocPolAdvanced.VotingSession storage ref)"}},"id":2896,"indexExpression":{"id":2895,"name":"sessionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2860,"src":"8577:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8562:25:8","typeDescriptions":{"typeIdentifier":"t_struct$_VotingSession_$2433_storage","typeString":"struct BlocPolAdvanced.VotingSession storage ref"}},"id":2897,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8588:7:8","memberName":"endTime","nodeType":"MemberAccess","referencedDeclaration":2417,"src":"8562:33:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8543:52:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"566f74696e6720706572696f6420656e646564","id":2899,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8597:21:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_36ba02d776fd732ac627a72d2a4bcd896afdeadba8694171733d88c6775413e0","typeString":"literal_string \"Voting period ended\""},"value":"Voting period ended"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_36ba02d776fd732ac627a72d2a4bcd896afdeadba8694171733d88c6775413e0","typeString":"literal_string \"Voting period ended\""}],"id":2891,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"8535:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2900,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8535:84:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2901,"nodeType":"ExpressionStatement","src":"8535:84:8"},{"expression":{"id":2905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2902,"name":"voteId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2878,"src":"8640:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8649:13:8","subExpression":{"id":2903,"name":"voteCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2490,"src":"8649:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8640:22:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2906,"nodeType":"ExpressionStatement","src":"8640:22:8"},{"assignments":[2909],"declarations":[{"constant":false,"id":2909,"mutability":"mutable","name":"newVote","nameLocation":"8703:7:8","nodeType":"VariableDeclaration","scope":2995,"src":"8683:27:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_AdvancedVote_$2411_memory_ptr","typeString":"struct BlocPolAdvanced.AdvancedVote"},"typeName":{"id":2908,"nodeType":"UserDefinedTypeName","pathNode":{"id":2907,"name":"AdvancedVote","nameLocations":["8683:12:8"],"nodeType":"IdentifierPath","referencedDeclaration":2411,"src":"8683:12:8"},"referencedDeclaration":2411,"src":"8683:12:8","typeDescriptions":{"typeIdentifier":"t_struct$_AdvancedVote_$2411_storage_ptr","typeString":"struct BlocPolAdvanced.AdvancedVote"}},"visibility":"internal"}],"id":2935,"initialValue":{"arguments":[{"expression":{"id":2911,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8748:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8752:6:8","memberName":"sender","nodeType":"MemberAccess","src":"8748:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2913,"name":"candidateId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2862,"src":"8786:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":2917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8841:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2916,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"8827:13:8","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":2914,"name":"uint256","nodeType":"ElementaryTypeName","src":"8831:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2915,"nodeType":"ArrayTypeName","src":"8831:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":2918,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8827:16:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":2919,"name":"commitmentHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2864,"src":"8874:14:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"hexValue":"30","id":2922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8924:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2921,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8916:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2920,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8916:7:8","typeDescriptions":{}}},"id":2923,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8916:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"hexValue":"30","id":2926,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8964:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2925,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8956:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2924,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8956:7:8","typeDescriptions":{}}},"id":2927,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8956:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2928,"name":"votingPower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2866,"src":"8994:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2929,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"9031:5:8","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9037:9:8","memberName":"timestamp","nodeType":"MemberAccess","src":"9031:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":2931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9073:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"expression":{"id":2932,"name":"VoteType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2450,"src":"9103:8:8","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_VoteType_$2450_$","typeString":"type(enum BlocPolAdvanced.VoteType)"}},"id":2933,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9112:6:8","memberName":"DIRECT","nodeType":"MemberAccess","referencedDeclaration":2446,"src":"9103:15:8","typeDescriptions":{"typeIdentifier":"t_enum$_VoteType_$2450","typeString":"enum BlocPolAdvanced.VoteType"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_enum$_VoteType_$2450","typeString":"enum BlocPolAdvanced.VoteType"}],"id":2910,"name":"AdvancedVote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2411,"src":"8713:12:8","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_AdvancedVote_$2411_storage_ptr_$","typeString":"type(struct BlocPolAdvanced.AdvancedVote storage pointer)"}},"id":2934,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["8741:5:8","8773:11:8","8812:13:8","8858:14:8","8903:11:8","8941:13:8","8981:11:8","9020:9:8","9061:10:8","9093:8:8"],"names":["voter","candidateId","rankedChoices","commitmentHash","zkProofHash","mixedVoteHash","votingPower","timestamp","isRevealed","voteType"],"nodeType":"FunctionCall","src":"8713:417:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AdvancedVote_$2411_memory_ptr","typeString":"struct BlocPolAdvanced.AdvancedVote memory"}},"nodeType":"VariableDeclarationStatement","src":"8683:447:8"},{"expression":{"id":2940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2936,"name":"votes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2465,"src":"9151:5:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_AdvancedVote_$2411_storage_$","typeString":"mapping(uint256 => struct BlocPolAdvanced.AdvancedVote storage ref)"}},"id":2938,"indexExpression":{"id":2937,"name":"voteId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2878,"src":"9157:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9151:13:8","typeDescriptions":{"typeIdentifier":"t_struct$_AdvancedVote_$2411_storage","typeString":"struct BlocPolAdvanced.AdvancedVote storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2939,"name":"newVote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2909,"src":"9167:7:8","typeDescriptions":{"typeIdentifier":"t_struct$_AdvancedVote_$2411_memory_ptr","typeString":"struct BlocPolAdvanced.AdvancedVote memory"}},"src":"9151:23:8","typeDescriptions":{"typeIdentifier":"t_struct$_AdvancedVote_$2411_storage","typeString":"struct BlocPolAdvanced.AdvancedVote storage ref"}},"id":2941,"nodeType":"ExpressionStatement","src":"9151:23:8"},{"expression":{"id":2949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":2942,"name":"hasVoted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2476,"src":"9185:8:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$","typeString":"mapping(address => mapping(uint256 => bool))"}},"id":2946,"indexExpression":{"expression":{"id":2943,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9194:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9198:6:8","memberName":"sender","nodeType":"MemberAccess","src":"9194:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9185:20:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"}},"id":2947,"indexExpression":{"id":2945,"name":"sessionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2860,"src":"9206:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9185:31:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":2948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9219:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"9185:38:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2950,"nodeType":"ExpressionStatement","src":"9185:38:8"},{"expression":{"arguments":[{"id":2956,"name":"voteId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2878,"src":"9262:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"id":2951,"name":"voterVotes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2481,"src":"9234:10:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[] storage ref)"}},"id":2954,"indexExpression":{"expression":{"id":2952,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9245:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9249:6:8","memberName":"sender","nodeType":"MemberAccess","src":"9245:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9234:22:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":2955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9257:4:8","memberName":"push","nodeType":"MemberAccess","src":"9234:27:8","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256)"}},"id":2957,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9234:35:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2958,"nodeType":"ExpressionStatement","src":"9234:35:8"},{"expression":{"id":2963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"9328:38:8","subExpression":{"expression":{"baseExpression":{"id":2959,"name":"votingSessions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2470,"src":"9328:14:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_VotingSession_$2433_storage_$","typeString":"mapping(uint256 => struct BlocPolAdvanced.VotingSession storage ref)"}},"id":2961,"indexExpression":{"id":2960,"name":"sessionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2860,"src":"9343:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9328:25:8","typeDescriptions":{"typeIdentifier":"t_struct$_VotingSession_$2433_storage","typeString":"struct BlocPolAdvanced.VotingSession storage ref"}},"id":2962,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"9354:10:8","memberName":"totalVotes","nodeType":"MemberAccess","referencedDeclaration":2425,"src":"9328:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2964,"nodeType":"ExpressionStatement","src":"9328:38:8"},{"expression":{"id":2970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":2965,"name":"votingSessions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2470,"src":"9377:14:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_VotingSession_$2433_storage_$","typeString":"mapping(uint256 => struct BlocPolAdvanced.VotingSession storage ref)"}},"id":2967,"indexExpression":{"id":2966,"name":"sessionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2860,"src":"9392:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9377:25:8","typeDescriptions":{"typeIdentifier":"t_struct$_VotingSession_$2433_storage","typeString":"struct BlocPolAdvanced.VotingSession storage ref"}},"id":2968,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"9403:16:8","memberName":"totalVotingPower","nodeType":"MemberAccess","referencedDeclaration":2427,"src":"9377:42:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2969,"name":"votingPower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2866,"src":"9423:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9377:57:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2971,"nodeType":"ExpressionStatement","src":"9377:57:8"},{"expression":{"arguments":[{"hexValue":"564f54455f43415354","id":2973,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9469:11:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_fb8a3a8f8b3a699e1cfc4696991684714725a0a7378a16e68296dad154175a11","typeString":"literal_string \"VOTE_CAST\""},"value":"VOTE_CAST"},{"arguments":[{"id":2976,"name":"voteId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2878,"src":"9499:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2977,"name":"sessionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2860,"src":"9507:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2978,"name":"candidateId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2862,"src":"9518:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2979,"name":"votingPower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2866,"src":"9531:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2974,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"9482:3:8","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2975,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9486:12:8","memberName":"encodePacked","nodeType":"MemberAccess","src":"9482:16:8","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2980,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9482:61:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_fb8a3a8f8b3a699e1cfc4696991684714725a0a7378a16e68296dad154175a11","typeString":"literal_string \"VOTE_CAST\""},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2972,"name":"logAuditTrail","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3742,"src":"9455:13:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (string memory,bytes memory)"}},"id":2981,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9455:89:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2982,"nodeType":"ExpressionStatement","src":"9455:89:8"},{"eventCall":{"arguments":[{"expression":{"id":2984,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9579:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9583:6:8","memberName":"sender","nodeType":"MemberAccess","src":"9579:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2986,"name":"candidateId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2862,"src":"9591:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2987,"name":"VoteType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2450,"src":"9604:8:8","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_VoteType_$2450_$","typeString":"type(enum BlocPolAdvanced.VoteType)"}},"id":2988,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9613:6:8","memberName":"DIRECT","nodeType":"MemberAccess","referencedDeclaration":2446,"src":"9604:15:8","typeDescriptions":{"typeIdentifier":"t_enum$_VoteType_$2450","typeString":"enum BlocPolAdvanced.VoteType"}},{"expression":{"id":2989,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"9621:5:8","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9627:9:8","memberName":"timestamp","nodeType":"MemberAccess","src":"9621:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_VoteType_$2450","typeString":"enum BlocPolAdvanced.VoteType"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2983,"name":"VoteCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2549,"src":"9570:8:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_enum$_VoteType_$2450_$_t_uint256_$returns$__$","typeString":"function (address,uint256,enum BlocPolAdvanced.VoteType,uint256)"}},"id":2991,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9570:67:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2992,"nodeType":"EmitStatement","src":"9565:72:8"},{"expression":{"id":2993,"name":"voteId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2878,"src":"9665:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2879,"id":2994,"nodeType":"Return","src":"9658:13:8"}]},"documentation":{"id":2858,"nodeType":"StructuredDocumentation","src":"7798:317:8","text":" @dev Casts a vote with commitment scheme\n @param sessionId The voting session ID\n @param candidateId The candidate to vote for\n @param commitmentHash Commitment hash of the vote\n @param votingPower The voting power to use\n @return voteId The ID of the cast vote"},"functionSelector":"1119501e","id":2996,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":2869,"name":"sessionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2860,"src":"8304:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2870,"kind":"modifierInvocation","modifierName":{"id":2868,"name":"onlyActiveSession","nameLocations":["8286:17:8"],"nodeType":"IdentifierPath","referencedDeclaration":2615,"src":"8286:17:8"},"nodeType":"ModifierInvocation","src":"8286:28:8"},{"arguments":[{"id":2872,"name":"candidateId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2862,"src":"8343:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2873,"kind":"modifierInvocation","modifierName":{"id":2871,"name":"onlyValidCandidate","nameLocations":["8324:18:8"],"nodeType":"IdentifierPath","referencedDeclaration":2629,"src":"8324:18:8"},"nodeType":"ModifierInvocation","src":"8324:31:8"},{"arguments":[{"id":2875,"name":"votingPower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2866,"src":"8386:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2876,"kind":"modifierInvocation","modifierName":{"id":2874,"name":"onlyValidVotingPower","nameLocations":["8365:20:8"],"nodeType":"IdentifierPath","referencedDeclaration":2646,"src":"8365:20:8"},"nodeType":"ModifierInvocation","src":"8365:33:8"}],"name":"castVote","nameLocation":"8130:8:8","nodeType":"FunctionDefinition","parameters":{"id":2867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2860,"mutability":"mutable","name":"sessionId","nameLocation":"8157:9:8","nodeType":"VariableDeclaration","scope":2996,"src":"8149:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2859,"name":"uint256","nodeType":"ElementaryTypeName","src":"8149:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2862,"mutability":"mutable","name":"candidateId","nameLocation":"8185:11:8","nodeType":"VariableDeclaration","scope":2996,"src":"8177:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2861,"name":"uint256","nodeType":"ElementaryTypeName","src":"8177:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2864,"mutability":"mutable","name":"commitmentHash","nameLocation":"8215:14:8","nodeType":"VariableDeclaration","scope":2996,"src":"8207:22:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2863,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8207:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2866,"mutability":"mutable","name":"votingPower","nameLocation":"8248:11:8","nodeType":"VariableDeclaration","scope":2996,"src":"8240:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2865,"name":"uint256","nodeType":"ElementaryTypeName","src":"8240:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8138:128:8"},"returnParameters":{"id":2879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2878,"mutability":"mutable","name":"voteId","nameLocation":"8425:6:8","nodeType":"VariableDeclaration","scope":2996,"src":"8417:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2877,"name":"uint256","nodeType":"ElementaryTypeName","src":"8417:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8416:16:8"},"scope":3786,"src":"8121:1558:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3128,"nodeType":"Block","src":"10314:1206:8","statements":[{"expression":{"arguments":[{"id":3020,"name":"zkProofsEnabled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2513,"src":"10333:15:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5a4b2d70726f6f66732064697361626c6564","id":3021,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10350:20:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_b8e7691b0400f1eba69ce636d75aee57553f8c2e4369676f82e78110df0976c1","typeString":"literal_string \"ZK-proofs disabled\""},"value":"ZK-proofs disabled"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b8e7691b0400f1eba69ce636d75aee57553f8c2e4369676f82e78110df0976c1","typeString":"literal_string \"ZK-proofs disabled\""}],"id":3019,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"10325:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3022,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10325:46:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3023,"nodeType":"ExpressionStatement","src":"10325:46:8"},{"expression":{"arguments":[{"id":3031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"10390:32:8","subExpression":{"baseExpression":{"baseExpression":{"id":3025,"name":"hasVoted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2476,"src":"10391:8:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$","typeString":"mapping(address => mapping(uint256 => bool))"}},"id":3028,"indexExpression":{"expression":{"id":3026,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"10400:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10404:6:8","memberName":"sender","nodeType":"MemberAccess","src":"10400:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10391:20:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"}},"id":3030,"indexExpression":{"id":3029,"name":"sessionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2999,"src":"10412:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10391:31:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416c726561647920766f74656420696e20746869732073657373696f6e","id":3032,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10424:31:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_3840a5cc1a84a02085a692a9b758a13328803624db8bbb884e8a5a360a1930c3","typeString":"literal_string \"Already voted in this session\""},"value":"Already voted in this session"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3840a5cc1a84a02085a692a9b758a13328803624db8bbb884e8a5a360a1930c3","typeString":"literal_string \"Already voted in this session\""}],"id":3024,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"10382:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3033,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10382:74:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3034,"nodeType":"ExpressionStatement","src":"10382:74:8"},{"expression":{"id":3038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3035,"name":"voteId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3017,"src":"10477:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10486:13:8","subExpression":{"id":3036,"name":"voteCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2490,"src":"10486:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10477:22:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3039,"nodeType":"ExpressionStatement","src":"10477:22:8"},{"assignments":[3042],"declarations":[{"constant":false,"id":3042,"mutability":"mutable","name":"newVote","nameLocation":"10540:7:8","nodeType":"VariableDeclaration","scope":3128,"src":"10520:27:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_AdvancedVote_$2411_memory_ptr","typeString":"struct BlocPolAdvanced.AdvancedVote"},"typeName":{"id":3041,"nodeType":"UserDefinedTypeName","pathNode":{"id":3040,"name":"AdvancedVote","nameLocations":["10520:12:8"],"nodeType":"IdentifierPath","referencedDeclaration":2411,"src":"10520:12:8"},"referencedDeclaration":2411,"src":"10520:12:8","typeDescriptions":{"typeIdentifier":"t_struct$_AdvancedVote_$2411_storage_ptr","typeString":"struct BlocPolAdvanced.AdvancedVote"}},"visibility":"internal"}],"id":3068,"initialValue":{"arguments":[{"expression":{"id":3044,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"10585:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10589:6:8","memberName":"sender","nodeType":"MemberAccess","src":"10585:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3046,"name":"candidateId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3001,"src":"10623:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":3050,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10678:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3049,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"10664:13:8","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":3047,"name":"uint256","nodeType":"ElementaryTypeName","src":"10668:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3048,"nodeType":"ArrayTypeName","src":"10668:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":3051,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10664:16:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"arguments":[{"hexValue":"30","id":3054,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10719:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3053,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10711:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3052,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10711:7:8","typeDescriptions":{}}},"id":3055,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10711:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3056,"name":"zkProofHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3003,"src":"10749:11:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"hexValue":"30","id":3059,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10798:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3058,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10790:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3057,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10790:7:8","typeDescriptions":{}}},"id":3060,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10790:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3061,"name":"votingPower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3005,"src":"10828:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3062,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"10865:5:8","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10871:9:8","memberName":"timestamp","nodeType":"MemberAccess","src":"10865:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":3064,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10907:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"expression":{"id":3065,"name":"VoteType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2450,"src":"10937:8:8","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_VoteType_$2450_$","typeString":"type(enum BlocPolAdvanced.VoteType)"}},"id":3066,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10946:8:8","memberName":"ZK_PROOF","nodeType":"MemberAccess","referencedDeclaration":2449,"src":"10937:17:8","typeDescriptions":{"typeIdentifier":"t_enum$_VoteType_$2450","typeString":"enum BlocPolAdvanced.VoteType"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_enum$_VoteType_$2450","typeString":"enum BlocPolAdvanced.VoteType"}],"id":3043,"name":"AdvancedVote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2411,"src":"10550:12:8","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_AdvancedVote_$2411_storage_ptr_$","typeString":"type(struct BlocPolAdvanced.AdvancedVote storage pointer)"}},"id":3067,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["10578:5:8","10610:11:8","10649:13:8","10695:14:8","10736:11:8","10775:13:8","10815:11:8","10854:9:8","10895:10:8","10927:8:8"],"names":["voter","candidateId","rankedChoices","commitmentHash","zkProofHash","mixedVoteHash","votingPower","timestamp","isRevealed","voteType"],"nodeType":"FunctionCall","src":"10550:416:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AdvancedVote_$2411_memory_ptr","typeString":"struct BlocPolAdvanced.AdvancedVote memory"}},"nodeType":"VariableDeclarationStatement","src":"10520:446:8"},{"expression":{"id":3073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3069,"name":"votes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2465,"src":"10987:5:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_AdvancedVote_$2411_storage_$","typeString":"mapping(uint256 => struct BlocPolAdvanced.AdvancedVote storage ref)"}},"id":3071,"indexExpression":{"id":3070,"name":"voteId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3017,"src":"10993:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10987:13:8","typeDescriptions":{"typeIdentifier":"t_struct$_AdvancedVote_$2411_storage","typeString":"struct BlocPolAdvanced.AdvancedVote storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3072,"name":"newVote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3042,"src":"11003:7:8","typeDescriptions":{"typeIdentifier":"t_struct$_AdvancedVote_$2411_memory_ptr","typeString":"struct BlocPolAdvanced.AdvancedVote memory"}},"src":"10987:23:8","typeDescriptions":{"typeIdentifier":"t_struct$_AdvancedVote_$2411_storage","typeString":"struct BlocPolAdvanced.AdvancedVote storage ref"}},"id":3074,"nodeType":"ExpressionStatement","src":"10987:23:8"},{"expression":{"id":3082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":3075,"name":"hasVoted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2476,"src":"11021:8:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$","typeString":"mapping(address => mapping(uint256 => bool))"}},"id":3079,"indexExpression":{"expression":{"id":3076,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"11030:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11034:6:8","memberName":"sender","nodeType":"MemberAccess","src":"11030:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11021:20:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"}},"id":3080,"indexExpression":{"id":3078,"name":"sessionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2999,"src":"11042:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11021:31:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":3081,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11055:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"11021:38:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3083,"nodeType":"ExpressionStatement","src":"11021:38:8"},{"expression":{"arguments":[{"id":3089,"name":"voteId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3017,"src":"11098:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"id":3084,"name":"voterVotes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2481,"src":"11070:10:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[] storage ref)"}},"id":3087,"indexExpression":{"expression":{"id":3085,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"11081:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11085:6:8","memberName":"sender","nodeType":"MemberAccess","src":"11081:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11070:22:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":3088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11093:4:8","memberName":"push","nodeType":"MemberAccess","src":"11070:27:8","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256)"}},"id":3090,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11070:35:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3091,"nodeType":"ExpressionStatement","src":"11070:35:8"},{"expression":{"id":3096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"11164:38:8","subExpression":{"expression":{"baseExpression":{"id":3092,"name":"votingSessions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2470,"src":"11164:14:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_VotingSession_$2433_storage_$","typeString":"mapping(uint256 => struct BlocPolAdvanced.VotingSession storage ref)"}},"id":3094,"indexExpression":{"id":3093,"name":"sessionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2999,"src":"11179:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11164:25:8","typeDescriptions":{"typeIdentifier":"t_struct$_VotingSession_$2433_storage","typeString":"struct BlocPolAdvanced.VotingSession storage ref"}},"id":3095,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"11190:10:8","memberName":"totalVotes","nodeType":"MemberAccess","referencedDeclaration":2425,"src":"11164:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3097,"nodeType":"ExpressionStatement","src":"11164:38:8"},{"expression":{"id":3103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":3098,"name":"votingSessions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2470,"src":"11213:14:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_VotingSession_$2433_storage_$","typeString":"mapping(uint256 => struct BlocPolAdvanced.VotingSession storage ref)"}},"id":3100,"indexExpression":{"id":3099,"name":"sessionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2999,"src":"11228:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11213:25:8","typeDescriptions":{"typeIdentifier":"t_struct$_VotingSession_$2433_storage","typeString":"struct BlocPolAdvanced.VotingSession storage ref"}},"id":3101,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"11239:16:8","memberName":"totalVotingPower","nodeType":"MemberAccess","referencedDeclaration":2427,"src":"11213:42:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3102,"name":"votingPower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3005,"src":"11259:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11213:57:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3104,"nodeType":"ExpressionStatement","src":"11213:57:8"},{"expression":{"arguments":[{"hexValue":"5a4b5f564f54455f43415354","id":3106,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11305:14:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_1f8a9df1e476e2c93a7817523ef54fd179aa3a5eb87b026232bce744e8cd0276","typeString":"literal_string \"ZK_VOTE_CAST\""},"value":"ZK_VOTE_CAST"},{"arguments":[{"id":3109,"name":"voteId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3017,"src":"11338:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3110,"name":"sessionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2999,"src":"11346:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3111,"name":"candidateId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3001,"src":"11357:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3112,"name":"zkProofHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3003,"src":"11370:11:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":3107,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"11321:3:8","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11325:12:8","memberName":"encodePacked","nodeType":"MemberAccess","src":"11321:16:8","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3113,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11321:61:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_1f8a9df1e476e2c93a7817523ef54fd179aa3a5eb87b026232bce744e8cd0276","typeString":"literal_string \"ZK_VOTE_CAST\""},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3105,"name":"logAuditTrail","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3742,"src":"11291:13:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (string memory,bytes memory)"}},"id":3114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11291:92:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3115,"nodeType":"ExpressionStatement","src":"11291:92:8"},{"eventCall":{"arguments":[{"expression":{"id":3117,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"11418:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11422:6:8","memberName":"sender","nodeType":"MemberAccess","src":"11418:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3119,"name":"candidateId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3001,"src":"11430:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3120,"name":"VoteType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2450,"src":"11443:8:8","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_VoteType_$2450_$","typeString":"type(enum BlocPolAdvanced.VoteType)"}},"id":3121,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11452:8:8","memberName":"ZK_PROOF","nodeType":"MemberAccess","referencedDeclaration":2449,"src":"11443:17:8","typeDescriptions":{"typeIdentifier":"t_enum$_VoteType_$2450","typeString":"enum BlocPolAdvanced.VoteType"}},{"expression":{"id":3122,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"11462:5:8","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11468:9:8","memberName":"timestamp","nodeType":"MemberAccess","src":"11462:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_VoteType_$2450","typeString":"enum BlocPolAdvanced.VoteType"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3116,"name":"VoteCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2549,"src":"11409:8:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_enum$_VoteType_$2450_$_t_uint256_$returns$__$","typeString":"function (address,uint256,enum BlocPolAdvanced.VoteType,uint256)"}},"id":3124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11409:69:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3125,"nodeType":"EmitStatement","src":"11404:74:8"},{"expression":{"id":3126,"name":"voteId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3017,"src":"11506:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3018,"id":3127,"nodeType":"Return","src":"11499:13:8"}]},"documentation":{"id":2997,"nodeType":"StructuredDocumentation","src":"9687:304:8","text":" @dev Casts a vote with ZK-proof verification\n @param sessionId The voting session ID\n @param candidateId The candidate to vote for\n @param zkProofHash ZK-proof hash\n @param votingPower The voting power to use\n @return voteId The ID of the cast vote"},"functionSelector":"2966d67a","id":3129,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":3008,"name":"sessionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2999,"src":"10179:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3009,"kind":"modifierInvocation","modifierName":{"id":3007,"name":"onlyActiveSession","nameLocations":["10161:17:8"],"nodeType":"IdentifierPath","referencedDeclaration":2615,"src":"10161:17:8"},"nodeType":"ModifierInvocation","src":"10161:28:8"},{"arguments":[{"id":3011,"name":"candidateId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3001,"src":"10218:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3012,"kind":"modifierInvocation","modifierName":{"id":3010,"name":"onlyValidCandidate","nameLocations":["10199:18:8"],"nodeType":"IdentifierPath","referencedDeclaration":2629,"src":"10199:18:8"},"nodeType":"ModifierInvocation","src":"10199:31:8"},{"arguments":[{"id":3014,"name":"votingPower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3005,"src":"10261:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3015,"kind":"modifierInvocation","modifierName":{"id":3013,"name":"onlyValidVotingPower","nameLocations":["10240:20:8"],"nodeType":"IdentifierPath","referencedDeclaration":2646,"src":"10240:20:8"},"nodeType":"ModifierInvocation","src":"10240:33:8"}],"name":"castZKVote","nameLocation":"10006:10:8","nodeType":"FunctionDefinition","parameters":{"id":3006,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2999,"mutability":"mutable","name":"sessionId","nameLocation":"10035:9:8","nodeType":"VariableDeclaration","scope":3129,"src":"10027:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2998,"name":"uint256","nodeType":"ElementaryTypeName","src":"10027:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3001,"mutability":"mutable","name":"candidateId","nameLocation":"10063:11:8","nodeType":"VariableDeclaration","scope":3129,"src":"10055:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3000,"name":"uint256","nodeType":"ElementaryTypeName","src":"10055:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3003,"mutability":"mutable","name":"zkProofHash","nameLocation":"10093:11:8","nodeType":"VariableDeclaration","scope":3129,"src":"10085:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3002,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10085:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3005,"mutability":"mutable","name":"votingPower","nameLocation":"10123:11:8","nodeType":"VariableDeclaration","scope":3129,"src":"10115:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3004,"name":"uint256","nodeType":"ElementaryTypeName","src":"10115:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10016:125:8"},"returnParameters":{"id":3018,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3017,"mutability":"mutable","name":"voteId","nameLocation":"10300:6:8","nodeType":"VariableDeclaration","scope":3129,"src":"10292:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3016,"name":"uint256","nodeType":"ElementaryTypeName","src":"10292:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10291:16:8"},"scope":3786,"src":"9997:1523:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3281,"nodeType":"Block","src":"12097:1468:8","statements":[{"expression":{"arguments":[{"id":3151,"name":"liquidDemocracyEnabled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2515,"src":"12116:22:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c69717569642064656d6f63726163792064697361626c6564","id":3152,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12140:27:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_aa741414fb01752a80be946108d9945051dae7052b49eb75a02daf50ee3a7fb0","typeString":"literal_string \"Liquid democracy disabled\""},"value":"Liquid democracy disabled"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_aa741414fb01752a80be946108d9945051dae7052b49eb75a02daf50ee3a7fb0","typeString":"literal_string \"Liquid democracy disabled\""}],"id":3150,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"12108:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3153,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12108:60:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3154,"nodeType":"ExpressionStatement","src":"12108:60:8"},{"expression":{"arguments":[{"id":3162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"12187:32:8","subExpression":{"baseExpression":{"baseExpression":{"id":3156,"name":"hasVoted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2476,"src":"12188:8:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$","typeString":"mapping(address => mapping(uint256 => bool))"}},"id":3159,"indexExpression":{"expression":{"id":3157,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"12197:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12201:6:8","memberName":"sender","nodeType":"MemberAccess","src":"12197:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12188:20:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"}},"id":3161,"indexExpression":{"id":3160,"name":"sessionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3132,"src":"12209:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12188:31:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416c726561647920766f74656420696e20746869732073657373696f6e","id":3163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12221:31:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_3840a5cc1a84a02085a692a9b758a13328803624db8bbb884e8a5a360a1930c3","typeString":"literal_string \"Already voted in this session\""},"value":"Already voted in this session"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3840a5cc1a84a02085a692a9b758a13328803624db8bbb884e8a5a360a1930c3","typeString":"literal_string \"Already voted in this session\""}],"id":3155,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"12179:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3164,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12179:74:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3165,"nodeType":"ExpressionStatement","src":"12179:74:8"},{"assignments":[3170],"declarations":[{"constant":false,"id":3170,"mutability":"mutable","name":"voter","nameLocation":"12369:5:8","nodeType":"VariableDeclaration","scope":3281,"src":"12340:34:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Voter_$3818_memory_ptr","typeString":"struct LiquidDemocracy.Voter"},"typeName":{"id":3169,"nodeType":"UserDefinedTypeName","pathNode":{"id":3168,"name":"LiquidDemocracy.Voter","nameLocations":["12340:15:8","12356:5:8"],"nodeType":"IdentifierPath","referencedDeclaration":3818,"src":"12340:21:8"},"referencedDeclaration":3818,"src":"12340:21:8","typeDescriptions":{"typeIdentifier":"t_struct$_Voter_$3818_storage_ptr","typeString":"struct LiquidDemocracy.Voter"}},"visibility":"internal"}],"id":3176,"initialValue":{"arguments":[{"expression":{"id":3173,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"12402:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12406:6:8","memberName":"sender","nodeType":"MemberAccess","src":"12402:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3171,"name":"liquidDemocracy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2500,"src":"12377:15:8","typeDescriptions":{"typeIdentifier":"t_contract$_LiquidDemocracy_$4854","typeString":"contract LiquidDemocracy"}},"id":3172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12393:8:8","memberName":"getVoter","nodeType":"MemberAccess","referencedDeclaration":4582,"src":"12377:24:8","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_struct$_Voter_$3818_memory_ptr_$","typeString":"function (address) view external returns (struct LiquidDemocracy.Voter memory)"}},"id":3175,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12377:36:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Voter_$3818_memory_ptr","typeString":"struct LiquidDemocracy.Voter memory"}},"nodeType":"VariableDeclarationStatement","src":"12340:73:8"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3178,"name":"voter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3170,"src":"12432:5:8","typeDescriptions":{"typeIdentifier":"t_struct$_Voter_$3818_memory_ptr","typeString":"struct LiquidDemocracy.Voter memory"}},"id":3179,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12438:10:8","memberName":"totalPower","nodeType":"MemberAccess","referencedDeclaration":3806,"src":"12432:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":3180,"name":"votingPower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3136,"src":"12452:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12432:31:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e7420766f74696e6720706f776572","id":3182,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12465:27:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_e7ba12c60469871407bc8b4b932fe2fde360d8973aed7437542f698916fa6d4c","typeString":"literal_string \"Insufficient voting power\""},"value":"Insufficient voting power"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e7ba12c60469871407bc8b4b932fe2fde360d8973aed7437542f698916fa6d4c","typeString":"literal_string \"Insufficient voting power\""}],"id":3177,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"12424:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12424:69:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3184,"nodeType":"ExpressionStatement","src":"12424:69:8"},{"expression":{"id":3188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3185,"name":"voteId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3148,"src":"12514:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"12523:13:8","subExpression":{"id":3186,"name":"voteCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2490,"src":"12523:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12514:22:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3189,"nodeType":"ExpressionStatement","src":"12514:22:8"},{"assignments":[3192],"declarations":[{"constant":false,"id":3192,"mutability":"mutable","name":"newVote","nameLocation":"12577:7:8","nodeType":"VariableDeclaration","scope":3281,"src":"12557:27:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_AdvancedVote_$2411_memory_ptr","typeString":"struct BlocPolAdvanced.AdvancedVote"},"typeName":{"id":3191,"nodeType":"UserDefinedTypeName","pathNode":{"id":3190,"name":"AdvancedVote","nameLocations":["12557:12:8"],"nodeType":"IdentifierPath","referencedDeclaration":2411,"src":"12557:12:8"},"referencedDeclaration":2411,"src":"12557:12:8","typeDescriptions":{"typeIdentifier":"t_struct$_AdvancedVote_$2411_storage_ptr","typeString":"struct BlocPolAdvanced.AdvancedVote"}},"visibility":"internal"}],"id":3221,"initialValue":{"arguments":[{"expression":{"id":3194,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"12622:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12626:6:8","memberName":"sender","nodeType":"MemberAccess","src":"12622:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3196,"name":"candidateId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3134,"src":"12660:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":3200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12715:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3199,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"12701:13:8","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":3197,"name":"uint256","nodeType":"ElementaryTypeName","src":"12705:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3198,"nodeType":"ArrayTypeName","src":"12705:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":3201,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12701:16:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"arguments":[{"hexValue":"30","id":3204,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12756:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3203,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12748:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3202,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12748:7:8","typeDescriptions":{}}},"id":3205,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12748:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"hexValue":"30","id":3208,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12794:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3207,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12786:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3206,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12786:7:8","typeDescriptions":{}}},"id":3209,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12786:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"hexValue":"30","id":3212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12834:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3211,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12826:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3210,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12826:7:8","typeDescriptions":{}}},"id":3213,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12826:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3214,"name":"votingPower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3136,"src":"12864:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3215,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"12901:5:8","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12907:9:8","memberName":"timestamp","nodeType":"MemberAccess","src":"12901:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":3217,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12943:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"expression":{"id":3218,"name":"VoteType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2450,"src":"12973:8:8","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_VoteType_$2450_$","typeString":"type(enum BlocPolAdvanced.VoteType)"}},"id":3219,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12982:9:8","memberName":"DELEGATED","nodeType":"MemberAccess","referencedDeclaration":2447,"src":"12973:18:8","typeDescriptions":{"typeIdentifier":"t_enum$_VoteType_$2450","typeString":"enum BlocPolAdvanced.VoteType"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_enum$_VoteType_$2450","typeString":"enum BlocPolAdvanced.VoteType"}],"id":3193,"name":"AdvancedVote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2411,"src":"12587:12:8","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_AdvancedVote_$2411_storage_ptr_$","typeString":"type(struct BlocPolAdvanced.AdvancedVote storage pointer)"}},"id":3220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["12615:5:8","12647:11:8","12686:13:8","12732:14:8","12773:11:8","12811:13:8","12851:11:8","12890:9:8","12931:10:8","12963:8:8"],"names":["voter","candidateId","rankedChoices","commitmentHash","zkProofHash","mixedVoteHash","votingPower","timestamp","isRevealed","voteType"],"nodeType":"FunctionCall","src":"12587:416:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AdvancedVote_$2411_memory_ptr","typeString":"struct BlocPolAdvanced.AdvancedVote memory"}},"nodeType":"VariableDeclarationStatement","src":"12557:446:8"},{"expression":{"id":3226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3222,"name":"votes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2465,"src":"13024:5:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_AdvancedVote_$2411_storage_$","typeString":"mapping(uint256 => struct BlocPolAdvanced.AdvancedVote storage ref)"}},"id":3224,"indexExpression":{"id":3223,"name":"voteId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3148,"src":"13030:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13024:13:8","typeDescriptions":{"typeIdentifier":"t_struct$_AdvancedVote_$2411_storage","typeString":"struct BlocPolAdvanced.AdvancedVote storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3225,"name":"newVote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3192,"src":"13040:7:8","typeDescriptions":{"typeIdentifier":"t_struct$_AdvancedVote_$2411_memory_ptr","typeString":"struct BlocPolAdvanced.AdvancedVote memory"}},"src":"13024:23:8","typeDescriptions":{"typeIdentifier":"t_struct$_AdvancedVote_$2411_storage","typeString":"struct BlocPolAdvanced.AdvancedVote storage ref"}},"id":3227,"nodeType":"ExpressionStatement","src":"13024:23:8"},{"expression":{"id":3235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":3228,"name":"hasVoted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2476,"src":"13058:8:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$","typeString":"mapping(address => mapping(uint256 => bool))"}},"id":3232,"indexExpression":{"expression":{"id":3229,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"13067:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13071:6:8","memberName":"sender","nodeType":"MemberAccess","src":"13067:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13058:20:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"}},"id":3233,"indexExpression":{"id":3231,"name":"sessionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3132,"src":"13079:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13058:31:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":3234,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13092:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"13058:38:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3236,"nodeType":"ExpressionStatement","src":"13058:38:8"},{"expression":{"arguments":[{"id":3242,"name":"voteId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3148,"src":"13135:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"id":3237,"name":"voterVotes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2481,"src":"13107:10:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[] storage ref)"}},"id":3240,"indexExpression":{"expression":{"id":3238,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"13118:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13122:6:8","memberName":"sender","nodeType":"MemberAccess","src":"13118:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13107:22:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":3241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13130:4:8","memberName":"push","nodeType":"MemberAccess","src":"13107:27:8","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256)"}},"id":3243,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13107:35:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3244,"nodeType":"ExpressionStatement","src":"13107:35:8"},{"expression":{"id":3249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"13201:38:8","subExpression":{"expression":{"baseExpression":{"id":3245,"name":"votingSessions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2470,"src":"13201:14:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_VotingSession_$2433_storage_$","typeString":"mapping(uint256 => struct BlocPolAdvanced.VotingSession storage ref)"}},"id":3247,"indexExpression":{"id":3246,"name":"sessionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3132,"src":"13216:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13201:25:8","typeDescriptions":{"typeIdentifier":"t_struct$_VotingSession_$2433_storage","typeString":"struct BlocPolAdvanced.VotingSession storage ref"}},"id":3248,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"13227:10:8","memberName":"totalVotes","nodeType":"MemberAccess","referencedDeclaration":2425,"src":"13201:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3250,"nodeType":"ExpressionStatement","src":"13201:38:8"},{"expression":{"id":3256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":3251,"name":"votingSessions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2470,"src":"13250:14:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_VotingSession_$2433_storage_$","typeString":"mapping(uint256 => struct BlocPolAdvanced.VotingSession storage ref)"}},"id":3253,"indexExpression":{"id":3252,"name":"sessionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3132,"src":"13265:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13250:25:8","typeDescriptions":{"typeIdentifier":"t_struct$_VotingSession_$2433_storage","typeString":"struct BlocPolAdvanced.VotingSession storage ref"}},"id":3254,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"13276:16:8","memberName":"totalVotingPower","nodeType":"MemberAccess","referencedDeclaration":2427,"src":"13250:42:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3255,"name":"votingPower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3136,"src":"13296:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13250:57:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3257,"nodeType":"ExpressionStatement","src":"13250:57:8"},{"expression":{"arguments":[{"hexValue":"44454c4547415445445f564f54455f43415354","id":3259,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13342:21:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_299217c3eb5f997357deada29f9a01289e312ee1917223912aa56d73e63bf07f","typeString":"literal_string \"DELEGATED_VOTE_CAST\""},"value":"DELEGATED_VOTE_CAST"},{"arguments":[{"id":3262,"name":"voteId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3148,"src":"13382:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3263,"name":"sessionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3132,"src":"13390:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3264,"name":"candidateId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3134,"src":"13401:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3265,"name":"votingPower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3136,"src":"13414:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3260,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"13365:3:8","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3261,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13369:12:8","memberName":"encodePacked","nodeType":"MemberAccess","src":"13365:16:8","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3266,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13365:61:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_299217c3eb5f997357deada29f9a01289e312ee1917223912aa56d73e63bf07f","typeString":"literal_string \"DELEGATED_VOTE_CAST\""},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3258,"name":"logAuditTrail","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3742,"src":"13328:13:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (string memory,bytes memory)"}},"id":3267,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13328:99:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3268,"nodeType":"ExpressionStatement","src":"13328:99:8"},{"eventCall":{"arguments":[{"expression":{"id":3270,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"13462:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13466:6:8","memberName":"sender","nodeType":"MemberAccess","src":"13462:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3272,"name":"candidateId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3134,"src":"13474:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3273,"name":"VoteType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2450,"src":"13487:8:8","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_VoteType_$2450_$","typeString":"type(enum BlocPolAdvanced.VoteType)"}},"id":3274,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13496:9:8","memberName":"DELEGATED","nodeType":"MemberAccess","referencedDeclaration":2447,"src":"13487:18:8","typeDescriptions":{"typeIdentifier":"t_enum$_VoteType_$2450","typeString":"enum BlocPolAdvanced.VoteType"}},{"expression":{"id":3275,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"13507:5:8","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13513:9:8","memberName":"timestamp","nodeType":"MemberAccess","src":"13507:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_VoteType_$2450","typeString":"enum BlocPolAdvanced.VoteType"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3269,"name":"VoteCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2549,"src":"13453:8:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_enum$_VoteType_$2450_$_t_uint256_$returns$__$","typeString":"function (address,uint256,enum BlocPolAdvanced.VoteType,uint256)"}},"id":3277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13453:70:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3278,"nodeType":"EmitStatement","src":"13448:75:8"},{"expression":{"id":3279,"name":"voteId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3148,"src":"13551:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3149,"id":3280,"nodeType":"Return","src":"13544:13:8"}]},"documentation":{"id":3130,"nodeType":"StructuredDocumentation","src":"11528:269:8","text":" @dev Casts a delegated vote using liquid democracy\n @param sessionId The voting session ID\n @param candidateId The candidate to vote for\n @param votingPower The voting power to use\n @return voteId The ID of the cast vote"},"functionSelector":"b4483aa7","id":3282,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":3139,"name":"sessionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3132,"src":"11962:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3140,"kind":"modifierInvocation","modifierName":{"id":3138,"name":"onlyActiveSession","nameLocations":["11944:17:8"],"nodeType":"IdentifierPath","referencedDeclaration":2615,"src":"11944:17:8"},"nodeType":"ModifierInvocation","src":"11944:28:8"},{"arguments":[{"id":3142,"name":"candidateId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3134,"src":"12001:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3143,"kind":"modifierInvocation","modifierName":{"id":3141,"name":"onlyValidCandidate","nameLocations":["11982:18:8"],"nodeType":"IdentifierPath","referencedDeclaration":2629,"src":"11982:18:8"},"nodeType":"ModifierInvocation","src":"11982:31:8"},{"arguments":[{"id":3145,"name":"votingPower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3136,"src":"12044:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3146,"kind":"modifierInvocation","modifierName":{"id":3144,"name":"onlyValidVotingPower","nameLocations":["12023:20:8"],"nodeType":"IdentifierPath","referencedDeclaration":2646,"src":"12023:20:8"},"nodeType":"ModifierInvocation","src":"12023:33:8"}],"name":"castDelegatedVote","nameLocation":"11812:17:8","nodeType":"FunctionDefinition","parameters":{"id":3137,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3132,"mutability":"mutable","name":"sessionId","nameLocation":"11848:9:8","nodeType":"VariableDeclaration","scope":3282,"src":"11840:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3131,"name":"uint256","nodeType":"ElementaryTypeName","src":"11840:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3134,"mutability":"mutable","name":"candidateId","nameLocation":"11876:11:8","nodeType":"VariableDeclaration","scope":3282,"src":"11868:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3133,"name":"uint256","nodeType":"ElementaryTypeName","src":"11868:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3136,"mutability":"mutable","name":"votingPower","nameLocation":"11906:11:8","nodeType":"VariableDeclaration","scope":3282,"src":"11898:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3135,"name":"uint256","nodeType":"ElementaryTypeName","src":"11898:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11829:95:8"},"returnParameters":{"id":3149,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3148,"mutability":"mutable","name":"voteId","nameLocation":"12083:6:8","nodeType":"VariableDeclaration","scope":3282,"src":"12075:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3147,"name":"uint256","nodeType":"ElementaryTypeName","src":"12075:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12074:16:8"},"scope":3786,"src":"11803:1762:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3368,"nodeType":"Block","src":"13906:757:8","statements":[{"assignments":[3294],"declarations":[{"constant":false,"id":3294,"mutability":"mutable","name":"vote","nameLocation":"13938:4:8","nodeType":"VariableDeclaration","scope":3368,"src":"13917:25:8","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AdvancedVote_$2411_storage_ptr","typeString":"struct BlocPolAdvanced.AdvancedVote"},"typeName":{"id":3293,"nodeType":"UserDefinedTypeName","pathNode":{"id":3292,"name":"AdvancedVote","nameLocations":["13917:12:8"],"nodeType":"IdentifierPath","referencedDeclaration":2411,"src":"13917:12:8"},"referencedDeclaration":2411,"src":"13917:12:8","typeDescriptions":{"typeIdentifier":"t_struct$_AdvancedVote_$2411_storage_ptr","typeString":"struct BlocPolAdvanced.AdvancedVote"}},"visibility":"internal"}],"id":3298,"initialValue":{"baseExpression":{"id":3295,"name":"votes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2465,"src":"13945:5:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_AdvancedVote_$2411_storage_$","typeString":"mapping(uint256 => struct BlocPolAdvanced.AdvancedVote storage ref)"}},"id":3297,"indexExpression":{"id":3296,"name":"voteId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3285,"src":"13951:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13945:13:8","typeDescriptions":{"typeIdentifier":"t_struct$_AdvancedVote_$2411_storage","typeString":"struct BlocPolAdvanced.AdvancedVote storage ref"}},"nodeType":"VariableDeclarationStatement","src":"13917:41:8"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3300,"name":"vote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3294,"src":"13977:4:8","typeDescriptions":{"typeIdentifier":"t_struct$_AdvancedVote_$2411_storage_ptr","typeString":"struct BlocPolAdvanced.AdvancedVote storage pointer"}},"id":3301,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13982:5:8","memberName":"voter","nodeType":"MemberAccess","referencedDeclaration":2390,"src":"13977:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3302,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"13991:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13995:6:8","memberName":"sender","nodeType":"MemberAccess","src":"13991:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13977:24:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7420796f757220766f7465","id":3305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14003:15:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_68c38339e7f8527bca021e81c262ada4a2a1fee6c820a407205d421963108057","typeString":"literal_string \"Not your vote\""},"value":"Not your vote"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_68c38339e7f8527bca021e81c262ada4a2a1fee6c820a407205d421963108057","typeString":"literal_string \"Not your vote\""}],"id":3299,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"13969:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3306,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13969:50:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3307,"nodeType":"ExpressionStatement","src":"13969:50:8"},{"expression":{"arguments":[{"id":3311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"14038:16:8","subExpression":{"expression":{"id":3309,"name":"vote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3294,"src":"14039:4:8","typeDescriptions":{"typeIdentifier":"t_struct$_AdvancedVote_$2411_storage_ptr","typeString":"struct BlocPolAdvanced.AdvancedVote storage pointer"}},"id":3310,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14044:10:8","memberName":"isRevealed","nodeType":"MemberAccess","referencedDeclaration":2407,"src":"14039:15:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"566f746520616c72656164792072657665616c6564","id":3312,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14056:23:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_d42d83aa0c2183a61b68cd47c8e1b5835de575ce708623305e88faa2e5d1fae2","typeString":"literal_string \"Vote already revealed\""},"value":"Vote already revealed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d42d83aa0c2183a61b68cd47c8e1b5835de575ce708623305e88faa2e5d1fae2","typeString":"literal_string \"Vote already revealed\""}],"id":3308,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"14030:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3313,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14030:50:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3314,"nodeType":"ExpressionStatement","src":"14030:50:8"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_enum$_VoteType_$2450","typeString":"enum BlocPolAdvanced.VoteType"},"id":3320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3316,"name":"vote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3294,"src":"14099:4:8","typeDescriptions":{"typeIdentifier":"t_struct$_AdvancedVote_$2411_storage_ptr","typeString":"struct BlocPolAdvanced.AdvancedVote storage pointer"}},"id":3317,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14104:8:8","memberName":"voteType","nodeType":"MemberAccess","referencedDeclaration":2410,"src":"14099:13:8","typeDescriptions":{"typeIdentifier":"t_enum$_VoteType_$2450","typeString":"enum BlocPolAdvanced.VoteType"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3318,"name":"VoteType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2450,"src":"14116:8:8","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_VoteType_$2450_$","typeString":"type(enum BlocPolAdvanced.VoteType)"}},"id":3319,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14125:6:8","memberName":"DIRECT","nodeType":"MemberAccess","referencedDeclaration":2446,"src":"14116:15:8","typeDescriptions":{"typeIdentifier":"t_enum$_VoteType_$2450","typeString":"enum BlocPolAdvanced.VoteType"}},"src":"14099:32:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7420612064697265637420766f7465","id":3321,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14133:19:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_ac9a77a5a36d8eccd3fc2933468df57234731f208e88bda87e1354b04d3f10d5","typeString":"literal_string \"Not a direct vote\""},"value":"Not a direct vote"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ac9a77a5a36d8eccd3fc2933468df57234731f208e88bda87e1354b04d3f10d5","typeString":"literal_string \"Not a direct vote\""}],"id":3315,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"14091:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3322,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14091:62:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3323,"nodeType":"ExpressionStatement","src":"14091:62:8"},{"expression":{"arguments":[{"arguments":[{"id":3327,"name":"originalVote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3287,"src":"14248:12:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3328,"name":"randomness","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3289,"src":"14262:10:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":3329,"name":"vote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3294,"src":"14274:4:8","typeDescriptions":{"typeIdentifier":"t_struct$_AdvancedVote_$2411_storage_ptr","typeString":"struct BlocPolAdvanced.AdvancedVote storage pointer"}},"id":3330,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14279:14:8","memberName":"commitmentHash","nodeType":"MemberAccess","referencedDeclaration":2397,"src":"14274:19:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":3325,"name":"CryptographicUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7219,"src":"14212:18:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_CryptographicUtils_$7219_$","typeString":"type(library CryptographicUtils)"}},"id":3326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14231:16:8","memberName":"verifyCommitment","nodeType":"MemberAccess","referencedDeclaration":6630,"src":"14212:35:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32,bytes32) pure returns (bool)"}},"id":3331,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14212:82:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420636f6d6d69746d656e74","id":3332,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14296:20:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_37deded7645232335d6363ec0ce7bfd4fafcb64b738b05599f29832c44ad0e2b","typeString":"literal_string \"Invalid commitment\""},"value":"Invalid commitment"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_37deded7645232335d6363ec0ce7bfd4fafcb64b738b05599f29832c44ad0e2b","typeString":"literal_string \"Invalid commitment\""}],"id":3324,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"14204:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3333,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14204:113:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3334,"nodeType":"ExpressionStatement","src":"14204:113:8"},{"expression":{"id":3339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3335,"name":"vote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3294,"src":"14338:4:8","typeDescriptions":{"typeIdentifier":"t_struct$_AdvancedVote_$2411_storage_ptr","typeString":"struct BlocPolAdvanced.AdvancedVote storage pointer"}},"id":3337,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"14343:10:8","memberName":"isRevealed","nodeType":"MemberAccess","referencedDeclaration":2407,"src":"14338:15:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":3338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14356:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"14338:22:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3340,"nodeType":"ExpressionStatement","src":"14338:22:8"},{"expression":{"id":3348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":3341,"name":"candidates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2460,"src":"14421:10:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Candidate_$2388_storage_$","typeString":"mapping(uint256 => struct BlocPolAdvanced.Candidate storage ref)"}},"id":3344,"indexExpression":{"expression":{"id":3342,"name":"vote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3294,"src":"14432:4:8","typeDescriptions":{"typeIdentifier":"t_struct$_AdvancedVote_$2411_storage_ptr","typeString":"struct BlocPolAdvanced.AdvancedVote storage pointer"}},"id":3343,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14437:11:8","memberName":"candidateId","nodeType":"MemberAccess","referencedDeclaration":2392,"src":"14432:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14421:28:8","typeDescriptions":{"typeIdentifier":"t_struct$_Candidate_$2388_storage","typeString":"struct BlocPolAdvanced.Candidate storage ref"}},"id":3345,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"14450:9:8","memberName":"voteCount","nodeType":"MemberAccess","referencedDeclaration":2381,"src":"14421:38:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"id":3346,"name":"vote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3294,"src":"14463:4:8","typeDescriptions":{"typeIdentifier":"t_struct$_AdvancedVote_$2411_storage_ptr","typeString":"struct BlocPolAdvanced.AdvancedVote storage pointer"}},"id":3347,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14468:11:8","memberName":"votingPower","nodeType":"MemberAccess","referencedDeclaration":2403,"src":"14463:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14421:58:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3349,"nodeType":"ExpressionStatement","src":"14421:58:8"},{"expression":{"arguments":[{"hexValue":"564f54455f52455645414c4544","id":3351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14514:15:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_a692e7ec75b025582e26a2ded4eb422ee7e160c5add1c3d629d778b61c15aee3","typeString":"literal_string \"VOTE_REVEALED\""},"value":"VOTE_REVEALED"},{"arguments":[{"id":3354,"name":"voteId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3285,"src":"14548:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3355,"name":"originalVote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3287,"src":"14556:12:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":3352,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"14531:3:8","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3353,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14535:12:8","memberName":"encodePacked","nodeType":"MemberAccess","src":"14531:16:8","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3356,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14531:38:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_a692e7ec75b025582e26a2ded4eb422ee7e160c5add1c3d629d778b61c15aee3","typeString":"literal_string \"VOTE_REVEALED\""},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3350,"name":"logAuditTrail","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3742,"src":"14500:13:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (string memory,bytes memory)"}},"id":3357,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14500:70:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3358,"nodeType":"ExpressionStatement","src":"14500:70:8"},{"eventCall":{"arguments":[{"expression":{"id":3360,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"14609:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14613:6:8","memberName":"sender","nodeType":"MemberAccess","src":"14609:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3362,"name":"vote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3294,"src":"14621:4:8","typeDescriptions":{"typeIdentifier":"t_struct$_AdvancedVote_$2411_storage_ptr","typeString":"struct BlocPolAdvanced.AdvancedVote storage pointer"}},"id":3363,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14626:11:8","memberName":"candidateId","nodeType":"MemberAccess","referencedDeclaration":2392,"src":"14621:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3364,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"14639:5:8","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14645:9:8","memberName":"timestamp","nodeType":"MemberAccess","src":"14639:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3359,"name":"VoteRevealed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2557,"src":"14596:12:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":3366,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14596:59:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3367,"nodeType":"EmitStatement","src":"14591:64:8"}]},"documentation":{"id":3283,"nodeType":"StructuredDocumentation","src":"13573:206:8","text":" @dev Reveals a committed vote\n @param voteId The vote ID to reveal\n @param originalVote The original vote value\n @param randomness The randomness used in commitment"},"functionSelector":"8ed1fde7","id":3369,"implemented":true,"kind":"function","modifiers":[],"name":"revealVote","nameLocation":"13794:10:8","nodeType":"FunctionDefinition","parameters":{"id":3290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3285,"mutability":"mutable","name":"voteId","nameLocation":"13823:6:8","nodeType":"VariableDeclaration","scope":3369,"src":"13815:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3284,"name":"uint256","nodeType":"ElementaryTypeName","src":"13815:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3287,"mutability":"mutable","name":"originalVote","nameLocation":"13848:12:8","nodeType":"VariableDeclaration","scope":3369,"src":"13840:20:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3286,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13840:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3289,"mutability":"mutable","name":"randomness","nameLocation":"13879:10:8","nodeType":"VariableDeclaration","scope":3369,"src":"13871:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3288,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13871:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"13804:92:8"},"returnParameters":{"id":3291,"nodeType":"ParameterList","parameters":[],"src":"13906:0:8"},"scope":3786,"src":"13785:878:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3478,"nodeType":"Block","src":"14858:868:8","statements":[{"assignments":[3379],"declarations":[{"constant":false,"id":3379,"mutability":"mutable","name":"session","nameLocation":"14891:7:8","nodeType":"VariableDeclaration","scope":3478,"src":"14869:29:8","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_VotingSession_$2433_storage_ptr","typeString":"struct BlocPolAdvanced.VotingSession"},"typeName":{"id":3378,"nodeType":"UserDefinedTypeName","pathNode":{"id":3377,"name":"VotingSession","nameLocations":["14869:13:8"],"nodeType":"IdentifierPath","referencedDeclaration":2433,"src":"14869:13:8"},"referencedDeclaration":2433,"src":"14869:13:8","typeDescriptions":{"typeIdentifier":"t_struct$_VotingSession_$2433_storage_ptr","typeString":"struct BlocPolAdvanced.VotingSession"}},"visibility":"internal"}],"id":3383,"initialValue":{"baseExpression":{"id":3380,"name":"votingSessions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2470,"src":"14901:14:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_VotingSession_$2433_storage_$","typeString":"mapping(uint256 => struct BlocPolAdvanced.VotingSession storage ref)"}},"id":3382,"indexExpression":{"id":3381,"name":"sessionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3372,"src":"14916:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14901:25:8","typeDescriptions":{"typeIdentifier":"t_struct$_VotingSession_$2433_storage","typeString":"struct BlocPolAdvanced.VotingSession storage ref"}},"nodeType":"VariableDeclarationStatement","src":"14869:57:8"},{"expression":{"arguments":[{"expression":{"id":3385,"name":"session","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3379,"src":"14945:7:8","typeDescriptions":{"typeIdentifier":"t_struct$_VotingSession_$2433_storage_ptr","typeString":"struct BlocPolAdvanced.VotingSession storage pointer"}},"id":3386,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14953:8:8","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":2421,"src":"14945:16:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53657373696f6e206e6f7420616374697665","id":3387,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14963:20:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_839544cc0fb5d16787f6441633a106424ee8a196fb189a6c1966ac6f3b81e51f","typeString":"literal_string \"Session not active\""},"value":"Session not active"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_839544cc0fb5d16787f6441633a106424ee8a196fb189a6c1966ac6f3b81e51f","typeString":"literal_string \"Session not active\""}],"id":3384,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"14937:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3388,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14937:47:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3389,"nodeType":"ExpressionStatement","src":"14937:47:8"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3391,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"15003:5:8","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15009:9:8","memberName":"timestamp","nodeType":"MemberAccess","src":"15003:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":3393,"name":"session","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3379,"src":"15022:7:8","typeDescriptions":{"typeIdentifier":"t_struct$_VotingSession_$2433_storage_ptr","typeString":"struct BlocPolAdvanced.VotingSession storage pointer"}},"id":3394,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15030:7:8","memberName":"endTime","nodeType":"MemberAccess","referencedDeclaration":2417,"src":"15022:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15003:34:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53657373696f6e206e6f7420656e646564","id":3396,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15039:19:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_3547a839e0d2412a0f190c9053aacac024d23acd13abc819ac11fbe0ca4e6a09","typeString":"literal_string \"Session not ended\""},"value":"Session not ended"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3547a839e0d2412a0f190c9053aacac024d23acd13abc819ac11fbe0ca4e6a09","typeString":"literal_string \"Session not ended\""}],"id":3390,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"14995:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3397,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14995:64:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3398,"nodeType":"ExpressionStatement","src":"14995:64:8"},{"expression":{"id":3403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3399,"name":"session","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3379,"src":"15080:7:8","typeDescriptions":{"typeIdentifier":"t_struct$_VotingSession_$2433_storage_ptr","typeString":"struct BlocPolAdvanced.VotingSession storage pointer"}},"id":3401,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"15088:8:8","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":2421,"src":"15080:16:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":3402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15099:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"15080:24:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3404,"nodeType":"ExpressionStatement","src":"15080:24:8"},{"assignments":[3409],"declarations":[{"constant":false,"id":3409,"mutability":"mutable","name":"voteHashes","nameLocation":"15188:10:8","nodeType":"VariableDeclaration","scope":3478,"src":"15171:27:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3407,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15171:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3408,"nodeType":"ArrayTypeName","src":"15171:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":3416,"initialValue":{"arguments":[{"expression":{"id":3413,"name":"session","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3379,"src":"15215:7:8","typeDescriptions":{"typeIdentifier":"t_struct$_VotingSession_$2433_storage_ptr","typeString":"struct BlocPolAdvanced.VotingSession storage pointer"}},"id":3414,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15223:10:8","memberName":"totalVotes","nodeType":"MemberAccess","referencedDeclaration":2425,"src":"15215:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3412,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"15201:13:8","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes32[] memory)"},"typeName":{"baseType":{"id":3410,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15205:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3411,"nodeType":"ArrayTypeName","src":"15205:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}}},"id":3415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15201:33:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"15171:63:8"},{"body":{"id":3447,"nodeType":"Block","src":"15294:111:8","statements":[{"expression":{"id":3445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3428,"name":"voteHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3409,"src":"15309:10:8","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":3430,"indexExpression":{"id":3429,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3418,"src":"15320:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15309:13:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":3434,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3418,"src":"15352:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"baseExpression":{"id":3435,"name":"votes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2465,"src":"15355:5:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_AdvancedVote_$2411_storage_$","typeString":"mapping(uint256 => struct BlocPolAdvanced.AdvancedVote storage ref)"}},"id":3437,"indexExpression":{"id":3436,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3418,"src":"15361:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15355:8:8","typeDescriptions":{"typeIdentifier":"t_struct$_AdvancedVote_$2411_storage","typeString":"struct BlocPolAdvanced.AdvancedVote storage ref"}},"id":3438,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15364:5:8","memberName":"voter","nodeType":"MemberAccess","referencedDeclaration":2390,"src":"15355:14:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"baseExpression":{"id":3439,"name":"votes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2465,"src":"15371:5:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_AdvancedVote_$2411_storage_$","typeString":"mapping(uint256 => struct BlocPolAdvanced.AdvancedVote storage ref)"}},"id":3441,"indexExpression":{"id":3440,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3418,"src":"15377:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15371:8:8","typeDescriptions":{"typeIdentifier":"t_struct$_AdvancedVote_$2411_storage","typeString":"struct BlocPolAdvanced.AdvancedVote storage ref"}},"id":3442,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15380:11:8","memberName":"candidateId","nodeType":"MemberAccess","referencedDeclaration":2392,"src":"15371:20:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3432,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"15335:3:8","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3433,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15339:12:8","memberName":"encodePacked","nodeType":"MemberAccess","src":"15335:16:8","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3443,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15335:57:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3431,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"15325:9:8","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3444,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15325:68:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"15309:84:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3446,"nodeType":"ExpressionStatement","src":"15309:84:8"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3421,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3418,"src":"15265:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3422,"name":"session","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3379,"src":"15269:7:8","typeDescriptions":{"typeIdentifier":"t_struct$_VotingSession_$2433_storage_ptr","typeString":"struct BlocPolAdvanced.VotingSession storage pointer"}},"id":3423,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15277:10:8","memberName":"totalVotes","nodeType":"MemberAccess","referencedDeclaration":2425,"src":"15269:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15265:22:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3448,"initializationExpression":{"assignments":[3418],"declarations":[{"constant":false,"id":3418,"mutability":"mutable","name":"i","nameLocation":"15258:1:8","nodeType":"VariableDeclaration","scope":3448,"src":"15250:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3417,"name":"uint256","nodeType":"ElementaryTypeName","src":"15250:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3420,"initialValue":{"hexValue":"30","id":3419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15262:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"15250:13:8"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"15289:3:8","subExpression":{"id":3425,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3418,"src":"15289:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3427,"nodeType":"ExpressionStatement","src":"15289:3:8"},"nodeType":"ForStatement","src":"15245:160:8"},{"expression":{"id":3456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3449,"name":"session","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3379,"src":"15415:7:8","typeDescriptions":{"typeIdentifier":"t_struct$_VotingSession_$2433_storage_ptr","typeString":"struct BlocPolAdvanced.VotingSession storage pointer"}},"id":3451,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"15423:10:8","memberName":"merkleRoot","nodeType":"MemberAccess","referencedDeclaration":2432,"src":"15415:18:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3454,"name":"voteHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3409,"src":"15482:10:8","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}],"expression":{"id":3452,"name":"CryptographicUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7219,"src":"15436:18:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_CryptographicUtils_$7219_$","typeString":"type(library CryptographicUtils)"}},"id":3453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15455:26:8","memberName":"createMerkleRootFromMemory","nodeType":"MemberAccess","referencedDeclaration":7072,"src":"15436:45:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes32[] memory) pure returns (bytes32)"}},"id":3455,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15436:57:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"15415:78:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3457,"nodeType":"ExpressionStatement","src":"15415:78:8"},{"expression":{"arguments":[{"hexValue":"564f54494e475f53455353494f4e5f454e444544","id":3459,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15528:22:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_689da78f3943b5a8a42e33ff0259c1710469ef61c1bca883a97397bd4bb2a1b3","typeString":"literal_string \"VOTING_SESSION_ENDED\""},"value":"VOTING_SESSION_ENDED"},{"arguments":[{"id":3462,"name":"sessionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3372,"src":"15569:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3463,"name":"session","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3379,"src":"15580:7:8","typeDescriptions":{"typeIdentifier":"t_struct$_VotingSession_$2433_storage_ptr","typeString":"struct BlocPolAdvanced.VotingSession storage pointer"}},"id":3464,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15588:10:8","memberName":"totalVotes","nodeType":"MemberAccess","referencedDeclaration":2425,"src":"15580:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3465,"name":"session","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3379,"src":"15600:7:8","typeDescriptions":{"typeIdentifier":"t_struct$_VotingSession_$2433_storage_ptr","typeString":"struct BlocPolAdvanced.VotingSession storage pointer"}},"id":3466,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15608:16:8","memberName":"totalVotingPower","nodeType":"MemberAccess","referencedDeclaration":2427,"src":"15600:24:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3460,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"15552:3:8","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3461,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15556:12:8","memberName":"encodePacked","nodeType":"MemberAccess","src":"15552:16:8","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15552:73:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_689da78f3943b5a8a42e33ff0259c1710469ef61c1bca883a97397bd4bb2a1b3","typeString":"literal_string \"VOTING_SESSION_ENDED\""},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3458,"name":"logAuditTrail","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3742,"src":"15514:13:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (string memory,bytes memory)"}},"id":3468,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15514:112:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3469,"nodeType":"ExpressionStatement","src":"15514:112:8"},{"eventCall":{"arguments":[{"id":3471,"name":"sessionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3372,"src":"15671:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3472,"name":"session","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3379,"src":"15682:7:8","typeDescriptions":{"typeIdentifier":"t_struct$_VotingSession_$2433_storage_ptr","typeString":"struct BlocPolAdvanced.VotingSession storage pointer"}},"id":3473,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15690:10:8","memberName":"totalVotes","nodeType":"MemberAccess","referencedDeclaration":2425,"src":"15682:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3474,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"15702:5:8","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15708:9:8","memberName":"timestamp","nodeType":"MemberAccess","src":"15702:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3470,"name":"VotingSessionEnded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2565,"src":"15652:18:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256,uint256)"}},"id":3476,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15652:66:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3477,"nodeType":"EmitStatement","src":"15647:71:8"}]},"documentation":{"id":3370,"nodeType":"StructuredDocumentation","src":"14671:117:8","text":" @dev Ends a voting session and calculates results\n @param sessionId The session ID to end"},"functionSelector":"35bb3d30","id":3479,"implemented":true,"kind":"function","modifiers":[{"id":3375,"kind":"modifierInvocation","modifierName":{"id":3374,"name":"onlyOwner","nameLocations":["14848:9:8"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"14848:9:8"},"nodeType":"ModifierInvocation","src":"14848:9:8"}],"name":"endVotingSession","nameLocation":"14803:16:8","nodeType":"FunctionDefinition","parameters":{"id":3373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3372,"mutability":"mutable","name":"sessionId","nameLocation":"14828:9:8","nodeType":"VariableDeclaration","scope":3479,"src":"14820:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3371,"name":"uint256","nodeType":"ElementaryTypeName","src":"14820:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14819:19:8"},"returnParameters":{"id":3376,"nodeType":"ParameterList","parameters":[],"src":"14858:0:8"},"scope":3786,"src":"14794:932:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3492,"nodeType":"Block","src":"15993:49:8","statements":[{"expression":{"baseExpression":{"id":3488,"name":"candidates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2460,"src":"16011:10:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Candidate_$2388_storage_$","typeString":"mapping(uint256 => struct BlocPolAdvanced.Candidate storage ref)"}},"id":3490,"indexExpression":{"id":3489,"name":"candidateId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3482,"src":"16022:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16011:23:8","typeDescriptions":{"typeIdentifier":"t_struct$_Candidate_$2388_storage","typeString":"struct BlocPolAdvanced.Candidate storage ref"}},"functionReturnParameters":3487,"id":3491,"nodeType":"Return","src":"16004:30:8"}]},"documentation":{"id":3480,"nodeType":"StructuredDocumentation","src":"15767:136:8","text":" @dev Gets candidate information\n @param candidateId The candidate ID\n @return The candidate structure"},"functionSelector":"35b8e820","id":3493,"implemented":true,"kind":"function","modifiers":[],"name":"getCandidate","nameLocation":"15918:12:8","nodeType":"FunctionDefinition","parameters":{"id":3483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3482,"mutability":"mutable","name":"candidateId","nameLocation":"15939:11:8","nodeType":"VariableDeclaration","scope":3493,"src":"15931:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3481,"name":"uint256","nodeType":"ElementaryTypeName","src":"15931:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15930:21:8"},"returnParameters":{"id":3487,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3486,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3493,"src":"15975:16:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Candidate_$2388_memory_ptr","typeString":"struct BlocPolAdvanced.Candidate"},"typeName":{"id":3485,"nodeType":"UserDefinedTypeName","pathNode":{"id":3484,"name":"Candidate","nameLocations":["15975:9:8"],"nodeType":"IdentifierPath","referencedDeclaration":2388,"src":"15975:9:8"},"referencedDeclaration":2388,"src":"15975:9:8","typeDescriptions":{"typeIdentifier":"t_struct$_Candidate_$2388_storage_ptr","typeString":"struct BlocPolAdvanced.Candidate"}},"visibility":"internal"}],"src":"15974:18:8"},"scope":3786,"src":"15909:133:8","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":3535,"nodeType":"Block","src":"16218:234:8","statements":[{"assignments":[3505],"declarations":[{"constant":false,"id":3505,"mutability":"mutable","name":"allCandidates","nameLocation":"16248:13:8","nodeType":"VariableDeclaration","scope":3535,"src":"16229:32:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Candidate_$2388_memory_ptr_$dyn_memory_ptr","typeString":"struct BlocPolAdvanced.Candidate[]"},"typeName":{"baseType":{"id":3503,"nodeType":"UserDefinedTypeName","pathNode":{"id":3502,"name":"Candidate","nameLocations":["16229:9:8"],"nodeType":"IdentifierPath","referencedDeclaration":2388,"src":"16229:9:8"},"referencedDeclaration":2388,"src":"16229:9:8","typeDescriptions":{"typeIdentifier":"t_struct$_Candidate_$2388_storage_ptr","typeString":"struct BlocPolAdvanced.Candidate"}},"id":3504,"nodeType":"ArrayTypeName","src":"16229:11:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Candidate_$2388_storage_$dyn_storage_ptr","typeString":"struct BlocPolAdvanced.Candidate[]"}},"visibility":"internal"}],"id":3512,"initialValue":{"arguments":[{"id":3510,"name":"candidateCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2488,"src":"16280:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3509,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"16264:15:8","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Candidate_$2388_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (struct BlocPolAdvanced.Candidate memory[] memory)"},"typeName":{"baseType":{"id":3507,"nodeType":"UserDefinedTypeName","pathNode":{"id":3506,"name":"Candidate","nameLocations":["16268:9:8"],"nodeType":"IdentifierPath","referencedDeclaration":2388,"src":"16268:9:8"},"referencedDeclaration":2388,"src":"16268:9:8","typeDescriptions":{"typeIdentifier":"t_struct$_Candidate_$2388_storage_ptr","typeString":"struct BlocPolAdvanced.Candidate"}},"id":3508,"nodeType":"ArrayTypeName","src":"16268:11:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Candidate_$2388_storage_$dyn_storage_ptr","typeString":"struct BlocPolAdvanced.Candidate[]"}}},"id":3511,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16264:33:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Candidate_$2388_memory_ptr_$dyn_memory_ptr","typeString":"struct BlocPolAdvanced.Candidate memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"16229:68:8"},{"body":{"id":3531,"nodeType":"Block","src":"16355:59:8","statements":[{"expression":{"id":3529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3523,"name":"allCandidates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3505,"src":"16370:13:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Candidate_$2388_memory_ptr_$dyn_memory_ptr","typeString":"struct BlocPolAdvanced.Candidate memory[] memory"}},"id":3525,"indexExpression":{"id":3524,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3514,"src":"16384:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"16370:16:8","typeDescriptions":{"typeIdentifier":"t_struct$_Candidate_$2388_memory_ptr","typeString":"struct BlocPolAdvanced.Candidate memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":3526,"name":"candidates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2460,"src":"16389:10:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Candidate_$2388_storage_$","typeString":"mapping(uint256 => struct BlocPolAdvanced.Candidate storage ref)"}},"id":3528,"indexExpression":{"id":3527,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3514,"src":"16400:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16389:13:8","typeDescriptions":{"typeIdentifier":"t_struct$_Candidate_$2388_storage","typeString":"struct BlocPolAdvanced.Candidate storage ref"}},"src":"16370:32:8","typeDescriptions":{"typeIdentifier":"t_struct$_Candidate_$2388_memory_ptr","typeString":"struct BlocPolAdvanced.Candidate memory"}},"id":3530,"nodeType":"ExpressionStatement","src":"16370:32:8"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3517,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3514,"src":"16328:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3518,"name":"candidateCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2488,"src":"16332:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16328:20:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3532,"initializationExpression":{"assignments":[3514],"declarations":[{"constant":false,"id":3514,"mutability":"mutable","name":"i","nameLocation":"16321:1:8","nodeType":"VariableDeclaration","scope":3532,"src":"16313:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3513,"name":"uint256","nodeType":"ElementaryTypeName","src":"16313:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3516,"initialValue":{"hexValue":"30","id":3515,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16325:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"16313:13:8"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"16350:3:8","subExpression":{"id":3520,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3514,"src":"16350:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3522,"nodeType":"ExpressionStatement","src":"16350:3:8"},"nodeType":"ForStatement","src":"16308:106:8"},{"expression":{"id":3533,"name":"allCandidates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3505,"src":"16431:13:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Candidate_$2388_memory_ptr_$dyn_memory_ptr","typeString":"struct BlocPolAdvanced.Candidate memory[] memory"}},"functionReturnParameters":3500,"id":3534,"nodeType":"Return","src":"16424:20:8"}]},"documentation":{"id":3494,"nodeType":"StructuredDocumentation","src":"16050:91:8","text":" @dev Gets all candidates\n @return Array of candidate structures"},"functionSelector":"2e6997fe","id":3536,"implemented":true,"kind":"function","modifiers":[],"name":"getAllCandidates","nameLocation":"16156:16:8","nodeType":"FunctionDefinition","parameters":{"id":3495,"nodeType":"ParameterList","parameters":[],"src":"16172:2:8"},"returnParameters":{"id":3500,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3499,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3536,"src":"16198:18:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Candidate_$2388_memory_ptr_$dyn_memory_ptr","typeString":"struct BlocPolAdvanced.Candidate[]"},"typeName":{"baseType":{"id":3497,"nodeType":"UserDefinedTypeName","pathNode":{"id":3496,"name":"Candidate","nameLocations":["16198:9:8"],"nodeType":"IdentifierPath","referencedDeclaration":2388,"src":"16198:9:8"},"referencedDeclaration":2388,"src":"16198:9:8","typeDescriptions":{"typeIdentifier":"t_struct$_Candidate_$2388_storage_ptr","typeString":"struct BlocPolAdvanced.Candidate"}},"id":3498,"nodeType":"ArrayTypeName","src":"16198:11:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Candidate_$2388_storage_$dyn_storage_ptr","typeString":"struct BlocPolAdvanced.Candidate[]"}},"visibility":"internal"}],"src":"16197:20:8"},"scope":3786,"src":"16147:305:8","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":3549,"nodeType":"Block","src":"16659:39:8","statements":[{"expression":{"baseExpression":{"id":3545,"name":"votes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2465,"src":"16677:5:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_AdvancedVote_$2411_storage_$","typeString":"mapping(uint256 => struct BlocPolAdvanced.AdvancedVote storage ref)"}},"id":3547,"indexExpression":{"id":3546,"name":"voteId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3539,"src":"16683:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16677:13:8","typeDescriptions":{"typeIdentifier":"t_struct$_AdvancedVote_$2411_storage","typeString":"struct BlocPolAdvanced.AdvancedVote storage ref"}},"functionReturnParameters":3544,"id":3548,"nodeType":"Return","src":"16670:20:8"}]},"documentation":{"id":3537,"nodeType":"StructuredDocumentation","src":"16460:116:8","text":" @dev Gets vote information\n @param voteId The vote ID\n @return The vote structure"},"functionSelector":"5a55c1f0","id":3550,"implemented":true,"kind":"function","modifiers":[],"name":"getVote","nameLocation":"16591:7:8","nodeType":"FunctionDefinition","parameters":{"id":3540,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3539,"mutability":"mutable","name":"voteId","nameLocation":"16607:6:8","nodeType":"VariableDeclaration","scope":3550,"src":"16599:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3538,"name":"uint256","nodeType":"ElementaryTypeName","src":"16599:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16598:16:8"},"returnParameters":{"id":3544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3543,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3550,"src":"16638:19:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_AdvancedVote_$2411_memory_ptr","typeString":"struct BlocPolAdvanced.AdvancedVote"},"typeName":{"id":3542,"nodeType":"UserDefinedTypeName","pathNode":{"id":3541,"name":"AdvancedVote","nameLocations":["16638:12:8"],"nodeType":"IdentifierPath","referencedDeclaration":2411,"src":"16638:12:8"},"referencedDeclaration":2411,"src":"16638:12:8","typeDescriptions":{"typeIdentifier":"t_struct$_AdvancedVote_$2411_storage_ptr","typeString":"struct BlocPolAdvanced.AdvancedVote"}},"visibility":"internal"}],"src":"16637:21:8"},"scope":3786,"src":"16582:116:8","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":3563,"nodeType":"Block","src":"16937:51:8","statements":[{"expression":{"baseExpression":{"id":3559,"name":"votingSessions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2470,"src":"16955:14:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_VotingSession_$2433_storage_$","typeString":"mapping(uint256 => struct BlocPolAdvanced.VotingSession storage ref)"}},"id":3561,"indexExpression":{"id":3560,"name":"sessionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3553,"src":"16970:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16955:25:8","typeDescriptions":{"typeIdentifier":"t_struct$_VotingSession_$2433_storage","typeString":"struct BlocPolAdvanced.VotingSession storage ref"}},"functionReturnParameters":3558,"id":3562,"nodeType":"Return","src":"16948:32:8"}]},"documentation":{"id":3551,"nodeType":"StructuredDocumentation","src":"16706:135:8","text":" @dev Gets voting session information\n @param sessionId The session ID\n @return The session structure"},"functionSelector":"1943c90b","id":3564,"implemented":true,"kind":"function","modifiers":[],"name":"getVotingSession","nameLocation":"16856:16:8","nodeType":"FunctionDefinition","parameters":{"id":3554,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3553,"mutability":"mutable","name":"sessionId","nameLocation":"16881:9:8","nodeType":"VariableDeclaration","scope":3564,"src":"16873:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3552,"name":"uint256","nodeType":"ElementaryTypeName","src":"16873:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16872:19:8"},"returnParameters":{"id":3558,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3557,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3564,"src":"16915:20:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_VotingSession_$2433_memory_ptr","typeString":"struct BlocPolAdvanced.VotingSession"},"typeName":{"id":3556,"nodeType":"UserDefinedTypeName","pathNode":{"id":3555,"name":"VotingSession","nameLocations":["16915:13:8"],"nodeType":"IdentifierPath","referencedDeclaration":2433,"src":"16915:13:8"},"referencedDeclaration":2433,"src":"16915:13:8","typeDescriptions":{"typeIdentifier":"t_struct$_VotingSession_$2433_storage_ptr","typeString":"struct BlocPolAdvanced.VotingSession"}},"visibility":"internal"}],"src":"16914:22:8"},"scope":3786,"src":"16847:141:8","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":3577,"nodeType":"Block","src":"17206:43:8","statements":[{"expression":{"baseExpression":{"id":3573,"name":"voterVotes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2481,"src":"17224:10:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[] storage ref)"}},"id":3575,"indexExpression":{"id":3574,"name":"voter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3567,"src":"17235:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17224:17:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"functionReturnParameters":3572,"id":3576,"nodeType":"Return","src":"17217:24:8"}]},"documentation":{"id":3565,"nodeType":"StructuredDocumentation","src":"16996:125:8","text":" @dev Gets all votes for a voter\n @param voter The voter address\n @return Array of vote IDs"},"functionSelector":"cf042511","id":3578,"implemented":true,"kind":"function","modifiers":[],"name":"getVoterVotes","nameLocation":"17136:13:8","nodeType":"FunctionDefinition","parameters":{"id":3568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3567,"mutability":"mutable","name":"voter","nameLocation":"17158:5:8","nodeType":"VariableDeclaration","scope":3578,"src":"17150:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3566,"name":"address","nodeType":"ElementaryTypeName","src":"17150:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"17149:15:8"},"returnParameters":{"id":3572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3571,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3578,"src":"17188:16:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3569,"name":"uint256","nodeType":"ElementaryTypeName","src":"17188:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3570,"nodeType":"ArrayTypeName","src":"17188:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"17187:18:8"},"scope":3786,"src":"17127:122:8","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":3594,"nodeType":"Block","src":"17538:52:8","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":3588,"name":"hasVoted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2476,"src":"17556:8:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$","typeString":"mapping(address => mapping(uint256 => bool))"}},"id":3590,"indexExpression":{"id":3589,"name":"voter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3581,"src":"17565:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17556:15:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"}},"id":3592,"indexExpression":{"id":3591,"name":"sessionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3583,"src":"17572:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17556:26:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3587,"id":3593,"nodeType":"Return","src":"17549:33:8"}]},"documentation":{"id":3579,"nodeType":"StructuredDocumentation","src":"17257:189:8","text":" @dev Checks if a voter has voted in a session\n @param voter The voter address\n @param sessionId The session ID\n @return Whether the voter has voted"},"functionSelector":"9b541f76","id":3595,"implemented":true,"kind":"function","modifiers":[],"name":"hasVoterVoted","nameLocation":"17461:13:8","nodeType":"FunctionDefinition","parameters":{"id":3584,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3581,"mutability":"mutable","name":"voter","nameLocation":"17483:5:8","nodeType":"VariableDeclaration","scope":3595,"src":"17475:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3580,"name":"address","nodeType":"ElementaryTypeName","src":"17475:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3583,"mutability":"mutable","name":"sessionId","nameLocation":"17498:9:8","nodeType":"VariableDeclaration","scope":3595,"src":"17490:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3582,"name":"uint256","nodeType":"ElementaryTypeName","src":"17490:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17474:34:8"},"returnParameters":{"id":3587,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3586,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3595,"src":"17532:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3585,"name":"bool","nodeType":"ElementaryTypeName","src":"17532:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"17531:6:8"},"scope":3786,"src":"17452:138:8","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":3608,"nodeType":"Block","src":"17827:49:8","statements":[{"expression":{"baseExpression":{"id":3604,"name":"auditTrails","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2486,"src":"17845:11:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AuditTrail_$2445_storage_$","typeString":"mapping(bytes32 => struct BlocPolAdvanced.AuditTrail storage ref)"}},"id":3606,"indexExpression":{"id":3605,"name":"actionHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3598,"src":"17857:10:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17845:23:8","typeDescriptions":{"typeIdentifier":"t_struct$_AuditTrail_$2445_storage","typeString":"struct BlocPolAdvanced.AuditTrail storage ref"}},"functionReturnParameters":3603,"id":3607,"nodeType":"Return","src":"17838:30:8"}]},"documentation":{"id":3596,"nodeType":"StructuredDocumentation","src":"17598:138:8","text":" @dev Gets audit trail information\n @param actionHash The action hash\n @return The audit trail structure"},"functionSelector":"73a8ce8b","id":3609,"implemented":true,"kind":"function","modifiers":[],"name":"getAuditTrail","nameLocation":"17751:13:8","nodeType":"FunctionDefinition","parameters":{"id":3599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3598,"mutability":"mutable","name":"actionHash","nameLocation":"17773:10:8","nodeType":"VariableDeclaration","scope":3609,"src":"17765:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3597,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17765:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"17764:20:8"},"returnParameters":{"id":3603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3602,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3609,"src":"17808:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_AuditTrail_$2445_memory_ptr","typeString":"struct BlocPolAdvanced.AuditTrail"},"typeName":{"id":3601,"nodeType":"UserDefinedTypeName","pathNode":{"id":3600,"name":"AuditTrail","nameLocations":["17808:10:8"],"nodeType":"IdentifierPath","referencedDeclaration":2445,"src":"17808:10:8"},"referencedDeclaration":2445,"src":"17808:10:8","typeDescriptions":{"typeIdentifier":"t_struct$_AuditTrail_$2445_storage_ptr","typeString":"struct BlocPolAdvanced.AuditTrail"}},"visibility":"internal"}],"src":"17807:19:8"},"scope":3786,"src":"17742:134:8","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":3639,"nodeType":"Block","src":"18383:180:8","statements":[{"expression":{"id":3625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3623,"name":"minVotingPower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2505,"src":"18394:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3624,"name":"_minVotingPower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3612,"src":"18411:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18394:32:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3626,"nodeType":"ExpressionStatement","src":"18394:32:8"},{"expression":{"id":3629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3627,"name":"maxVotingPower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2507,"src":"18437:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3628,"name":"_maxVotingPower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3614,"src":"18454:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18437:32:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3630,"nodeType":"ExpressionStatement","src":"18437:32:8"},{"expression":{"id":3633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3631,"name":"commitmentPeriod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2509,"src":"18480:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3632,"name":"_commitmentPeriod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3616,"src":"18499:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18480:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3634,"nodeType":"ExpressionStatement","src":"18480:36:8"},{"expression":{"id":3637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3635,"name":"revealPeriod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2511,"src":"18527:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3636,"name":"_revealPeriod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3618,"src":"18542:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18527:28:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3638,"nodeType":"ExpressionStatement","src":"18527:28:8"}]},"documentation":{"id":3610,"nodeType":"StructuredDocumentation","src":"17918:265:8","text":" @dev Updates voting parameters\n @param _minVotingPower New minimum voting power\n @param _maxVotingPower New maximum voting power\n @param _commitmentPeriod New commitment period\n @param _revealPeriod New reveal period"},"functionSelector":"bac7c890","id":3640,"implemented":true,"kind":"function","modifiers":[{"id":3621,"kind":"modifierInvocation","modifierName":{"id":3620,"name":"onlyOwner","nameLocations":["18373:9:8"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"18373:9:8"},"nodeType":"ModifierInvocation","src":"18373:9:8"}],"name":"updateVotingParameters","nameLocation":"18198:22:8","nodeType":"FunctionDefinition","parameters":{"id":3619,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3612,"mutability":"mutable","name":"_minVotingPower","nameLocation":"18239:15:8","nodeType":"VariableDeclaration","scope":3640,"src":"18231:23:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3611,"name":"uint256","nodeType":"ElementaryTypeName","src":"18231:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3614,"mutability":"mutable","name":"_maxVotingPower","nameLocation":"18273:15:8","nodeType":"VariableDeclaration","scope":3640,"src":"18265:23:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3613,"name":"uint256","nodeType":"ElementaryTypeName","src":"18265:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3616,"mutability":"mutable","name":"_commitmentPeriod","nameLocation":"18307:17:8","nodeType":"VariableDeclaration","scope":3640,"src":"18299:25:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3615,"name":"uint256","nodeType":"ElementaryTypeName","src":"18299:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3618,"mutability":"mutable","name":"_revealPeriod","nameLocation":"18343:13:8","nodeType":"VariableDeclaration","scope":3640,"src":"18335:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3617,"name":"uint256","nodeType":"ElementaryTypeName","src":"18335:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18220:143:8"},"returnParameters":{"id":3622,"nodeType":"ParameterList","parameters":[],"src":"18383:0:8"},"scope":3786,"src":"18189:374:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3664,"nodeType":"Block","src":"18985:161:8","statements":[{"expression":{"id":3654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3652,"name":"zkProofsEnabled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2513,"src":"18996:15:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3653,"name":"_zkProofsEnabled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3643,"src":"19014:16:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"18996:34:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3655,"nodeType":"ExpressionStatement","src":"18996:34:8"},{"expression":{"id":3658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3656,"name":"liquidDemocracyEnabled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2515,"src":"19041:22:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3657,"name":"_liquidDemocracyEnabled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3645,"src":"19066:23:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"19041:48:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3659,"nodeType":"ExpressionStatement","src":"19041:48:8"},{"expression":{"id":3662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3660,"name":"voteMixingEnabled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2517,"src":"19100:17:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3661,"name":"_voteMixingEnabled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3647,"src":"19120:18:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"19100:38:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3663,"nodeType":"ExpressionStatement","src":"19100:38:8"}]},"documentation":{"id":3641,"nodeType":"StructuredDocumentation","src":"18571:256:8","text":" @dev Enables or disables features\n @param _zkProofsEnabled Whether ZK-proofs are enabled\n @param _liquidDemocracyEnabled Whether liquid democracy is enabled\n @param _voteMixingEnabled Whether vote mixing is enabled"},"functionSelector":"33845e52","id":3665,"implemented":true,"kind":"function","modifiers":[{"id":3650,"kind":"modifierInvocation","modifierName":{"id":3649,"name":"onlyOwner","nameLocations":["18975:9:8"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"18975:9:8"},"nodeType":"ModifierInvocation","src":"18975:9:8"}],"name":"setFeatures","nameLocation":"18842:11:8","nodeType":"FunctionDefinition","parameters":{"id":3648,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3643,"mutability":"mutable","name":"_zkProofsEnabled","nameLocation":"18869:16:8","nodeType":"VariableDeclaration","scope":3665,"src":"18864:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3642,"name":"bool","nodeType":"ElementaryTypeName","src":"18864:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3645,"mutability":"mutable","name":"_liquidDemocracyEnabled","nameLocation":"18901:23:8","nodeType":"VariableDeclaration","scope":3665,"src":"18896:28:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3644,"name":"bool","nodeType":"ElementaryTypeName","src":"18896:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3647,"mutability":"mutable","name":"_voteMixingEnabled","nameLocation":"18940:18:8","nodeType":"VariableDeclaration","scope":3665,"src":"18935:23:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3646,"name":"bool","nodeType":"ElementaryTypeName","src":"18935:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"18853:112:8"},"returnParameters":{"id":3651,"nodeType":"ParameterList","parameters":[],"src":"18985:0:8"},"scope":3786,"src":"18833:313:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3674,"nodeType":"Block","src":"19241:27:8","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3671,"name":"_pause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":268,"src":"19252:6:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":3672,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19252:8:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3673,"nodeType":"ExpressionStatement","src":"19252:8:8"}]},"documentation":{"id":3666,"nodeType":"StructuredDocumentation","src":"19154:45:8","text":" @dev Pauses the contract"},"functionSelector":"8456cb59","id":3675,"implemented":true,"kind":"function","modifiers":[{"id":3669,"kind":"modifierInvocation","modifierName":{"id":3668,"name":"onlyOwner","nameLocations":["19231:9:8"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"19231:9:8"},"nodeType":"ModifierInvocation","src":"19231:9:8"}],"name":"pause","nameLocation":"19214:5:8","nodeType":"FunctionDefinition","parameters":{"id":3667,"nodeType":"ParameterList","parameters":[],"src":"19219:2:8"},"returnParameters":{"id":3670,"nodeType":"ParameterList","parameters":[],"src":"19241:0:8"},"scope":3786,"src":"19205:63:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3684,"nodeType":"Block","src":"19367:29:8","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3681,"name":"_unpause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":284,"src":"19378:8:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":3682,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19378:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3683,"nodeType":"ExpressionStatement","src":"19378:10:8"}]},"documentation":{"id":3676,"nodeType":"StructuredDocumentation","src":"19276:47:8","text":" @dev Unpauses the contract"},"functionSelector":"3f4ba83a","id":3685,"implemented":true,"kind":"function","modifiers":[{"id":3679,"kind":"modifierInvocation","modifierName":{"id":3678,"name":"onlyOwner","nameLocations":["19357:9:8"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"19357:9:8"},"nodeType":"ModifierInvocation","src":"19357:9:8"}],"name":"unpause","nameLocation":"19338:7:8","nodeType":"FunctionDefinition","parameters":{"id":3677,"nodeType":"ParameterList","parameters":[],"src":"19345:2:8"},"returnParameters":{"id":3680,"nodeType":"ParameterList","parameters":[],"src":"19367:0:8"},"scope":3786,"src":"19329:67:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3741,"nodeType":"Block","src":"19650:526:8","statements":[{"assignments":[3694],"declarations":[{"constant":false,"id":3694,"mutability":"mutable","name":"actionHash","nameLocation":"19669:10:8","nodeType":"VariableDeclaration","scope":3741,"src":"19661:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3693,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19661:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3705,"initialValue":{"arguments":[{"arguments":[{"id":3698,"name":"action","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3688,"src":"19709:6:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3699,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3690,"src":"19717:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"expression":{"id":3700,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"19723:5:8","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19729:9:8","memberName":"timestamp","nodeType":"MemberAccess","src":"19723:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3702,"name":"auditCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2494,"src":"19740:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3696,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"19692:3:8","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3697,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"19696:12:8","memberName":"encodePacked","nodeType":"MemberAccess","src":"19692:16:8","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3703,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19692:61:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3695,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"19682:9:8","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3704,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19682:72:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"19661:93:8"},{"assignments":[3708],"declarations":[{"constant":false,"id":3708,"mutability":"mutable","name":"trail","nameLocation":"19793:5:8","nodeType":"VariableDeclaration","scope":3741,"src":"19775:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_AuditTrail_$2445_memory_ptr","typeString":"struct BlocPolAdvanced.AuditTrail"},"typeName":{"id":3707,"nodeType":"UserDefinedTypeName","pathNode":{"id":3706,"name":"AuditTrail","nameLocations":["19775:10:8"],"nodeType":"IdentifierPath","referencedDeclaration":2445,"src":"19775:10:8"},"referencedDeclaration":2445,"src":"19775:10:8","typeDescriptions":{"typeIdentifier":"t_struct$_AuditTrail_$2445_storage_ptr","typeString":"struct BlocPolAdvanced.AuditTrail"}},"visibility":"internal"}],"id":3722,"initialValue":{"arguments":[{"id":3710,"name":"actionHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3694,"src":"19839:10:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":3711,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"19871:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19875:6:8","memberName":"sender","nodeType":"MemberAccess","src":"19871:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3713,"name":"action","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3688,"src":"19904:6:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":3714,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"19936:5:8","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19942:9:8","memberName":"timestamp","nodeType":"MemberAccess","src":"19936:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":3719,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19987:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3718,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"19973:13:8","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes32[] memory)"},"typeName":{"baseType":{"id":3716,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19977:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3717,"nodeType":"ArrayTypeName","src":"19977:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}}},"id":3720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19973:16:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}],"id":3709,"name":"AuditTrail","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2445,"src":"19801:10:8","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_AuditTrail_$2445_storage_ptr_$","typeString":"type(struct BlocPolAdvanced.AuditTrail storage pointer)"}},"id":3721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["19827:10:8","19864:5:8","19896:6:8","19925:9:8","19966:5:8"],"names":["actionHash","actor","action","timestamp","proof"],"nodeType":"FunctionCall","src":"19801:200:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AuditTrail_$2445_memory_ptr","typeString":"struct BlocPolAdvanced.AuditTrail memory"}},"nodeType":"VariableDeclarationStatement","src":"19775:226:8"},{"expression":{"id":3727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3723,"name":"auditTrails","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2486,"src":"20022:11:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AuditTrail_$2445_storage_$","typeString":"mapping(bytes32 => struct BlocPolAdvanced.AuditTrail storage ref)"}},"id":3725,"indexExpression":{"id":3724,"name":"actionHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3694,"src":"20034:10:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"20022:23:8","typeDescriptions":{"typeIdentifier":"t_struct$_AuditTrail_$2445_storage","typeString":"struct BlocPolAdvanced.AuditTrail storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3726,"name":"trail","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3708,"src":"20048:5:8","typeDescriptions":{"typeIdentifier":"t_struct$_AuditTrail_$2445_memory_ptr","typeString":"struct BlocPolAdvanced.AuditTrail memory"}},"src":"20022:31:8","typeDescriptions":{"typeIdentifier":"t_struct$_AuditTrail_$2445_storage","typeString":"struct BlocPolAdvanced.AuditTrail storage ref"}},"id":3728,"nodeType":"ExpressionStatement","src":"20022:31:8"},{"expression":{"id":3730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"20064:14:8","subExpression":{"id":3729,"name":"auditCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2494,"src":"20064:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3731,"nodeType":"ExpressionStatement","src":"20064:14:8"},{"eventCall":{"arguments":[{"id":3733,"name":"actionHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3694,"src":"20120:10:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":3734,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"20132:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20136:6:8","memberName":"sender","nodeType":"MemberAccess","src":"20132:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3736,"name":"action","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3688,"src":"20144:6:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":3737,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"20152:5:8","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20158:9:8","memberName":"timestamp","nodeType":"MemberAccess","src":"20152:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3732,"name":"AuditLogCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2575,"src":"20104:15:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_string_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (bytes32,address,string memory,uint256)"}},"id":3739,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20104:64:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3740,"nodeType":"EmitStatement","src":"20099:69:8"}]},"documentation":{"id":3686,"nodeType":"StructuredDocumentation","src":"19441:130:8","text":" @dev Logs an audit trail entry\n @param action The action performed\n @param data Additional data"},"id":3742,"implemented":true,"kind":"function","modifiers":[],"name":"logAuditTrail","nameLocation":"19586:13:8","nodeType":"FunctionDefinition","parameters":{"id":3691,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3688,"mutability":"mutable","name":"action","nameLocation":"19614:6:8","nodeType":"VariableDeclaration","scope":3742,"src":"19600:20:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3687,"name":"string","nodeType":"ElementaryTypeName","src":"19600:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3690,"mutability":"mutable","name":"data","nameLocation":"19635:4:8","nodeType":"VariableDeclaration","scope":3742,"src":"19622:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3689,"name":"bytes","nodeType":"ElementaryTypeName","src":"19622:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19599:41:8"},"returnParameters":{"id":3692,"nodeType":"ParameterList","parameters":[],"src":"19650:0:8"},"scope":3786,"src":"19577:599:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3760,"nodeType":"Block","src":"20415:104:8","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":3750,"name":"candidates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2460,"src":"20433:10:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Candidate_$2388_storage_$","typeString":"mapping(uint256 => struct BlocPolAdvanced.Candidate storage ref)"}},"id":3752,"indexExpression":{"id":3751,"name":"candidateId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3745,"src":"20444:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20433:23:8","typeDescriptions":{"typeIdentifier":"t_struct$_Candidate_$2388_storage","typeString":"struct BlocPolAdvanced.Candidate storage ref"}},"id":3753,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"20457:9:8","memberName":"voteCount","nodeType":"MemberAccess","referencedDeclaration":2381,"src":"20433:33:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"baseExpression":{"id":3754,"name":"candidates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2460,"src":"20469:10:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Candidate_$2388_storage_$","typeString":"mapping(uint256 => struct BlocPolAdvanced.Candidate storage ref)"}},"id":3756,"indexExpression":{"id":3755,"name":"candidateId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3745,"src":"20480:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20469:23:8","typeDescriptions":{"typeIdentifier":"t_struct$_Candidate_$2388_storage","typeString":"struct BlocPolAdvanced.Candidate storage ref"}},"id":3757,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"20493:18:8","memberName":"delegatedVoteCount","nodeType":"MemberAccess","referencedDeclaration":2383,"src":"20469:42:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20433:78:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3749,"id":3759,"nodeType":"Return","src":"20426:85:8"}]},"documentation":{"id":3743,"nodeType":"StructuredDocumentation","src":"20184:140:8","text":" @dev Gets total vote count for a candidate\n @param candidateId The candidate ID\n @return Total vote count"},"functionSelector":"abdd80a3","id":3761,"implemented":true,"kind":"function","modifiers":[],"name":"getCandidateTotalVotes","nameLocation":"20339:22:8","nodeType":"FunctionDefinition","parameters":{"id":3746,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3745,"mutability":"mutable","name":"candidateId","nameLocation":"20370:11:8","nodeType":"VariableDeclaration","scope":3761,"src":"20362:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3744,"name":"uint256","nodeType":"ElementaryTypeName","src":"20362:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20361:21:8"},"returnParameters":{"id":3749,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3748,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3761,"src":"20406:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3747,"name":"uint256","nodeType":"ElementaryTypeName","src":"20406:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20405:9:8"},"scope":3786,"src":"20330:189:8","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":3784,"nodeType":"Block","src":"20853:139:8","statements":[{"assignments":[3773],"declarations":[{"constant":false,"id":3773,"mutability":"mutable","name":"session","nameLocation":"20885:7:8","nodeType":"VariableDeclaration","scope":3784,"src":"20864:28:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_VotingSession_$2433_memory_ptr","typeString":"struct BlocPolAdvanced.VotingSession"},"typeName":{"id":3772,"nodeType":"UserDefinedTypeName","pathNode":{"id":3771,"name":"VotingSession","nameLocations":["20864:13:8"],"nodeType":"IdentifierPath","referencedDeclaration":2433,"src":"20864:13:8"},"referencedDeclaration":2433,"src":"20864:13:8","typeDescriptions":{"typeIdentifier":"t_struct$_VotingSession_$2433_storage_ptr","typeString":"struct BlocPolAdvanced.VotingSession"}},"visibility":"internal"}],"id":3777,"initialValue":{"baseExpression":{"id":3774,"name":"votingSessions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2470,"src":"20895:14:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_VotingSession_$2433_storage_$","typeString":"mapping(uint256 => struct BlocPolAdvanced.VotingSession storage ref)"}},"id":3776,"indexExpression":{"id":3775,"name":"sessionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3764,"src":"20910:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20895:25:8","typeDescriptions":{"typeIdentifier":"t_struct$_VotingSession_$2433_storage","typeString":"struct BlocPolAdvanced.VotingSession storage ref"}},"nodeType":"VariableDeclarationStatement","src":"20864:56:8"},{"expression":{"components":[{"expression":{"id":3778,"name":"session","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3773,"src":"20939:7:8","typeDescriptions":{"typeIdentifier":"t_struct$_VotingSession_$2433_memory_ptr","typeString":"struct BlocPolAdvanced.VotingSession memory"}},"id":3779,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"20947:10:8","memberName":"totalVotes","nodeType":"MemberAccess","referencedDeclaration":2425,"src":"20939:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3780,"name":"session","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3773,"src":"20959:7:8","typeDescriptions":{"typeIdentifier":"t_struct$_VotingSession_$2433_memory_ptr","typeString":"struct BlocPolAdvanced.VotingSession memory"}},"id":3781,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"20967:16:8","memberName":"totalVotingPower","nodeType":"MemberAccess","referencedDeclaration":2427,"src":"20959:24:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3782,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"20938:46:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"functionReturnParameters":3770,"id":3783,"nodeType":"Return","src":"20931:53:8"}]},"documentation":{"id":3762,"nodeType":"StructuredDocumentation","src":"20527:206:8","text":" @dev Gets total votes in a session\n @param sessionId The session ID\n @return totalVotes Total number of votes cast\n @return totalVotingPower Total voting power used"},"functionSelector":"7c25e889","id":3785,"implemented":true,"kind":"function","modifiers":[],"name":"getSessionTotals","nameLocation":"20748:16:8","nodeType":"FunctionDefinition","parameters":{"id":3765,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3764,"mutability":"mutable","name":"sessionId","nameLocation":"20773:9:8","nodeType":"VariableDeclaration","scope":3785,"src":"20765:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3763,"name":"uint256","nodeType":"ElementaryTypeName","src":"20765:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20764:19:8"},"returnParameters":{"id":3770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3767,"mutability":"mutable","name":"totalVotes","nameLocation":"20815:10:8","nodeType":"VariableDeclaration","scope":3785,"src":"20807:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3766,"name":"uint256","nodeType":"ElementaryTypeName","src":"20807:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3769,"mutability":"mutable","name":"totalVotingPower","nameLocation":"20835:16:8","nodeType":"VariableDeclaration","scope":3785,"src":"20827:24:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3768,"name":"uint256","nodeType":"ElementaryTypeName","src":"20827:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20806:46:8"},"scope":3786,"src":"20739:253:8","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3787,"src":"594:20401:8","usedErrors":[13,18,199,202,299],"usedEvents":[24,191,196,2527,2538,2549,2557,2565,2575,2583,2593,2601]}],"src":"33:20963:8"},"id":8},"contracts/LiquidDemocracy.sol":{"ast":{"absolutePath":"contracts/LiquidDemocracy.sol","exportedSymbols":{"Context":[177],"CryptographicUtils":[7219],"ECDSA":[702],"Hashes":[742],"LiquidDemocracy":[4854],"MerkleProof":[1815],"Ownable":[147],"ReentrancyGuard":[354]},"id":4855,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3788,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:9"},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":3789,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4855,"sourceUnit":148,"src":"60:52:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","file":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","id":3790,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4855,"sourceUnit":355,"src":"114:59:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/libraries/CryptographicUtils.sol","file":"./libraries/CryptographicUtils.sol","id":3791,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4855,"sourceUnit":7220,"src":"175:44:9","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3793,"name":"Ownable","nameLocations":["443:7:9"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"443:7:9"},"id":3794,"nodeType":"InheritanceSpecifier","src":"443:7:9"},{"baseName":{"id":3795,"name":"ReentrancyGuard","nameLocations":["452:15:9"],"nodeType":"IdentifierPath","referencedDeclaration":354,"src":"452:15:9"},"id":3796,"nodeType":"InheritanceSpecifier","src":"452:15:9"}],"canonicalName":"LiquidDemocracy","contractDependencies":[],"contractKind":"contract","documentation":{"id":3792,"nodeType":"StructuredDocumentation","src":"223:190:9","text":" @title LiquidDemocracy\n @dev Implements liquid democracy with vote delegation capabilities\n @notice Allows voters to delegate their voting power to trusted representatives"},"fullyImplemented":true,"id":4854,"linearizedBaseContracts":[4854,354,147,177],"name":"LiquidDemocracy","nameLocation":"424:15:9","nodeType":"ContractDefinition","nodes":[{"global":false,"id":3798,"libraryName":{"id":3797,"name":"CryptographicUtils","nameLocations":["481:18:9"],"nodeType":"IdentifierPath","referencedDeclaration":7219,"src":"481:18:9"},"nodeType":"UsingForDirective","src":"475:31:9"},{"canonicalName":"LiquidDemocracy.Voter","id":3818,"members":[{"constant":false,"id":3800,"mutability":"mutable","name":"voterAddress","nameLocation":"570:12:9","nodeType":"VariableDeclaration","scope":3818,"src":"562:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3799,"name":"address","nodeType":"ElementaryTypeName","src":"562:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3802,"mutability":"mutable","name":"votingPower","nameLocation":"601:11:9","nodeType":"VariableDeclaration","scope":3818,"src":"593:19:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3801,"name":"uint256","nodeType":"ElementaryTypeName","src":"593:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3804,"mutability":"mutable","name":"delegatedPower","nameLocation":"662:14:9","nodeType":"VariableDeclaration","scope":3818,"src":"654:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3803,"name":"uint256","nodeType":"ElementaryTypeName","src":"654:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3806,"mutability":"mutable","name":"totalPower","nameLocation":"737:10:9","nodeType":"VariableDeclaration","scope":3818,"src":"729:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3805,"name":"uint256","nodeType":"ElementaryTypeName","src":"729:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3808,"mutability":"mutable","name":"delegate","nameLocation":"809:8:9","nodeType":"VariableDeclaration","scope":3818,"src":"801:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3807,"name":"address","nodeType":"ElementaryTypeName","src":"801:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3811,"mutability":"mutable","name":"delegates","nameLocation":"882:9:9","nodeType":"VariableDeclaration","scope":3818,"src":"872:19:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3809,"name":"address","nodeType":"ElementaryTypeName","src":"872:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3810,"nodeType":"ArrayTypeName","src":"872:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":3813,"mutability":"mutable","name":"isActive","nameLocation":"948:8:9","nodeType":"VariableDeclaration","scope":3818,"src":"943:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3812,"name":"bool","nodeType":"ElementaryTypeName","src":"943:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3815,"mutability":"mutable","name":"lastVoteTime","nameLocation":"1018:12:9","nodeType":"VariableDeclaration","scope":3818,"src":"1010:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3814,"name":"uint256","nodeType":"ElementaryTypeName","src":"1010:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3817,"mutability":"mutable","name":"delegationCount","nameLocation":"1082:15:9","nodeType":"VariableDeclaration","scope":3818,"src":"1074:23:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3816,"name":"uint256","nodeType":"ElementaryTypeName","src":"1074:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Voter","nameLocation":"545:5:9","nodeType":"StructDefinition","scope":4854,"src":"538:605:9","visibility":"public"},{"canonicalName":"LiquidDemocracy.Delegation","id":3831,"members":[{"constant":false,"id":3820,"mutability":"mutable","name":"from","nameLocation":"1188:4:9","nodeType":"VariableDeclaration","scope":3831,"src":"1180:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3819,"name":"address","nodeType":"ElementaryTypeName","src":"1180:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3822,"mutability":"mutable","name":"to","nameLocation":"1211:2:9","nodeType":"VariableDeclaration","scope":3831,"src":"1203:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3821,"name":"address","nodeType":"ElementaryTypeName","src":"1203:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3824,"mutability":"mutable","name":"power","nameLocation":"1232:5:9","nodeType":"VariableDeclaration","scope":3831,"src":"1224:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3823,"name":"uint256","nodeType":"ElementaryTypeName","src":"1224:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3826,"mutability":"mutable","name":"timestamp","nameLocation":"1256:9:9","nodeType":"VariableDeclaration","scope":3831,"src":"1248:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3825,"name":"uint256","nodeType":"ElementaryTypeName","src":"1248:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3828,"mutability":"mutable","name":"isActive","nameLocation":"1281:8:9","nodeType":"VariableDeclaration","scope":3831,"src":"1276:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3827,"name":"bool","nodeType":"ElementaryTypeName","src":"1276:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3830,"mutability":"mutable","name":"delegationId","nameLocation":"1308:12:9","nodeType":"VariableDeclaration","scope":3831,"src":"1300:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3829,"name":"uint256","nodeType":"ElementaryTypeName","src":"1300:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Delegation","nameLocation":"1158:10:9","nodeType":"StructDefinition","scope":4854,"src":"1151:177:9","visibility":"public"},{"canonicalName":"LiquidDemocracy.Vote","id":3844,"members":[{"constant":false,"id":3833,"mutability":"mutable","name":"voter","nameLocation":"1367:5:9","nodeType":"VariableDeclaration","scope":3844,"src":"1359:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3832,"name":"address","nodeType":"ElementaryTypeName","src":"1359:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3835,"mutability":"mutable","name":"candidateId","nameLocation":"1391:11:9","nodeType":"VariableDeclaration","scope":3844,"src":"1383:19:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3834,"name":"uint256","nodeType":"ElementaryTypeName","src":"1383:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3837,"mutability":"mutable","name":"powerUsed","nameLocation":"1421:9:9","nodeType":"VariableDeclaration","scope":3844,"src":"1413:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3836,"name":"uint256","nodeType":"ElementaryTypeName","src":"1413:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3839,"mutability":"mutable","name":"timestamp","nameLocation":"1449:9:9","nodeType":"VariableDeclaration","scope":3844,"src":"1441:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3838,"name":"uint256","nodeType":"ElementaryTypeName","src":"1441:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3841,"mutability":"mutable","name":"voteHash","nameLocation":"1477:8:9","nodeType":"VariableDeclaration","scope":3844,"src":"1469:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3840,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1469:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3843,"mutability":"mutable","name":"isDelegated","nameLocation":"1501:11:9","nodeType":"VariableDeclaration","scope":3844,"src":"1496:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3842,"name":"bool","nodeType":"ElementaryTypeName","src":"1496:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"Vote","nameLocation":"1343:4:9","nodeType":"StructDefinition","scope":4854,"src":"1336:184:9","visibility":"public"},{"constant":false,"id":3849,"mutability":"mutable","name":"voters","nameLocation":"1594:6:9","nodeType":"VariableDeclaration","scope":4854,"src":"1560:40:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Voter_$3818_storage_$","typeString":"mapping(address => struct LiquidDemocracy.Voter)"},"typeName":{"id":3848,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":3845,"name":"address","nodeType":"ElementaryTypeName","src":"1568:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1560:25:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Voter_$3818_storage_$","typeString":"mapping(address => struct LiquidDemocracy.Voter)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":3847,"nodeType":"UserDefinedTypeName","pathNode":{"id":3846,"name":"Voter","nameLocations":["1579:5:9"],"nodeType":"IdentifierPath","referencedDeclaration":3818,"src":"1579:5:9"},"referencedDeclaration":3818,"src":"1579:5:9","typeDescriptions":{"typeIdentifier":"t_struct$_Voter_$3818_storage_ptr","typeString":"struct LiquidDemocracy.Voter"}}},"visibility":"private"},{"constant":false,"id":3854,"mutability":"mutable","name":"delegations","nameLocation":"1646:11:9","nodeType":"VariableDeclaration","scope":4854,"src":"1607:50:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Delegation_$3831_storage_$","typeString":"mapping(uint256 => struct LiquidDemocracy.Delegation)"},"typeName":{"id":3853,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":3850,"name":"uint256","nodeType":"ElementaryTypeName","src":"1615:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1607:30:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Delegation_$3831_storage_$","typeString":"mapping(uint256 => struct LiquidDemocracy.Delegation)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":3852,"nodeType":"UserDefinedTypeName","pathNode":{"id":3851,"name":"Delegation","nameLocations":["1626:10:9"],"nodeType":"IdentifierPath","referencedDeclaration":3831,"src":"1626:10:9"},"referencedDeclaration":3831,"src":"1626:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_Delegation_$3831_storage_ptr","typeString":"struct LiquidDemocracy.Delegation"}}},"visibility":"private"},{"constant":false,"id":3859,"mutability":"mutable","name":"voterDelegations","nameLocation":"1702:16:9","nodeType":"VariableDeclaration","scope":4854,"src":"1664:54:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[])"},"typeName":{"id":3858,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":3855,"name":"address","nodeType":"ElementaryTypeName","src":"1672:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1664:29:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[])"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"baseType":{"id":3856,"name":"uint256","nodeType":"ElementaryTypeName","src":"1683:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3857,"nodeType":"ArrayTypeName","src":"1683:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"visibility":"private"},{"constant":false,"id":3865,"mutability":"mutable","name":"candidateVotes","nameLocation":"1760:14:9","nodeType":"VariableDeclaration","scope":4854,"src":"1725:49:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_Vote_$3844_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct LiquidDemocracy.Vote[])"},"typeName":{"id":3864,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":3860,"name":"uint256","nodeType":"ElementaryTypeName","src":"1733:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1725:26:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_Vote_$3844_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct LiquidDemocracy.Vote[])"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"baseType":{"id":3862,"nodeType":"UserDefinedTypeName","pathNode":{"id":3861,"name":"Vote","nameLocations":["1744:4:9"],"nodeType":"IdentifierPath","referencedDeclaration":3844,"src":"1744:4:9"},"referencedDeclaration":3844,"src":"1744:4:9","typeDescriptions":{"typeIdentifier":"t_struct$_Vote_$3844_storage_ptr","typeString":"struct LiquidDemocracy.Vote"}},"id":3863,"nodeType":"ArrayTypeName","src":"1744:6:9","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Vote_$3844_storage_$dyn_storage_ptr","typeString":"struct LiquidDemocracy.Vote[]"}}},"visibility":"private"},{"constant":false,"id":3871,"mutability":"mutable","name":"hasVoted","nameLocation":"1834:8:9","nodeType":"VariableDeclaration","scope":4854,"src":"1781:61:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$","typeString":"mapping(address => mapping(uint256 => bool))"},"typeName":{"id":3870,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":3866,"name":"address","nodeType":"ElementaryTypeName","src":"1789:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1781:44:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$","typeString":"mapping(address => mapping(uint256 => bool))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":3869,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":3867,"name":"uint256","nodeType":"ElementaryTypeName","src":"1808:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1800:24:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":3868,"name":"bool","nodeType":"ElementaryTypeName","src":"1819:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"private"},{"constant":false,"id":3874,"mutability":"mutable","name":"registeredVoters","nameLocation":"1873:16:9","nodeType":"VariableDeclaration","scope":4854,"src":"1855:34:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[]"},"typeName":{"baseType":{"id":3872,"name":"address","nodeType":"ElementaryTypeName","src":"1855:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3873,"nodeType":"ArrayTypeName","src":"1855:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"private"},{"constant":false,"id":3876,"mutability":"mutable","name":"delegationCounter","nameLocation":"1912:17:9","nodeType":"VariableDeclaration","scope":4854,"src":"1896:33:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3875,"name":"uint256","nodeType":"ElementaryTypeName","src":"1896:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":3878,"mutability":"mutable","name":"totalVotingPower","nameLocation":"1952:16:9","nodeType":"VariableDeclaration","scope":4854,"src":"1936:32:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3877,"name":"uint256","nodeType":"ElementaryTypeName","src":"1936:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":3880,"mutability":"mutable","name":"activeDelegations","nameLocation":"1991:17:9","nodeType":"VariableDeclaration","scope":4854,"src":"1975:33:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3879,"name":"uint256","nodeType":"ElementaryTypeName","src":"1975:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"functionSelector":"408e2727","id":3882,"mutability":"mutable","name":"votingActive","nameLocation":"2033:12:9","nodeType":"VariableDeclaration","scope":4854,"src":"2021:24:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3881,"name":"bool","nodeType":"ElementaryTypeName","src":"2021:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"public"},{"constant":false,"functionSelector":"2019a608","id":3884,"mutability":"mutable","name":"votingStartTime","nameLocation":"2067:15:9","nodeType":"VariableDeclaration","scope":4854,"src":"2052:30:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3883,"name":"uint256","nodeType":"ElementaryTypeName","src":"2052:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"1ea736e0","id":3886,"mutability":"mutable","name":"votingEndTime","nameLocation":"2104:13:9","nodeType":"VariableDeclaration","scope":4854,"src":"2089:28:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3885,"name":"uint256","nodeType":"ElementaryTypeName","src":"2089:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"cd8e0903","id":3888,"mutability":"mutable","name":"maxDelegationDepth","nameLocation":"2139:18:9","nodeType":"VariableDeclaration","scope":4854,"src":"2124:33:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3887,"name":"uint256","nodeType":"ElementaryTypeName","src":"2124:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"36dab678","id":3890,"mutability":"mutable","name":"minDelegationPower","nameLocation":"2179:18:9","nodeType":"VariableDeclaration","scope":4854,"src":"2164:33:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3889,"name":"uint256","nodeType":"ElementaryTypeName","src":"2164:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"anonymous":false,"eventSelector":"49a90692135172b11ff45007ef12b97c37df00bc650e48846f88da97b191b2d0","id":3898,"name":"VoterRegistered","nameLocation":"2239:15:9","nodeType":"EventDefinition","parameters":{"id":3897,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3892,"indexed":true,"mutability":"mutable","name":"voter","nameLocation":"2271:5:9","nodeType":"VariableDeclaration","scope":3898,"src":"2255:21:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3891,"name":"address","nodeType":"ElementaryTypeName","src":"2255:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3894,"indexed":false,"mutability":"mutable","name":"power","nameLocation":"2286:5:9","nodeType":"VariableDeclaration","scope":3898,"src":"2278:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3893,"name":"uint256","nodeType":"ElementaryTypeName","src":"2278:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3896,"indexed":false,"mutability":"mutable","name":"timestamp","nameLocation":"2301:9:9","nodeType":"VariableDeclaration","scope":3898,"src":"2293:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3895,"name":"uint256","nodeType":"ElementaryTypeName","src":"2293:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2254:57:9"},"src":"2233:79:9"},{"anonymous":false,"eventSelector":"fe35c70e4980d7df0afccc73bb14c09d90b04287cd40b249a714d4033c285185","id":3910,"name":"DelegationCreated","nameLocation":"2324:17:9","nodeType":"EventDefinition","parameters":{"id":3909,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3900,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"2368:4:9","nodeType":"VariableDeclaration","scope":3910,"src":"2352:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3899,"name":"address","nodeType":"ElementaryTypeName","src":"2352:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3902,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"2400:2:9","nodeType":"VariableDeclaration","scope":3910,"src":"2384:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3901,"name":"address","nodeType":"ElementaryTypeName","src":"2384:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3904,"indexed":false,"mutability":"mutable","name":"power","nameLocation":"2422:5:9","nodeType":"VariableDeclaration","scope":3910,"src":"2414:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3903,"name":"uint256","nodeType":"ElementaryTypeName","src":"2414:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3906,"indexed":false,"mutability":"mutable","name":"delegationId","nameLocation":"2447:12:9","nodeType":"VariableDeclaration","scope":3910,"src":"2439:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3905,"name":"uint256","nodeType":"ElementaryTypeName","src":"2439:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3908,"indexed":false,"mutability":"mutable","name":"timestamp","nameLocation":"2478:9:9","nodeType":"VariableDeclaration","scope":3910,"src":"2470:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3907,"name":"uint256","nodeType":"ElementaryTypeName","src":"2470:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2341:153:9"},"src":"2318:177:9"},{"anonymous":false,"eventSelector":"657937cad9c3ce43c8ece19052e5f60b2db7d536fdb47405c20ecf1c3df56b7d","id":3920,"name":"DelegationRevoked","nameLocation":"2507:17:9","nodeType":"EventDefinition","parameters":{"id":3919,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3912,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"2551:4:9","nodeType":"VariableDeclaration","scope":3920,"src":"2535:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3911,"name":"address","nodeType":"ElementaryTypeName","src":"2535:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3914,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"2583:2:9","nodeType":"VariableDeclaration","scope":3920,"src":"2567:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3913,"name":"address","nodeType":"ElementaryTypeName","src":"2567:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3916,"indexed":false,"mutability":"mutable","name":"delegationId","nameLocation":"2605:12:9","nodeType":"VariableDeclaration","scope":3920,"src":"2597:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3915,"name":"uint256","nodeType":"ElementaryTypeName","src":"2597:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3918,"indexed":false,"mutability":"mutable","name":"timestamp","nameLocation":"2636:9:9","nodeType":"VariableDeclaration","scope":3920,"src":"2628:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3917,"name":"uint256","nodeType":"ElementaryTypeName","src":"2628:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2524:128:9"},"src":"2501:152:9"},{"anonymous":false,"eventSelector":"e89c99a0264d21c2ad18316d6e7b3aa31414c12f31b085afdeeacaa7e69f80b6","id":3932,"name":"VoteCast","nameLocation":"2665:8:9","nodeType":"EventDefinition","parameters":{"id":3931,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3922,"indexed":true,"mutability":"mutable","name":"voter","nameLocation":"2700:5:9","nodeType":"VariableDeclaration","scope":3932,"src":"2684:21:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3921,"name":"address","nodeType":"ElementaryTypeName","src":"2684:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3924,"indexed":false,"mutability":"mutable","name":"candidateId","nameLocation":"2725:11:9","nodeType":"VariableDeclaration","scope":3932,"src":"2717:19:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3923,"name":"uint256","nodeType":"ElementaryTypeName","src":"2717:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3926,"indexed":false,"mutability":"mutable","name":"powerUsed","nameLocation":"2756:9:9","nodeType":"VariableDeclaration","scope":3932,"src":"2748:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3925,"name":"uint256","nodeType":"ElementaryTypeName","src":"2748:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3928,"indexed":false,"mutability":"mutable","name":"isDelegated","nameLocation":"2782:11:9","nodeType":"VariableDeclaration","scope":3932,"src":"2777:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3927,"name":"bool","nodeType":"ElementaryTypeName","src":"2777:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3930,"indexed":false,"mutability":"mutable","name":"timestamp","nameLocation":"2812:9:9","nodeType":"VariableDeclaration","scope":3932,"src":"2804:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3929,"name":"uint256","nodeType":"ElementaryTypeName","src":"2804:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2673:155:9"},"src":"2659:170:9"},{"anonymous":false,"eventSelector":"e280a408633821740a429fb671e01cacf8d1d70d5c2735f4f94ec0edef4ea6de","id":3938,"name":"VotingSessionStarted","nameLocation":"2841:20:9","nodeType":"EventDefinition","parameters":{"id":3937,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3934,"indexed":false,"mutability":"mutable","name":"startTime","nameLocation":"2870:9:9","nodeType":"VariableDeclaration","scope":3938,"src":"2862:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3933,"name":"uint256","nodeType":"ElementaryTypeName","src":"2862:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3936,"indexed":false,"mutability":"mutable","name":"endTime","nameLocation":"2889:7:9","nodeType":"VariableDeclaration","scope":3938,"src":"2881:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3935,"name":"uint256","nodeType":"ElementaryTypeName","src":"2881:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2861:36:9"},"src":"2835:63:9"},{"anonymous":false,"eventSelector":"9956bd7b1ae344fbb54dbd02a85e2283bec6bf75f7fccbaa9c2392a715e71e49","id":3942,"name":"VotingSessionEnded","nameLocation":"2910:18:9","nodeType":"EventDefinition","parameters":{"id":3941,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3940,"indexed":false,"mutability":"mutable","name":"endTime","nameLocation":"2937:7:9","nodeType":"VariableDeclaration","scope":3942,"src":"2929:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3939,"name":"uint256","nodeType":"ElementaryTypeName","src":"2929:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2928:17:9"},"src":"2904:42:9"},{"anonymous":false,"eventSelector":"255d9fd63837b26ddecf40374f32676fd529f58accd2f1673335f6e04d0fe136","id":3948,"name":"DelegationChainUpdated","nameLocation":"2958:22:9","nodeType":"EventDefinition","parameters":{"id":3947,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3944,"indexed":true,"mutability":"mutable","name":"voter","nameLocation":"2997:5:9","nodeType":"VariableDeclaration","scope":3948,"src":"2981:21:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3943,"name":"address","nodeType":"ElementaryTypeName","src":"2981:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3946,"indexed":false,"mutability":"mutable","name":"newTotalPower","nameLocation":"3012:13:9","nodeType":"VariableDeclaration","scope":3948,"src":"3004:21:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3945,"name":"uint256","nodeType":"ElementaryTypeName","src":"3004:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2980:46:9"},"src":"2952:75:9"},{"body":{"id":3961,"nodeType":"Block","src":"3105:86:9","statements":[{"expression":{"arguments":[{"expression":{"baseExpression":{"id":3953,"name":"voters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3849,"src":"3124:6:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Voter_$3818_storage_$","typeString":"mapping(address => struct LiquidDemocracy.Voter storage ref)"}},"id":3955,"indexExpression":{"id":3954,"name":"voter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3950,"src":"3131:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3124:13:9","typeDescriptions":{"typeIdentifier":"t_struct$_Voter_$3818_storage","typeString":"struct LiquidDemocracy.Voter storage ref"}},"id":3956,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3138:8:9","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":3813,"src":"3124:22:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"566f746572206e6f742072656769737465726564","id":3957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3148:22:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_663e283d0ae6eef23650b26f2135143c58a603147d9e780ea8b73ec9aaf0d1fc","typeString":"literal_string \"Voter not registered\""},"value":"Voter not registered"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_663e283d0ae6eef23650b26f2135143c58a603147d9e780ea8b73ec9aaf0d1fc","typeString":"literal_string \"Voter not registered\""}],"id":3952,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"3116:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3958,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3116:55:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3959,"nodeType":"ExpressionStatement","src":"3116:55:9"},{"id":3960,"nodeType":"PlaceholderStatement","src":"3182:1:9"}]},"id":3962,"name":"onlyRegisteredVoter","nameLocation":"3070:19:9","nodeType":"ModifierDefinition","parameters":{"id":3951,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3950,"mutability":"mutable","name":"voter","nameLocation":"3098:5:9","nodeType":"VariableDeclaration","scope":3962,"src":"3090:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3949,"name":"address","nodeType":"ElementaryTypeName","src":"3090:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3089:15:9"},"src":"3061:130:9","virtual":false,"visibility":"internal"},{"body":{"id":3983,"nodeType":"Block","src":"3227:188:9","statements":[{"expression":{"arguments":[{"id":3965,"name":"votingActive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3882,"src":"3246:12:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"566f74696e67206e6f7420616374697665","id":3966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3260:19:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_4753b041641313f1ca2fbfa3890c4d0c79c5ac55aa0cd2bcb91e0eb948ae8f7c","typeString":"literal_string \"Voting not active\""},"value":"Voting not active"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4753b041641313f1ca2fbfa3890c4d0c79c5ac55aa0cd2bcb91e0eb948ae8f7c","typeString":"literal_string \"Voting not active\""}],"id":3964,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"3238:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3967,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3238:42:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3968,"nodeType":"ExpressionStatement","src":"3238:42:9"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3970,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3299:5:9","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3305:9:9","memberName":"timestamp","nodeType":"MemberAccess","src":"3299:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":3972,"name":"votingStartTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3884,"src":"3318:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3299:34:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3974,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3337:5:9","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3343:9:9","memberName":"timestamp","nodeType":"MemberAccess","src":"3337:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":3976,"name":"votingEndTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3886,"src":"3356:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3337:32:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3299:70:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f75747369646520766f74696e6720706572696f64","id":3979,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3371:23:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_eb5c25ec09aa342a63a80c7e1f30381cbe2531066a85e5b82cadd1faf70e2624","typeString":"literal_string \"Outside voting period\""},"value":"Outside voting period"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_eb5c25ec09aa342a63a80c7e1f30381cbe2531066a85e5b82cadd1faf70e2624","typeString":"literal_string \"Outside voting period\""}],"id":3969,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"3291:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3980,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3291:104:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3981,"nodeType":"ExpressionStatement","src":"3291:104:9"},{"id":3982,"nodeType":"PlaceholderStatement","src":"3406:1:9"}]},"id":3984,"name":"onlyDuringVoting","nameLocation":"3208:16:9","nodeType":"ModifierDefinition","parameters":{"id":3963,"nodeType":"ParameterList","parameters":[],"src":"3224:2:9"},"src":"3199:216:9","virtual":false,"visibility":"internal"},{"body":{"id":4027,"nodeType":"Block","src":"3478:291:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3991,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3986,"src":"3497:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3992,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3988,"src":"3505:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3497:10:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43616e6e6f742064656c656761746520746f2073656c66","id":3994,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3509:25:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_d8e61df636f602281f54f02f49ee0cca5f49004f2eac166030746eaf6ebb73f0","typeString":"literal_string \"Cannot delegate to self\""},"value":"Cannot delegate to self"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d8e61df636f602281f54f02f49ee0cca5f49004f2eac166030746eaf6ebb73f0","typeString":"literal_string \"Cannot delegate to self\""}],"id":3990,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"3489:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3995,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3489:46:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3996,"nodeType":"ExpressionStatement","src":"3489:46:9"},{"expression":{"arguments":[{"expression":{"baseExpression":{"id":3998,"name":"voters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3849,"src":"3554:6:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Voter_$3818_storage_$","typeString":"mapping(address => struct LiquidDemocracy.Voter storage ref)"}},"id":4000,"indexExpression":{"id":3999,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3986,"src":"3561:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3554:12:9","typeDescriptions":{"typeIdentifier":"t_struct$_Voter_$3818_storage","typeString":"struct LiquidDemocracy.Voter storage ref"}},"id":4001,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3567:8:9","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":3813,"src":"3554:21:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"44656c656761746f72206e6f742072656769737465726564","id":4002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3577:26:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_0a93db052647212ae38e0d563c2cea8c660bf991f4703d360324b6d52bcdfddd","typeString":"literal_string \"Delegator not registered\""},"value":"Delegator not registered"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0a93db052647212ae38e0d563c2cea8c660bf991f4703d360324b6d52bcdfddd","typeString":"literal_string \"Delegator not registered\""}],"id":3997,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"3546:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4003,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3546:58:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4004,"nodeType":"ExpressionStatement","src":"3546:58:9"},{"expression":{"arguments":[{"expression":{"baseExpression":{"id":4006,"name":"voters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3849,"src":"3623:6:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Voter_$3818_storage_$","typeString":"mapping(address => struct LiquidDemocracy.Voter storage ref)"}},"id":4008,"indexExpression":{"id":4007,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3988,"src":"3630:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3623:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_Voter_$3818_storage","typeString":"struct LiquidDemocracy.Voter storage ref"}},"id":4009,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3634:8:9","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":3813,"src":"3623:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"44656c6567617465206e6f742072656769737465726564","id":4010,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3644:25:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_f4cb3383e7055977993a5ee9691137f9c667c7e58f14bbddfa169b757da2cca4","typeString":"literal_string \"Delegate not registered\""},"value":"Delegate not registered"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f4cb3383e7055977993a5ee9691137f9c667c7e58f14bbddfa169b757da2cca4","typeString":"literal_string \"Delegate not registered\""}],"id":4005,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"3615:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4011,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3615:55:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4012,"nodeType":"ExpressionStatement","src":"3615:55:9"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":4014,"name":"voters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3849,"src":"3689:6:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Voter_$3818_storage_$","typeString":"mapping(address => struct LiquidDemocracy.Voter storage ref)"}},"id":4016,"indexExpression":{"id":4015,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3986,"src":"3696:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3689:12:9","typeDescriptions":{"typeIdentifier":"t_struct$_Voter_$3818_storage","typeString":"struct LiquidDemocracy.Voter storage ref"}},"id":4017,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3702:8:9","memberName":"delegate","nodeType":"MemberAccess","referencedDeclaration":3808,"src":"3689:21:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":4020,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3722:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4019,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3714:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4018,"name":"address","nodeType":"ElementaryTypeName","src":"3714:7:9","typeDescriptions":{}}},"id":4021,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3714:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3689:35:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416c7265616479206861732064656c6567617465","id":4023,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3726:22:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_790d6bfc276ba541ca9f49bd465fe6c01fc6fb8578e1c0a566cb33b9704303d8","typeString":"literal_string \"Already has delegate\""},"value":"Already has delegate"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_790d6bfc276ba541ca9f49bd465fe6c01fc6fb8578e1c0a566cb33b9704303d8","typeString":"literal_string \"Already has delegate\""}],"id":4013,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"3681:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4024,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3681:68:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4025,"nodeType":"ExpressionStatement","src":"3681:68:9"},{"id":4026,"nodeType":"PlaceholderStatement","src":"3760:1:9"}]},"id":4028,"name":"onlyValidDelegation","nameLocation":"3432:19:9","nodeType":"ModifierDefinition","parameters":{"id":3989,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3986,"mutability":"mutable","name":"from","nameLocation":"3460:4:9","nodeType":"VariableDeclaration","scope":4028,"src":"3452:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3985,"name":"address","nodeType":"ElementaryTypeName","src":"3452:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3988,"mutability":"mutable","name":"to","nameLocation":"3474:2:9","nodeType":"VariableDeclaration","scope":4028,"src":"3466:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3987,"name":"address","nodeType":"ElementaryTypeName","src":"3466:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3451:26:9"},"src":"3423:346:9","virtual":false,"visibility":"internal"},{"body":{"id":4059,"nodeType":"Block","src":"3920:205:9","statements":[{"expression":{"id":4041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4039,"name":"maxDelegationDepth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3888,"src":"3931:18:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4040,"name":"_maxDelegationDepth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4030,"src":"3952:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3931:40:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4042,"nodeType":"ExpressionStatement","src":"3931:40:9"},{"expression":{"id":4045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4043,"name":"minDelegationPower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3890,"src":"3982:18:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4044,"name":"_minDelegationPower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4032,"src":"4003:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3982:40:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4046,"nodeType":"ExpressionStatement","src":"3982:40:9"},{"expression":{"id":4049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4047,"name":"delegationCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3876,"src":"4033:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":4048,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4053:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4033:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4050,"nodeType":"ExpressionStatement","src":"4033:21:9"},{"expression":{"id":4053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4051,"name":"activeDelegations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3880,"src":"4065:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":4052,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4085:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4065:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4054,"nodeType":"ExpressionStatement","src":"4065:21:9"},{"expression":{"id":4057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4055,"name":"totalVotingPower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3878,"src":"4097:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":4056,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4116:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4097:20:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4058,"nodeType":"ExpressionStatement","src":"4097:20:9"}]},"id":4060,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"expression":{"id":4035,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3908:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3912:6:9","memberName":"sender","nodeType":"MemberAccess","src":"3908:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":4037,"kind":"baseConstructorSpecifier","modifierName":{"id":4034,"name":"Ownable","nameLocations":["3900:7:9"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"3900:7:9"},"nodeType":"ModifierInvocation","src":"3900:19:9"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":4033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4030,"mutability":"mutable","name":"_maxDelegationDepth","nameLocation":"3835:19:9","nodeType":"VariableDeclaration","scope":4060,"src":"3827:27:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4029,"name":"uint256","nodeType":"ElementaryTypeName","src":"3827:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4032,"mutability":"mutable","name":"_minDelegationPower","nameLocation":"3873:19:9","nodeType":"VariableDeclaration","scope":4060,"src":"3865:27:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4031,"name":"uint256","nodeType":"ElementaryTypeName","src":"3865:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3816:83:9"},"returnParameters":{"id":4038,"nodeType":"ParameterList","parameters":[],"src":"3920:0:9"},"scope":4854,"src":"3805:320:9","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4131,"nodeType":"Block","src":"4396:695:9","statements":[{"expression":{"arguments":[{"id":4075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4415:23:9","subExpression":{"expression":{"baseExpression":{"id":4071,"name":"voters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3849,"src":"4416:6:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Voter_$3818_storage_$","typeString":"mapping(address => struct LiquidDemocracy.Voter storage ref)"}},"id":4073,"indexExpression":{"id":4072,"name":"voter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4063,"src":"4423:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4416:13:9","typeDescriptions":{"typeIdentifier":"t_struct$_Voter_$3818_storage","typeString":"struct LiquidDemocracy.Voter storage ref"}},"id":4074,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4430:8:9","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":3813,"src":"4416:22:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"566f74657220616c72656164792072656769737465726564","id":4076,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4440:26:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_61b2e168a358ed394dcf0242ed119c571b7a7528c2071ac26828805f58234671","typeString":"literal_string \"Voter already registered\""},"value":"Voter already registered"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_61b2e168a358ed394dcf0242ed119c571b7a7528c2071ac26828805f58234671","typeString":"literal_string \"Voter already registered\""}],"id":4070,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"4407:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4077,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4407:60:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4078,"nodeType":"ExpressionStatement","src":"4407:60:9"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4080,"name":"power","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4065,"src":"4486:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4081,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4494:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4486:9:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"506f776572206d7573742062652067726561746572207468616e2030","id":4083,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4497:30:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_c7b1eec7fece10b29185c186f8325ba0ce985256ccff2f5884a0d837360c96f3","typeString":"literal_string \"Power must be greater than 0\""},"value":"Power must be greater than 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c7b1eec7fece10b29185c186f8325ba0ce985256ccff2f5884a0d837360c96f3","typeString":"literal_string \"Power must be greater than 0\""}],"id":4079,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"4478:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4084,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4478:50:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4085,"nodeType":"ExpressionStatement","src":"4478:50:9"},{"assignments":[4088],"declarations":[{"constant":false,"id":4088,"mutability":"mutable","name":"newVoter","nameLocation":"4562:8:9","nodeType":"VariableDeclaration","scope":4131,"src":"4549:21:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Voter_$3818_memory_ptr","typeString":"struct LiquidDemocracy.Voter"},"typeName":{"id":4087,"nodeType":"UserDefinedTypeName","pathNode":{"id":4086,"name":"Voter","nameLocations":["4549:5:9"],"nodeType":"IdentifierPath","referencedDeclaration":3818,"src":"4549:5:9"},"referencedDeclaration":3818,"src":"4549:5:9","typeDescriptions":{"typeIdentifier":"t_struct$_Voter_$3818_storage_ptr","typeString":"struct LiquidDemocracy.Voter"}},"visibility":"internal"}],"id":4107,"initialValue":{"arguments":[{"id":4090,"name":"voter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4063,"src":"4608:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4091,"name":"power","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4065,"src":"4641:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"30","id":4092,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4677:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":4093,"name":"power","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4065,"src":"4705:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":4096,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4743:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4095,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4735:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4094,"name":"address","nodeType":"ElementaryTypeName","src":"4735:7:9","typeDescriptions":{}}},"id":4097,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4735:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":4101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4785:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4100,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"4771:13:9","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":4098,"name":"address","nodeType":"ElementaryTypeName","src":"4775:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4099,"nodeType":"ArrayTypeName","src":"4775:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":4102,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4771:16:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"hexValue":"74727565","id":4103,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4812:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"30","id":4104,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4845:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":4105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4878:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4089,"name":"Voter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3818,"src":"4573:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Voter_$3818_storage_ptr_$","typeString":"type(struct LiquidDemocracy.Voter storage pointer)"}},"id":4106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["4594:12:9","4628:11:9","4661:14:9","4693:10:9","4725:8:9","4760:9:9","4802:8:9","4831:12:9","4861:15:9"],"names":["voterAddress","votingPower","delegatedPower","totalPower","delegate","delegates","isActive","lastVoteTime","delegationCount"],"nodeType":"FunctionCall","src":"4573:318:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Voter_$3818_memory_ptr","typeString":"struct LiquidDemocracy.Voter memory"}},"nodeType":"VariableDeclarationStatement","src":"4549:342:9"},{"expression":{"id":4112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4108,"name":"voters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3849,"src":"4912:6:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Voter_$3818_storage_$","typeString":"mapping(address => struct LiquidDemocracy.Voter storage ref)"}},"id":4110,"indexExpression":{"id":4109,"name":"voter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4063,"src":"4919:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4912:13:9","typeDescriptions":{"typeIdentifier":"t_struct$_Voter_$3818_storage","typeString":"struct LiquidDemocracy.Voter storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4111,"name":"newVoter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4088,"src":"4928:8:9","typeDescriptions":{"typeIdentifier":"t_struct$_Voter_$3818_memory_ptr","typeString":"struct LiquidDemocracy.Voter memory"}},"src":"4912:24:9","typeDescriptions":{"typeIdentifier":"t_struct$_Voter_$3818_storage","typeString":"struct LiquidDemocracy.Voter storage ref"}},"id":4113,"nodeType":"ExpressionStatement","src":"4912:24:9"},{"expression":{"arguments":[{"id":4117,"name":"voter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4063,"src":"4969:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4114,"name":"registeredVoters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3874,"src":"4947:16:9","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":4116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4964:4:9","memberName":"push","nodeType":"MemberAccess","src":"4947:21:9","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer,address)"}},"id":4118,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4947:28:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4119,"nodeType":"ExpressionStatement","src":"4947:28:9"},{"expression":{"id":4122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4120,"name":"totalVotingPower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3878,"src":"4986:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4121,"name":"power","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4065,"src":"5006:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4986:25:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4123,"nodeType":"ExpressionStatement","src":"4986:25:9"},{"eventCall":{"arguments":[{"id":4125,"name":"voter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4063,"src":"5053:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4126,"name":"power","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4065,"src":"5060:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4127,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5067:5:9","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5073:9:9","memberName":"timestamp","nodeType":"MemberAccess","src":"5067:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4124,"name":"VoterRegistered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3898,"src":"5037:15:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":4129,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5037:46:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4130,"nodeType":"EmitStatement","src":"5032:51:9"}]},"documentation":{"id":4061,"nodeType":"StructuredDocumentation","src":"4166:152:9","text":" @dev Registers a new voter with base voting power\n @param voter The voter address\n @param power The base voting power"},"functionSelector":"cbea81ef","id":4132,"implemented":true,"kind":"function","modifiers":[{"id":4068,"kind":"modifierInvocation","modifierName":{"id":4067,"name":"onlyOwner","nameLocations":["4386:9:9"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"4386:9:9"},"nodeType":"ModifierInvocation","src":"4386:9:9"}],"name":"registerVoter","nameLocation":"4333:13:9","nodeType":"FunctionDefinition","parameters":{"id":4066,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4063,"mutability":"mutable","name":"voter","nameLocation":"4355:5:9","nodeType":"VariableDeclaration","scope":4132,"src":"4347:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4062,"name":"address","nodeType":"ElementaryTypeName","src":"4347:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4065,"mutability":"mutable","name":"power","nameLocation":"4370:5:9","nodeType":"VariableDeclaration","scope":4132,"src":"4362:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4064,"name":"uint256","nodeType":"ElementaryTypeName","src":"4362:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4346:30:9"},"returnParameters":{"id":4069,"nodeType":"ParameterList","parameters":[],"src":"4396:0:9"},"scope":4854,"src":"4324:767:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4274,"nodeType":"Block","src":"5576:1293:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4152,"name":"power","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4137,"src":"5595:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":4153,"name":"minDelegationPower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3890,"src":"5604:18:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5595:27:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"506f7765722062656c6f77206d696e696d756d","id":4155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5624:21:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_58ddd91e4c0e9678da947dbe7f4eef154878d102f47318ff042cd1bdb7511517","typeString":"literal_string \"Power below minimum\""},"value":"Power below minimum"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_58ddd91e4c0e9678da947dbe7f4eef154878d102f47318ff042cd1bdb7511517","typeString":"literal_string \"Power below minimum\""}],"id":4151,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"5587:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4156,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5587:59:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4157,"nodeType":"ExpressionStatement","src":"5587:59:9"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4159,"name":"power","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4137,"src":"5665:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"baseExpression":{"id":4160,"name":"voters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3849,"src":"5674:6:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Voter_$3818_storage_$","typeString":"mapping(address => struct LiquidDemocracy.Voter storage ref)"}},"id":4163,"indexExpression":{"expression":{"id":4161,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5681:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5685:6:9","memberName":"sender","nodeType":"MemberAccess","src":"5681:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5674:18:9","typeDescriptions":{"typeIdentifier":"t_struct$_Voter_$3818_storage","typeString":"struct LiquidDemocracy.Voter storage ref"}},"id":4164,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5693:11:9","memberName":"votingPower","nodeType":"MemberAccess","referencedDeclaration":3802,"src":"5674:30:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5665:39:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e7420706f776572","id":4166,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5706:20:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_0e2ba9644f1685ef5cb5da7844c7b30968d6a201930df4a32b12b1940c2f4f4f","typeString":"literal_string \"Insufficient power\""},"value":"Insufficient power"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0e2ba9644f1685ef5cb5da7844c7b30968d6a201930df4a32b12b1940c2f4f4f","typeString":"literal_string \"Insufficient power\""}],"id":4158,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"5657:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4167,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5657:70:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4168,"nodeType":"ExpressionStatement","src":"5657:70:9"},{"expression":{"arguments":[{"id":4175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5746:41:9","subExpression":{"arguments":[{"expression":{"id":4171,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5766:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5770:6:9","memberName":"sender","nodeType":"MemberAccess","src":"5766:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4173,"name":"delegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4135,"src":"5778:8:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":4170,"name":"hasDelegationChain","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4797,"src":"5747:18:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":4174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5747:40:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43697263756c61722064656c65676174696f6e206465746563746564","id":4176,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5789:30:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_fbff28cd471bb2c1078c51e514df95c09910ec34c660f61563ffee79d7f1519d","typeString":"literal_string \"Circular delegation detected\""},"value":"Circular delegation detected"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fbff28cd471bb2c1078c51e514df95c09910ec34c660f61563ffee79d7f1519d","typeString":"literal_string \"Circular delegation detected\""}],"id":4169,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"5738:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5738:82:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4178,"nodeType":"ExpressionStatement","src":"5738:82:9"},{"expression":{"id":4182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4179,"name":"delegationId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4149,"src":"5841:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5856:19:9","subExpression":{"id":4180,"name":"delegationCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3876,"src":"5856:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5841:34:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4183,"nodeType":"ExpressionStatement","src":"5841:34:9"},{"assignments":[4186],"declarations":[{"constant":false,"id":4186,"mutability":"mutable","name":"newDelegation","nameLocation":"5914:13:9","nodeType":"VariableDeclaration","scope":4274,"src":"5896:31:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Delegation_$3831_memory_ptr","typeString":"struct LiquidDemocracy.Delegation"},"typeName":{"id":4185,"nodeType":"UserDefinedTypeName","pathNode":{"id":4184,"name":"Delegation","nameLocations":["5896:10:9"],"nodeType":"IdentifierPath","referencedDeclaration":3831,"src":"5896:10:9"},"referencedDeclaration":3831,"src":"5896:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_Delegation_$3831_storage_ptr","typeString":"struct LiquidDemocracy.Delegation"}},"visibility":"internal"}],"id":4197,"initialValue":{"arguments":[{"expression":{"id":4188,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5962:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5966:6:9","memberName":"sender","nodeType":"MemberAccess","src":"5962:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4190,"name":"delegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4135,"src":"5991:8:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4191,"name":"power","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4137,"src":"6021:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4192,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"6052:5:9","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6058:9:9","memberName":"timestamp","nodeType":"MemberAccess","src":"6052:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":4194,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6092:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":4195,"name":"delegationId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4149,"src":"6125:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4187,"name":"Delegation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3831,"src":"5930:10:9","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Delegation_$3831_storage_ptr_$","typeString":"type(struct LiquidDemocracy.Delegation storage pointer)"}},"id":4196,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["5956:4:9","5987:2:9","6014:5:9","6041:9:9","6082:8:9","6111:12:9"],"names":["from","to","power","timestamp","isActive","delegationId"],"nodeType":"FunctionCall","src":"5930:219:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Delegation_$3831_memory_ptr","typeString":"struct LiquidDemocracy.Delegation memory"}},"nodeType":"VariableDeclarationStatement","src":"5896:253:9"},{"expression":{"id":4202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4198,"name":"delegations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3854,"src":"6170:11:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Delegation_$3831_storage_$","typeString":"mapping(uint256 => struct LiquidDemocracy.Delegation storage ref)"}},"id":4200,"indexExpression":{"id":4199,"name":"delegationId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4149,"src":"6182:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6170:25:9","typeDescriptions":{"typeIdentifier":"t_struct$_Delegation_$3831_storage","typeString":"struct LiquidDemocracy.Delegation storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4201,"name":"newDelegation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4186,"src":"6198:13:9","typeDescriptions":{"typeIdentifier":"t_struct$_Delegation_$3831_memory_ptr","typeString":"struct LiquidDemocracy.Delegation memory"}},"src":"6170:41:9","typeDescriptions":{"typeIdentifier":"t_struct$_Delegation_$3831_storage","typeString":"struct LiquidDemocracy.Delegation storage ref"}},"id":4203,"nodeType":"ExpressionStatement","src":"6170:41:9"},{"expression":{"arguments":[{"id":4209,"name":"delegationId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4149,"src":"6256:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"id":4204,"name":"voterDelegations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3859,"src":"6222:16:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[] storage ref)"}},"id":4207,"indexExpression":{"expression":{"id":4205,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6239:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6243:6:9","memberName":"sender","nodeType":"MemberAccess","src":"6239:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6222:28:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":4208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6251:4:9","memberName":"push","nodeType":"MemberAccess","src":"6222:33:9","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256)"}},"id":4210,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6222:47:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4211,"nodeType":"ExpressionStatement","src":"6222:47:9"},{"expression":{"id":4218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":4212,"name":"voters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3849,"src":"6322:6:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Voter_$3818_storage_$","typeString":"mapping(address => struct LiquidDemocracy.Voter storage ref)"}},"id":4215,"indexExpression":{"expression":{"id":4213,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6329:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6333:6:9","memberName":"sender","nodeType":"MemberAccess","src":"6329:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6322:18:9","typeDescriptions":{"typeIdentifier":"t_struct$_Voter_$3818_storage","typeString":"struct LiquidDemocracy.Voter storage ref"}},"id":4216,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6341:8:9","memberName":"delegate","nodeType":"MemberAccess","referencedDeclaration":3808,"src":"6322:27:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4217,"name":"delegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4135,"src":"6352:8:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6322:38:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4219,"nodeType":"ExpressionStatement","src":"6322:38:9"},{"expression":{"id":4226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":4220,"name":"voters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3849,"src":"6371:6:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Voter_$3818_storage_$","typeString":"mapping(address => struct LiquidDemocracy.Voter storage ref)"}},"id":4223,"indexExpression":{"expression":{"id":4221,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6378:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6382:6:9","memberName":"sender","nodeType":"MemberAccess","src":"6378:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6371:18:9","typeDescriptions":{"typeIdentifier":"t_struct$_Voter_$3818_storage","typeString":"struct LiquidDemocracy.Voter storage ref"}},"id":4224,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6390:11:9","memberName":"votingPower","nodeType":"MemberAccess","referencedDeclaration":3802,"src":"6371:30:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":4225,"name":"power","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4137,"src":"6405:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6371:39:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4227,"nodeType":"ExpressionStatement","src":"6371:39:9"},{"expression":{"id":4233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":4228,"name":"voters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3849,"src":"6421:6:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Voter_$3818_storage_$","typeString":"mapping(address => struct LiquidDemocracy.Voter storage ref)"}},"id":4230,"indexExpression":{"id":4229,"name":"delegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4135,"src":"6428:8:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6421:16:9","typeDescriptions":{"typeIdentifier":"t_struct$_Voter_$3818_storage","typeString":"struct LiquidDemocracy.Voter storage ref"}},"id":4231,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6438:14:9","memberName":"delegatedPower","nodeType":"MemberAccess","referencedDeclaration":3804,"src":"6421:31:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4232,"name":"power","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4137,"src":"6456:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6421:40:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4234,"nodeType":"ExpressionStatement","src":"6421:40:9"},{"expression":{"arguments":[{"expression":{"id":4240,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6504:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6508:6:9","memberName":"sender","nodeType":"MemberAccess","src":"6504:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"expression":{"baseExpression":{"id":4235,"name":"voters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3849,"src":"6472:6:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Voter_$3818_storage_$","typeString":"mapping(address => struct LiquidDemocracy.Voter storage ref)"}},"id":4237,"indexExpression":{"id":4236,"name":"delegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4135,"src":"6479:8:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6472:16:9","typeDescriptions":{"typeIdentifier":"t_struct$_Voter_$3818_storage","typeString":"struct LiquidDemocracy.Voter storage ref"}},"id":4238,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6489:9:9","memberName":"delegates","nodeType":"MemberAccess","referencedDeclaration":3811,"src":"6472:26:9","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":4239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6499:4:9","memberName":"push","nodeType":"MemberAccess","src":"6472:31:9","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer,address)"}},"id":4242,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6472:43:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4243,"nodeType":"ExpressionStatement","src":"6472:43:9"},{"expression":{"id":4248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6526:34:9","subExpression":{"expression":{"baseExpression":{"id":4244,"name":"voters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3849,"src":"6526:6:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Voter_$3818_storage_$","typeString":"mapping(address => struct LiquidDemocracy.Voter storage ref)"}},"id":4246,"indexExpression":{"id":4245,"name":"delegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4135,"src":"6533:8:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6526:16:9","typeDescriptions":{"typeIdentifier":"t_struct$_Voter_$3818_storage","typeString":"struct LiquidDemocracy.Voter storage ref"}},"id":4247,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6543:15:9","memberName":"delegationCount","nodeType":"MemberAccess","referencedDeclaration":3817,"src":"6526:32:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4249,"nodeType":"ExpressionStatement","src":"6526:34:9"},{"expression":{"arguments":[{"expression":{"id":4251,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6630:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6634:6:9","memberName":"sender","nodeType":"MemberAccess","src":"6630:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4250,"name":"updateTotalPower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4739,"src":"6613:16:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":4253,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6613:28:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4254,"nodeType":"ExpressionStatement","src":"6613:28:9"},{"expression":{"arguments":[{"id":4256,"name":"delegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4135,"src":"6669:8:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4255,"name":"updateTotalPower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4739,"src":"6652:16:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":4257,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6652:26:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4258,"nodeType":"ExpressionStatement","src":"6652:26:9"},{"expression":{"id":4260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6699:19:9","subExpression":{"id":4259,"name":"activeDelegations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3880,"src":"6699:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4261,"nodeType":"ExpressionStatement","src":"6699:19:9"},{"eventCall":{"arguments":[{"expression":{"id":4263,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6762:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6766:6:9","memberName":"sender","nodeType":"MemberAccess","src":"6762:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4265,"name":"delegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4135,"src":"6774:8:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4266,"name":"power","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4137,"src":"6784:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4267,"name":"delegationId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4149,"src":"6791:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4268,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"6805:5:9","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6811:9:9","memberName":"timestamp","nodeType":"MemberAccess","src":"6805:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4262,"name":"DelegationCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3910,"src":"6744:17:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256,uint256)"}},"id":4270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6744:77:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4271,"nodeType":"EmitStatement","src":"6739:82:9"},{"expression":{"id":4272,"name":"delegationId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4149,"src":"6849:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4150,"id":4273,"nodeType":"Return","src":"6842:19:9"}]},"documentation":{"id":4133,"nodeType":"StructuredDocumentation","src":"5099:238:9","text":" @dev Creates a delegation from one voter to another\n @param delegate The address to delegate to\n @param power The amount of power to delegate\n @return delegationId The ID of the created delegation"},"functionSelector":"ce52c4ef","id":4275,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"expression":{"id":4140,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5467:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5471:6:9","memberName":"sender","nodeType":"MemberAccess","src":"5467:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":4142,"kind":"modifierInvocation","modifierName":{"id":4139,"name":"onlyRegisteredVoter","nameLocations":["5447:19:9"],"nodeType":"IdentifierPath","referencedDeclaration":3962,"src":"5447:19:9"},"nodeType":"ModifierInvocation","src":"5447:31:9"},{"arguments":[{"expression":{"id":4144,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5508:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5512:6:9","memberName":"sender","nodeType":"MemberAccess","src":"5508:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4146,"name":"delegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4135,"src":"5520:8:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":4147,"kind":"modifierInvocation","modifierName":{"id":4143,"name":"onlyValidDelegation","nameLocations":["5488:19:9"],"nodeType":"IdentifierPath","referencedDeclaration":4028,"src":"5488:19:9"},"nodeType":"ModifierInvocation","src":"5488:41:9"}],"name":"createDelegation","nameLocation":"5352:16:9","nodeType":"FunctionDefinition","parameters":{"id":4138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4135,"mutability":"mutable","name":"delegate","nameLocation":"5387:8:9","nodeType":"VariableDeclaration","scope":4275,"src":"5379:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4134,"name":"address","nodeType":"ElementaryTypeName","src":"5379:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4137,"mutability":"mutable","name":"power","nameLocation":"5415:5:9","nodeType":"VariableDeclaration","scope":4275,"src":"5407:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4136,"name":"uint256","nodeType":"ElementaryTypeName","src":"5407:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5368:59:9"},"returnParameters":{"id":4150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4149,"mutability":"mutable","name":"delegationId","nameLocation":"5556:12:9","nodeType":"VariableDeclaration","scope":4275,"src":"5548:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4148,"name":"uint256","nodeType":"ElementaryTypeName","src":"5548:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5547:22:9"},"scope":4854,"src":"5343:1526:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4377,"nodeType":"Block","src":"7070:900:9","statements":[{"assignments":[4285],"declarations":[{"constant":false,"id":4285,"mutability":"mutable","name":"delegation","nameLocation":"7100:10:9","nodeType":"VariableDeclaration","scope":4377,"src":"7081:29:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Delegation_$3831_storage_ptr","typeString":"struct LiquidDemocracy.Delegation"},"typeName":{"id":4284,"nodeType":"UserDefinedTypeName","pathNode":{"id":4283,"name":"Delegation","nameLocations":["7081:10:9"],"nodeType":"IdentifierPath","referencedDeclaration":3831,"src":"7081:10:9"},"referencedDeclaration":3831,"src":"7081:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_Delegation_$3831_storage_ptr","typeString":"struct LiquidDemocracy.Delegation"}},"visibility":"internal"}],"id":4289,"initialValue":{"baseExpression":{"id":4286,"name":"delegations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3854,"src":"7113:11:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Delegation_$3831_storage_$","typeString":"mapping(uint256 => struct LiquidDemocracy.Delegation storage ref)"}},"id":4288,"indexExpression":{"id":4287,"name":"delegationId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4278,"src":"7125:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7113:25:9","typeDescriptions":{"typeIdentifier":"t_struct$_Delegation_$3831_storage","typeString":"struct LiquidDemocracy.Delegation storage ref"}},"nodeType":"VariableDeclarationStatement","src":"7081:57:9"},{"expression":{"arguments":[{"expression":{"id":4291,"name":"delegation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4285,"src":"7157:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_Delegation_$3831_storage_ptr","typeString":"struct LiquidDemocracy.Delegation storage pointer"}},"id":4292,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7168:8:9","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":3828,"src":"7157:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"44656c65676174696f6e206e6f7420616374697665","id":4293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7178:23:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_d5d68e069148566e68ad466e873c2a9d44256b8662756f77d5d31c3ebb955fe1","typeString":"literal_string \"Delegation not active\""},"value":"Delegation not active"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d5d68e069148566e68ad466e873c2a9d44256b8662756f77d5d31c3ebb955fe1","typeString":"literal_string \"Delegation not active\""}],"id":4290,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"7149:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7149:53:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4295,"nodeType":"ExpressionStatement","src":"7149:53:9"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4297,"name":"delegation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4285,"src":"7221:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_Delegation_$3831_storage_ptr","typeString":"struct LiquidDemocracy.Delegation storage pointer"}},"id":4298,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7232:4:9","memberName":"from","nodeType":"MemberAccess","referencedDeclaration":3820,"src":"7221:15:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4299,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7240:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7244:6:9","memberName":"sender","nodeType":"MemberAccess","src":"7240:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7221:29:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f74207468652064656c656761746f72","id":4302,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7252:19:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_a17fea1e547778a0b216cd3a746efa129b6d1d7262ea8de6a6d5992c7590dc7d","typeString":"literal_string \"Not the delegator\""},"value":"Not the delegator"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a17fea1e547778a0b216cd3a746efa129b6d1d7262ea8de6a6d5992c7590dc7d","typeString":"literal_string \"Not the delegator\""}],"id":4296,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"7213:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7213:59:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4304,"nodeType":"ExpressionStatement","src":"7213:59:9"},{"expression":{"id":4309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4305,"name":"delegation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4285,"src":"7293:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_Delegation_$3831_storage_ptr","typeString":"struct LiquidDemocracy.Delegation storage pointer"}},"id":4307,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7304:8:9","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":3828,"src":"7293:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":4308,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7315:5:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"7293:27:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4310,"nodeType":"ExpressionStatement","src":"7293:27:9"},{"expression":{"id":4320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":4311,"name":"voters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3849,"src":"7373:6:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Voter_$3818_storage_$","typeString":"mapping(address => struct LiquidDemocracy.Voter storage ref)"}},"id":4314,"indexExpression":{"expression":{"id":4312,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7380:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7384:6:9","memberName":"sender","nodeType":"MemberAccess","src":"7380:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7373:18:9","typeDescriptions":{"typeIdentifier":"t_struct$_Voter_$3818_storage","typeString":"struct LiquidDemocracy.Voter storage ref"}},"id":4315,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7392:8:9","memberName":"delegate","nodeType":"MemberAccess","referencedDeclaration":3808,"src":"7373:27:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"30","id":4318,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7411:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4317,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7403:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4316,"name":"address","nodeType":"ElementaryTypeName","src":"7403:7:9","typeDescriptions":{}}},"id":4319,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7403:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7373:40:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4321,"nodeType":"ExpressionStatement","src":"7373:40:9"},{"expression":{"id":4329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":4322,"name":"voters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3849,"src":"7424:6:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Voter_$3818_storage_$","typeString":"mapping(address => struct LiquidDemocracy.Voter storage ref)"}},"id":4325,"indexExpression":{"expression":{"id":4323,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7431:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7435:6:9","memberName":"sender","nodeType":"MemberAccess","src":"7431:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7424:18:9","typeDescriptions":{"typeIdentifier":"t_struct$_Voter_$3818_storage","typeString":"struct LiquidDemocracy.Voter storage ref"}},"id":4326,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7443:11:9","memberName":"votingPower","nodeType":"MemberAccess","referencedDeclaration":3802,"src":"7424:30:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"id":4327,"name":"delegation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4285,"src":"7458:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_Delegation_$3831_storage_ptr","typeString":"struct LiquidDemocracy.Delegation storage pointer"}},"id":4328,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7469:5:9","memberName":"power","nodeType":"MemberAccess","referencedDeclaration":3824,"src":"7458:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7424:50:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4330,"nodeType":"ExpressionStatement","src":"7424:50:9"},{"expression":{"id":4338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":4331,"name":"voters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3849,"src":"7485:6:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Voter_$3818_storage_$","typeString":"mapping(address => struct LiquidDemocracy.Voter storage ref)"}},"id":4334,"indexExpression":{"expression":{"id":4332,"name":"delegation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4285,"src":"7492:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_Delegation_$3831_storage_ptr","typeString":"struct LiquidDemocracy.Delegation storage pointer"}},"id":4333,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7503:2:9","memberName":"to","nodeType":"MemberAccess","referencedDeclaration":3822,"src":"7492:13:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7485:21:9","typeDescriptions":{"typeIdentifier":"t_struct$_Voter_$3818_storage","typeString":"struct LiquidDemocracy.Voter storage ref"}},"id":4335,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7507:14:9","memberName":"delegatedPower","nodeType":"MemberAccess","referencedDeclaration":3804,"src":"7485:36:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"expression":{"id":4336,"name":"delegation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4285,"src":"7525:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_Delegation_$3831_storage_ptr","typeString":"struct LiquidDemocracy.Delegation storage pointer"}},"id":4337,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7536:5:9","memberName":"power","nodeType":"MemberAccess","referencedDeclaration":3824,"src":"7525:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7485:56:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4339,"nodeType":"ExpressionStatement","src":"7485:56:9"},{"expression":{"id":4345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"7552:39:9","subExpression":{"expression":{"baseExpression":{"id":4340,"name":"voters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3849,"src":"7552:6:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Voter_$3818_storage_$","typeString":"mapping(address => struct LiquidDemocracy.Voter storage ref)"}},"id":4343,"indexExpression":{"expression":{"id":4341,"name":"delegation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4285,"src":"7559:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_Delegation_$3831_storage_ptr","typeString":"struct LiquidDemocracy.Delegation storage pointer"}},"id":4342,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7570:2:9","memberName":"to","nodeType":"MemberAccess","referencedDeclaration":3822,"src":"7559:13:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7552:21:9","typeDescriptions":{"typeIdentifier":"t_struct$_Voter_$3818_storage","typeString":"struct LiquidDemocracy.Voter storage ref"}},"id":4344,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7574:15:9","memberName":"delegationCount","nodeType":"MemberAccess","referencedDeclaration":3817,"src":"7552:37:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4346,"nodeType":"ExpressionStatement","src":"7552:39:9"},{"expression":{"arguments":[{"expression":{"id":4348,"name":"delegation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4285,"src":"7672:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_Delegation_$3831_storage_ptr","typeString":"struct LiquidDemocracy.Delegation storage pointer"}},"id":4349,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7683:2:9","memberName":"to","nodeType":"MemberAccess","referencedDeclaration":3822,"src":"7672:13:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4350,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7687:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7691:6:9","memberName":"sender","nodeType":"MemberAccess","src":"7687:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":4347,"name":"removeFromDelegates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4853,"src":"7652:19:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":4352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7652:46:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4353,"nodeType":"ExpressionStatement","src":"7652:46:9"},{"expression":{"arguments":[{"expression":{"id":4355,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7768:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7772:6:9","memberName":"sender","nodeType":"MemberAccess","src":"7768:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4354,"name":"updateTotalPower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4739,"src":"7751:16:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":4357,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7751:28:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4358,"nodeType":"ExpressionStatement","src":"7751:28:9"},{"expression":{"arguments":[{"expression":{"id":4360,"name":"delegation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4285,"src":"7807:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_Delegation_$3831_storage_ptr","typeString":"struct LiquidDemocracy.Delegation storage pointer"}},"id":4361,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7818:2:9","memberName":"to","nodeType":"MemberAccess","referencedDeclaration":3822,"src":"7807:13:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4359,"name":"updateTotalPower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4739,"src":"7790:16:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":4362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7790:31:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4363,"nodeType":"ExpressionStatement","src":"7790:31:9"},{"expression":{"id":4365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"7842:19:9","subExpression":{"id":4364,"name":"activeDelegations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3880,"src":"7842:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4366,"nodeType":"ExpressionStatement","src":"7842:19:9"},{"eventCall":{"arguments":[{"expression":{"id":4368,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7905:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7909:6:9","memberName":"sender","nodeType":"MemberAccess","src":"7905:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4370,"name":"delegation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4285,"src":"7917:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_Delegation_$3831_storage_ptr","typeString":"struct LiquidDemocracy.Delegation storage pointer"}},"id":4371,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7928:2:9","memberName":"to","nodeType":"MemberAccess","referencedDeclaration":3822,"src":"7917:13:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4372,"name":"delegationId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4278,"src":"7932:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4373,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"7946:5:9","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7952:9:9","memberName":"timestamp","nodeType":"MemberAccess","src":"7946:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4367,"name":"DelegationRevoked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3920,"src":"7887:17:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":4375,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7887:75:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4376,"nodeType":"EmitStatement","src":"7882:80:9"}]},"documentation":{"id":4276,"nodeType":"StructuredDocumentation","src":"6877:117:9","text":" @dev Revokes an active delegation\n @param delegationId The ID of the delegation to revoke"},"functionSelector":"bd3d425d","id":4378,"implemented":true,"kind":"function","modifiers":[{"id":4281,"kind":"modifierInvocation","modifierName":{"id":4280,"name":"nonReentrant","nameLocations":["7057:12:9"],"nodeType":"IdentifierPath","referencedDeclaration":318,"src":"7057:12:9"},"nodeType":"ModifierInvocation","src":"7057:12:9"}],"name":"revokeDelegation","nameLocation":"7009:16:9","nodeType":"FunctionDefinition","parameters":{"id":4279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4278,"mutability":"mutable","name":"delegationId","nameLocation":"7034:12:9","nodeType":"VariableDeclaration","scope":4378,"src":"7026:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4277,"name":"uint256","nodeType":"ElementaryTypeName","src":"7026:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7025:22:9"},"returnParameters":{"id":4282,"nodeType":"ParameterList","parameters":[],"src":"7070:0:9"},"scope":4854,"src":"7000:970:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4487,"nodeType":"Block","src":"8295:924:9","statements":[{"expression":{"arguments":[{"id":4399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"8314:34:9","subExpression":{"baseExpression":{"baseExpression":{"id":4393,"name":"hasVoted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3871,"src":"8315:8:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$","typeString":"mapping(address => mapping(uint256 => bool))"}},"id":4396,"indexExpression":{"expression":{"id":4394,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8324:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8328:6:9","memberName":"sender","nodeType":"MemberAccess","src":"8324:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8315:20:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"}},"id":4398,"indexExpression":{"id":4397,"name":"candidateId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4381,"src":"8336:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8315:33:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416c726561647920766f74656420666f7220746869732063616e646964617465","id":4400,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8350:34:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_1c2faf6f8a7091f5760335d8b7745c010d7f87237dd13a800460664a8f79e57b","typeString":"literal_string \"Already voted for this candidate\""},"value":"Already voted for this candidate"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1c2faf6f8a7091f5760335d8b7745c010d7f87237dd13a800460664a8f79e57b","typeString":"literal_string \"Already voted for this candidate\""}],"id":4392,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"8306:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4401,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8306:79:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4402,"nodeType":"ExpressionStatement","src":"8306:79:9"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4404,"name":"power","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4383,"src":"8404:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4405,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8412:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8404:9:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"506f776572206d7573742062652067726561746572207468616e2030","id":4407,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8415:30:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_c7b1eec7fece10b29185c186f8325ba0ce985256ccff2f5884a0d837360c96f3","typeString":"literal_string \"Power must be greater than 0\""},"value":"Power must be greater than 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c7b1eec7fece10b29185c186f8325ba0ce985256ccff2f5884a0d837360c96f3","typeString":"literal_string \"Power must be greater than 0\""}],"id":4403,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"8396:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4408,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8396:50:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4409,"nodeType":"ExpressionStatement","src":"8396:50:9"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4411,"name":"power","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4383,"src":"8465:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"baseExpression":{"id":4412,"name":"voters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3849,"src":"8474:6:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Voter_$3818_storage_$","typeString":"mapping(address => struct LiquidDemocracy.Voter storage ref)"}},"id":4415,"indexExpression":{"expression":{"id":4413,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8481:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8485:6:9","memberName":"sender","nodeType":"MemberAccess","src":"8481:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8474:18:9","typeDescriptions":{"typeIdentifier":"t_struct$_Voter_$3818_storage","typeString":"struct LiquidDemocracy.Voter storage ref"}},"id":4416,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8493:10:9","memberName":"totalPower","nodeType":"MemberAccess","referencedDeclaration":3806,"src":"8474:29:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8465:38:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e7420766f74696e6720706f776572","id":4418,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8505:27:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_e7ba12c60469871407bc8b4b932fe2fde360d8973aed7437542f698916fa6d4c","typeString":"literal_string \"Insufficient voting power\""},"value":"Insufficient voting power"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e7ba12c60469871407bc8b4b932fe2fde360d8973aed7437542f698916fa6d4c","typeString":"literal_string \"Insufficient voting power\""}],"id":4410,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"8457:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4419,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8457:76:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4420,"nodeType":"ExpressionStatement","src":"8457:76:9"},{"assignments":[4423],"declarations":[{"constant":false,"id":4423,"mutability":"mutable","name":"newVote","nameLocation":"8590:7:9","nodeType":"VariableDeclaration","scope":4487,"src":"8578:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Vote_$3844_memory_ptr","typeString":"struct LiquidDemocracy.Vote"},"typeName":{"id":4422,"nodeType":"UserDefinedTypeName","pathNode":{"id":4421,"name":"Vote","nameLocations":["8578:4:9"],"nodeType":"IdentifierPath","referencedDeclaration":3844,"src":"8578:4:9"},"referencedDeclaration":3844,"src":"8578:4:9","typeDescriptions":{"typeIdentifier":"t_struct$_Vote_$3844_storage_ptr","typeString":"struct LiquidDemocracy.Vote"}},"visibility":"internal"}],"id":4450,"initialValue":{"arguments":[{"expression":{"id":4425,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8627:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8631:6:9","memberName":"sender","nodeType":"MemberAccess","src":"8627:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4427,"name":"candidateId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4381,"src":"8665:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4428,"name":"power","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4383,"src":"8702:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4429,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"8733:5:9","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8739:9:9","memberName":"timestamp","nodeType":"MemberAccess","src":"8733:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"expression":{"id":4433,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8807:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8811:6:9","memberName":"sender","nodeType":"MemberAccess","src":"8807:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":4437,"name":"candidateId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4381,"src":"8827:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4436,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8819:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4435,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8819:7:9","typeDescriptions":{}}},"id":4438,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8819:20:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":4439,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"8841:5:9","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8847:9:9","memberName":"timestamp","nodeType":"MemberAccess","src":"8841:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4431,"name":"CryptographicUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7219,"src":"8773:18:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_CryptographicUtils_$7219_$","typeString":"type(library CryptographicUtils)"}},"id":4432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8792:14:9","memberName":"createVoteHash","nodeType":"MemberAccess","referencedDeclaration":7218,"src":"8773:33:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (address,bytes32,uint256) pure returns (bytes32)"}},"id":4441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8773:84:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":4442,"name":"voters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3849,"src":"8885:6:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Voter_$3818_storage_$","typeString":"mapping(address => struct LiquidDemocracy.Voter storage ref)"}},"id":4445,"indexExpression":{"expression":{"id":4443,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8892:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8896:6:9","memberName":"sender","nodeType":"MemberAccess","src":"8892:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8885:18:9","typeDescriptions":{"typeIdentifier":"t_struct$_Voter_$3818_storage","typeString":"struct LiquidDemocracy.Voter storage ref"}},"id":4446,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8904:14:9","memberName":"delegatedPower","nodeType":"MemberAccess","referencedDeclaration":3804,"src":"8885:33:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8921:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8885:37:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":4424,"name":"Vote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3844,"src":"8600:4:9","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Vote_$3844_storage_ptr_$","typeString":"type(struct LiquidDemocracy.Vote storage pointer)"}},"id":4449,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["8620:5:9","8652:11:9","8691:9:9","8722:9:9","8763:8:9","8872:11:9"],"names":["voter","candidateId","powerUsed","timestamp","voteHash","isDelegated"],"nodeType":"FunctionCall","src":"8600:334:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Vote_$3844_memory_ptr","typeString":"struct LiquidDemocracy.Vote memory"}},"nodeType":"VariableDeclarationStatement","src":"8578:356:9"},{"expression":{"arguments":[{"id":4455,"name":"newVote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4423,"src":"8988:7:9","typeDescriptions":{"typeIdentifier":"t_struct$_Vote_$3844_memory_ptr","typeString":"struct LiquidDemocracy.Vote memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Vote_$3844_memory_ptr","typeString":"struct LiquidDemocracy.Vote memory"}],"expression":{"baseExpression":{"id":4451,"name":"candidateVotes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3865,"src":"8955:14:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_Vote_$3844_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct LiquidDemocracy.Vote storage ref[] storage ref)"}},"id":4453,"indexExpression":{"id":4452,"name":"candidateId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4381,"src":"8970:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8955:27:9","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Vote_$3844_storage_$dyn_storage","typeString":"struct LiquidDemocracy.Vote storage ref[] storage ref"}},"id":4454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8983:4:9","memberName":"push","nodeType":"MemberAccess","src":"8955:32:9","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Vote_$3844_storage_$dyn_storage_ptr_$_t_struct$_Vote_$3844_storage_$returns$__$attached_to$_t_array$_t_struct$_Vote_$3844_storage_$dyn_storage_ptr_$","typeString":"function (struct LiquidDemocracy.Vote storage ref[] storage pointer,struct LiquidDemocracy.Vote storage ref)"}},"id":4456,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8955:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4457,"nodeType":"ExpressionStatement","src":"8955:41:9"},{"expression":{"id":4465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":4458,"name":"hasVoted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3871,"src":"9007:8:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$","typeString":"mapping(address => mapping(uint256 => bool))"}},"id":4462,"indexExpression":{"expression":{"id":4459,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9016:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9020:6:9","memberName":"sender","nodeType":"MemberAccess","src":"9016:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9007:20:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"}},"id":4463,"indexExpression":{"id":4461,"name":"candidateId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4381,"src":"9028:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9007:33:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":4464,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9043:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"9007:40:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4466,"nodeType":"ExpressionStatement","src":"9007:40:9"},{"expression":{"id":4474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":4467,"name":"voters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3849,"src":"9058:6:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Voter_$3818_storage_$","typeString":"mapping(address => struct LiquidDemocracy.Voter storage ref)"}},"id":4470,"indexExpression":{"expression":{"id":4468,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9065:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9069:6:9","memberName":"sender","nodeType":"MemberAccess","src":"9065:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9058:18:9","typeDescriptions":{"typeIdentifier":"t_struct$_Voter_$3818_storage","typeString":"struct LiquidDemocracy.Voter storage ref"}},"id":4471,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"9077:12:9","memberName":"lastVoteTime","nodeType":"MemberAccess","referencedDeclaration":3815,"src":"9058:31:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":4472,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"9092:5:9","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9098:9:9","memberName":"timestamp","nodeType":"MemberAccess","src":"9092:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9058:49:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4475,"nodeType":"ExpressionStatement","src":"9058:49:9"},{"eventCall":{"arguments":[{"expression":{"id":4477,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9142:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9146:6:9","memberName":"sender","nodeType":"MemberAccess","src":"9142:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4479,"name":"candidateId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4381,"src":"9154:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4480,"name":"power","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4383,"src":"9167:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4481,"name":"newVote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4423,"src":"9174:7:9","typeDescriptions":{"typeIdentifier":"t_struct$_Vote_$3844_memory_ptr","typeString":"struct LiquidDemocracy.Vote memory"}},"id":4482,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9182:11:9","memberName":"isDelegated","nodeType":"MemberAccess","referencedDeclaration":3843,"src":"9174:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":4483,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"9195:5:9","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9201:9:9","memberName":"timestamp","nodeType":"MemberAccess","src":"9195:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4476,"name":"VoteCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3932,"src":"9133:8:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bool_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256,bool,uint256)"}},"id":4485,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9133:78:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4486,"nodeType":"EmitStatement","src":"9128:83:9"}]},"documentation":{"id":4379,"nodeType":"StructuredDocumentation","src":"7978:168:9","text":" @dev Casts a vote using available voting power\n @param candidateId The candidate to vote for\n @param power The amount of power to use"},"functionSelector":"b384abef","id":4488,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"expression":{"id":4386,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8251:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8255:6:9","memberName":"sender","nodeType":"MemberAccess","src":"8251:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":4388,"kind":"modifierInvocation","modifierName":{"id":4385,"name":"onlyRegisteredVoter","nameLocations":["8231:19:9"],"nodeType":"IdentifierPath","referencedDeclaration":3962,"src":"8231:19:9"},"nodeType":"ModifierInvocation","src":"8231:31:9"},{"id":4390,"kind":"modifierInvocation","modifierName":{"id":4389,"name":"onlyDuringVoting","nameLocations":["8272:16:9"],"nodeType":"IdentifierPath","referencedDeclaration":3984,"src":"8272:16:9"},"nodeType":"ModifierInvocation","src":"8272:16:9"}],"name":"vote","nameLocation":"8161:4:9","nodeType":"FunctionDefinition","parameters":{"id":4384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4381,"mutability":"mutable","name":"candidateId","nameLocation":"8174:11:9","nodeType":"VariableDeclaration","scope":4488,"src":"8166:19:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4380,"name":"uint256","nodeType":"ElementaryTypeName","src":"8166:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4383,"mutability":"mutable","name":"power","nameLocation":"8195:5:9","nodeType":"VariableDeclaration","scope":4488,"src":"8187:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4382,"name":"uint256","nodeType":"ElementaryTypeName","src":"8187:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8165:36:9"},"returnParameters":{"id":4391,"nodeType":"ParameterList","parameters":[],"src":"8295:0:9"},"scope":4854,"src":"8152:1067:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4523,"nodeType":"Block","src":"9450:268:9","statements":[{"expression":{"arguments":[{"id":4498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"9469:13:9","subExpression":{"id":4497,"name":"votingActive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3882,"src":"9470:12:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"566f74696e6720616c726561647920616374697665","id":4499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9484:23:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc030520df3aefef2c03c6e97ccc60431aa6bc0780bf1796a5706e22e40f5f0f","typeString":"literal_string \"Voting already active\""},"value":"Voting already active"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc030520df3aefef2c03c6e97ccc60431aa6bc0780bf1796a5706e22e40f5f0f","typeString":"literal_string \"Voting already active\""}],"id":4496,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"9461:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4500,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9461:47:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4501,"nodeType":"ExpressionStatement","src":"9461:47:9"},{"expression":{"id":4504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4502,"name":"votingActive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3882,"src":"9519:12:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":4503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9534:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"9519:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4505,"nodeType":"ExpressionStatement","src":"9519:19:9"},{"expression":{"id":4509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4506,"name":"votingStartTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3884,"src":"9549:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":4507,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"9567:5:9","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9573:9:9","memberName":"timestamp","nodeType":"MemberAccess","src":"9567:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9549:33:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4510,"nodeType":"ExpressionStatement","src":"9549:33:9"},{"expression":{"id":4516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4511,"name":"votingEndTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3886,"src":"9593:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4512,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"9609:5:9","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9615:9:9","memberName":"timestamp","nodeType":"MemberAccess","src":"9609:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":4514,"name":"durationSeconds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4491,"src":"9627:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9609:33:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9593:49:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4517,"nodeType":"ExpressionStatement","src":"9593:49:9"},{"eventCall":{"arguments":[{"id":4519,"name":"votingStartTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3884,"src":"9679:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4520,"name":"votingEndTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3886,"src":"9696:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4518,"name":"VotingSessionStarted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3938,"src":"9658:20:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256)"}},"id":4521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9658:52:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4522,"nodeType":"EmitStatement","src":"9653:57:9"}]},"documentation":{"id":4489,"nodeType":"StructuredDocumentation","src":"9261:111:9","text":" @dev Starts a voting session\n @param durationSeconds Duration of the voting session"},"functionSelector":"9980a55a","id":4524,"implemented":true,"kind":"function","modifiers":[{"id":4494,"kind":"modifierInvocation","modifierName":{"id":4493,"name":"onlyOwner","nameLocations":["9440:9:9"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"9440:9:9"},"nodeType":"ModifierInvocation","src":"9440:9:9"}],"name":"startVotingSession","nameLocation":"9387:18:9","nodeType":"FunctionDefinition","parameters":{"id":4492,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4491,"mutability":"mutable","name":"durationSeconds","nameLocation":"9414:15:9","nodeType":"VariableDeclaration","scope":4524,"src":"9406:23:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4490,"name":"uint256","nodeType":"ElementaryTypeName","src":"9406:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9405:25:9"},"returnParameters":{"id":4495,"nodeType":"ParameterList","parameters":[],"src":"9450:0:9"},"scope":4854,"src":"9378:340:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4548,"nodeType":"Block","src":"9836:183:9","statements":[{"expression":{"arguments":[{"id":4531,"name":"votingActive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3882,"src":"9855:12:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"566f74696e67206e6f7420616374697665","id":4532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9869:19:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_4753b041641313f1ca2fbfa3890c4d0c79c5ac55aa0cd2bcb91e0eb948ae8f7c","typeString":"literal_string \"Voting not active\""},"value":"Voting not active"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4753b041641313f1ca2fbfa3890c4d0c79c5ac55aa0cd2bcb91e0eb948ae8f7c","typeString":"literal_string \"Voting not active\""}],"id":4530,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"9847:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4533,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9847:42:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4534,"nodeType":"ExpressionStatement","src":"9847:42:9"},{"expression":{"id":4537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4535,"name":"votingActive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3882,"src":"9900:12:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":4536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9915:5:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"9900:20:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4538,"nodeType":"ExpressionStatement","src":"9900:20:9"},{"expression":{"id":4542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4539,"name":"votingEndTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3886,"src":"9931:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":4540,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"9947:5:9","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9953:9:9","memberName":"timestamp","nodeType":"MemberAccess","src":"9947:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9931:31:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4543,"nodeType":"ExpressionStatement","src":"9931:31:9"},{"eventCall":{"arguments":[{"id":4545,"name":"votingEndTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3886,"src":"9997:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4544,"name":"VotingSessionEnded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3942,"src":"9978:18:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":4546,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9978:33:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4547,"nodeType":"EmitStatement","src":"9973:38:9"}]},"documentation":{"id":4525,"nodeType":"StructuredDocumentation","src":"9726:57:9","text":" @dev Ends the current voting session"},"functionSelector":"a7bfab16","id":4549,"implemented":true,"kind":"function","modifiers":[{"id":4528,"kind":"modifierInvocation","modifierName":{"id":4527,"name":"onlyOwner","nameLocations":["9826:9:9"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"9826:9:9"},"nodeType":"ModifierInvocation","src":"9826:9:9"}],"name":"endVotingSession","nameLocation":"9798:16:9","nodeType":"FunctionDefinition","parameters":{"id":4526,"nodeType":"ParameterList","parameters":[],"src":"9814:2:9"},"returnParameters":{"id":4529,"nodeType":"ParameterList","parameters":[],"src":"9836:0:9"},"scope":4854,"src":"9789:230:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4567,"nodeType":"Block","src":"10354:110:9","statements":[{"expression":{"id":4561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4559,"name":"maxDelegationDepth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3888,"src":"10365:18:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4560,"name":"_maxDelegationDepth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4552,"src":"10386:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10365:40:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4562,"nodeType":"ExpressionStatement","src":"10365:40:9"},{"expression":{"id":4565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4563,"name":"minDelegationPower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3890,"src":"10416:18:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4564,"name":"_minDelegationPower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4554,"src":"10437:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10416:40:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4566,"nodeType":"ExpressionStatement","src":"10416:40:9"}]},"documentation":{"id":4550,"nodeType":"StructuredDocumentation","src":"10027:183:9","text":" @dev Updates delegation parameters\n @param _maxDelegationDepth New maximum delegation depth\n @param _minDelegationPower New minimum delegation power"},"functionSelector":"a288210c","id":4568,"implemented":true,"kind":"function","modifiers":[{"id":4557,"kind":"modifierInvocation","modifierName":{"id":4556,"name":"onlyOwner","nameLocations":["10344:9:9"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"10344:9:9"},"nodeType":"ModifierInvocation","src":"10344:9:9"}],"name":"updateDelegationParameters","nameLocation":"10225:26:9","nodeType":"FunctionDefinition","parameters":{"id":4555,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4552,"mutability":"mutable","name":"_maxDelegationDepth","nameLocation":"10270:19:9","nodeType":"VariableDeclaration","scope":4568,"src":"10262:27:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4551,"name":"uint256","nodeType":"ElementaryTypeName","src":"10262:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4554,"mutability":"mutable","name":"_minDelegationPower","nameLocation":"10308:19:9","nodeType":"VariableDeclaration","scope":4568,"src":"10300:27:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4553,"name":"uint256","nodeType":"ElementaryTypeName","src":"10300:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10251:83:9"},"returnParameters":{"id":4558,"nodeType":"ParameterList","parameters":[],"src":"10354:0:9"},"scope":4854,"src":"10216:248:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4581,"nodeType":"Block","src":"10704:39:9","statements":[{"expression":{"baseExpression":{"id":4577,"name":"voters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3849,"src":"10722:6:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Voter_$3818_storage_$","typeString":"mapping(address => struct LiquidDemocracy.Voter storage ref)"}},"id":4579,"indexExpression":{"id":4578,"name":"voter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4571,"src":"10729:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10722:13:9","typeDescriptions":{"typeIdentifier":"t_struct$_Voter_$3818_storage","typeString":"struct LiquidDemocracy.Voter storage ref"}},"functionReturnParameters":4576,"id":4580,"nodeType":"Return","src":"10715:20:9"}]},"documentation":{"id":4569,"nodeType":"StructuredDocumentation","src":"10505:123:9","text":" @dev Gets voter information\n @param voter The voter address\n @return The voter structure"},"functionSelector":"d4f50f98","id":4582,"implemented":true,"kind":"function","modifiers":[],"name":"getVoter","nameLocation":"10643:8:9","nodeType":"FunctionDefinition","parameters":{"id":4572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4571,"mutability":"mutable","name":"voter","nameLocation":"10660:5:9","nodeType":"VariableDeclaration","scope":4582,"src":"10652:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4570,"name":"address","nodeType":"ElementaryTypeName","src":"10652:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10651:15:9"},"returnParameters":{"id":4576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4575,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4582,"src":"10690:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Voter_$3818_memory_ptr","typeString":"struct LiquidDemocracy.Voter"},"typeName":{"id":4574,"nodeType":"UserDefinedTypeName","pathNode":{"id":4573,"name":"Voter","nameLocations":["10690:5:9"],"nodeType":"IdentifierPath","referencedDeclaration":3818,"src":"10690:5:9"},"referencedDeclaration":3818,"src":"10690:5:9","typeDescriptions":{"typeIdentifier":"t_struct$_Voter_$3818_storage_ptr","typeString":"struct LiquidDemocracy.Voter"}},"visibility":"internal"}],"src":"10689:14:9"},"scope":4854,"src":"10634:109:9","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":4595,"nodeType":"Block","src":"10984:51:9","statements":[{"expression":{"baseExpression":{"id":4591,"name":"delegations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3854,"src":"11002:11:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Delegation_$3831_storage_$","typeString":"mapping(uint256 => struct LiquidDemocracy.Delegation storage ref)"}},"id":4593,"indexExpression":{"id":4592,"name":"delegationId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4585,"src":"11014:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11002:25:9","typeDescriptions":{"typeIdentifier":"t_struct$_Delegation_$3831_storage","typeString":"struct LiquidDemocracy.Delegation storage ref"}},"functionReturnParameters":4590,"id":4594,"nodeType":"Return","src":"10995:32:9"}]},"documentation":{"id":4583,"nodeType":"StructuredDocumentation","src":"10751:140:9","text":" @dev Gets delegation information\n @param delegationId The delegation ID\n @return The delegation structure"},"functionSelector":"0dd35701","id":4596,"implemented":true,"kind":"function","modifiers":[],"name":"getDelegation","nameLocation":"10906:13:9","nodeType":"FunctionDefinition","parameters":{"id":4586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4585,"mutability":"mutable","name":"delegationId","nameLocation":"10928:12:9","nodeType":"VariableDeclaration","scope":4596,"src":"10920:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4584,"name":"uint256","nodeType":"ElementaryTypeName","src":"10920:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10919:22:9"},"returnParameters":{"id":4590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4589,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4596,"src":"10965:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Delegation_$3831_memory_ptr","typeString":"struct LiquidDemocracy.Delegation"},"typeName":{"id":4588,"nodeType":"UserDefinedTypeName","pathNode":{"id":4587,"name":"Delegation","nameLocations":["10965:10:9"],"nodeType":"IdentifierPath","referencedDeclaration":3831,"src":"10965:10:9"},"referencedDeclaration":3831,"src":"10965:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_Delegation_$3831_storage_ptr","typeString":"struct LiquidDemocracy.Delegation"}},"visibility":"internal"}],"src":"10964:19:9"},"scope":4854,"src":"10897:138:9","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":4610,"nodeType":"Block","src":"11266:53:9","statements":[{"expression":{"baseExpression":{"id":4606,"name":"candidateVotes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3865,"src":"11284:14:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_Vote_$3844_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct LiquidDemocracy.Vote storage ref[] storage ref)"}},"id":4608,"indexExpression":{"id":4607,"name":"candidateId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4599,"src":"11299:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11284:27:9","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Vote_$3844_storage_$dyn_storage","typeString":"struct LiquidDemocracy.Vote storage ref[] storage ref"}},"functionReturnParameters":4605,"id":4609,"nodeType":"Return","src":"11277:34:9"}]},"documentation":{"id":4597,"nodeType":"StructuredDocumentation","src":"11043:131:9","text":" @dev Gets all votes for a candidate\n @param candidateId The candidate ID\n @return Array of votes"},"functionSelector":"866163c0","id":4611,"implemented":true,"kind":"function","modifiers":[],"name":"getCandidateVotes","nameLocation":"11189:17:9","nodeType":"FunctionDefinition","parameters":{"id":4600,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4599,"mutability":"mutable","name":"candidateId","nameLocation":"11215:11:9","nodeType":"VariableDeclaration","scope":4611,"src":"11207:19:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4598,"name":"uint256","nodeType":"ElementaryTypeName","src":"11207:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11206:21:9"},"returnParameters":{"id":4605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4604,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4611,"src":"11251:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Vote_$3844_memory_ptr_$dyn_memory_ptr","typeString":"struct LiquidDemocracy.Vote[]"},"typeName":{"baseType":{"id":4602,"nodeType":"UserDefinedTypeName","pathNode":{"id":4601,"name":"Vote","nameLocations":["11251:4:9"],"nodeType":"IdentifierPath","referencedDeclaration":3844,"src":"11251:4:9"},"referencedDeclaration":3844,"src":"11251:4:9","typeDescriptions":{"typeIdentifier":"t_struct$_Vote_$3844_storage_ptr","typeString":"struct LiquidDemocracy.Vote"}},"id":4603,"nodeType":"ArrayTypeName","src":"11251:6:9","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Vote_$3844_storage_$dyn_storage_ptr","typeString":"struct LiquidDemocracy.Vote[]"}},"visibility":"internal"}],"src":"11250:15:9"},"scope":4854,"src":"11180:139:9","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":4649,"nodeType":"Block","src":"11560:210:9","statements":[{"assignments":[4620],"declarations":[{"constant":false,"id":4620,"mutability":"mutable","name":"total","nameLocation":"11579:5:9","nodeType":"VariableDeclaration","scope":4649,"src":"11571:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4619,"name":"uint256","nodeType":"ElementaryTypeName","src":"11571:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4622,"initialValue":{"hexValue":"30","id":4621,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11587:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11571:17:9"},{"body":{"id":4645,"nodeType":"Block","src":"11664:76:9","statements":[{"expression":{"id":4643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4636,"name":"total","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4620,"src":"11679:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"baseExpression":{"baseExpression":{"id":4637,"name":"candidateVotes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3865,"src":"11688:14:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_Vote_$3844_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct LiquidDemocracy.Vote storage ref[] storage ref)"}},"id":4639,"indexExpression":{"id":4638,"name":"candidateId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4614,"src":"11703:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11688:27:9","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Vote_$3844_storage_$dyn_storage","typeString":"struct LiquidDemocracy.Vote storage ref[] storage ref"}},"id":4641,"indexExpression":{"id":4640,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4624,"src":"11716:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11688:30:9","typeDescriptions":{"typeIdentifier":"t_struct$_Vote_$3844_storage","typeString":"struct LiquidDemocracy.Vote storage ref"}},"id":4642,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11719:9:9","memberName":"powerUsed","nodeType":"MemberAccess","referencedDeclaration":3837,"src":"11688:40:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11679:49:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4644,"nodeType":"ExpressionStatement","src":"11679:49:9"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4627,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4624,"src":"11619:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"baseExpression":{"id":4628,"name":"candidateVotes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3865,"src":"11623:14:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_Vote_$3844_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct LiquidDemocracy.Vote storage ref[] storage ref)"}},"id":4630,"indexExpression":{"id":4629,"name":"candidateId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4614,"src":"11638:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11623:27:9","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Vote_$3844_storage_$dyn_storage","typeString":"struct LiquidDemocracy.Vote storage ref[] storage ref"}},"id":4631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11651:6:9","memberName":"length","nodeType":"MemberAccess","src":"11623:34:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11619:38:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4646,"initializationExpression":{"assignments":[4624],"declarations":[{"constant":false,"id":4624,"mutability":"mutable","name":"i","nameLocation":"11612:1:9","nodeType":"VariableDeclaration","scope":4646,"src":"11604:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4623,"name":"uint256","nodeType":"ElementaryTypeName","src":"11604:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4626,"initialValue":{"hexValue":"30","id":4625,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11616:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11604:13:9"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"11659:3:9","subExpression":{"id":4633,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4624,"src":"11659:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4635,"nodeType":"ExpressionStatement","src":"11659:3:9"},"nodeType":"ForStatement","src":"11599:141:9"},{"expression":{"id":4647,"name":"total","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4620,"src":"11757:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4618,"id":4648,"nodeType":"Return","src":"11750:12:9"}]},"documentation":{"id":4612,"nodeType":"StructuredDocumentation","src":"11327:142:9","text":" @dev Gets total votes for a candidate\n @param candidateId The candidate ID\n @return Total voting power used"},"functionSelector":"abdd80a3","id":4650,"implemented":true,"kind":"function","modifiers":[],"name":"getCandidateTotalVotes","nameLocation":"11484:22:9","nodeType":"FunctionDefinition","parameters":{"id":4615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4614,"mutability":"mutable","name":"candidateId","nameLocation":"11515:11:9","nodeType":"VariableDeclaration","scope":4650,"src":"11507:19:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4613,"name":"uint256","nodeType":"ElementaryTypeName","src":"11507:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11506:21:9"},"returnParameters":{"id":4618,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4617,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4650,"src":"11551:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4616,"name":"uint256","nodeType":"ElementaryTypeName","src":"11551:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11550:9:9"},"scope":4854,"src":"11475:295:9","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":4659,"nodeType":"Block","src":"11949:42:9","statements":[{"expression":{"id":4657,"name":"registeredVoters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3874,"src":"11967:16:9","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"functionReturnParameters":4656,"id":4658,"nodeType":"Return","src":"11960:23:9"}]},"documentation":{"id":4651,"nodeType":"StructuredDocumentation","src":"11778:93:9","text":" @dev Gets all registered voters\n @return Array of voter addresses"},"functionSelector":"2bc4a6e7","id":4660,"implemented":true,"kind":"function","modifiers":[],"name":"getRegisteredVoters","nameLocation":"11886:19:9","nodeType":"FunctionDefinition","parameters":{"id":4652,"nodeType":"ParameterList","parameters":[],"src":"11905:2:9"},"returnParameters":{"id":4656,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4655,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4660,"src":"11931:16:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4653,"name":"address","nodeType":"ElementaryTypeName","src":"11931:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4654,"nodeType":"ArrayTypeName","src":"11931:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"11930:18:9"},"scope":4854,"src":"11877:114:9","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":4673,"nodeType":"Block","src":"12223:49:9","statements":[{"expression":{"baseExpression":{"id":4669,"name":"voterDelegations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3859,"src":"12241:16:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[] storage ref)"}},"id":4671,"indexExpression":{"id":4670,"name":"voter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4663,"src":"12258:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12241:23:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"functionReturnParameters":4668,"id":4672,"nodeType":"Return","src":"12234:30:9"}]},"documentation":{"id":4661,"nodeType":"StructuredDocumentation","src":"11999:133:9","text":" @dev Gets delegations for a voter\n @param voter The voter address\n @return Array of delegation IDs"},"functionSelector":"4f1b4972","id":4674,"implemented":true,"kind":"function","modifiers":[],"name":"getVoterDelegations","nameLocation":"12147:19:9","nodeType":"FunctionDefinition","parameters":{"id":4664,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4663,"mutability":"mutable","name":"voter","nameLocation":"12175:5:9","nodeType":"VariableDeclaration","scope":4674,"src":"12167:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4662,"name":"address","nodeType":"ElementaryTypeName","src":"12167:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"12166:15:9"},"returnParameters":{"id":4668,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4667,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4674,"src":"12205:16:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4665,"name":"uint256","nodeType":"ElementaryTypeName","src":"12205:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4666,"nodeType":"ArrayTypeName","src":"12205:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"12204:18:9"},"scope":4854,"src":"12138:134:9","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":4690,"nodeType":"Block","src":"12570:54:9","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":4684,"name":"hasVoted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3871,"src":"12588:8:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$","typeString":"mapping(address => mapping(uint256 => bool))"}},"id":4686,"indexExpression":{"id":4685,"name":"voter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4677,"src":"12597:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12588:15:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"}},"id":4688,"indexExpression":{"id":4687,"name":"candidateId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4679,"src":"12604:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12588:28:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4683,"id":4689,"nodeType":"Return","src":"12581:35:9"}]},"documentation":{"id":4675,"nodeType":"StructuredDocumentation","src":"12280:196:9","text":" @dev Checks if a voter has voted for a candidate\n @param voter The voter address\n @param candidateId The candidate ID\n @return Whether the voter has voted"},"functionSelector":"9b541f76","id":4691,"implemented":true,"kind":"function","modifiers":[],"name":"hasVoterVoted","nameLocation":"12491:13:9","nodeType":"FunctionDefinition","parameters":{"id":4680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4677,"mutability":"mutable","name":"voter","nameLocation":"12513:5:9","nodeType":"VariableDeclaration","scope":4691,"src":"12505:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4676,"name":"address","nodeType":"ElementaryTypeName","src":"12505:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4679,"mutability":"mutable","name":"candidateId","nameLocation":"12528:11:9","nodeType":"VariableDeclaration","scope":4691,"src":"12520:19:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4678,"name":"uint256","nodeType":"ElementaryTypeName","src":"12520:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12504:36:9"},"returnParameters":{"id":4683,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4682,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4691,"src":"12564:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4681,"name":"bool","nodeType":"ElementaryTypeName","src":"12564:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"12563:6:9"},"scope":4854,"src":"12482:142:9","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":4699,"nodeType":"Block","src":"12799:42:9","statements":[{"expression":{"id":4697,"name":"totalVotingPower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3878,"src":"12817:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4696,"id":4698,"nodeType":"Return","src":"12810:23:9"}]},"documentation":{"id":4692,"nodeType":"StructuredDocumentation","src":"12632:98:9","text":" @dev Gets total voting power in the system\n @return Total voting power"},"functionSelector":"11acc1a7","id":4700,"implemented":true,"kind":"function","modifiers":[],"name":"getTotalVotingPower","nameLocation":"12745:19:9","nodeType":"FunctionDefinition","parameters":{"id":4693,"nodeType":"ParameterList","parameters":[],"src":"12764:2:9"},"returnParameters":{"id":4696,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4695,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4700,"src":"12790:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4694,"name":"uint256","nodeType":"ElementaryTypeName","src":"12790:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12789:9:9"},"scope":4854,"src":"12736:105:9","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":4708,"nodeType":"Block","src":"13019:43:9","statements":[{"expression":{"id":4706,"name":"activeDelegations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3880,"src":"13037:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4705,"id":4707,"nodeType":"Return","src":"13030:24:9"}]},"documentation":{"id":4701,"nodeType":"StructuredDocumentation","src":"12849:100:9","text":" @dev Gets active delegations count\n @return Number of active delegations"},"functionSelector":"65d082be","id":4709,"implemented":true,"kind":"function","modifiers":[],"name":"getActiveDelegations","nameLocation":"12964:20:9","nodeType":"FunctionDefinition","parameters":{"id":4702,"nodeType":"ParameterList","parameters":[],"src":"12984:2:9"},"returnParameters":{"id":4705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4704,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4709,"src":"13010:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4703,"name":"uint256","nodeType":"ElementaryTypeName","src":"13010:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13009:9:9"},"scope":4854,"src":"12955:107:9","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":4738,"nodeType":"Block","src":"13259:173:9","statements":[{"expression":{"id":4728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":4715,"name":"voters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3849,"src":"13270:6:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Voter_$3818_storage_$","typeString":"mapping(address => struct LiquidDemocracy.Voter storage ref)"}},"id":4717,"indexExpression":{"id":4716,"name":"voter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4712,"src":"13277:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13270:13:9","typeDescriptions":{"typeIdentifier":"t_struct$_Voter_$3818_storage","typeString":"struct LiquidDemocracy.Voter storage ref"}},"id":4718,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"13284:10:9","memberName":"totalPower","nodeType":"MemberAccess","referencedDeclaration":3806,"src":"13270:24:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":4719,"name":"voters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3849,"src":"13297:6:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Voter_$3818_storage_$","typeString":"mapping(address => struct LiquidDemocracy.Voter storage ref)"}},"id":4721,"indexExpression":{"id":4720,"name":"voter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4712,"src":"13304:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13297:13:9","typeDescriptions":{"typeIdentifier":"t_struct$_Voter_$3818_storage","typeString":"struct LiquidDemocracy.Voter storage ref"}},"id":4722,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13311:11:9","memberName":"votingPower","nodeType":"MemberAccess","referencedDeclaration":3802,"src":"13297:25:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"baseExpression":{"id":4723,"name":"voters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3849,"src":"13325:6:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Voter_$3818_storage_$","typeString":"mapping(address => struct LiquidDemocracy.Voter storage ref)"}},"id":4725,"indexExpression":{"id":4724,"name":"voter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4712,"src":"13332:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13325:13:9","typeDescriptions":{"typeIdentifier":"t_struct$_Voter_$3818_storage","typeString":"struct LiquidDemocracy.Voter storage ref"}},"id":4726,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13339:14:9","memberName":"delegatedPower","nodeType":"MemberAccess","referencedDeclaration":3804,"src":"13325:28:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13297:56:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13270:83:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4729,"nodeType":"ExpressionStatement","src":"13270:83:9"},{"eventCall":{"arguments":[{"id":4731,"name":"voter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4712,"src":"13392:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"baseExpression":{"id":4732,"name":"voters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3849,"src":"13399:6:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Voter_$3818_storage_$","typeString":"mapping(address => struct LiquidDemocracy.Voter storage ref)"}},"id":4734,"indexExpression":{"id":4733,"name":"voter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4712,"src":"13406:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13399:13:9","typeDescriptions":{"typeIdentifier":"t_struct$_Voter_$3818_storage","typeString":"struct LiquidDemocracy.Voter storage ref"}},"id":4735,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13413:10:9","memberName":"totalPower","nodeType":"MemberAccess","referencedDeclaration":3806,"src":"13399:24:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4730,"name":"DelegationChainUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3948,"src":"13369:22:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":4736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13369:55:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4737,"nodeType":"EmitStatement","src":"13364:60:9"}]},"documentation":{"id":4710,"nodeType":"StructuredDocumentation","src":"13107:96:9","text":" @dev Updates total power for a voter\n @param voter The voter address"},"id":4739,"implemented":true,"kind":"function","modifiers":[],"name":"updateTotalPower","nameLocation":"13218:16:9","nodeType":"FunctionDefinition","parameters":{"id":4713,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4712,"mutability":"mutable","name":"voter","nameLocation":"13243:5:9","nodeType":"VariableDeclaration","scope":4739,"src":"13235:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4711,"name":"address","nodeType":"ElementaryTypeName","src":"13235:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"13234:15:9"},"returnParameters":{"id":4714,"nodeType":"ParameterList","parameters":[],"src":"13259:0:9"},"scope":4854,"src":"13209:223:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4796,"nodeType":"Block","src":"13715:375:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4749,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4742,"src":"13730:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4750,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4744,"src":"13738:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13730:10:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4754,"nodeType":"IfStatement","src":"13726:27:9","trueBody":{"expression":{"hexValue":"74727565","id":4752,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13749:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":4748,"id":4753,"nodeType":"Return","src":"13742:11:9"}},{"assignments":[4756],"declarations":[{"constant":false,"id":4756,"mutability":"mutable","name":"current","nameLocation":"13782:7:9","nodeType":"VariableDeclaration","scope":4796,"src":"13774:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4755,"name":"address","nodeType":"ElementaryTypeName","src":"13774:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4758,"initialValue":{"id":4757,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4744,"src":"13792:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"13774:20:9"},{"assignments":[4760],"declarations":[{"constant":false,"id":4760,"mutability":"mutable","name":"depth","nameLocation":"13813:5:9","nodeType":"VariableDeclaration","scope":4796,"src":"13805:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4759,"name":"uint256","nodeType":"ElementaryTypeName","src":"13805:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4762,"initialValue":{"hexValue":"30","id":4761,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13821:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13805:17:9"},{"body":{"id":4792,"nodeType":"Block","src":"13920:130:9","statements":[{"expression":{"id":4781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4776,"name":"current","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4756,"src":"13935:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":4777,"name":"voters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3849,"src":"13945:6:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Voter_$3818_storage_$","typeString":"mapping(address => struct LiquidDemocracy.Voter storage ref)"}},"id":4779,"indexExpression":{"id":4778,"name":"current","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4756,"src":"13952:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13945:15:9","typeDescriptions":{"typeIdentifier":"t_struct$_Voter_$3818_storage","typeString":"struct LiquidDemocracy.Voter storage ref"}},"id":4780,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13961:8:9","memberName":"delegate","nodeType":"MemberAccess","referencedDeclaration":3808,"src":"13945:24:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13935:34:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4782,"nodeType":"ExpressionStatement","src":"13935:34:9"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4783,"name":"current","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4756,"src":"13988:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4784,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4742,"src":"13999:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13988:15:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4788,"nodeType":"IfStatement","src":"13984:32:9","trueBody":{"expression":{"hexValue":"74727565","id":4786,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14012:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":4748,"id":4787,"nodeType":"Return","src":"14005:11:9"}},{"expression":{"id":4790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"14031:7:9","subExpression":{"id":4789,"name":"depth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4760,"src":"14031:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4791,"nodeType":"ExpressionStatement","src":"14031:7:9"}]},"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":4763,"name":"voters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3849,"src":"13850:6:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Voter_$3818_storage_$","typeString":"mapping(address => struct LiquidDemocracy.Voter storage ref)"}},"id":4765,"indexExpression":{"id":4764,"name":"current","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4756,"src":"13857:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13850:15:9","typeDescriptions":{"typeIdentifier":"t_struct$_Voter_$3818_storage","typeString":"struct LiquidDemocracy.Voter storage ref"}},"id":4766,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13866:8:9","memberName":"delegate","nodeType":"MemberAccess","referencedDeclaration":3808,"src":"13850:24:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":4769,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13886:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4768,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13878:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4767,"name":"address","nodeType":"ElementaryTypeName","src":"13878:7:9","typeDescriptions":{}}},"id":4770,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13878:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13850:38:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4772,"name":"depth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4760,"src":"13892:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4773,"name":"maxDelegationDepth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3888,"src":"13900:18:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13892:26:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13850:68:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4793,"nodeType":"WhileStatement","src":"13843:207:9"},{"expression":{"hexValue":"66616c7365","id":4794,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14077:5:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":4748,"id":4795,"nodeType":"Return","src":"14070:12:9"}]},"documentation":{"id":4740,"nodeType":"StructuredDocumentation","src":"13440:186:9","text":" @dev Checks for circular delegation chains\n @param from Starting address\n @param to Target address\n @return Whether a circular delegation exists"},"id":4797,"implemented":true,"kind":"function","modifiers":[],"name":"hasDelegationChain","nameLocation":"13641:18:9","nodeType":"FunctionDefinition","parameters":{"id":4745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4742,"mutability":"mutable","name":"from","nameLocation":"13668:4:9","nodeType":"VariableDeclaration","scope":4797,"src":"13660:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4741,"name":"address","nodeType":"ElementaryTypeName","src":"13660:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4744,"mutability":"mutable","name":"to","nameLocation":"13682:2:9","nodeType":"VariableDeclaration","scope":4797,"src":"13674:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4743,"name":"address","nodeType":"ElementaryTypeName","src":"13674:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"13659:26:9"},"returnParameters":{"id":4748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4747,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4797,"src":"13709:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4746,"name":"bool","nodeType":"ElementaryTypeName","src":"13709:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"13708:6:9"},"scope":4854,"src":"13632:458:9","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4852,"nodeType":"Block","src":"14330:324:9","statements":[{"assignments":[4809],"declarations":[{"constant":false,"id":4809,"mutability":"mutable","name":"delegates","nameLocation":"14359:9:9","nodeType":"VariableDeclaration","scope":4852,"src":"14341:27:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4807,"name":"address","nodeType":"ElementaryTypeName","src":"14341:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4808,"nodeType":"ArrayTypeName","src":"14341:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":4814,"initialValue":{"expression":{"baseExpression":{"id":4810,"name":"voters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3849,"src":"14371:6:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Voter_$3818_storage_$","typeString":"mapping(address => struct LiquidDemocracy.Voter storage ref)"}},"id":4812,"indexExpression":{"id":4811,"name":"voter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4800,"src":"14378:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14371:13:9","typeDescriptions":{"typeIdentifier":"t_struct$_Voter_$3818_storage","typeString":"struct LiquidDemocracy.Voter storage ref"}},"id":4813,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14385:9:9","memberName":"delegates","nodeType":"MemberAccess","referencedDeclaration":3811,"src":"14371:23:9","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"nodeType":"VariableDeclarationStatement","src":"14341:53:9"},{"body":{"id":4850,"nodeType":"Block","src":"14452:195:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":4826,"name":"delegates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4809,"src":"14471:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[] storage pointer"}},"id":4828,"indexExpression":{"id":4827,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4816,"src":"14481:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14471:12:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4829,"name":"delegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4802,"src":"14487:8:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14471:24:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4849,"nodeType":"IfStatement","src":"14467:169:9","trueBody":{"id":4848,"nodeType":"Block","src":"14497:139:9","statements":[{"expression":{"id":4840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4831,"name":"delegates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4809,"src":"14516:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[] storage pointer"}},"id":4833,"indexExpression":{"id":4832,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4816,"src":"14526:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"14516:12:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":4834,"name":"delegates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4809,"src":"14531:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[] storage pointer"}},"id":4839,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4835,"name":"delegates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4809,"src":"14541:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[] storage pointer"}},"id":4836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14551:6:9","memberName":"length","nodeType":"MemberAccess","src":"14541:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14560:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14541:20:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14531:31:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14516:46:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4841,"nodeType":"ExpressionStatement","src":"14516:46:9"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4842,"name":"delegates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4809,"src":"14581:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[] storage pointer"}},"id":4844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14591:3:9","memberName":"pop","nodeType":"MemberAccess","src":"14581:13:9","typeDescriptions":{"typeIdentifier":"t_function_arraypop_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer)"}},"id":4845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14581:15:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4846,"nodeType":"ExpressionStatement","src":"14581:15:9"},{"id":4847,"nodeType":"Break","src":"14615:5:9"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4819,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4816,"src":"14425:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4820,"name":"delegates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4809,"src":"14429:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[] storage pointer"}},"id":4821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14439:6:9","memberName":"length","nodeType":"MemberAccess","src":"14429:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14425:20:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4851,"initializationExpression":{"assignments":[4816],"declarations":[{"constant":false,"id":4816,"mutability":"mutable","name":"i","nameLocation":"14418:1:9","nodeType":"VariableDeclaration","scope":4851,"src":"14410:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4815,"name":"uint256","nodeType":"ElementaryTypeName","src":"14410:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4818,"initialValue":{"hexValue":"30","id":4817,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14422:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"14410:13:9"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"14447:3:9","subExpression":{"id":4823,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4816,"src":"14447:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4825,"nodeType":"ExpressionStatement","src":"14447:3:9"},"nodeType":"ForStatement","src":"14405:242:9"}]},"documentation":{"id":4798,"nodeType":"StructuredDocumentation","src":"14098:155:9","text":" @dev Removes a delegate from the delegates array\n @param voter The voter address\n @param delegate The delegate to remove"},"id":4853,"implemented":true,"kind":"function","modifiers":[],"name":"removeFromDelegates","nameLocation":"14268:19:9","nodeType":"FunctionDefinition","parameters":{"id":4803,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4800,"mutability":"mutable","name":"voter","nameLocation":"14296:5:9","nodeType":"VariableDeclaration","scope":4853,"src":"14288:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4799,"name":"address","nodeType":"ElementaryTypeName","src":"14288:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4802,"mutability":"mutable","name":"delegate","nameLocation":"14311:8:9","nodeType":"VariableDeclaration","scope":4853,"src":"14303:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4801,"name":"address","nodeType":"ElementaryTypeName","src":"14303:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14287:33:9"},"returnParameters":{"id":4804,"nodeType":"ParameterList","parameters":[],"src":"14330:0:9"},"scope":4854,"src":"14259:395:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":4855,"src":"415:14242:9","usedErrors":[13,18,299],"usedEvents":[24,3898,3910,3920,3932,3938,3942,3948]}],"src":"33:14625:9"},"id":9},"contracts/Lock.sol":{"ast":{"absolutePath":"contracts/Lock.sol","exportedSymbols":{"Lock":[4933]},"id":4934,"license":"UNLICENSED","nodeType":"SourceUnit","nodes":[{"id":4856,"literals":["solidity","^","0.8",".28"],"nodeType":"PragmaDirective","src":"39:24:10"},{"abstract":false,"baseContracts":[],"canonicalName":"Lock","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":4933,"linearizedBaseContracts":[4933],"name":"Lock","nameLocation":"150:4:10","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"251c1aa3","id":4858,"mutability":"mutable","name":"unlockTime","nameLocation":"173:10:10","nodeType":"VariableDeclaration","scope":4933,"src":"161:22:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4857,"name":"uint","nodeType":"ElementaryTypeName","src":"161:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"8da5cb5b","id":4860,"mutability":"mutable","name":"owner","nameLocation":"212:5:10","nodeType":"VariableDeclaration","scope":4933,"src":"189:28:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":4859,"name":"address","nodeType":"ElementaryTypeName","src":"189:15:10","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"public"},{"anonymous":false,"eventSelector":"bf2ed60bd5b5965d685680c01195c9514e4382e28e3a5a2d2d5244bf59411b93","id":4866,"name":"Withdrawal","nameLocation":"230:10:10","nodeType":"EventDefinition","parameters":{"id":4865,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4862,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"246:6:10","nodeType":"VariableDeclaration","scope":4866,"src":"241:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4861,"name":"uint","nodeType":"ElementaryTypeName","src":"241:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4864,"indexed":false,"mutability":"mutable","name":"when","nameLocation":"259:4:10","nodeType":"VariableDeclaration","scope":4866,"src":"254:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4863,"name":"uint","nodeType":"ElementaryTypeName","src":"254:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"240:24:10"},"src":"224:41:10"},{"body":{"id":4891,"nodeType":"Block","src":"309:200:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4872,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"340:5:10","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"346:9:10","memberName":"timestamp","nodeType":"MemberAccess","src":"340:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4874,"name":"_unlockTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4868,"src":"358:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"340:29:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"556e6c6f636b2074696d652073686f756c6420626520696e2074686520667574757265","id":4876,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"383:37:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_f6fa9918d4578fba07be58c41841a4c6937c19725f7f4601884cd186799a8413","typeString":"literal_string \"Unlock time should be in the future\""},"value":"Unlock time should be in the future"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f6fa9918d4578fba07be58c41841a4c6937c19725f7f4601884cd186799a8413","typeString":"literal_string \"Unlock time should be in the future\""}],"id":4871,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"319:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4877,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"319:111:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4878,"nodeType":"ExpressionStatement","src":"319:111:10"},{"expression":{"id":4881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4879,"name":"unlockTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4858,"src":"441:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4880,"name":"_unlockTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4868,"src":"454:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"441:24:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4882,"nodeType":"ExpressionStatement","src":"441:24:10"},{"expression":{"id":4889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4883,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4860,"src":"475:5:10","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":4886,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"491:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"495:6:10","memberName":"sender","nodeType":"MemberAccess","src":"491:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4885,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"483:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":4884,"name":"address","nodeType":"ElementaryTypeName","src":"483:8:10","stateMutability":"payable","typeDescriptions":{}}},"id":4888,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"483:19:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"475:27:10","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":4890,"nodeType":"ExpressionStatement","src":"475:27:10"}]},"id":4892,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":4869,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4868,"mutability":"mutable","name":"_unlockTime","nameLocation":"288:11:10","nodeType":"VariableDeclaration","scope":4892,"src":"283:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4867,"name":"uint","nodeType":"ElementaryTypeName","src":"283:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"282:18:10"},"returnParameters":{"id":4870,"nodeType":"ParameterList","parameters":[],"src":"309:0:10"},"scope":4933,"src":"271:238:10","stateMutability":"payable","virtual":false,"visibility":"public"},{"body":{"id":4931,"nodeType":"Block","src":"542:463:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4896,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"766:5:10","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"772:9:10","memberName":"timestamp","nodeType":"MemberAccess","src":"766:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":4898,"name":"unlockTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4858,"src":"785:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"766:29:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"596f752063616e277420776974686472617720796574","id":4900,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"797:24:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_09be2a1d7c98765b8c1bd9ab3700b54ab19d501eebe572af39b71382f17d12e8","typeString":"literal_string \"You can't withdraw yet\""},"value":"You can't withdraw yet"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_09be2a1d7c98765b8c1bd9ab3700b54ab19d501eebe572af39b71382f17d12e8","typeString":"literal_string \"You can't withdraw yet\""}],"id":4895,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"758:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4901,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"758:64:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4902,"nodeType":"ExpressionStatement","src":"758:64:10"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4904,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"840:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"844:6:10","memberName":"sender","nodeType":"MemberAccess","src":"840:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4906,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4860,"src":"854:5:10","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"840:19:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"596f75206172656e277420746865206f776e6572","id":4908,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"861:22:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_345d93c1110e55177ee5f687f392a2e775da2aa3d491c8308e925f0505e3530a","typeString":"literal_string \"You aren't the owner\""},"value":"You aren't the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_345d93c1110e55177ee5f687f392a2e775da2aa3d491c8308e925f0505e3530a","typeString":"literal_string \"You aren't the owner\""}],"id":4903,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"832:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4909,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"832:52:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4910,"nodeType":"ExpressionStatement","src":"832:52:10"},{"eventCall":{"arguments":[{"expression":{"arguments":[{"id":4914,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"919:4:10","typeDescriptions":{"typeIdentifier":"t_contract$_Lock_$4933","typeString":"contract Lock"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Lock_$4933","typeString":"contract Lock"}],"id":4913,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"911:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4912,"name":"address","nodeType":"ElementaryTypeName","src":"911:7:10","typeDescriptions":{}}},"id":4915,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"911:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"925:7:10","memberName":"balance","nodeType":"MemberAccess","src":"911:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4917,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"934:5:10","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"940:9:10","memberName":"timestamp","nodeType":"MemberAccess","src":"934:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4911,"name":"Withdrawal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4866,"src":"900:10:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256)"}},"id":4919,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"900:50:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4920,"nodeType":"EmitStatement","src":"895:55:10"},{"expression":{"arguments":[{"expression":{"arguments":[{"id":4926,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"984:4:10","typeDescriptions":{"typeIdentifier":"t_contract$_Lock_$4933","typeString":"contract Lock"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Lock_$4933","typeString":"contract Lock"}],"id":4925,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"976:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4924,"name":"address","nodeType":"ElementaryTypeName","src":"976:7:10","typeDescriptions":{}}},"id":4927,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"976:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"990:7:10","memberName":"balance","nodeType":"MemberAccess","src":"976:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4921,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4860,"src":"961:5:10","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":4923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"967:8:10","memberName":"transfer","nodeType":"MemberAccess","src":"961:14:10","typeDescriptions":{"typeIdentifier":"t_function_transfer_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":4929,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"961:37:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4930,"nodeType":"ExpressionStatement","src":"961:37:10"}]},"functionSelector":"3ccfd60b","id":4932,"implemented":true,"kind":"function","modifiers":[],"name":"withdraw","nameLocation":"524:8:10","nodeType":"FunctionDefinition","parameters":{"id":4893,"nodeType":"ParameterList","parameters":[],"src":"532:2:10"},"returnParameters":{"id":4894,"nodeType":"ParameterList","parameters":[],"src":"542:0:10"},"scope":4933,"src":"515:490:10","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":4934,"src":"141:866:10","usedErrors":[],"usedEvents":[4866]}],"src":"39:969:10"},"id":10},"contracts/VoteMixing.sol":{"ast":{"absolutePath":"contracts/VoteMixing.sol","exportedSymbols":{"Context":[177],"CryptographicUtils":[7219],"ECDSA":[702],"Hashes":[742],"MerkleProof":[1815],"Ownable":[147],"ReentrancyGuard":[354],"VoteMixing":[5908]},"id":5909,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4935,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:11"},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":4936,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5909,"sourceUnit":148,"src":"60:52:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","file":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","id":4937,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5909,"sourceUnit":355,"src":"114:59:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/libraries/CryptographicUtils.sol","file":"./libraries/CryptographicUtils.sol","id":4938,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5909,"sourceUnit":7220,"src":"175:44:11","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":4940,"name":"Ownable","nameLocations":["401:7:11"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"401:7:11"},"id":4941,"nodeType":"InheritanceSpecifier","src":"401:7:11"},{"baseName":{"id":4942,"name":"ReentrancyGuard","nameLocations":["410:15:11"],"nodeType":"IdentifierPath","referencedDeclaration":354,"src":"410:15:11"},"id":4943,"nodeType":"InheritanceSpecifier","src":"410:15:11"}],"canonicalName":"VoteMixing","contractDependencies":[],"contractKind":"contract","documentation":{"id":4939,"nodeType":"StructuredDocumentation","src":"223:153:11","text":" @title VoteMixing\n @dev Implements Chaum mixing for vote anonymity\n @notice Provides vote mixing capabilities to enhance voter privacy"},"fullyImplemented":true,"id":5908,"linearizedBaseContracts":[5908,354,147,177],"name":"VoteMixing","nameLocation":"387:10:11","nodeType":"ContractDefinition","nodes":[{"global":false,"id":4945,"libraryName":{"id":4944,"name":"CryptographicUtils","nameLocations":["439:18:11"],"nodeType":"IdentifierPath","referencedDeclaration":7219,"src":"439:18:11"},"nodeType":"UsingForDirective","src":"433:31:11"},{"canonicalName":"VoteMixing.MixedVote","id":4960,"members":[{"constant":false,"id":4947,"mutability":"mutable","name":"originalVote","nameLocation":"532:12:11","nodeType":"VariableDeclaration","scope":4960,"src":"524:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4946,"name":"bytes32","nodeType":"ElementaryTypeName","src":"524:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4949,"mutability":"mutable","name":"mixedVote","nameLocation":"563:9:11","nodeType":"VariableDeclaration","scope":4960,"src":"555:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4948,"name":"bytes32","nodeType":"ElementaryTypeName","src":"555:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4951,"mutability":"mutable","name":"randomness","nameLocation":"591:10:11","nodeType":"VariableDeclaration","scope":4960,"src":"583:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4950,"name":"bytes32","nodeType":"ElementaryTypeName","src":"583:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4953,"mutability":"mutable","name":"mixIndex","nameLocation":"620:8:11","nodeType":"VariableDeclaration","scope":4960,"src":"612:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4952,"name":"uint256","nodeType":"ElementaryTypeName","src":"612:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4955,"mutability":"mutable","name":"timestamp","nameLocation":"647:9:11","nodeType":"VariableDeclaration","scope":4960,"src":"639:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4954,"name":"uint256","nodeType":"ElementaryTypeName","src":"639:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4957,"mutability":"mutable","name":"isRevealed","nameLocation":"672:10:11","nodeType":"VariableDeclaration","scope":4960,"src":"667:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4956,"name":"bool","nodeType":"ElementaryTypeName","src":"667:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4959,"mutability":"mutable","name":"voter","nameLocation":"701:5:11","nodeType":"VariableDeclaration","scope":4960,"src":"693:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4958,"name":"address","nodeType":"ElementaryTypeName","src":"693:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"MixedVote","nameLocation":"503:9:11","nodeType":"StructDefinition","scope":5908,"src":"496:218:11","visibility":"public"},{"canonicalName":"VoteMixing.MixingRound","id":4986,"members":[{"constant":false,"id":4962,"mutability":"mutable","name":"roundId","nameLocation":"760:7:11","nodeType":"VariableDeclaration","scope":4986,"src":"752:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4961,"name":"uint256","nodeType":"ElementaryTypeName","src":"752:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4965,"mutability":"mutable","name":"mixedVotes","nameLocation":"788:10:11","nodeType":"VariableDeclaration","scope":4986,"src":"778:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4963,"name":"bytes32","nodeType":"ElementaryTypeName","src":"778:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4964,"nodeType":"ArrayTypeName","src":"778:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":4968,"mutability":"mutable","name":"randomness","nameLocation":"819:10:11","nodeType":"VariableDeclaration","scope":4986,"src":"809:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4966,"name":"bytes32","nodeType":"ElementaryTypeName","src":"809:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4967,"nodeType":"ArrayTypeName","src":"809:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":4971,"mutability":"mutable","name":"mixIndices","nameLocation":"850:10:11","nodeType":"VariableDeclaration","scope":4986,"src":"840:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4969,"name":"uint256","nodeType":"ElementaryTypeName","src":"840:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4970,"nodeType":"ArrayTypeName","src":"840:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":4973,"mutability":"mutable","name":"startTime","nameLocation":"879:9:11","nodeType":"VariableDeclaration","scope":4986,"src":"871:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4972,"name":"uint256","nodeType":"ElementaryTypeName","src":"871:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4975,"mutability":"mutable","name":"endTime","nameLocation":"907:7:11","nodeType":"VariableDeclaration","scope":4986,"src":"899:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4974,"name":"uint256","nodeType":"ElementaryTypeName","src":"899:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4977,"mutability":"mutable","name":"revealTime","nameLocation":"933:10:11","nodeType":"VariableDeclaration","scope":4986,"src":"925:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4976,"name":"uint256","nodeType":"ElementaryTypeName","src":"925:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4979,"mutability":"mutable","name":"isActive","nameLocation":"959:8:11","nodeType":"VariableDeclaration","scope":4986,"src":"954:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4978,"name":"bool","nodeType":"ElementaryTypeName","src":"954:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4981,"mutability":"mutable","name":"isRevealed","nameLocation":"983:10:11","nodeType":"VariableDeclaration","scope":4986,"src":"978:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4980,"name":"bool","nodeType":"ElementaryTypeName","src":"978:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4983,"mutability":"mutable","name":"participantCount","nameLocation":"1012:16:11","nodeType":"VariableDeclaration","scope":4986,"src":"1004:24:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4982,"name":"uint256","nodeType":"ElementaryTypeName","src":"1004:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4985,"mutability":"mutable","name":"merkleRoot","nameLocation":"1047:10:11","nodeType":"VariableDeclaration","scope":4986,"src":"1039:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4984,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1039:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"MixingRound","nameLocation":"729:11:11","nodeType":"StructDefinition","scope":5908,"src":"722:343:11","visibility":"public"},{"canonicalName":"VoteMixing.MixingProof","id":4998,"members":[{"constant":false,"id":4988,"mutability":"mutable","name":"originalVote","nameLocation":"1111:12:11","nodeType":"VariableDeclaration","scope":4998,"src":"1103:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4987,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1103:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4990,"mutability":"mutable","name":"mixedVote","nameLocation":"1142:9:11","nodeType":"VariableDeclaration","scope":4998,"src":"1134:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4989,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1134:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4992,"mutability":"mutable","name":"randomness","nameLocation":"1170:10:11","nodeType":"VariableDeclaration","scope":4998,"src":"1162:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4991,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1162:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4994,"mutability":"mutable","name":"mixIndex","nameLocation":"1199:8:11","nodeType":"VariableDeclaration","scope":4998,"src":"1191:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4993,"name":"uint256","nodeType":"ElementaryTypeName","src":"1191:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4997,"mutability":"mutable","name":"merkleProof","nameLocation":"1228:11:11","nodeType":"VariableDeclaration","scope":4998,"src":"1218:21:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4995,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1218:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4996,"nodeType":"ArrayTypeName","src":"1218:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"name":"MixingProof","nameLocation":"1080:11:11","nodeType":"StructDefinition","scope":5908,"src":"1073:174:11","visibility":"public"},{"constant":false,"id":5003,"mutability":"mutable","name":"mixingRounds","nameLocation":"1327:12:11","nodeType":"VariableDeclaration","scope":5908,"src":"1287:52:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_MixingRound_$4986_storage_$","typeString":"mapping(uint256 => struct VoteMixing.MixingRound)"},"typeName":{"id":5002,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":4999,"name":"uint256","nodeType":"ElementaryTypeName","src":"1295:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1287:31:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_MixingRound_$4986_storage_$","typeString":"mapping(uint256 => struct VoteMixing.MixingRound)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":5001,"nodeType":"UserDefinedTypeName","pathNode":{"id":5000,"name":"MixingRound","nameLocations":["1306:11:11"],"nodeType":"IdentifierPath","referencedDeclaration":4986,"src":"1306:11:11"},"referencedDeclaration":4986,"src":"1306:11:11","typeDescriptions":{"typeIdentifier":"t_struct$_MixingRound_$4986_storage_ptr","typeString":"struct VoteMixing.MixingRound"}}},"visibility":"private"},{"constant":false,"id":5008,"mutability":"mutable","name":"mixedVotes","nameLocation":"1384:10:11","nodeType":"VariableDeclaration","scope":5908,"src":"1346:48:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_MixedVote_$4960_storage_$","typeString":"mapping(bytes32 => struct VoteMixing.MixedVote)"},"typeName":{"id":5007,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":5004,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1354:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"1346:29:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_MixedVote_$4960_storage_$","typeString":"mapping(bytes32 => struct VoteMixing.MixedVote)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":5006,"nodeType":"UserDefinedTypeName","pathNode":{"id":5005,"name":"MixedVote","nameLocations":["1365:9:11"],"nodeType":"IdentifierPath","referencedDeclaration":4960,"src":"1365:9:11"},"referencedDeclaration":4960,"src":"1365:9:11","typeDescriptions":{"typeIdentifier":"t_struct$_MixedVote_$4960_storage_ptr","typeString":"struct VoteMixing.MixedVote"}}},"visibility":"private"},{"constant":false,"id":5013,"mutability":"mutable","name":"voterRounds","nameLocation":"1439:11:11","nodeType":"VariableDeclaration","scope":5908,"src":"1401:49:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[])"},"typeName":{"id":5012,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":5009,"name":"address","nodeType":"ElementaryTypeName","src":"1409:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1401:29:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[])"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"baseType":{"id":5010,"name":"uint256","nodeType":"ElementaryTypeName","src":"1420:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5011,"nodeType":"ArrayTypeName","src":"1420:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"visibility":"private"},{"constant":false,"id":5018,"mutability":"mutable","name":"roundParticipants","nameLocation":"1495:17:11","nodeType":"VariableDeclaration","scope":5908,"src":"1457:55:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(uint256 => address[])"},"typeName":{"id":5017,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":5014,"name":"uint256","nodeType":"ElementaryTypeName","src":"1465:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1457:29:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(uint256 => address[])"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"baseType":{"id":5015,"name":"address","nodeType":"ElementaryTypeName","src":"1476:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5016,"nodeType":"ArrayTypeName","src":"1476:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"visibility":"private"},{"constant":false,"id":5022,"mutability":"mutable","name":"usedRandomness","nameLocation":"1552:14:11","nodeType":"VariableDeclaration","scope":5908,"src":"1519:47:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"},"typeName":{"id":5021,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":5019,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1527:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"1519:24:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":5020,"name":"bool","nodeType":"ElementaryTypeName","src":"1538:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"private"},{"constant":false,"id":5024,"mutability":"mutable","name":"roundCounter","nameLocation":"1595:12:11","nodeType":"VariableDeclaration","scope":5908,"src":"1579:28:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5023,"name":"uint256","nodeType":"ElementaryTypeName","src":"1579:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":5026,"mutability":"mutable","name":"minParticipants","nameLocation":"1630:15:11","nodeType":"VariableDeclaration","scope":5908,"src":"1614:31:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5025,"name":"uint256","nodeType":"ElementaryTypeName","src":"1614:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":5028,"mutability":"mutable","name":"maxParticipants","nameLocation":"1668:15:11","nodeType":"VariableDeclaration","scope":5908,"src":"1652:31:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5027,"name":"uint256","nodeType":"ElementaryTypeName","src":"1652:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":5030,"mutability":"mutable","name":"mixingDuration","nameLocation":"1706:14:11","nodeType":"VariableDeclaration","scope":5908,"src":"1690:30:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5029,"name":"uint256","nodeType":"ElementaryTypeName","src":"1690:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":5032,"mutability":"mutable","name":"revealDelay","nameLocation":"1743:11:11","nodeType":"VariableDeclaration","scope":5908,"src":"1727:27:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5031,"name":"uint256","nodeType":"ElementaryTypeName","src":"1727:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"functionSelector":"84b3f4cc","id":5034,"mutability":"mutable","name":"mixingEnabled","nameLocation":"1779:13:11","nodeType":"VariableDeclaration","scope":5908,"src":"1767:25:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5033,"name":"bool","nodeType":"ElementaryTypeName","src":"1767:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"public"},{"anonymous":false,"eventSelector":"87a3241a0380a7685f0cfd2544c5d771c51dc926dd74d20d81ee1aea62fbfb55","id":5044,"name":"MixingRoundCreated","nameLocation":"1834:18:11","nodeType":"EventDefinition","parameters":{"id":5043,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5036,"indexed":true,"mutability":"mutable","name":"roundId","nameLocation":"1879:7:11","nodeType":"VariableDeclaration","scope":5044,"src":"1863:23:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5035,"name":"uint256","nodeType":"ElementaryTypeName","src":"1863:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5038,"indexed":false,"mutability":"mutable","name":"startTime","nameLocation":"1905:9:11","nodeType":"VariableDeclaration","scope":5044,"src":"1897:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5037,"name":"uint256","nodeType":"ElementaryTypeName","src":"1897:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5040,"indexed":false,"mutability":"mutable","name":"endTime","nameLocation":"1933:7:11","nodeType":"VariableDeclaration","scope":5044,"src":"1925:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5039,"name":"uint256","nodeType":"ElementaryTypeName","src":"1925:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5042,"indexed":false,"mutability":"mutable","name":"minParticipants","nameLocation":"1959:15:11","nodeType":"VariableDeclaration","scope":5044,"src":"1951:23:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5041,"name":"uint256","nodeType":"ElementaryTypeName","src":"1951:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1852:129:11"},"src":"1828:154:11"},{"anonymous":false,"eventSelector":"57ad1338c773df8ab4b3a0b286cae4e4f6d36473d7e7a1f0b3f1b4de474cd37b","id":5056,"name":"VoteSubmitted","nameLocation":"2000:13:11","nodeType":"EventDefinition","parameters":{"id":5055,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5046,"indexed":true,"mutability":"mutable","name":"roundId","nameLocation":"2040:7:11","nodeType":"VariableDeclaration","scope":5056,"src":"2024:23:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5045,"name":"uint256","nodeType":"ElementaryTypeName","src":"2024:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5048,"indexed":true,"mutability":"mutable","name":"voter","nameLocation":"2074:5:11","nodeType":"VariableDeclaration","scope":5056,"src":"2058:21:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5047,"name":"address","nodeType":"ElementaryTypeName","src":"2058:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5050,"indexed":false,"mutability":"mutable","name":"mixedVote","nameLocation":"2098:9:11","nodeType":"VariableDeclaration","scope":5056,"src":"2090:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5049,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2090:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5052,"indexed":false,"mutability":"mutable","name":"mixIndex","nameLocation":"2126:8:11","nodeType":"VariableDeclaration","scope":5056,"src":"2118:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5051,"name":"uint256","nodeType":"ElementaryTypeName","src":"2118:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5054,"indexed":false,"mutability":"mutable","name":"timestamp","nameLocation":"2153:9:11","nodeType":"VariableDeclaration","scope":5056,"src":"2145:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5053,"name":"uint256","nodeType":"ElementaryTypeName","src":"2145:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2013:156:11"},"src":"1994:176:11"},{"anonymous":false,"eventSelector":"702ca2b43eb700bf6c35cd0fd463096f3f976f36abf9a0640b9111d2774e9095","id":5066,"name":"MixingRoundCompleted","nameLocation":"2188:20:11","nodeType":"EventDefinition","parameters":{"id":5065,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5058,"indexed":true,"mutability":"mutable","name":"roundId","nameLocation":"2235:7:11","nodeType":"VariableDeclaration","scope":5066,"src":"2219:23:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5057,"name":"uint256","nodeType":"ElementaryTypeName","src":"2219:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5060,"indexed":false,"mutability":"mutable","name":"participantCount","nameLocation":"2261:16:11","nodeType":"VariableDeclaration","scope":5066,"src":"2253:24:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5059,"name":"uint256","nodeType":"ElementaryTypeName","src":"2253:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5062,"indexed":false,"mutability":"mutable","name":"merkleRoot","nameLocation":"2296:10:11","nodeType":"VariableDeclaration","scope":5066,"src":"2288:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5061,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2288:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5064,"indexed":false,"mutability":"mutable","name":"timestamp","nameLocation":"2325:9:11","nodeType":"VariableDeclaration","scope":5066,"src":"2317:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5063,"name":"uint256","nodeType":"ElementaryTypeName","src":"2317:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2208:133:11"},"src":"2182:160:11"},{"anonymous":false,"eventSelector":"517de2d19cd96b554768be894916ac969b1449096e6033efc0d82d10a2cec88c","id":5078,"name":"VoteRevealed","nameLocation":"2360:12:11","nodeType":"EventDefinition","parameters":{"id":5077,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5068,"indexed":true,"mutability":"mutable","name":"roundId","nameLocation":"2399:7:11","nodeType":"VariableDeclaration","scope":5078,"src":"2383:23:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5067,"name":"uint256","nodeType":"ElementaryTypeName","src":"2383:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5070,"indexed":true,"mutability":"mutable","name":"voter","nameLocation":"2433:5:11","nodeType":"VariableDeclaration","scope":5078,"src":"2417:21:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5069,"name":"address","nodeType":"ElementaryTypeName","src":"2417:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5072,"indexed":false,"mutability":"mutable","name":"originalVote","nameLocation":"2457:12:11","nodeType":"VariableDeclaration","scope":5078,"src":"2449:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5071,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2449:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5074,"indexed":false,"mutability":"mutable","name":"mixedVote","nameLocation":"2488:9:11","nodeType":"VariableDeclaration","scope":5078,"src":"2480:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5073,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2480:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5076,"indexed":false,"mutability":"mutable","name":"timestamp","nameLocation":"2516:9:11","nodeType":"VariableDeclaration","scope":5078,"src":"2508:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5075,"name":"uint256","nodeType":"ElementaryTypeName","src":"2508:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2372:160:11"},"src":"2354:179:11"},{"anonymous":false,"eventSelector":"d48fe253bdb396c73bc32f7b556a42456788b817d0254dd2469873141ca91c24","id":5086,"name":"MixingRoundRevealed","nameLocation":"2551:19:11","nodeType":"EventDefinition","parameters":{"id":5085,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5080,"indexed":true,"mutability":"mutable","name":"roundId","nameLocation":"2597:7:11","nodeType":"VariableDeclaration","scope":5086,"src":"2581:23:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5079,"name":"uint256","nodeType":"ElementaryTypeName","src":"2581:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5082,"indexed":false,"mutability":"mutable","name":"totalVotes","nameLocation":"2623:10:11","nodeType":"VariableDeclaration","scope":5086,"src":"2615:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5081,"name":"uint256","nodeType":"ElementaryTypeName","src":"2615:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5084,"indexed":false,"mutability":"mutable","name":"timestamp","nameLocation":"2652:9:11","nodeType":"VariableDeclaration","scope":5086,"src":"2644:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5083,"name":"uint256","nodeType":"ElementaryTypeName","src":"2644:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2570:98:11"},"src":"2545:124:11"},{"body":{"id":5099,"nodeType":"Block","src":"2745:90:11","statements":[{"expression":{"arguments":[{"expression":{"baseExpression":{"id":5091,"name":"mixingRounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5003,"src":"2764:12:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_MixingRound_$4986_storage_$","typeString":"mapping(uint256 => struct VoteMixing.MixingRound storage ref)"}},"id":5093,"indexExpression":{"id":5092,"name":"roundId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5088,"src":"2777:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2764:21:11","typeDescriptions":{"typeIdentifier":"t_struct$_MixingRound_$4986_storage","typeString":"struct VoteMixing.MixingRound storage ref"}},"id":5094,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2786:8:11","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":4979,"src":"2764:30:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"526f756e64206e6f7420616374697665","id":5095,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2796:18:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_516cdb2ebb3256cebe8efc4290554288b70a3508a24d64eda281a8e6cf3b95b3","typeString":"literal_string \"Round not active\""},"value":"Round not active"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_516cdb2ebb3256cebe8efc4290554288b70a3508a24d64eda281a8e6cf3b95b3","typeString":"literal_string \"Round not active\""}],"id":5090,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"2756:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5096,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2756:59:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5097,"nodeType":"ExpressionStatement","src":"2756:59:11"},{"id":5098,"nodeType":"PlaceholderStatement","src":"2826:1:11"}]},"id":5100,"name":"onlyActiveRound","nameLocation":"2712:15:11","nodeType":"ModifierDefinition","parameters":{"id":5089,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5088,"mutability":"mutable","name":"roundId","nameLocation":"2736:7:11","nodeType":"VariableDeclaration","scope":5100,"src":"2728:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5087,"name":"uint256","nodeType":"ElementaryTypeName","src":"2728:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2727:17:11"},"src":"2703:132:11","virtual":false,"visibility":"internal"},{"body":{"id":5116,"nodeType":"Block","src":"2884:118:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5105,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2903:5:11","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":5106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2909:9:11","memberName":"timestamp","nodeType":"MemberAccess","src":"2903:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"baseExpression":{"id":5107,"name":"mixingRounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5003,"src":"2922:12:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_MixingRound_$4986_storage_$","typeString":"mapping(uint256 => struct VoteMixing.MixingRound storage ref)"}},"id":5109,"indexExpression":{"id":5108,"name":"roundId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5102,"src":"2935:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2922:21:11","typeDescriptions":{"typeIdentifier":"t_struct$_MixingRound_$4986_storage","typeString":"struct VoteMixing.MixingRound storage ref"}},"id":5110,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2944:10:11","memberName":"revealTime","nodeType":"MemberAccess","referencedDeclaration":4977,"src":"2922:32:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2903:51:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"52657665616c2074696d65206e6f742072656163686564","id":5112,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2956:25:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_d9c94eaf1f09f279f0fcf497e1e3fcb6dcbe36f01a34dbbd02ee7a3c0ac13629","typeString":"literal_string \"Reveal time not reached\""},"value":"Reveal time not reached"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d9c94eaf1f09f279f0fcf497e1e3fcb6dcbe36f01a34dbbd02ee7a3c0ac13629","typeString":"literal_string \"Reveal time not reached\""}],"id":5104,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"2895:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5113,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2895:87:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5114,"nodeType":"ExpressionStatement","src":"2895:87:11"},{"id":5115,"nodeType":"PlaceholderStatement","src":"2993:1:11"}]},"id":5117,"name":"onlyRevealTime","nameLocation":"2852:14:11","nodeType":"ModifierDefinition","parameters":{"id":5103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5102,"mutability":"mutable","name":"roundId","nameLocation":"2875:7:11","nodeType":"VariableDeclaration","scope":5117,"src":"2867:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5101,"name":"uint256","nodeType":"ElementaryTypeName","src":"2867:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2866:17:11"},"src":"2843:159:11","virtual":false,"visibility":"internal"},{"body":{"id":5130,"nodeType":"Block","src":"3059:94:11","statements":[{"expression":{"arguments":[{"id":5125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3078:27:11","subExpression":{"baseExpression":{"id":5122,"name":"usedRandomness","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5022,"src":"3079:14:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"}},"id":5124,"indexExpression":{"id":5123,"name":"randomness","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5119,"src":"3094:10:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3079:26:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"52616e646f6d6e65737320616c72656164792075736564","id":5126,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3107:25:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_a43cd3a095c0af2033177b8afe8950d0f186595dbd73278a6bbf262a64d70af3","typeString":"literal_string \"Randomness already used\""},"value":"Randomness already used"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a43cd3a095c0af2033177b8afe8950d0f186595dbd73278a6bbf262a64d70af3","typeString":"literal_string \"Randomness already used\""}],"id":5121,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"3070:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5127,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3070:63:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5128,"nodeType":"ExpressionStatement","src":"3070:63:11"},{"id":5129,"nodeType":"PlaceholderStatement","src":"3144:1:11"}]},"id":5131,"name":"onlyValidRandomness","nameLocation":"3019:19:11","nodeType":"ModifierDefinition","parameters":{"id":5120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5119,"mutability":"mutable","name":"randomness","nameLocation":"3047:10:11","nodeType":"VariableDeclaration","scope":5131,"src":"3039:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5118,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3039:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3038:20:11"},"src":"3010:143:11","virtual":false,"visibility":"internal"},{"body":{"id":5170,"nodeType":"Block","src":"3363:236:11","statements":[{"expression":{"id":5148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5146,"name":"minParticipants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5026,"src":"3374:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5147,"name":"_minParticipants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5133,"src":"3392:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3374:34:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5149,"nodeType":"ExpressionStatement","src":"3374:34:11"},{"expression":{"id":5152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5150,"name":"maxParticipants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5028,"src":"3419:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5151,"name":"_maxParticipants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5135,"src":"3437:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3419:34:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5153,"nodeType":"ExpressionStatement","src":"3419:34:11"},{"expression":{"id":5156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5154,"name":"mixingDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5030,"src":"3464:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5155,"name":"_mixingDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5137,"src":"3481:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3464:32:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5157,"nodeType":"ExpressionStatement","src":"3464:32:11"},{"expression":{"id":5160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5158,"name":"revealDelay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5032,"src":"3507:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5159,"name":"_revealDelay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5139,"src":"3521:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3507:26:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5161,"nodeType":"ExpressionStatement","src":"3507:26:11"},{"expression":{"id":5164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5162,"name":"roundCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5024,"src":"3544:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":5163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3559:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3544:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5165,"nodeType":"ExpressionStatement","src":"3544:16:11"},{"expression":{"id":5168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5166,"name":"mixingEnabled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5034,"src":"3571:13:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":5167,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3587:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"3571:20:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5169,"nodeType":"ExpressionStatement","src":"3571:20:11"}]},"id":5171,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"expression":{"id":5142,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3351:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3355:6:11","memberName":"sender","nodeType":"MemberAccess","src":"3351:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":5144,"kind":"baseConstructorSpecifier","modifierName":{"id":5141,"name":"Ownable","nameLocations":["3343:7:11"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"3343:7:11"},"nodeType":"ModifierInvocation","src":"3343:19:11"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":5140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5133,"mutability":"mutable","name":"_minParticipants","nameLocation":"3219:16:11","nodeType":"VariableDeclaration","scope":5171,"src":"3211:24:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5132,"name":"uint256","nodeType":"ElementaryTypeName","src":"3211:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5135,"mutability":"mutable","name":"_maxParticipants","nameLocation":"3254:16:11","nodeType":"VariableDeclaration","scope":5171,"src":"3246:24:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5134,"name":"uint256","nodeType":"ElementaryTypeName","src":"3246:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5137,"mutability":"mutable","name":"_mixingDuration","nameLocation":"3289:15:11","nodeType":"VariableDeclaration","scope":5171,"src":"3281:23:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5136,"name":"uint256","nodeType":"ElementaryTypeName","src":"3281:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5139,"mutability":"mutable","name":"_revealDelay","nameLocation":"3323:12:11","nodeType":"VariableDeclaration","scope":5171,"src":"3315:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5138,"name":"uint256","nodeType":"ElementaryTypeName","src":"3315:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3200:142:11"},"returnParameters":{"id":5145,"nodeType":"ParameterList","parameters":[],"src":"3363:0:11"},"scope":5908,"src":"3189:410:11","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":5247,"nodeType":"Block","src":"3824:838:11","statements":[{"expression":{"arguments":[{"id":5180,"name":"mixingEnabled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5034,"src":"3843:13:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d6978696e672064697361626c6564","id":5181,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3858:17:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_f8eba552678972378b77827f2bd197fadc1fe8afab84cc0a43076bbb24959bd2","typeString":"literal_string \"Mixing disabled\""},"value":"Mixing disabled"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f8eba552678972378b77827f2bd197fadc1fe8afab84cc0a43076bbb24959bd2","typeString":"literal_string \"Mixing disabled\""}],"id":5179,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"3835:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3835:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5183,"nodeType":"ExpressionStatement","src":"3835:41:11"},{"expression":{"id":5187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5184,"name":"roundId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5177,"src":"3897:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3907:14:11","subExpression":{"id":5185,"name":"roundCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5024,"src":"3907:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3897:24:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5188,"nodeType":"ExpressionStatement","src":"3897:24:11"},{"assignments":[5191],"declarations":[{"constant":false,"id":5191,"mutability":"mutable","name":"newRound","nameLocation":"3961:8:11","nodeType":"VariableDeclaration","scope":5247,"src":"3942:27:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_MixingRound_$4986_memory_ptr","typeString":"struct VoteMixing.MixingRound"},"typeName":{"id":5190,"nodeType":"UserDefinedTypeName","pathNode":{"id":5189,"name":"MixingRound","nameLocations":["3942:11:11"],"nodeType":"IdentifierPath","referencedDeclaration":4986,"src":"3942:11:11"},"referencedDeclaration":4986,"src":"3942:11:11","typeDescriptions":{"typeIdentifier":"t_struct$_MixingRound_$4986_storage_ptr","typeString":"struct VoteMixing.MixingRound"}},"visibility":"internal"}],"id":5229,"initialValue":{"arguments":[{"id":5193,"name":"roundId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5177,"src":"4008:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":5197,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4056:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5196,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"4042:13:11","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes32[] memory)"},"typeName":{"baseType":{"id":5194,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4046:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5195,"nodeType":"ArrayTypeName","src":"4046:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}}},"id":5198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4042:16:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},{"arguments":[{"hexValue":"30","id":5202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4099:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5201,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"4085:13:11","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes32[] memory)"},"typeName":{"baseType":{"id":5199,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4089:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5200,"nodeType":"ArrayTypeName","src":"4089:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}}},"id":5203,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4085:16:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},{"arguments":[{"hexValue":"30","id":5207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4142:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5206,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"4128:13:11","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":5204,"name":"uint256","nodeType":"ElementaryTypeName","src":"4132:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5205,"nodeType":"ArrayTypeName","src":"4132:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":5208,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4128:16:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"expression":{"id":5209,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4170:5:11","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":5210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4176:9:11","memberName":"timestamp","nodeType":"MemberAccess","src":"4170:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5211,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4209:5:11","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":5212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4215:9:11","memberName":"timestamp","nodeType":"MemberAccess","src":"4209:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":5213,"name":"mixingDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5030,"src":"4227:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4209:32:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5215,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4268:5:11","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":5216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4274:9:11","memberName":"timestamp","nodeType":"MemberAccess","src":"4268:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":5217,"name":"mixingDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5030,"src":"4286:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4268:32:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":5219,"name":"revealDelay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5032,"src":"4303:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4268:46:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":5221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4339:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"66616c7365","id":5222,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4370:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":5223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4408:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"arguments":[{"hexValue":"30","id":5226,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4444:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5225,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4436:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":5224,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4436:7:11","typeDescriptions":{}}},"id":5227,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4436:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"},{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5192,"name":"MixingRound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4986,"src":"3972:11:11","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_MixingRound_$4986_storage_ptr_$","typeString":"type(struct VoteMixing.MixingRound storage pointer)"}},"id":5228,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["3999:7:11","4030:10:11","4073:10:11","4116:10:11","4159:9:11","4200:7:11","4256:10:11","4329:8:11","4358:10:11","4390:16:11","4424:10:11"],"names":["roundId","mixedVotes","randomness","mixIndices","startTime","endTime","revealTime","isActive","isRevealed","participantCount","merkleRoot"],"nodeType":"FunctionCall","src":"3972:486:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_MixingRound_$4986_memory_ptr","typeString":"struct VoteMixing.MixingRound memory"}},"nodeType":"VariableDeclarationStatement","src":"3942:516:11"},{"expression":{"id":5234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5230,"name":"mixingRounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5003,"src":"4479:12:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_MixingRound_$4986_storage_$","typeString":"mapping(uint256 => struct VoteMixing.MixingRound storage ref)"}},"id":5232,"indexExpression":{"id":5231,"name":"roundId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5177,"src":"4492:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4479:21:11","typeDescriptions":{"typeIdentifier":"t_struct$_MixingRound_$4986_storage","typeString":"struct VoteMixing.MixingRound storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5233,"name":"newRound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5191,"src":"4503:8:11","typeDescriptions":{"typeIdentifier":"t_struct$_MixingRound_$4986_memory_ptr","typeString":"struct VoteMixing.MixingRound memory"}},"src":"4479:32:11","typeDescriptions":{"typeIdentifier":"t_struct$_MixingRound_$4986_storage","typeString":"struct VoteMixing.MixingRound storage ref"}},"id":5235,"nodeType":"ExpressionStatement","src":"4479:32:11"},{"eventCall":{"arguments":[{"id":5237,"name":"roundId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5177,"src":"4556:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":5238,"name":"newRound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5191,"src":"4565:8:11","typeDescriptions":{"typeIdentifier":"t_struct$_MixingRound_$4986_memory_ptr","typeString":"struct VoteMixing.MixingRound memory"}},"id":5239,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4574:9:11","memberName":"startTime","nodeType":"MemberAccess","referencedDeclaration":4973,"src":"4565:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":5240,"name":"newRound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5191,"src":"4585:8:11","typeDescriptions":{"typeIdentifier":"t_struct$_MixingRound_$4986_memory_ptr","typeString":"struct VoteMixing.MixingRound memory"}},"id":5241,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4594:7:11","memberName":"endTime","nodeType":"MemberAccess","referencedDeclaration":4975,"src":"4585:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5242,"name":"minParticipants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5026,"src":"4603:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5236,"name":"MixingRoundCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5044,"src":"4537:18:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256,uint256,uint256)"}},"id":5243,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4537:82:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5244,"nodeType":"EmitStatement","src":"4532:87:11"},{"expression":{"id":5245,"name":"roundId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5177,"src":"4647:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5178,"id":5246,"nodeType":"Return","src":"4640:14:11"}]},"documentation":{"id":5172,"nodeType":"StructuredDocumentation","src":"3640:104:11","text":" @dev Creates a new mixing round\n @return roundId The ID of the created round"},"functionSelector":"16a7b4fa","id":5248,"implemented":true,"kind":"function","modifiers":[{"id":5175,"kind":"modifierInvocation","modifierName":{"id":5174,"name":"onlyOwner","nameLocations":["3788:9:11"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"3788:9:11"},"nodeType":"ModifierInvocation","src":"3788:9:11"}],"name":"createMixingRound","nameLocation":"3759:17:11","nodeType":"FunctionDefinition","parameters":{"id":5173,"nodeType":"ParameterList","parameters":[],"src":"3776:2:11"},"returnParameters":{"id":5178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5177,"mutability":"mutable","name":"roundId","nameLocation":"3815:7:11","nodeType":"VariableDeclaration","scope":5248,"src":"3807:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5176,"name":"uint256","nodeType":"ElementaryTypeName","src":"3807:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3806:17:11"},"scope":5908,"src":"3750:912:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5395,"nodeType":"Block","src":"5232:1380:11","statements":[{"assignments":[5270],"declarations":[{"constant":false,"id":5270,"mutability":"mutable","name":"round","nameLocation":"5263:5:11","nodeType":"VariableDeclaration","scope":5395,"src":"5243:25:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_MixingRound_$4986_storage_ptr","typeString":"struct VoteMixing.MixingRound"},"typeName":{"id":5269,"nodeType":"UserDefinedTypeName","pathNode":{"id":5268,"name":"MixingRound","nameLocations":["5243:11:11"],"nodeType":"IdentifierPath","referencedDeclaration":4986,"src":"5243:11:11"},"referencedDeclaration":4986,"src":"5243:11:11","typeDescriptions":{"typeIdentifier":"t_struct$_MixingRound_$4986_storage_ptr","typeString":"struct VoteMixing.MixingRound"}},"visibility":"internal"}],"id":5274,"initialValue":{"baseExpression":{"id":5271,"name":"mixingRounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5003,"src":"5271:12:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_MixingRound_$4986_storage_$","typeString":"mapping(uint256 => struct VoteMixing.MixingRound storage ref)"}},"id":5273,"indexExpression":{"id":5272,"name":"roundId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5251,"src":"5284:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5271:21:11","typeDescriptions":{"typeIdentifier":"t_struct$_MixingRound_$4986_storage","typeString":"struct VoteMixing.MixingRound storage ref"}},"nodeType":"VariableDeclarationStatement","src":"5243:49:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5276,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5311:5:11","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":5277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5317:9:11","memberName":"timestamp","nodeType":"MemberAccess","src":"5311:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":5278,"name":"round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5270,"src":"5330:5:11","typeDescriptions":{"typeIdentifier":"t_struct$_MixingRound_$4986_storage_ptr","typeString":"struct VoteMixing.MixingRound storage pointer"}},"id":5279,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5336:7:11","memberName":"endTime","nodeType":"MemberAccess","referencedDeclaration":4975,"src":"5330:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5311:32:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"526f756e6420656e646564","id":5281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5345:13:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_6df691e4f8cb470303ed918f748a082d026e9e83e69c9f5b5790ee34ca804168","typeString":"literal_string \"Round ended\""},"value":"Round ended"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6df691e4f8cb470303ed918f748a082d026e9e83e69c9f5b5790ee34ca804168","typeString":"literal_string \"Round ended\""}],"id":5275,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"5303:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5282,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5303:56:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5283,"nodeType":"ExpressionStatement","src":"5303:56:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5285,"name":"round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5270,"src":"5378:5:11","typeDescriptions":{"typeIdentifier":"t_struct$_MixingRound_$4986_storage_ptr","typeString":"struct VoteMixing.MixingRound storage pointer"}},"id":5286,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5384:16:11","memberName":"participantCount","nodeType":"MemberAccess","referencedDeclaration":4983,"src":"5378:22:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5287,"name":"maxParticipants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5028,"src":"5403:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5378:40:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"526f756e642066756c6c","id":5289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5420:12:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_2339ad3e1c7e0c2ed8b905cfdb8a62b11b95d301011bd0d17f2f7b70bc889a56","typeString":"literal_string \"Round full\""},"value":"Round full"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2339ad3e1c7e0c2ed8b905cfdb8a62b11b95d301011bd0d17f2f7b70bc889a56","typeString":"literal_string \"Round full\""}],"id":5284,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"5370:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5290,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5370:63:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5291,"nodeType":"ExpressionStatement","src":"5370:63:11"},{"expression":{"arguments":[{"id":5298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5510:42:11","subExpression":{"arguments":[{"id":5294,"name":"roundId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5251,"src":"5532:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":5295,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5541:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5545:6:11","memberName":"sender","nodeType":"MemberAccess","src":"5541:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":5293,"name":"hasVoterParticipated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5756,"src":"5511:20:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_address_$returns$_t_bool_$","typeString":"function (uint256,address) view returns (bool)"}},"id":5297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5511:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416c726561647920706172746963697061746564","id":5299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5554:22:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_56d2dfa42e94b97ce4f8bcd78ec72cfde368892527b2f6491331b727bd44b34c","typeString":"literal_string \"Already participated\""},"value":"Already participated"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_56d2dfa42e94b97ce4f8bcd78ec72cfde368892527b2f6491331b727bd44b34c","typeString":"literal_string \"Already participated\""}],"id":5292,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"5502:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5300,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5502:75:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5301,"nodeType":"ExpressionStatement","src":"5502:75:11"},{"expression":{"id":5309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5302,"name":"mixedVote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5266,"src":"5628:9:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5305,"name":"originalVote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5253,"src":"5667:12:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5306,"name":"randomness","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5255,"src":"5681:10:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5307,"name":"mixIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5257,"src":"5693:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5303,"name":"CryptographicUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7219,"src":"5640:18:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_CryptographicUtils_$7219_$","typeString":"type(library CryptographicUtils)"}},"id":5304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5659:7:11","memberName":"mixVote","nodeType":"MemberAccess","referencedDeclaration":6790,"src":"5640:26:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32,uint256) pure returns (bytes32)"}},"id":5308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5640:62:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"5628:74:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5310,"nodeType":"ExpressionStatement","src":"5628:74:11"},{"assignments":[5313],"declarations":[{"constant":false,"id":5313,"mutability":"mutable","name":"newMixedVote","nameLocation":"5769:12:11","nodeType":"VariableDeclaration","scope":5395,"src":"5752:29:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_MixedVote_$4960_memory_ptr","typeString":"struct VoteMixing.MixedVote"},"typeName":{"id":5312,"nodeType":"UserDefinedTypeName","pathNode":{"id":5311,"name":"MixedVote","nameLocations":["5752:9:11"],"nodeType":"IdentifierPath","referencedDeclaration":4960,"src":"5752:9:11"},"referencedDeclaration":4960,"src":"5752:9:11","typeDescriptions":{"typeIdentifier":"t_struct$_MixedVote_$4960_storage_ptr","typeString":"struct VoteMixing.MixedVote"}},"visibility":"internal"}],"id":5325,"initialValue":{"arguments":[{"id":5315,"name":"originalVote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5253,"src":"5823:12:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5316,"name":"mixedVote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5266,"src":"5861:9:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5317,"name":"randomness","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5255,"src":"5897:10:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5318,"name":"mixIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5257,"src":"5932:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":5319,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5966:5:11","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":5320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5972:9:11","memberName":"timestamp","nodeType":"MemberAccess","src":"5966:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":5321,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6008:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"expression":{"id":5322,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6035:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6039:6:11","memberName":"sender","nodeType":"MemberAccess","src":"6035:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_address","typeString":"address"}],"id":5314,"name":"MixedVote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4960,"src":"5784:9:11","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_MixedVote_$4960_storage_ptr_$","typeString":"type(struct VoteMixing.MixedVote storage pointer)"}},"id":5324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["5809:12:11","5850:9:11","5885:10:11","5922:8:11","5955:9:11","5996:10:11","6028:5:11"],"names":["originalVote","mixedVote","randomness","mixIndex","timestamp","isRevealed","voter"],"nodeType":"FunctionCall","src":"5784:273:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_MixedVote_$4960_memory_ptr","typeString":"struct VoteMixing.MixedVote memory"}},"nodeType":"VariableDeclarationStatement","src":"5752:305:11"},{"expression":{"id":5330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5326,"name":"mixedVotes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5008,"src":"6078:10:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_MixedVote_$4960_storage_$","typeString":"mapping(bytes32 => struct VoteMixing.MixedVote storage ref)"}},"id":5328,"indexExpression":{"id":5327,"name":"mixedVote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5266,"src":"6089:9:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6078:21:11","typeDescriptions":{"typeIdentifier":"t_struct$_MixedVote_$4960_storage","typeString":"struct VoteMixing.MixedVote storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5329,"name":"newMixedVote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5313,"src":"6102:12:11","typeDescriptions":{"typeIdentifier":"t_struct$_MixedVote_$4960_memory_ptr","typeString":"struct VoteMixing.MixedVote memory"}},"src":"6078:36:11","typeDescriptions":{"typeIdentifier":"t_struct$_MixedVote_$4960_storage","typeString":"struct VoteMixing.MixedVote storage ref"}},"id":5331,"nodeType":"ExpressionStatement","src":"6078:36:11"},{"expression":{"arguments":[{"id":5337,"name":"mixedVote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5266,"src":"6182:9:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"expression":{"id":5332,"name":"round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5270,"src":"6160:5:11","typeDescriptions":{"typeIdentifier":"t_struct$_MixingRound_$4986_storage_ptr","typeString":"struct VoteMixing.MixingRound storage pointer"}},"id":5335,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6166:10:11","memberName":"mixedVotes","nodeType":"MemberAccess","referencedDeclaration":4965,"src":"6160:16:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":5336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6177:4:11","memberName":"push","nodeType":"MemberAccess","src":"6160:21:11","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$_t_bytes32_$returns$__$attached_to$_t_array$_t_bytes32_$dyn_storage_ptr_$","typeString":"function (bytes32[] storage pointer,bytes32)"}},"id":5338,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6160:32:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5339,"nodeType":"ExpressionStatement","src":"6160:32:11"},{"expression":{"arguments":[{"id":5345,"name":"randomness","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5255,"src":"6225:10:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"expression":{"id":5340,"name":"round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5270,"src":"6203:5:11","typeDescriptions":{"typeIdentifier":"t_struct$_MixingRound_$4986_storage_ptr","typeString":"struct VoteMixing.MixingRound storage pointer"}},"id":5343,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6209:10:11","memberName":"randomness","nodeType":"MemberAccess","referencedDeclaration":4968,"src":"6203:16:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":5344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6220:4:11","memberName":"push","nodeType":"MemberAccess","src":"6203:21:11","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$_t_bytes32_$returns$__$attached_to$_t_array$_t_bytes32_$dyn_storage_ptr_$","typeString":"function (bytes32[] storage pointer,bytes32)"}},"id":5346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6203:33:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5347,"nodeType":"ExpressionStatement","src":"6203:33:11"},{"expression":{"arguments":[{"id":5353,"name":"mixIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5257,"src":"6269:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":5348,"name":"round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5270,"src":"6247:5:11","typeDescriptions":{"typeIdentifier":"t_struct$_MixingRound_$4986_storage_ptr","typeString":"struct VoteMixing.MixingRound storage pointer"}},"id":5351,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6253:10:11","memberName":"mixIndices","nodeType":"MemberAccess","referencedDeclaration":4971,"src":"6247:16:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":5352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6264:4:11","memberName":"push","nodeType":"MemberAccess","src":"6247:21:11","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256)"}},"id":5354,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6247:31:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5355,"nodeType":"ExpressionStatement","src":"6247:31:11"},{"expression":{"id":5359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6289:24:11","subExpression":{"expression":{"id":5356,"name":"round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5270,"src":"6289:5:11","typeDescriptions":{"typeIdentifier":"t_struct$_MixingRound_$4986_storage_ptr","typeString":"struct VoteMixing.MixingRound storage pointer"}},"id":5358,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6295:16:11","memberName":"participantCount","nodeType":"MemberAccess","referencedDeclaration":4983,"src":"6289:22:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5360,"nodeType":"ExpressionStatement","src":"6289:24:11"},{"expression":{"arguments":[{"expression":{"id":5365,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6356:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6360:6:11","memberName":"sender","nodeType":"MemberAccess","src":"6356:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"baseExpression":{"id":5361,"name":"roundParticipants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5018,"src":"6324:17:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(uint256 => address[] storage ref)"}},"id":5363,"indexExpression":{"id":5362,"name":"roundId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5251,"src":"6342:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6324:26:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":5364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6351:4:11","memberName":"push","nodeType":"MemberAccess","src":"6324:31:11","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer,address)"}},"id":5367,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6324:43:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5368,"nodeType":"ExpressionStatement","src":"6324:43:11"},{"expression":{"arguments":[{"id":5374,"name":"roundId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5251,"src":"6407:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"id":5369,"name":"voterRounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5013,"src":"6378:11:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[] storage ref)"}},"id":5372,"indexExpression":{"expression":{"id":5370,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6390:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6394:6:11","memberName":"sender","nodeType":"MemberAccess","src":"6390:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6378:23:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":5373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6402:4:11","memberName":"push","nodeType":"MemberAccess","src":"6378:28:11","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256)"}},"id":5375,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6378:37:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5376,"nodeType":"ExpressionStatement","src":"6378:37:11"},{"expression":{"id":5381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5377,"name":"usedRandomness","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5022,"src":"6436:14:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"}},"id":5379,"indexExpression":{"id":5378,"name":"randomness","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5255,"src":"6451:10:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6436:26:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":5380,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6465:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"6436:33:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5382,"nodeType":"ExpressionStatement","src":"6436:33:11"},{"eventCall":{"arguments":[{"id":5384,"name":"roundId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5251,"src":"6509:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":5385,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6518:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6522:6:11","memberName":"sender","nodeType":"MemberAccess","src":"6518:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5387,"name":"mixedVote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5266,"src":"6530:9:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5388,"name":"mixIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5257,"src":"6541:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":5389,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"6551:5:11","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":5390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6557:9:11","memberName":"timestamp","nodeType":"MemberAccess","src":"6551:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5383,"name":"VoteSubmitted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5056,"src":"6495:13:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_bytes32_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,address,bytes32,uint256,uint256)"}},"id":5391,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6495:72:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5392,"nodeType":"EmitStatement","src":"6490:77:11"},{"expression":{"id":5393,"name":"mixedVote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5266,"src":"6595:9:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":5267,"id":5394,"nodeType":"Return","src":"6588:16:11"}]},"documentation":{"id":5249,"nodeType":"StructuredDocumentation","src":"4670:288:11","text":" @dev Submits a vote to the mixing round\n @param roundId The mixing round ID\n @param originalVote The original vote to mix\n @param randomness Random value for mixing\n @param mixIndex Index for mixing\n @return mixedVote The mixed vote"},"functionSelector":"b120a58a","id":5396,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":5260,"name":"roundId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5251,"src":"5139:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5261,"kind":"modifierInvocation","modifierName":{"id":5259,"name":"onlyActiveRound","nameLocations":["5123:15:11"],"nodeType":"IdentifierPath","referencedDeclaration":5100,"src":"5123:15:11"},"nodeType":"ModifierInvocation","src":"5123:24:11"},{"arguments":[{"id":5263,"name":"randomness","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5255,"src":"5177:10:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":5264,"kind":"modifierInvocation","modifierName":{"id":5262,"name":"onlyValidRandomness","nameLocations":["5157:19:11"],"nodeType":"IdentifierPath","referencedDeclaration":5131,"src":"5157:19:11"},"nodeType":"ModifierInvocation","src":"5157:31:11"}],"name":"submitVote","nameLocation":"4973:10:11","nodeType":"FunctionDefinition","parameters":{"id":5258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5251,"mutability":"mutable","name":"roundId","nameLocation":"5002:7:11","nodeType":"VariableDeclaration","scope":5396,"src":"4994:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5250,"name":"uint256","nodeType":"ElementaryTypeName","src":"4994:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5253,"mutability":"mutable","name":"originalVote","nameLocation":"5028:12:11","nodeType":"VariableDeclaration","scope":5396,"src":"5020:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5252,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5020:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5255,"mutability":"mutable","name":"randomness","nameLocation":"5059:10:11","nodeType":"VariableDeclaration","scope":5396,"src":"5051:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5254,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5051:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5257,"mutability":"mutable","name":"mixIndex","nameLocation":"5088:8:11","nodeType":"VariableDeclaration","scope":5396,"src":"5080:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5256,"name":"uint256","nodeType":"ElementaryTypeName","src":"5080:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4983:120:11"},"returnParameters":{"id":5267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5266,"mutability":"mutable","name":"mixedVote","nameLocation":"5215:9:11","nodeType":"VariableDeclaration","scope":5396,"src":"5207:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5265,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5207:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5206:19:11"},"scope":5908,"src":"4964:1648:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5495,"nodeType":"Block","src":"6808:862:11","statements":[{"assignments":[5406],"declarations":[{"constant":false,"id":5406,"mutability":"mutable","name":"round","nameLocation":"6839:5:11","nodeType":"VariableDeclaration","scope":5495,"src":"6819:25:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_MixingRound_$4986_storage_ptr","typeString":"struct VoteMixing.MixingRound"},"typeName":{"id":5405,"nodeType":"UserDefinedTypeName","pathNode":{"id":5404,"name":"MixingRound","nameLocations":["6819:11:11"],"nodeType":"IdentifierPath","referencedDeclaration":4986,"src":"6819:11:11"},"referencedDeclaration":4986,"src":"6819:11:11","typeDescriptions":{"typeIdentifier":"t_struct$_MixingRound_$4986_storage_ptr","typeString":"struct VoteMixing.MixingRound"}},"visibility":"internal"}],"id":5410,"initialValue":{"baseExpression":{"id":5407,"name":"mixingRounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5003,"src":"6847:12:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_MixingRound_$4986_storage_$","typeString":"mapping(uint256 => struct VoteMixing.MixingRound storage ref)"}},"id":5409,"indexExpression":{"id":5408,"name":"roundId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5399,"src":"6860:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6847:21:11","typeDescriptions":{"typeIdentifier":"t_struct$_MixingRound_$4986_storage","typeString":"struct VoteMixing.MixingRound storage ref"}},"nodeType":"VariableDeclarationStatement","src":"6819:49:11"},{"expression":{"arguments":[{"expression":{"id":5412,"name":"round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5406,"src":"6887:5:11","typeDescriptions":{"typeIdentifier":"t_struct$_MixingRound_$4986_storage_ptr","typeString":"struct VoteMixing.MixingRound storage pointer"}},"id":5413,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6893:8:11","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":4979,"src":"6887:14:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"526f756e64206e6f7420616374697665","id":5414,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6903:18:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_516cdb2ebb3256cebe8efc4290554288b70a3508a24d64eda281a8e6cf3b95b3","typeString":"literal_string \"Round not active\""},"value":"Round not active"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_516cdb2ebb3256cebe8efc4290554288b70a3508a24d64eda281a8e6cf3b95b3","typeString":"literal_string \"Round not active\""}],"id":5411,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"6879:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6879:43:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5416,"nodeType":"ExpressionStatement","src":"6879:43:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5418,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"6941:5:11","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":5419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6947:9:11","memberName":"timestamp","nodeType":"MemberAccess","src":"6941:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":5420,"name":"round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5406,"src":"6960:5:11","typeDescriptions":{"typeIdentifier":"t_struct$_MixingRound_$4986_storage_ptr","typeString":"struct VoteMixing.MixingRound storage pointer"}},"id":5421,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6966:7:11","memberName":"endTime","nodeType":"MemberAccess","referencedDeclaration":4975,"src":"6960:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6941:32:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"526f756e64206e6f7420656e646564","id":5423,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6975:17:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_eb2bb77277391433ef9418e0f0d2a778f6ef70c0edecd764e66116a9c5f3eb2b","typeString":"literal_string \"Round not ended\""},"value":"Round not ended"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_eb2bb77277391433ef9418e0f0d2a778f6ef70c0edecd764e66116a9c5f3eb2b","typeString":"literal_string \"Round not ended\""}],"id":5417,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"6933:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5424,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6933:60:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5425,"nodeType":"ExpressionStatement","src":"6933:60:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5427,"name":"round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5406,"src":"7012:5:11","typeDescriptions":{"typeIdentifier":"t_struct$_MixingRound_$4986_storage_ptr","typeString":"struct VoteMixing.MixingRound storage pointer"}},"id":5428,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7018:16:11","memberName":"participantCount","nodeType":"MemberAccess","referencedDeclaration":4983,"src":"7012:22:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":5429,"name":"minParticipants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5026,"src":"7038:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7012:41:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e74207061727469636970616e7473","id":5431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7055:27:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_57a1b922d1c44cf3cc1436441c2b43b8142b903ad199db948d690feac6801915","typeString":"literal_string \"Insufficient participants\""},"value":"Insufficient participants"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_57a1b922d1c44cf3cc1436441c2b43b8142b903ad199db948d690feac6801915","typeString":"literal_string \"Insufficient participants\""}],"id":5426,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"7004:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5432,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7004:79:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5433,"nodeType":"ExpressionStatement","src":"7004:79:11"},{"expression":{"id":5438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5434,"name":"round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5406,"src":"7104:5:11","typeDescriptions":{"typeIdentifier":"t_struct$_MixingRound_$4986_storage_ptr","typeString":"struct VoteMixing.MixingRound storage pointer"}},"id":5436,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7110:8:11","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":4979,"src":"7104:14:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":5437,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7121:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"7104:22:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5439,"nodeType":"ExpressionStatement","src":"7104:22:11"},{"assignments":[5444],"declarations":[{"constant":false,"id":5444,"mutability":"mutable","name":"mixedVotes","nameLocation":"7284:10:11","nodeType":"VariableDeclaration","scope":5495,"src":"7267:27:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":5442,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7267:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5443,"nodeType":"ArrayTypeName","src":"7267:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":5452,"initialValue":{"arguments":[{"expression":{"expression":{"id":5448,"name":"round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5406,"src":"7311:5:11","typeDescriptions":{"typeIdentifier":"t_struct$_MixingRound_$4986_storage_ptr","typeString":"struct VoteMixing.MixingRound storage pointer"}},"id":5449,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7317:10:11","memberName":"mixedVotes","nodeType":"MemberAccess","referencedDeclaration":4965,"src":"7311:16:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":5450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7328:6:11","memberName":"length","nodeType":"MemberAccess","src":"7311:23:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5447,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"7297:13:11","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes32[] memory)"},"typeName":{"baseType":{"id":5445,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7301:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5446,"nodeType":"ArrayTypeName","src":"7301:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}}},"id":5451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7297:38:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"7267:68:11"},{"body":{"id":5474,"nodeType":"Block","src":"7400:62:11","statements":[{"expression":{"id":5472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5465,"name":"mixedVotes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5444,"src":"7415:10:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":5467,"indexExpression":{"id":5466,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5454,"src":"7426:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7415:13:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"expression":{"id":5468,"name":"round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5406,"src":"7431:5:11","typeDescriptions":{"typeIdentifier":"t_struct$_MixingRound_$4986_storage_ptr","typeString":"struct VoteMixing.MixingRound storage pointer"}},"id":5469,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7437:10:11","memberName":"mixedVotes","nodeType":"MemberAccess","referencedDeclaration":4965,"src":"7431:16:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":5471,"indexExpression":{"id":5470,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5454,"src":"7448:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7431:19:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"7415:35:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5473,"nodeType":"ExpressionStatement","src":"7415:35:11"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5457,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5454,"src":"7366:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"expression":{"id":5458,"name":"round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5406,"src":"7370:5:11","typeDescriptions":{"typeIdentifier":"t_struct$_MixingRound_$4986_storage_ptr","typeString":"struct VoteMixing.MixingRound storage pointer"}},"id":5459,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7376:10:11","memberName":"mixedVotes","nodeType":"MemberAccess","referencedDeclaration":4965,"src":"7370:16:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":5460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7387:6:11","memberName":"length","nodeType":"MemberAccess","src":"7370:23:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7366:27:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5475,"initializationExpression":{"assignments":[5454],"declarations":[{"constant":false,"id":5454,"mutability":"mutable","name":"i","nameLocation":"7359:1:11","nodeType":"VariableDeclaration","scope":5475,"src":"7351:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5453,"name":"uint256","nodeType":"ElementaryTypeName","src":"7351:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5456,"initialValue":{"hexValue":"30","id":5455,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7363:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"7351:13:11"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":5463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7395:3:11","subExpression":{"id":5462,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5454,"src":"7395:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5464,"nodeType":"ExpressionStatement","src":"7395:3:11"},"nodeType":"ForStatement","src":"7346:116:11"},{"expression":{"id":5483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5476,"name":"round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5406,"src":"7472:5:11","typeDescriptions":{"typeIdentifier":"t_struct$_MixingRound_$4986_storage_ptr","typeString":"struct VoteMixing.MixingRound storage pointer"}},"id":5478,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7478:10:11","memberName":"merkleRoot","nodeType":"MemberAccess","referencedDeclaration":4985,"src":"7472:16:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5481,"name":"mixedVotes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5444,"src":"7537:10:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}],"expression":{"id":5479,"name":"CryptographicUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7219,"src":"7491:18:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_CryptographicUtils_$7219_$","typeString":"type(library CryptographicUtils)"}},"id":5480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7510:26:11","memberName":"createMerkleRootFromMemory","nodeType":"MemberAccess","referencedDeclaration":7072,"src":"7491:45:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes32[] memory) pure returns (bytes32)"}},"id":5482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7491:57:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"7472:76:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5484,"nodeType":"ExpressionStatement","src":"7472:76:11"},{"eventCall":{"arguments":[{"id":5486,"name":"roundId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5399,"src":"7595:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":5487,"name":"round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5406,"src":"7604:5:11","typeDescriptions":{"typeIdentifier":"t_struct$_MixingRound_$4986_storage_ptr","typeString":"struct VoteMixing.MixingRound storage pointer"}},"id":5488,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7610:16:11","memberName":"participantCount","nodeType":"MemberAccess","referencedDeclaration":4983,"src":"7604:22:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":5489,"name":"round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5406,"src":"7628:5:11","typeDescriptions":{"typeIdentifier":"t_struct$_MixingRound_$4986_storage_ptr","typeString":"struct VoteMixing.MixingRound storage pointer"}},"id":5490,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7634:10:11","memberName":"merkleRoot","nodeType":"MemberAccess","referencedDeclaration":4985,"src":"7628:16:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":5491,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"7646:5:11","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":5492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7652:9:11","memberName":"timestamp","nodeType":"MemberAccess","src":"7646:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5485,"name":"MixingRoundCompleted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5066,"src":"7574:20:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_bytes32_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256,bytes32,uint256)"}},"id":5493,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7574:88:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5494,"nodeType":"EmitStatement","src":"7569:93:11"}]},"documentation":{"id":5397,"nodeType":"StructuredDocumentation","src":"6620:117:11","text":" @dev Completes a mixing round and creates Merkle tree\n @param roundId The mixing round ID"},"functionSelector":"04dca6fa","id":5496,"implemented":true,"kind":"function","modifiers":[{"id":5402,"kind":"modifierInvocation","modifierName":{"id":5401,"name":"onlyOwner","nameLocations":["6798:9:11"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"6798:9:11"},"nodeType":"ModifierInvocation","src":"6798:9:11"}],"name":"completeMixingRound","nameLocation":"6752:19:11","nodeType":"FunctionDefinition","parameters":{"id":5400,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5399,"mutability":"mutable","name":"roundId","nameLocation":"6780:7:11","nodeType":"VariableDeclaration","scope":5496,"src":"6772:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5398,"name":"uint256","nodeType":"ElementaryTypeName","src":"6772:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6771:17:11"},"returnParameters":{"id":5403,"nodeType":"ParameterList","parameters":[],"src":"6808:0:11"},"scope":5908,"src":"6743:927:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5568,"nodeType":"Block","src":"8183:540:11","statements":[{"assignments":[5515],"declarations":[{"constant":false,"id":5515,"mutability":"mutable","name":"vote","nameLocation":"8212:4:11","nodeType":"VariableDeclaration","scope":5568,"src":"8194:22:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_MixedVote_$4960_storage_ptr","typeString":"struct VoteMixing.MixedVote"},"typeName":{"id":5514,"nodeType":"UserDefinedTypeName","pathNode":{"id":5513,"name":"MixedVote","nameLocations":["8194:9:11"],"nodeType":"IdentifierPath","referencedDeclaration":4960,"src":"8194:9:11"},"referencedDeclaration":4960,"src":"8194:9:11","typeDescriptions":{"typeIdentifier":"t_struct$_MixedVote_$4960_storage_ptr","typeString":"struct VoteMixing.MixedVote"}},"visibility":"internal"}],"id":5519,"initialValue":{"baseExpression":{"id":5516,"name":"mixedVotes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5008,"src":"8219:10:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_MixedVote_$4960_storage_$","typeString":"mapping(bytes32 => struct VoteMixing.MixedVote storage ref)"}},"id":5518,"indexExpression":{"id":5517,"name":"mixedVote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5501,"src":"8230:9:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8219:21:11","typeDescriptions":{"typeIdentifier":"t_struct$_MixedVote_$4960_storage","typeString":"struct VoteMixing.MixedVote storage ref"}},"nodeType":"VariableDeclarationStatement","src":"8194:46:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5521,"name":"vote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5515,"src":"8259:4:11","typeDescriptions":{"typeIdentifier":"t_struct$_MixedVote_$4960_storage_ptr","typeString":"struct VoteMixing.MixedVote storage pointer"}},"id":5522,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8264:5:11","memberName":"voter","nodeType":"MemberAccess","referencedDeclaration":4959,"src":"8259:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":5523,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8273:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8277:6:11","memberName":"sender","nodeType":"MemberAccess","src":"8273:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8259:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7420796f757220766f7465","id":5526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8285:15:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_68c38339e7f8527bca021e81c262ada4a2a1fee6c820a407205d421963108057","typeString":"literal_string \"Not your vote\""},"value":"Not your vote"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_68c38339e7f8527bca021e81c262ada4a2a1fee6c820a407205d421963108057","typeString":"literal_string \"Not your vote\""}],"id":5520,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"8251:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5527,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8251:50:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5528,"nodeType":"ExpressionStatement","src":"8251:50:11"},{"expression":{"arguments":[{"id":5532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"8320:16:11","subExpression":{"expression":{"id":5530,"name":"vote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5515,"src":"8321:4:11","typeDescriptions":{"typeIdentifier":"t_struct$_MixedVote_$4960_storage_ptr","typeString":"struct VoteMixing.MixedVote storage pointer"}},"id":5531,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8326:10:11","memberName":"isRevealed","nodeType":"MemberAccess","referencedDeclaration":4957,"src":"8321:15:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"566f746520616c72656164792072657665616c6564","id":5533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8338:23:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_d42d83aa0c2183a61b68cd47c8e1b5835de575ce708623305e88faa2e5d1fae2","typeString":"literal_string \"Vote already revealed\""},"value":"Vote already revealed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d42d83aa0c2183a61b68cd47c8e1b5835de575ce708623305e88faa2e5d1fae2","typeString":"literal_string \"Vote already revealed\""}],"id":5529,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"8312:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8312:50:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5535,"nodeType":"ExpressionStatement","src":"8312:50:11"},{"assignments":[5537],"declarations":[{"constant":false,"id":5537,"mutability":"mutable","name":"computedMixedVote","nameLocation":"8421:17:11","nodeType":"VariableDeclaration","scope":5568,"src":"8413:25:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5536,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8413:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":5544,"initialValue":{"arguments":[{"id":5540,"name":"originalVote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5503,"src":"8468:12:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5541,"name":"randomness","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5505,"src":"8482:10:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5542,"name":"mixIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5507,"src":"8494:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5538,"name":"CryptographicUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7219,"src":"8441:18:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_CryptographicUtils_$7219_$","typeString":"type(library CryptographicUtils)"}},"id":5539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8460:7:11","memberName":"mixVote","nodeType":"MemberAccess","referencedDeclaration":6790,"src":"8441:26:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32,uint256) pure returns (bytes32)"}},"id":5543,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8441:62:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"8413:90:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":5548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5546,"name":"computedMixedVote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5537,"src":"8522:17:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5547,"name":"mixedVote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5501,"src":"8543:9:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"8522:30:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642072657665616c","id":5549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8554:16:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_9011bf05b33bdd4aa147b19581dbf78541882e8cea7c343255f966df51e06eb8","typeString":"literal_string \"Invalid reveal\""},"value":"Invalid reveal"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9011bf05b33bdd4aa147b19581dbf78541882e8cea7c343255f966df51e06eb8","typeString":"literal_string \"Invalid reveal\""}],"id":5545,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"8514:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5550,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8514:57:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5551,"nodeType":"ExpressionStatement","src":"8514:57:11"},{"expression":{"id":5556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5552,"name":"vote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5515,"src":"8592:4:11","typeDescriptions":{"typeIdentifier":"t_struct$_MixedVote_$4960_storage_ptr","typeString":"struct VoteMixing.MixedVote storage pointer"}},"id":5554,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8597:10:11","memberName":"isRevealed","nodeType":"MemberAccess","referencedDeclaration":4957,"src":"8592:15:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":5555,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8610:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"8592:22:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5557,"nodeType":"ExpressionStatement","src":"8592:22:11"},{"eventCall":{"arguments":[{"id":5559,"name":"roundId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5499,"src":"8653:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":5560,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8662:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8666:6:11","memberName":"sender","nodeType":"MemberAccess","src":"8662:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5562,"name":"originalVote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5503,"src":"8674:12:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5563,"name":"mixedVote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5501,"src":"8688:9:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":5564,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"8699:5:11","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":5565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8705:9:11","memberName":"timestamp","nodeType":"MemberAccess","src":"8699:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5558,"name":"VoteRevealed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5078,"src":"8640:12:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_bytes32_$_t_bytes32_$_t_uint256_$returns$__$","typeString":"function (uint256,address,bytes32,bytes32,uint256)"}},"id":5566,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8640:75:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5567,"nodeType":"EmitStatement","src":"8635:80:11"}]},"documentation":{"id":5497,"nodeType":"StructuredDocumentation","src":"7678:298:11","text":" @dev Reveals a vote after mixing round completion\n @param roundId The mixing round ID\n @param mixedVote The mixed vote to reveal\n @param originalVote The original vote\n @param randomness The randomness used\n @param mixIndex The mix index used"},"functionSelector":"cb5a974a","id":5569,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":5510,"name":"roundId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5499,"src":"8174:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5511,"kind":"modifierInvocation","modifierName":{"id":5509,"name":"onlyRevealTime","nameLocations":["8159:14:11"],"nodeType":"IdentifierPath","referencedDeclaration":5117,"src":"8159:14:11"},"nodeType":"ModifierInvocation","src":"8159:23:11"}],"name":"revealVote","nameLocation":"7991:10:11","nodeType":"FunctionDefinition","parameters":{"id":5508,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5499,"mutability":"mutable","name":"roundId","nameLocation":"8020:7:11","nodeType":"VariableDeclaration","scope":5569,"src":"8012:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5498,"name":"uint256","nodeType":"ElementaryTypeName","src":"8012:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5501,"mutability":"mutable","name":"mixedVote","nameLocation":"8046:9:11","nodeType":"VariableDeclaration","scope":5569,"src":"8038:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5500,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8038:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5503,"mutability":"mutable","name":"originalVote","nameLocation":"8074:12:11","nodeType":"VariableDeclaration","scope":5569,"src":"8066:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5502,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8066:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5505,"mutability":"mutable","name":"randomness","nameLocation":"8105:10:11","nodeType":"VariableDeclaration","scope":5569,"src":"8097:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5504,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8097:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5507,"mutability":"mutable","name":"mixIndex","nameLocation":"8134:8:11","nodeType":"VariableDeclaration","scope":5569,"src":"8126:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5506,"name":"uint256","nodeType":"ElementaryTypeName","src":"8126:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8001:148:11"},"returnParameters":{"id":5512,"nodeType":"ParameterList","parameters":[],"src":"8183:0:11"},"scope":5908,"src":"7982:741:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5616,"nodeType":"Block","src":"9061:351:11","statements":[{"assignments":[5584],"declarations":[{"constant":false,"id":5584,"mutability":"mutable","name":"round","nameLocation":"9092:5:11","nodeType":"VariableDeclaration","scope":5616,"src":"9072:25:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_MixingRound_$4986_storage_ptr","typeString":"struct VoteMixing.MixingRound"},"typeName":{"id":5583,"nodeType":"UserDefinedTypeName","pathNode":{"id":5582,"name":"MixingRound","nameLocations":["9072:11:11"],"nodeType":"IdentifierPath","referencedDeclaration":4986,"src":"9072:11:11"},"referencedDeclaration":4986,"src":"9072:11:11","typeDescriptions":{"typeIdentifier":"t_struct$_MixingRound_$4986_storage_ptr","typeString":"struct VoteMixing.MixingRound"}},"visibility":"internal"}],"id":5588,"initialValue":{"baseExpression":{"id":5585,"name":"mixingRounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5003,"src":"9100:12:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_MixingRound_$4986_storage_$","typeString":"mapping(uint256 => struct VoteMixing.MixingRound storage ref)"}},"id":5587,"indexExpression":{"id":5586,"name":"roundId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5572,"src":"9113:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9100:21:11","typeDescriptions":{"typeIdentifier":"t_struct$_MixingRound_$4986_storage","typeString":"struct VoteMixing.MixingRound storage ref"}},"nodeType":"VariableDeclarationStatement","src":"9072:49:11"},{"expression":{"arguments":[{"id":5592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"9140:17:11","subExpression":{"expression":{"id":5590,"name":"round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5584,"src":"9141:5:11","typeDescriptions":{"typeIdentifier":"t_struct$_MixingRound_$4986_storage_ptr","typeString":"struct VoteMixing.MixingRound storage pointer"}},"id":5591,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9147:10:11","memberName":"isRevealed","nodeType":"MemberAccess","referencedDeclaration":4981,"src":"9141:16:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"526f756e6420616c72656164792072657665616c6564","id":5593,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9159:24:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_29b229e0e62a0970da0737f488a85eb94b636e19edb600c5b88ab103dc251e9f","typeString":"literal_string \"Round already revealed\""},"value":"Round already revealed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_29b229e0e62a0970da0737f488a85eb94b636e19edb600c5b88ab103dc251e9f","typeString":"literal_string \"Round already revealed\""}],"id":5589,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"9132:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9132:52:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5595,"nodeType":"ExpressionStatement","src":"9132:52:11"},{"expression":{"id":5600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5596,"name":"round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5584,"src":"9205:5:11","typeDescriptions":{"typeIdentifier":"t_struct$_MixingRound_$4986_storage_ptr","typeString":"struct VoteMixing.MixingRound storage pointer"}},"id":5598,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"9211:10:11","memberName":"isRevealed","nodeType":"MemberAccess","referencedDeclaration":4981,"src":"9205:16:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":5599,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9224:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"9205:23:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5601,"nodeType":"ExpressionStatement","src":"9205:23:11"},{"expression":{"id":5605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5602,"name":"revealedCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5580,"src":"9239:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":5603,"name":"round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5584,"src":"9255:5:11","typeDescriptions":{"typeIdentifier":"t_struct$_MixingRound_$4986_storage_ptr","typeString":"struct VoteMixing.MixingRound storage pointer"}},"id":5604,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9261:16:11","memberName":"participantCount","nodeType":"MemberAccess","referencedDeclaration":4983,"src":"9255:22:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9239:38:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5606,"nodeType":"ExpressionStatement","src":"9239:38:11"},{"eventCall":{"arguments":[{"id":5608,"name":"roundId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5572,"src":"9323:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5609,"name":"revealedCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5580,"src":"9332:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":5610,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"9347:5:11","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":5611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9353:9:11","memberName":"timestamp","nodeType":"MemberAccess","src":"9347:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5607,"name":"MixingRoundRevealed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5086,"src":"9303:19:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256,uint256)"}},"id":5612,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9303:60:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5613,"nodeType":"EmitStatement","src":"9298:65:11"},{"expression":{"id":5614,"name":"revealedCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5580,"src":"9391:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5581,"id":5615,"nodeType":"Return","src":"9384:20:11"}]},"documentation":{"id":5570,"nodeType":"StructuredDocumentation","src":"8731:159:11","text":" @dev Reveals all votes in a mixing round\n @param roundId The mixing round ID\n @return revealedCount Number of votes revealed"},"functionSelector":"2e1ddd08","id":5617,"implemented":true,"kind":"function","modifiers":[{"id":5575,"kind":"modifierInvocation","modifierName":{"id":5574,"name":"onlyOwner","nameLocations":["8969:9:11"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"8969:9:11"},"nodeType":"ModifierInvocation","src":"8969:9:11"},{"arguments":[{"id":5577,"name":"roundId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5572,"src":"9004:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5578,"kind":"modifierInvocation","modifierName":{"id":5576,"name":"onlyRevealTime","nameLocations":["8989:14:11"],"nodeType":"IdentifierPath","referencedDeclaration":5117,"src":"8989:14:11"},"nodeType":"ModifierInvocation","src":"8989:23:11"}],"name":"revealMixingRound","nameLocation":"8905:17:11","nodeType":"FunctionDefinition","parameters":{"id":5573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5572,"mutability":"mutable","name":"roundId","nameLocation":"8931:7:11","nodeType":"VariableDeclaration","scope":5617,"src":"8923:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5571,"name":"uint256","nodeType":"ElementaryTypeName","src":"8923:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8922:17:11"},"returnParameters":{"id":5581,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5580,"mutability":"mutable","name":"revealedCount","nameLocation":"9040:13:11","nodeType":"VariableDeclaration","scope":5617,"src":"9032:21:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5579,"name":"uint256","nodeType":"ElementaryTypeName","src":"9032:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9031:23:11"},"scope":5908,"src":"8896:516:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5630,"nodeType":"Block","src":"9677:47:11","statements":[{"expression":{"baseExpression":{"id":5626,"name":"mixingRounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5003,"src":"9695:12:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_MixingRound_$4986_storage_$","typeString":"mapping(uint256 => struct VoteMixing.MixingRound storage ref)"}},"id":5628,"indexExpression":{"id":5627,"name":"roundId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5620,"src":"9708:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9695:21:11","typeDescriptions":{"typeIdentifier":"t_struct$_MixingRound_$4986_storage","typeString":"struct VoteMixing.MixingRound storage ref"}},"functionReturnParameters":5625,"id":5629,"nodeType":"Return","src":"9688:28:11"}]},"documentation":{"id":5618,"nodeType":"StructuredDocumentation","src":"9453:134:11","text":" @dev Gets mixing round information\n @param roundId The round ID\n @return The mixing round structure"},"functionSelector":"0a232e67","id":5631,"implemented":true,"kind":"function","modifiers":[],"name":"getMixingRound","nameLocation":"9602:14:11","nodeType":"FunctionDefinition","parameters":{"id":5621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5620,"mutability":"mutable","name":"roundId","nameLocation":"9625:7:11","nodeType":"VariableDeclaration","scope":5631,"src":"9617:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5619,"name":"uint256","nodeType":"ElementaryTypeName","src":"9617:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9616:17:11"},"returnParameters":{"id":5625,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5624,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5631,"src":"9657:18:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_MixingRound_$4986_memory_ptr","typeString":"struct VoteMixing.MixingRound"},"typeName":{"id":5623,"nodeType":"UserDefinedTypeName","pathNode":{"id":5622,"name":"MixingRound","nameLocations":["9657:11:11"],"nodeType":"IdentifierPath","referencedDeclaration":4986,"src":"9657:11:11"},"referencedDeclaration":4986,"src":"9657:11:11","typeDescriptions":{"typeIdentifier":"t_struct$_MixingRound_$4986_storage_ptr","typeString":"struct VoteMixing.MixingRound"}},"visibility":"internal"}],"src":"9656:20:11"},"scope":5908,"src":"9593:131:11","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":5644,"nodeType":"Block","src":"9959:47:11","statements":[{"expression":{"baseExpression":{"id":5640,"name":"mixedVotes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5008,"src":"9977:10:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_MixedVote_$4960_storage_$","typeString":"mapping(bytes32 => struct VoteMixing.MixedVote storage ref)"}},"id":5642,"indexExpression":{"id":5641,"name":"mixedVote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5634,"src":"9988:9:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9977:21:11","typeDescriptions":{"typeIdentifier":"t_struct$_MixedVote_$4960_storage","typeString":"struct VoteMixing.MixedVote storage ref"}},"functionReturnParameters":5639,"id":5643,"nodeType":"Return","src":"9970:28:11"}]},"documentation":{"id":5632,"nodeType":"StructuredDocumentation","src":"9732:139:11","text":" @dev Gets mixed vote information\n @param mixedVote The mixed vote hash\n @return The mixed vote structure"},"functionSelector":"93bfe13e","id":5645,"implemented":true,"kind":"function","modifiers":[],"name":"getMixedVote","nameLocation":"9886:12:11","nodeType":"FunctionDefinition","parameters":{"id":5635,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5634,"mutability":"mutable","name":"mixedVote","nameLocation":"9907:9:11","nodeType":"VariableDeclaration","scope":5645,"src":"9899:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5633,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9899:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"9898:19:11"},"returnParameters":{"id":5639,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5638,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5645,"src":"9941:16:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_MixedVote_$4960_memory_ptr","typeString":"struct VoteMixing.MixedVote"},"typeName":{"id":5637,"nodeType":"UserDefinedTypeName","pathNode":{"id":5636,"name":"MixedVote","nameLocations":["9941:9:11"],"nodeType":"IdentifierPath","referencedDeclaration":4960,"src":"9941:9:11"},"referencedDeclaration":4960,"src":"9941:9:11","typeDescriptions":{"typeIdentifier":"t_struct$_MixedVote_$4960_storage_ptr","typeString":"struct VoteMixing.MixedVote"}},"visibility":"internal"}],"src":"9940:18:11"},"scope":5908,"src":"9877:129:11","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":5658,"nodeType":"Block","src":"10249:52:11","statements":[{"expression":{"baseExpression":{"id":5654,"name":"roundParticipants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5018,"src":"10267:17:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(uint256 => address[] storage ref)"}},"id":5656,"indexExpression":{"id":5655,"name":"roundId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5648,"src":"10285:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10267:26:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"functionReturnParameters":5653,"id":5657,"nodeType":"Return","src":"10260:33:11"}]},"documentation":{"id":5646,"nodeType":"StructuredDocumentation","src":"10014:141:11","text":" @dev Gets all participants in a round\n @param roundId The round ID\n @return Array of participant addresses"},"functionSelector":"37305df5","id":5659,"implemented":true,"kind":"function","modifiers":[],"name":"getRoundParticipants","nameLocation":"10170:20:11","nodeType":"FunctionDefinition","parameters":{"id":5649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5648,"mutability":"mutable","name":"roundId","nameLocation":"10199:7:11","nodeType":"VariableDeclaration","scope":5659,"src":"10191:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5647,"name":"uint256","nodeType":"ElementaryTypeName","src":"10191:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10190:17:11"},"returnParameters":{"id":5653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5652,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5659,"src":"10231:16:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":5650,"name":"address","nodeType":"ElementaryTypeName","src":"10231:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5651,"nodeType":"ArrayTypeName","src":"10231:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"10230:18:11"},"scope":5908,"src":"10161:140:11","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":5672,"nodeType":"Block","src":"10534:44:11","statements":[{"expression":{"baseExpression":{"id":5668,"name":"voterRounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5013,"src":"10552:11:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[] storage ref)"}},"id":5670,"indexExpression":{"id":5669,"name":"voter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5662,"src":"10564:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10552:18:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"functionReturnParameters":5667,"id":5671,"nodeType":"Return","src":"10545:25:11"}]},"documentation":{"id":5660,"nodeType":"StructuredDocumentation","src":"10309:139:11","text":" @dev Gets all rounds a voter participated in\n @param voter The voter address\n @return Array of round IDs"},"functionSelector":"18ce408f","id":5673,"implemented":true,"kind":"function","modifiers":[],"name":"getVoterRounds","nameLocation":"10463:14:11","nodeType":"FunctionDefinition","parameters":{"id":5663,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5662,"mutability":"mutable","name":"voter","nameLocation":"10486:5:11","nodeType":"VariableDeclaration","scope":5673,"src":"10478:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5661,"name":"address","nodeType":"ElementaryTypeName","src":"10478:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10477:15:11"},"returnParameters":{"id":5667,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5666,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5673,"src":"10516:16:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5664,"name":"uint256","nodeType":"ElementaryTypeName","src":"10516:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5665,"nodeType":"ArrayTypeName","src":"10516:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"10515:18:11"},"scope":5908,"src":"10454:124:11","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":5687,"nodeType":"Block","src":"10814:58:11","statements":[{"expression":{"expression":{"baseExpression":{"id":5682,"name":"mixingRounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5003,"src":"10832:12:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_MixingRound_$4986_storage_$","typeString":"mapping(uint256 => struct VoteMixing.MixingRound storage ref)"}},"id":5684,"indexExpression":{"id":5683,"name":"roundId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5676,"src":"10845:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10832:21:11","typeDescriptions":{"typeIdentifier":"t_struct$_MixingRound_$4986_storage","typeString":"struct VoteMixing.MixingRound storage ref"}},"id":5685,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10854:10:11","memberName":"mixedVotes","nodeType":"MemberAccess","referencedDeclaration":4965,"src":"10832:32:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"functionReturnParameters":5681,"id":5686,"nodeType":"Return","src":"10825:39:11"}]},"documentation":{"id":5674,"nodeType":"StructuredDocumentation","src":"10586:136:11","text":" @dev Gets all mixed votes in a round\n @param roundId The round ID\n @return Array of mixed vote hashes"},"functionSelector":"47ebc739","id":5688,"implemented":true,"kind":"function","modifiers":[],"name":"getRoundMixedVotes","nameLocation":"10737:18:11","nodeType":"FunctionDefinition","parameters":{"id":5677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5676,"mutability":"mutable","name":"roundId","nameLocation":"10764:7:11","nodeType":"VariableDeclaration","scope":5688,"src":"10756:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5675,"name":"uint256","nodeType":"ElementaryTypeName","src":"10756:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10755:17:11"},"returnParameters":{"id":5681,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5680,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5688,"src":"10796:16:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":5678,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10796:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5679,"nodeType":"ArrayTypeName","src":"10796:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"10795:18:11"},"scope":5908,"src":"10728:144:11","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":5711,"nodeType":"Block","src":"11272:166:11","statements":[{"expression":{"arguments":[{"id":5703,"name":"mixedVote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5693,"src":"11341:9:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5704,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5696,"src":"11366:5:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},{"expression":{"baseExpression":{"id":5705,"name":"mixingRounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5003,"src":"11387:12:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_MixingRound_$4986_storage_$","typeString":"mapping(uint256 => struct VoteMixing.MixingRound storage ref)"}},"id":5707,"indexExpression":{"id":5706,"name":"roundId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5691,"src":"11400:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11387:21:11","typeDescriptions":{"typeIdentifier":"t_struct$_MixingRound_$4986_storage","typeString":"struct VoteMixing.MixingRound storage ref"}},"id":5708,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11409:10:11","memberName":"merkleRoot","nodeType":"MemberAccess","referencedDeclaration":4985,"src":"11387:32:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":5701,"name":"CryptographicUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7219,"src":"11290:18:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_CryptographicUtils_$7219_$","typeString":"type(library CryptographicUtils)"}},"id":5702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11309:17:11","memberName":"verifyMerkleProof","nodeType":"MemberAccess","referencedDeclaration":6868,"src":"11290:36:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_array$_t_bytes32_$dyn_calldata_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32[] calldata,bytes32) pure returns (bool)"}},"id":5709,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11290:140:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5700,"id":5710,"nodeType":"Return","src":"11283:147:11"}]},"documentation":{"id":5689,"nodeType":"StructuredDocumentation","src":"10880:232:11","text":" @dev Verifies a vote's inclusion in the mixing round\n @param roundId The round ID\n @param mixedVote The mixed vote\n @param proof The Merkle proof\n @return Whether the vote is included"},"functionSelector":"cfe16223","id":5712,"implemented":true,"kind":"function","modifiers":[],"name":"verifyVoteInclusion","nameLocation":"11127:19:11","nodeType":"FunctionDefinition","parameters":{"id":5697,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5691,"mutability":"mutable","name":"roundId","nameLocation":"11165:7:11","nodeType":"VariableDeclaration","scope":5712,"src":"11157:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5690,"name":"uint256","nodeType":"ElementaryTypeName","src":"11157:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5693,"mutability":"mutable","name":"mixedVote","nameLocation":"11191:9:11","nodeType":"VariableDeclaration","scope":5712,"src":"11183:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5692,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11183:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5696,"mutability":"mutable","name":"proof","nameLocation":"11230:5:11","nodeType":"VariableDeclaration","scope":5712,"src":"11211:24:11","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":5694,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11211:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5695,"nodeType":"ArrayTypeName","src":"11211:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"11146:96:11"},"returnParameters":{"id":5700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5699,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5712,"src":"11266:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5698,"name":"bool","nodeType":"ElementaryTypeName","src":"11266:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11265:6:11"},"scope":5908,"src":"11118:320:11","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":5755,"nodeType":"Block","src":"11730:262:11","statements":[{"assignments":[5726],"declarations":[{"constant":false,"id":5726,"mutability":"mutable","name":"participants","nameLocation":"11758:12:11","nodeType":"VariableDeclaration","scope":5755,"src":"11741:29:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":5724,"name":"address","nodeType":"ElementaryTypeName","src":"11741:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5725,"nodeType":"ArrayTypeName","src":"11741:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":5730,"initialValue":{"baseExpression":{"id":5727,"name":"roundParticipants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5018,"src":"11773:17:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(uint256 => address[] storage ref)"}},"id":5729,"indexExpression":{"id":5728,"name":"roundId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5715,"src":"11791:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11773:26:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"nodeType":"VariableDeclarationStatement","src":"11741:58:11"},{"body":{"id":5751,"nodeType":"Block","src":"11860:102:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":5742,"name":"participants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5726,"src":"11879:12:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":5744,"indexExpression":{"id":5743,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5732,"src":"11892:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11879:15:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5745,"name":"voter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5717,"src":"11898:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11879:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5750,"nodeType":"IfStatement","src":"11875:76:11","trueBody":{"id":5749,"nodeType":"Block","src":"11905:46:11","statements":[{"expression":{"hexValue":"74727565","id":5747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11931:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":5721,"id":5748,"nodeType":"Return","src":"11924:11:11"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5735,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5732,"src":"11830:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":5736,"name":"participants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5726,"src":"11834:12:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":5737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11847:6:11","memberName":"length","nodeType":"MemberAccess","src":"11834:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11830:23:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5752,"initializationExpression":{"assignments":[5732],"declarations":[{"constant":false,"id":5732,"mutability":"mutable","name":"i","nameLocation":"11823:1:11","nodeType":"VariableDeclaration","scope":5752,"src":"11815:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5731,"name":"uint256","nodeType":"ElementaryTypeName","src":"11815:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5734,"initialValue":{"hexValue":"30","id":5733,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11827:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11815:13:11"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":5740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"11855:3:11","subExpression":{"id":5739,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5732,"src":"11855:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5741,"nodeType":"ExpressionStatement","src":"11855:3:11"},"nodeType":"ForStatement","src":"11810:152:11"},{"expression":{"hexValue":"66616c7365","id":5753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11979:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":5721,"id":5754,"nodeType":"Return","src":"11972:12:11"}]},"documentation":{"id":5713,"nodeType":"StructuredDocumentation","src":"11446:189:11","text":" @dev Checks if a voter participated in a round\n @param roundId The round ID\n @param voter The voter address\n @return Whether the voter participated"},"functionSelector":"cc5dd326","id":5756,"implemented":true,"kind":"function","modifiers":[],"name":"hasVoterParticipated","nameLocation":"11650:20:11","nodeType":"FunctionDefinition","parameters":{"id":5718,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5715,"mutability":"mutable","name":"roundId","nameLocation":"11679:7:11","nodeType":"VariableDeclaration","scope":5756,"src":"11671:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5714,"name":"uint256","nodeType":"ElementaryTypeName","src":"11671:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5717,"mutability":"mutable","name":"voter","nameLocation":"11696:5:11","nodeType":"VariableDeclaration","scope":5756,"src":"11688:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5716,"name":"address","nodeType":"ElementaryTypeName","src":"11688:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"11670:32:11"},"returnParameters":{"id":5721,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5720,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5756,"src":"11724:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5719,"name":"bool","nodeType":"ElementaryTypeName","src":"11724:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11723:6:11"},"scope":5908,"src":"11641:351:11","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":5774,"nodeType":"Block","src":"12479:89:11","statements":[{"expression":{"components":[{"id":5768,"name":"minParticipants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5760,"src":"12498:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5769,"name":"maxParticipants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5762,"src":"12515:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5770,"name":"mixingDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5764,"src":"12532:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5771,"name":"revealDelay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5766,"src":"12548:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5772,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12497:63:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256,uint256,uint256)"}},"functionReturnParameters":5767,"id":5773,"nodeType":"Return","src":"12490:70:11"}]},"documentation":{"id":5757,"nodeType":"StructuredDocumentation","src":"12000:281:11","text":" @dev Gets mixing parameters\n @return minParticipants Minimum participants required\n @return maxParticipants Maximum participants allowed\n @return mixingDuration Duration of mixing phase\n @return revealDelay Delay before reveal phase"},"functionSelector":"d73705e5","id":5775,"implemented":true,"kind":"function","modifiers":[],"name":"getMixingParameters","nameLocation":"12296:19:11","nodeType":"FunctionDefinition","parameters":{"id":5758,"nodeType":"ParameterList","parameters":[],"src":"12315:2:11"},"returnParameters":{"id":5767,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5760,"mutability":"mutable","name":"minParticipants","nameLocation":"12359:15:11","nodeType":"VariableDeclaration","scope":5775,"src":"12351:23:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5759,"name":"uint256","nodeType":"ElementaryTypeName","src":"12351:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5762,"mutability":"mutable","name":"maxParticipants","nameLocation":"12393:15:11","nodeType":"VariableDeclaration","scope":5775,"src":"12385:23:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5761,"name":"uint256","nodeType":"ElementaryTypeName","src":"12385:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5764,"mutability":"mutable","name":"mixingDuration","nameLocation":"12427:14:11","nodeType":"VariableDeclaration","scope":5775,"src":"12419:22:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5763,"name":"uint256","nodeType":"ElementaryTypeName","src":"12419:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5766,"mutability":"mutable","name":"revealDelay","nameLocation":"12460:11:11","nodeType":"VariableDeclaration","scope":5775,"src":"12452:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5765,"name":"uint256","nodeType":"ElementaryTypeName","src":"12452:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12340:138:11"},"scope":5908,"src":"12287:281:11","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":5783,"nodeType":"Block","src":"12727:38:11","statements":[{"expression":{"id":5781,"name":"roundCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5024,"src":"12745:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5780,"id":5782,"nodeType":"Return","src":"12738:19:11"}]},"documentation":{"id":5776,"nodeType":"StructuredDocumentation","src":"12576:87:11","text":" @dev Gets total number of rounds\n @return Total round count"},"functionSelector":"1ad1ec22","id":5784,"implemented":true,"kind":"function","modifiers":[],"name":"getTotalRounds","nameLocation":"12678:14:11","nodeType":"FunctionDefinition","parameters":{"id":5777,"nodeType":"ParameterList","parameters":[],"src":"12692:2:11"},"returnParameters":{"id":5780,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5779,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5784,"src":"12718:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5778,"name":"uint256","nodeType":"ElementaryTypeName","src":"12718:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12717:9:11"},"scope":5908,"src":"12669:96:11","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":5814,"nodeType":"Block","src":"13267:178:11","statements":[{"expression":{"id":5800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5798,"name":"minParticipants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5026,"src":"13278:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5799,"name":"_minParticipants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5787,"src":"13296:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13278:34:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5801,"nodeType":"ExpressionStatement","src":"13278:34:11"},{"expression":{"id":5804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5802,"name":"maxParticipants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5028,"src":"13323:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5803,"name":"_maxParticipants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5789,"src":"13341:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13323:34:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5805,"nodeType":"ExpressionStatement","src":"13323:34:11"},{"expression":{"id":5808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5806,"name":"mixingDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5030,"src":"13368:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5807,"name":"_mixingDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5791,"src":"13385:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13368:32:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5809,"nodeType":"ExpressionStatement","src":"13368:32:11"},{"expression":{"id":5812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5810,"name":"revealDelay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5032,"src":"13411:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5811,"name":"_revealDelay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5793,"src":"13425:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13411:26:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5813,"nodeType":"ExpressionStatement","src":"13411:26:11"}]},"documentation":{"id":5785,"nodeType":"StructuredDocumentation","src":"12807:261:11","text":" @dev Updates mixing parameters\n @param _minParticipants New minimum participants\n @param _maxParticipants New maximum participants\n @param _mixingDuration New mixing duration\n @param _revealDelay New reveal delay"},"functionSelector":"8cf723b8","id":5815,"implemented":true,"kind":"function","modifiers":[{"id":5796,"kind":"modifierInvocation","modifierName":{"id":5795,"name":"onlyOwner","nameLocations":["13257:9:11"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"13257:9:11"},"nodeType":"ModifierInvocation","src":"13257:9:11"}],"name":"updateMixingParameters","nameLocation":"13083:22:11","nodeType":"FunctionDefinition","parameters":{"id":5794,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5787,"mutability":"mutable","name":"_minParticipants","nameLocation":"13124:16:11","nodeType":"VariableDeclaration","scope":5815,"src":"13116:24:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5786,"name":"uint256","nodeType":"ElementaryTypeName","src":"13116:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5789,"mutability":"mutable","name":"_maxParticipants","nameLocation":"13159:16:11","nodeType":"VariableDeclaration","scope":5815,"src":"13151:24:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5788,"name":"uint256","nodeType":"ElementaryTypeName","src":"13151:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5791,"mutability":"mutable","name":"_mixingDuration","nameLocation":"13194:15:11","nodeType":"VariableDeclaration","scope":5815,"src":"13186:23:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5790,"name":"uint256","nodeType":"ElementaryTypeName","src":"13186:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5793,"mutability":"mutable","name":"_revealDelay","nameLocation":"13228:12:11","nodeType":"VariableDeclaration","scope":5815,"src":"13220:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5792,"name":"uint256","nodeType":"ElementaryTypeName","src":"13220:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13105:142:11"},"returnParameters":{"id":5797,"nodeType":"ParameterList","parameters":[],"src":"13267:0:11"},"scope":5908,"src":"13074:371:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5827,"nodeType":"Block","src":"13626:42:11","statements":[{"expression":{"id":5825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5823,"name":"mixingEnabled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5034,"src":"13637:13:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5824,"name":"enabled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5818,"src":"13653:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13637:23:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5826,"nodeType":"ExpressionStatement","src":"13637:23:11"}]},"documentation":{"id":5816,"nodeType":"StructuredDocumentation","src":"13453:108:11","text":" @dev Enables or disables mixing\n @param enabled Whether mixing should be enabled"},"functionSelector":"5b7f1e5d","id":5828,"implemented":true,"kind":"function","modifiers":[{"id":5821,"kind":"modifierInvocation","modifierName":{"id":5820,"name":"onlyOwner","nameLocations":["13616:9:11"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"13616:9:11"},"nodeType":"ModifierInvocation","src":"13616:9:11"}],"name":"setMixingEnabled","nameLocation":"13576:16:11","nodeType":"FunctionDefinition","parameters":{"id":5819,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5818,"mutability":"mutable","name":"enabled","nameLocation":"13598:7:11","nodeType":"VariableDeclaration","scope":5828,"src":"13593:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5817,"name":"bool","nodeType":"ElementaryTypeName","src":"13593:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"13592:14:11"},"returnParameters":{"id":5822,"nodeType":"ParameterList","parameters":[],"src":"13626:0:11"},"scope":5908,"src":"13567:101:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5851,"nodeType":"Block","src":"13875:127:11","statements":[{"expression":{"arguments":[{"expression":{"baseExpression":{"id":5837,"name":"mixingRounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5003,"src":"13894:12:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_MixingRound_$4986_storage_$","typeString":"mapping(uint256 => struct VoteMixing.MixingRound storage ref)"}},"id":5839,"indexExpression":{"id":5838,"name":"roundId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5831,"src":"13907:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13894:21:11","typeDescriptions":{"typeIdentifier":"t_struct$_MixingRound_$4986_storage","typeString":"struct VoteMixing.MixingRound storage ref"}},"id":5840,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13916:8:11","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":4979,"src":"13894:30:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"526f756e64206e6f7420616374697665","id":5841,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13926:18:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_516cdb2ebb3256cebe8efc4290554288b70a3508a24d64eda281a8e6cf3b95b3","typeString":"literal_string \"Round not active\""},"value":"Round not active"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_516cdb2ebb3256cebe8efc4290554288b70a3508a24d64eda281a8e6cf3b95b3","typeString":"literal_string \"Round not active\""}],"id":5836,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"13886:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5842,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13886:59:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5843,"nodeType":"ExpressionStatement","src":"13886:59:11"},{"expression":{"id":5849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":5844,"name":"mixingRounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5003,"src":"13956:12:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_MixingRound_$4986_storage_$","typeString":"mapping(uint256 => struct VoteMixing.MixingRound storage ref)"}},"id":5846,"indexExpression":{"id":5845,"name":"roundId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5831,"src":"13969:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13956:21:11","typeDescriptions":{"typeIdentifier":"t_struct$_MixingRound_$4986_storage","typeString":"struct VoteMixing.MixingRound storage ref"}},"id":5847,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"13978:8:11","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":4979,"src":"13956:30:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":5848,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13989:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"13956:38:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5850,"nodeType":"ExpressionStatement","src":"13956:38:11"}]},"documentation":{"id":5829,"nodeType":"StructuredDocumentation","src":"13676:123:11","text":" @dev Emergency function to invalidate a mixing round\n @param roundId The round ID to invalidate"},"functionSelector":"45cba114","id":5852,"implemented":true,"kind":"function","modifiers":[{"id":5834,"kind":"modifierInvocation","modifierName":{"id":5833,"name":"onlyOwner","nameLocations":["13865:9:11"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"13865:9:11"},"nodeType":"ModifierInvocation","src":"13865:9:11"}],"name":"emergencyInvalidateRound","nameLocation":"13814:24:11","nodeType":"FunctionDefinition","parameters":{"id":5832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5831,"mutability":"mutable","name":"roundId","nameLocation":"13847:7:11","nodeType":"VariableDeclaration","scope":5852,"src":"13839:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5830,"name":"uint256","nodeType":"ElementaryTypeName","src":"13839:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13838:17:11"},"returnParameters":{"id":5835,"nodeType":"ParameterList","parameters":[],"src":"13875:0:11"},"scope":5908,"src":"13805:197:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5874,"nodeType":"Block","src":"14290:132:11","statements":[{"assignments":[5861],"declarations":[{"constant":false,"id":5861,"mutability":"mutable","name":"random","nameLocation":"14309:6:11","nodeType":"VariableDeclaration","scope":5874,"src":"14301:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5860,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14301:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":5866,"initialValue":{"arguments":[{"id":5864,"name":"seed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5855,"src":"14358:4:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":5862,"name":"CryptographicUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7219,"src":"14318:18:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_CryptographicUtils_$7219_$","typeString":"type(library CryptographicUtils)"}},"id":5863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14337:20:11","memberName":"generateRandomNumber","nodeType":"MemberAccess","referencedDeclaration":7192,"src":"14318:39:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":5865,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14318:45:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"14301:62:11"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5869,"name":"random","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5861,"src":"14389:6:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5868,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14381:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5867,"name":"uint256","nodeType":"ElementaryTypeName","src":"14381:7:11","typeDescriptions":{}}},"id":5870,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14381:15:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":5871,"name":"maxParticipants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5028,"src":"14399:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14381:33:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5859,"id":5873,"nodeType":"Return","src":"14374:40:11"}]},"documentation":{"id":5853,"nodeType":"StructuredDocumentation","src":"14046:157:11","text":" @dev Generates a random mixing index\n @param seed Additional seed for randomness\n @return mixIndex The generated mix index"},"functionSelector":"10956f27","id":5875,"implemented":true,"kind":"function","modifiers":[],"name":"generateMixIndex","nameLocation":"14218:16:11","nodeType":"FunctionDefinition","parameters":{"id":5856,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5855,"mutability":"mutable","name":"seed","nameLocation":"14243:4:11","nodeType":"VariableDeclaration","scope":5875,"src":"14235:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5854,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14235:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"14234:14:11"},"returnParameters":{"id":5859,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5858,"mutability":"mutable","name":"mixIndex","nameLocation":"14280:8:11","nodeType":"VariableDeclaration","scope":5875,"src":"14272:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5857,"name":"uint256","nodeType":"ElementaryTypeName","src":"14272:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14271:18:11"},"scope":5908,"src":"14209:213:11","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":5906,"nodeType":"Block","src":"14923:264:11","statements":[{"expression":{"id":5902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5890,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5888,"src":"14934:5:11","typeDescriptions":{"typeIdentifier":"t_struct$_MixingProof_$4998_memory_ptr","typeString":"struct VoteMixing.MixingProof memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5892,"name":"originalVote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5878,"src":"14983:12:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5893,"name":"mixedVote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5880,"src":"15021:9:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5894,"name":"randomness","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5882,"src":"15057:10:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5895,"name":"mixIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5884,"src":"15092:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":5899,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15142:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5898,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"15128:13:11","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes32[] memory)"},"typeName":{"baseType":{"id":5896,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15132:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5897,"nodeType":"ArrayTypeName","src":"15132:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}}},"id":5900,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15128:16:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}],"id":5891,"name":"MixingProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4998,"src":"14942:11:11","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_MixingProof_$4998_storage_ptr_$","typeString":"type(struct VoteMixing.MixingProof storage pointer)"}},"id":5901,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["14969:12:11","15010:9:11","15045:10:11","15082:8:11","15115:11:11"],"names":["originalVote","mixedVote","randomness","mixIndex","merkleProof"],"nodeType":"FunctionCall","src":"14942:214:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_MixingProof_$4998_memory_ptr","typeString":"struct VoteMixing.MixingProof memory"}},"src":"14934:222:11","typeDescriptions":{"typeIdentifier":"t_struct$_MixingProof_$4998_memory_ptr","typeString":"struct VoteMixing.MixingProof memory"}},"id":5903,"nodeType":"ExpressionStatement","src":"14934:222:11"},{"expression":{"id":5904,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5888,"src":"15174:5:11","typeDescriptions":{"typeIdentifier":"t_struct$_MixingProof_$4998_memory_ptr","typeString":"struct VoteMixing.MixingProof memory"}},"functionReturnParameters":5889,"id":5905,"nodeType":"Return","src":"15167:12:11"}]},"documentation":{"id":5876,"nodeType":"StructuredDocumentation","src":"14430:289:11","text":" @dev Creates a mixing proof for verification\n @param originalVote The original vote\n @param mixedVote The mixed vote\n @param randomness The randomness used\n @param mixIndex The mix index used\n @return proof The mixing proof structure"},"functionSelector":"e514ef2e","id":5907,"implemented":true,"kind":"function","modifiers":[],"name":"createMixingProof","nameLocation":"14734:17:11","nodeType":"FunctionDefinition","parameters":{"id":5885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5878,"mutability":"mutable","name":"originalVote","nameLocation":"14770:12:11","nodeType":"VariableDeclaration","scope":5907,"src":"14762:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5877,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14762:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5880,"mutability":"mutable","name":"mixedVote","nameLocation":"14801:9:11","nodeType":"VariableDeclaration","scope":5907,"src":"14793:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5879,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14793:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5882,"mutability":"mutable","name":"randomness","nameLocation":"14829:10:11","nodeType":"VariableDeclaration","scope":5907,"src":"14821:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5881,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14821:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5884,"mutability":"mutable","name":"mixIndex","nameLocation":"14858:8:11","nodeType":"VariableDeclaration","scope":5907,"src":"14850:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5883,"name":"uint256","nodeType":"ElementaryTypeName","src":"14850:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14751:122:11"},"returnParameters":{"id":5889,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5888,"mutability":"mutable","name":"proof","nameLocation":"14916:5:11","nodeType":"VariableDeclaration","scope":5907,"src":"14897:24:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_MixingProof_$4998_memory_ptr","typeString":"struct VoteMixing.MixingProof"},"typeName":{"id":5887,"nodeType":"UserDefinedTypeName","pathNode":{"id":5886,"name":"MixingProof","nameLocations":["14897:11:11"],"nodeType":"IdentifierPath","referencedDeclaration":4998,"src":"14897:11:11"},"referencedDeclaration":4998,"src":"14897:11:11","typeDescriptions":{"typeIdentifier":"t_struct$_MixingProof_$4998_storage_ptr","typeString":"struct VoteMixing.MixingProof"}},"visibility":"internal"}],"src":"14896:26:11"},"scope":5908,"src":"14725:462:11","stateMutability":"pure","virtual":false,"visibility":"external"}],"scope":5909,"src":"378:14812:11","usedErrors":[13,18,299],"usedEvents":[24,5044,5056,5066,5078,5086]}],"src":"33:15158:11"},"id":11},"contracts/ZKProofVerifier.sol":{"ast":{"absolutePath":"contracts/ZKProofVerifier.sol","exportedSymbols":{"Context":[177],"CryptographicUtils":[7219],"ECDSA":[702],"Hashes":[742],"MerkleProof":[1815],"Ownable":[147],"ZKProofVerifier":[6512]},"id":6513,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5910,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:12"},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":5911,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6513,"sourceUnit":148,"src":"60:52:12","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/libraries/CryptographicUtils.sol","file":"./libraries/CryptographicUtils.sol","id":5912,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6513,"sourceUnit":7220,"src":"114:44:12","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":5914,"name":"Ownable","nameLocations":["367:7:12"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"367:7:12"},"id":5915,"nodeType":"InheritanceSpecifier","src":"367:7:12"}],"canonicalName":"ZKProofVerifier","contractDependencies":[],"contractKind":"contract","documentation":{"id":5913,"nodeType":"StructuredDocumentation","src":"162:175:12","text":" @title ZKProofVerifier\n @dev Zero-Knowledge Proof verification for vote privacy and verifiability\n @notice Implements zk-SNARKs principles for secure voting"},"fullyImplemented":true,"id":6512,"linearizedBaseContracts":[6512,147,177],"name":"ZKProofVerifier","nameLocation":"348:15:12","nodeType":"ContractDefinition","nodes":[{"global":false,"id":5917,"libraryName":{"id":5916,"name":"CryptographicUtils","nameLocations":["388:18:12"],"nodeType":"IdentifierPath","referencedDeclaration":7219,"src":"388:18:12"},"nodeType":"UsingForDirective","src":"382:31:12"},{"canonicalName":"ZKProofVerifier.ZKProof","id":5930,"members":[{"constant":false,"id":5919,"mutability":"mutable","name":"publicInputs","nameLocation":"479:12:12","nodeType":"VariableDeclaration","scope":5930,"src":"471:20:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5918,"name":"bytes32","nodeType":"ElementaryTypeName","src":"471:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5921,"mutability":"mutable","name":"nullifierHash","nameLocation":"545:13:12","nodeType":"VariableDeclaration","scope":5930,"src":"537:21:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5920,"name":"bytes32","nodeType":"ElementaryTypeName","src":"537:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5923,"mutability":"mutable","name":"commitmentHash","nameLocation":"616:14:12","nodeType":"VariableDeclaration","scope":5930,"src":"608:22:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5922,"name":"bytes32","nodeType":"ElementaryTypeName","src":"608:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5925,"mutability":"mutable","name":"proofHash","nameLocation":"678:9:12","nodeType":"VariableDeclaration","scope":5930,"src":"670:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5924,"name":"bytes32","nodeType":"ElementaryTypeName","src":"670:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5927,"mutability":"mutable","name":"timestamp","nameLocation":"750:9:12","nodeType":"VariableDeclaration","scope":5930,"src":"742:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5926,"name":"uint256","nodeType":"ElementaryTypeName","src":"742:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5929,"mutability":"mutable","name":"verified","nameLocation":"813:8:12","nodeType":"VariableDeclaration","scope":5930,"src":"808:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5928,"name":"bool","nodeType":"ElementaryTypeName","src":"808:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"ZKProof","nameLocation":"452:7:12","nodeType":"StructDefinition","scope":6512,"src":"445:435:12","visibility":"public"},{"canonicalName":"ZKProofVerifier.VoteProof","id":5942,"members":[{"constant":false,"id":5932,"mutability":"mutable","name":"voter","nameLocation":"924:5:12","nodeType":"VariableDeclaration","scope":5942,"src":"916:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5931,"name":"address","nodeType":"ElementaryTypeName","src":"916:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5934,"mutability":"mutable","name":"voteHash","nameLocation":"992:8:12","nodeType":"VariableDeclaration","scope":5942,"src":"984:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5933,"name":"bytes32","nodeType":"ElementaryTypeName","src":"984:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5936,"mutability":"mutable","name":"nullifier","nameLocation":"1055:9:12","nodeType":"VariableDeclaration","scope":5942,"src":"1047:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5935,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1047:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5938,"mutability":"mutable","name":"secret","nameLocation":"1111:6:12","nodeType":"VariableDeclaration","scope":5942,"src":"1103:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5937,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1103:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5941,"mutability":"mutable","name":"zkProof","nameLocation":"1178:7:12","nodeType":"VariableDeclaration","scope":5942,"src":"1170:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_ZKProof_$5930_storage_ptr","typeString":"struct ZKProofVerifier.ZKProof"},"typeName":{"id":5940,"nodeType":"UserDefinedTypeName","pathNode":{"id":5939,"name":"ZKProof","nameLocations":["1170:7:12"],"nodeType":"IdentifierPath","referencedDeclaration":5930,"src":"1170:7:12"},"referencedDeclaration":5930,"src":"1170:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_ZKProof_$5930_storage_ptr","typeString":"struct ZKProofVerifier.ZKProof"}},"visibility":"internal"}],"name":"VoteProof","nameLocation":"895:9:12","nodeType":"StructDefinition","scope":6512,"src":"888:338:12","visibility":"public"},{"constant":false,"id":5947,"mutability":"mutable","name":"proofs","nameLocation":"1302:6:12","nodeType":"VariableDeclaration","scope":6512,"src":"1266:42:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_ZKProof_$5930_storage_$","typeString":"mapping(bytes32 => struct ZKProofVerifier.ZKProof)"},"typeName":{"id":5946,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":5943,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1274:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"1266:27:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_ZKProof_$5930_storage_$","typeString":"mapping(bytes32 => struct ZKProofVerifier.ZKProof)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":5945,"nodeType":"UserDefinedTypeName","pathNode":{"id":5944,"name":"ZKProof","nameLocations":["1285:7:12"],"nodeType":"IdentifierPath","referencedDeclaration":5930,"src":"1285:7:12"},"referencedDeclaration":5930,"src":"1285:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_ZKProof_$5930_storage_ptr","typeString":"struct ZKProofVerifier.ZKProof"}}},"visibility":"private"},{"constant":false,"id":5951,"mutability":"mutable","name":"nullifiers","nameLocation":"1348:10:12","nodeType":"VariableDeclaration","scope":6512,"src":"1315:43:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"},"typeName":{"id":5950,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":5948,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1323:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"1315:24:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":5949,"name":"bool","nodeType":"ElementaryTypeName","src":"1334:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"private"},{"constant":false,"id":5956,"mutability":"mutable","name":"voterProofs","nameLocation":"1403:11:12","nodeType":"VariableDeclaration","scope":6512,"src":"1365:49:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_bytes32_$dyn_storage_$","typeString":"mapping(address => bytes32[])"},"typeName":{"id":5955,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":5952,"name":"address","nodeType":"ElementaryTypeName","src":"1373:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1365:29:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_bytes32_$dyn_storage_$","typeString":"mapping(address => bytes32[])"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"baseType":{"id":5953,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1384:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5954,"nodeType":"ArrayTypeName","src":"1384:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}}},"visibility":"private"},{"constant":false,"id":5961,"mutability":"mutable","name":"voteProofs","nameLocation":"1459:10:12","nodeType":"VariableDeclaration","scope":6512,"src":"1421:48:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_VoteProof_$5942_storage_$","typeString":"mapping(bytes32 => struct ZKProofVerifier.VoteProof)"},"typeName":{"id":5960,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":5957,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1429:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"1421:29:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_VoteProof_$5942_storage_$","typeString":"mapping(bytes32 => struct ZKProofVerifier.VoteProof)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":5959,"nodeType":"UserDefinedTypeName","pathNode":{"id":5958,"name":"VoteProof","nameLocations":["1440:9:12"],"nodeType":"IdentifierPath","referencedDeclaration":5942,"src":"1440:9:12"},"referencedDeclaration":5942,"src":"1440:9:12","typeDescriptions":{"typeIdentifier":"t_struct$_VoteProof_$5942_storage_ptr","typeString":"struct ZKProofVerifier.VoteProof"}}},"visibility":"private"},{"constant":false,"functionSelector":"6d9f4370","id":5963,"mutability":"mutable","name":"proofCounter","nameLocation":"1497:12:12","nodeType":"VariableDeclaration","scope":6512,"src":"1482:27:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5962,"name":"uint256","nodeType":"ElementaryTypeName","src":"1482:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"2eb4a7ab","id":5965,"mutability":"mutable","name":"merkleRoot","nameLocation":"1531:10:12","nodeType":"VariableDeclaration","scope":6512,"src":"1516:25:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5964,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1516:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":false,"functionSelector":"167feb09","id":5967,"mutability":"mutable","name":"verificationThreshold","nameLocation":"1563:21:12","nodeType":"VariableDeclaration","scope":6512,"src":"1548:36:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5966,"name":"uint256","nodeType":"ElementaryTypeName","src":"1548:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"anonymous":false,"eventSelector":"506b43825c1c1ab28dc92516caa81eca0f380417c6e4317931619fbe39f11f14","id":5977,"name":"ZKProofCreated","nameLocation":"1626:14:12","nodeType":"EventDefinition","parameters":{"id":5976,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5969,"indexed":true,"mutability":"mutable","name":"proofHash","nameLocation":"1667:9:12","nodeType":"VariableDeclaration","scope":5977,"src":"1651:25:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5968,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1651:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5971,"indexed":true,"mutability":"mutable","name":"nullifierHash","nameLocation":"1703:13:12","nodeType":"VariableDeclaration","scope":5977,"src":"1687:29:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5970,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1687:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5973,"indexed":false,"mutability":"mutable","name":"commitmentHash","nameLocation":"1735:14:12","nodeType":"VariableDeclaration","scope":5977,"src":"1727:22:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5972,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1727:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5975,"indexed":false,"mutability":"mutable","name":"timestamp","nameLocation":"1768:9:12","nodeType":"VariableDeclaration","scope":5977,"src":"1760:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5974,"name":"uint256","nodeType":"ElementaryTypeName","src":"1760:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1640:144:12"},"src":"1620:165:12"},{"anonymous":false,"eventSelector":"bd1fe7a887205d9ede817440b4fad4e3d32dfac34d415a05fe22a6d6a68cf207","id":5985,"name":"ZKProofVerified","nameLocation":"1803:15:12","nodeType":"EventDefinition","parameters":{"id":5984,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5979,"indexed":true,"mutability":"mutable","name":"proofHash","nameLocation":"1845:9:12","nodeType":"VariableDeclaration","scope":5985,"src":"1829:25:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5978,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1829:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5981,"indexed":false,"mutability":"mutable","name":"isValid","nameLocation":"1870:7:12","nodeType":"VariableDeclaration","scope":5985,"src":"1865:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5980,"name":"bool","nodeType":"ElementaryTypeName","src":"1865:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5983,"indexed":false,"mutability":"mutable","name":"timestamp","nameLocation":"1896:9:12","nodeType":"VariableDeclaration","scope":5985,"src":"1888:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5982,"name":"uint256","nodeType":"ElementaryTypeName","src":"1888:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1818:94:12"},"src":"1797:116:12"},{"anonymous":false,"eventSelector":"f2a38cb36bcfb3c71a301f45f653f09b07e5579c023684ab0cfdf0c1b0baf557","id":5995,"name":"VoteProofSubmitted","nameLocation":"1931:18:12","nodeType":"EventDefinition","parameters":{"id":5994,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5987,"indexed":true,"mutability":"mutable","name":"voter","nameLocation":"1976:5:12","nodeType":"VariableDeclaration","scope":5995,"src":"1960:21:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5986,"name":"address","nodeType":"ElementaryTypeName","src":"1960:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5989,"indexed":true,"mutability":"mutable","name":"voteHash","nameLocation":"2008:8:12","nodeType":"VariableDeclaration","scope":5995,"src":"1992:24:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5988,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1992:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5991,"indexed":false,"mutability":"mutable","name":"proofHash","nameLocation":"2035:9:12","nodeType":"VariableDeclaration","scope":5995,"src":"2027:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5990,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2027:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5993,"indexed":false,"mutability":"mutable","name":"timestamp","nameLocation":"2063:9:12","nodeType":"VariableDeclaration","scope":5995,"src":"2055:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5992,"name":"uint256","nodeType":"ElementaryTypeName","src":"2055:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1949:130:12"},"src":"1925:155:12"},{"anonymous":false,"eventSelector":"afbae02739cd46b44c3f5e55fad3b8aaacf8acef6bb518bd7a737a2e02157d04","id":6003,"name":"NullifierUsed","nameLocation":"2098:13:12","nodeType":"EventDefinition","parameters":{"id":6002,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5997,"indexed":true,"mutability":"mutable","name":"nullifier","nameLocation":"2138:9:12","nodeType":"VariableDeclaration","scope":6003,"src":"2122:25:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5996,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2122:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5999,"indexed":true,"mutability":"mutable","name":"proofHash","nameLocation":"2174:9:12","nodeType":"VariableDeclaration","scope":6003,"src":"2158:25:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5998,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2158:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6001,"indexed":false,"mutability":"mutable","name":"timestamp","nameLocation":"2202:9:12","nodeType":"VariableDeclaration","scope":6003,"src":"2194:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6000,"name":"uint256","nodeType":"ElementaryTypeName","src":"2194:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2111:107:12"},"src":"2092:127:12"},{"body":{"id":6021,"nodeType":"Block","src":"2296:105:12","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":6016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":6008,"name":"proofs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5947,"src":"2315:6:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_ZKProof_$5930_storage_$","typeString":"mapping(bytes32 => struct ZKProofVerifier.ZKProof storage ref)"}},"id":6010,"indexExpression":{"id":6009,"name":"proofHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6005,"src":"2322:9:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2315:17:12","typeDescriptions":{"typeIdentifier":"t_struct$_ZKProof_$5930_storage","typeString":"struct ZKProofVerifier.ZKProof storage ref"}},"id":6011,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2333:9:12","memberName":"proofHash","nodeType":"MemberAccess","referencedDeclaration":5925,"src":"2315:27:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":6014,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2354:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6013,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2346:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":6012,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2346:7:12","typeDescriptions":{}}},"id":6015,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2346:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2315:41:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"50726f6f6620646f6573206e6f74206578697374","id":6017,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2358:22:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_75a08d511f8296e78d325f4ea3c5048a36bd22550904d4e3937660cd4da45744","typeString":"literal_string \"Proof does not exist\""},"value":"Proof does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_75a08d511f8296e78d325f4ea3c5048a36bd22550904d4e3937660cd4da45744","typeString":"literal_string \"Proof does not exist\""}],"id":6007,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"2307:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6018,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2307:74:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6019,"nodeType":"ExpressionStatement","src":"2307:74:12"},{"id":6020,"nodeType":"PlaceholderStatement","src":"2392:1:12"}]},"id":6022,"name":"onlyValidProof","nameLocation":"2262:14:12","nodeType":"ModifierDefinition","parameters":{"id":6006,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6005,"mutability":"mutable","name":"proofHash","nameLocation":"2285:9:12","nodeType":"VariableDeclaration","scope":6022,"src":"2277:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6004,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2277:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2276:19:12"},"src":"2253:148:12","virtual":false,"visibility":"internal"},{"body":{"id":6035,"nodeType":"Block","src":"2457:88:12","statements":[{"expression":{"arguments":[{"id":6030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2476:22:12","subExpression":{"baseExpression":{"id":6027,"name":"nullifiers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5951,"src":"2477:10:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"}},"id":6029,"indexExpression":{"id":6028,"name":"nullifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6024,"src":"2488:9:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2477:21:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e756c6c696669657220616c72656164792075736564","id":6031,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2500:24:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_93f5b300854c58f544ebc0d4e0c6674c12b68bf96ce71df3524c19fd2ee61f44","typeString":"literal_string \"Nullifier already used\""},"value":"Nullifier already used"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_93f5b300854c58f544ebc0d4e0c6674c12b68bf96ce71df3524c19fd2ee61f44","typeString":"literal_string \"Nullifier already used\""}],"id":6026,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"2468:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6032,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2468:57:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6033,"nodeType":"ExpressionStatement","src":"2468:57:12"},{"id":6034,"nodeType":"PlaceholderStatement","src":"2536:1:12"}]},"id":6036,"name":"onlyUnusedNullifier","nameLocation":"2418:19:12","nodeType":"ModifierDefinition","parameters":{"id":6025,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6024,"mutability":"mutable","name":"nullifier","nameLocation":"2446:9:12","nodeType":"VariableDeclaration","scope":6036,"src":"2438:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6023,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2438:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2437:19:12"},"src":"2409:136:12","virtual":false,"visibility":"internal"},{"body":{"id":6053,"nodeType":"Block","src":"2645:92:12","statements":[{"expression":{"id":6047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6045,"name":"verificationThreshold","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5967,"src":"2656:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6046,"name":"_verificationThreshold","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6038,"src":"2680:22:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2656:46:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6048,"nodeType":"ExpressionStatement","src":"2656:46:12"},{"expression":{"id":6051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6049,"name":"proofCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5963,"src":"2713:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":6050,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2728:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2713:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6052,"nodeType":"ExpressionStatement","src":"2713:16:12"}]},"id":6054,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"expression":{"id":6041,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2633:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2637:6:12","memberName":"sender","nodeType":"MemberAccess","src":"2633:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":6043,"kind":"baseConstructorSpecifier","modifierName":{"id":6040,"name":"Ownable","nameLocations":["2625:7:12"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"2625:7:12"},"nodeType":"ModifierInvocation","src":"2625:19:12"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":6039,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6038,"mutability":"mutable","name":"_verificationThreshold","nameLocation":"2601:22:12","nodeType":"VariableDeclaration","scope":6054,"src":"2593:30:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6037,"name":"uint256","nodeType":"ElementaryTypeName","src":"2593:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2592:32:12"},"returnParameters":{"id":6044,"nodeType":"ParameterList","parameters":[],"src":"2645:0:12"},"scope":6512,"src":"2581:156:12","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":6131,"nodeType":"Block","src":"3359:850:12","statements":[{"expression":{"id":6078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6071,"name":"proofHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6069,"src":"3403:9:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6074,"name":"voteHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6057,"src":"3452:8:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":6075,"name":"nullifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6059,"src":"3462:9:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":6076,"name":"secret","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6061,"src":"3473:6:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":6072,"name":"CryptographicUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7219,"src":"3415:18:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_CryptographicUtils_$7219_$","typeString":"type(library CryptographicUtils)"}},"id":6073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3434:17:12","memberName":"createZKProofHash","nodeType":"MemberAccess","referencedDeclaration":6847,"src":"3415:36:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32,bytes32) pure returns (bytes32)"}},"id":6077,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3415:65:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3403:77:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":6079,"nodeType":"ExpressionStatement","src":"3403:77:12"},{"assignments":[6082],"declarations":[{"constant":false,"id":6082,"mutability":"mutable","name":"newProof","nameLocation":"3554:8:12","nodeType":"VariableDeclaration","scope":6131,"src":"3539:23:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ZKProof_$5930_memory_ptr","typeString":"struct ZKProofVerifier.ZKProof"},"typeName":{"id":6081,"nodeType":"UserDefinedTypeName","pathNode":{"id":6080,"name":"ZKProof","nameLocations":["3539:7:12"],"nodeType":"IdentifierPath","referencedDeclaration":5930,"src":"3539:7:12"},"referencedDeclaration":5930,"src":"3539:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_ZKProof_$5930_storage_ptr","typeString":"struct ZKProofVerifier.ZKProof"}},"visibility":"internal"}],"id":6097,"initialValue":{"arguments":[{"id":6084,"name":"commitmentHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6063,"src":"3602:14:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"arguments":[{"id":6088,"name":"nullifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6059,"src":"3673:9:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":6086,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3656:3:12","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":6087,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3660:12:12","memberName":"encodePacked","nodeType":"MemberAccess","src":"3656:16:12","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":6089,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3656:27:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6085,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3646:9:12","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":6090,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3646:38:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":6091,"name":"commitmentHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6063,"src":"3715:14:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":6092,"name":"proofHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6069,"src":"3755:9:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":6093,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3790:5:12","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":6094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3796:9:12","memberName":"timestamp","nodeType":"MemberAccess","src":"3790:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":6095,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3830:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":6083,"name":"ZKProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5930,"src":"3565:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_ZKProof_$5930_storage_ptr_$","typeString":"type(struct ZKProofVerifier.ZKProof storage pointer)"}},"id":6096,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["3588:12:12","3631:13:12","3699:14:12","3744:9:12","3779:9:12","3820:8:12"],"names":["publicInputs","nullifierHash","commitmentHash","proofHash","timestamp","verified"],"nodeType":"FunctionCall","src":"3565:282:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ZKProof_$5930_memory_ptr","typeString":"struct ZKProofVerifier.ZKProof memory"}},"nodeType":"VariableDeclarationStatement","src":"3539:308:12"},{"expression":{"id":6102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6098,"name":"proofs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5947,"src":"3896:6:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_ZKProof_$5930_storage_$","typeString":"mapping(bytes32 => struct ZKProofVerifier.ZKProof storage ref)"}},"id":6100,"indexExpression":{"id":6099,"name":"proofHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6069,"src":"3903:9:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3896:17:12","typeDescriptions":{"typeIdentifier":"t_struct$_ZKProof_$5930_storage","typeString":"struct ZKProofVerifier.ZKProof storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6101,"name":"newProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6082,"src":"3916:8:12","typeDescriptions":{"typeIdentifier":"t_struct$_ZKProof_$5930_memory_ptr","typeString":"struct ZKProofVerifier.ZKProof memory"}},"src":"3896:28:12","typeDescriptions":{"typeIdentifier":"t_struct$_ZKProof_$5930_storage","typeString":"struct ZKProofVerifier.ZKProof storage ref"}},"id":6103,"nodeType":"ExpressionStatement","src":"3896:28:12"},{"expression":{"id":6108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6104,"name":"nullifiers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5951,"src":"3935:10:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"}},"id":6106,"indexExpression":{"id":6105,"name":"nullifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6059,"src":"3946:9:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3935:21:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":6107,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3959:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"3935:28:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6109,"nodeType":"ExpressionStatement","src":"3935:28:12"},{"expression":{"id":6111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3974:14:12","subExpression":{"id":6110,"name":"proofCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5963,"src":"3974:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6112,"nodeType":"ExpressionStatement","src":"3974:14:12"},{"eventCall":{"arguments":[{"id":6114,"name":"proofHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6069,"src":"4029:9:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":6115,"name":"newProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6082,"src":"4040:8:12","typeDescriptions":{"typeIdentifier":"t_struct$_ZKProof_$5930_memory_ptr","typeString":"struct ZKProofVerifier.ZKProof memory"}},"id":6116,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4049:13:12","memberName":"nullifierHash","nodeType":"MemberAccess","referencedDeclaration":5921,"src":"4040:22:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":6117,"name":"commitmentHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6063,"src":"4064:14:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":6118,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4080:5:12","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":6119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4086:9:12","memberName":"timestamp","nodeType":"MemberAccess","src":"4080:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6113,"name":"ZKProofCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5977,"src":"4014:14:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$_t_uint256_$returns$__$","typeString":"function (bytes32,bytes32,bytes32,uint256)"}},"id":6120,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4014:82:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6121,"nodeType":"EmitStatement","src":"4009:87:12"},{"eventCall":{"arguments":[{"id":6123,"name":"nullifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6059,"src":"4126:9:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":6124,"name":"proofHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6069,"src":"4137:9:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":6125,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4148:5:12","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":6126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4154:9:12","memberName":"timestamp","nodeType":"MemberAccess","src":"4148:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6122,"name":"NullifierUsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6003,"src":"4112:13:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_uint256_$returns$__$","typeString":"function (bytes32,bytes32,uint256)"}},"id":6127,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4112:52:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6128,"nodeType":"EmitStatement","src":"4107:57:12"},{"expression":{"id":6129,"name":"proofHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6069,"src":"4192:9:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":6070,"id":6130,"nodeType":"Return","src":"4185:16:12"}]},"documentation":{"id":6055,"nodeType":"StructuredDocumentation","src":"2787:355:12","text":" @dev Creates a zero-knowledge proof for vote verification\n @param voteHash Hash of the vote to prove\n @param nullifier Unique nullifier to prevent double-spending\n @param secret Secret value for proof generation\n @param commitmentHash Commitment to the vote\n @return proofHash The created proof hash"},"functionSelector":"c9433940","id":6132,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":6066,"name":"nullifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6059,"src":"3320:9:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":6067,"kind":"modifierInvocation","modifierName":{"id":6065,"name":"onlyUnusedNullifier","nameLocations":["3300:19:12"],"nodeType":"IdentifierPath","referencedDeclaration":6036,"src":"3300:19:12"},"nodeType":"ModifierInvocation","src":"3300:30:12"}],"name":"createZKProof","nameLocation":"3157:13:12","nodeType":"FunctionDefinition","parameters":{"id":6064,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6057,"mutability":"mutable","name":"voteHash","nameLocation":"3189:8:12","nodeType":"VariableDeclaration","scope":6132,"src":"3181:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6056,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3181:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6059,"mutability":"mutable","name":"nullifier","nameLocation":"3216:9:12","nodeType":"VariableDeclaration","scope":6132,"src":"3208:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6058,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3208:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6061,"mutability":"mutable","name":"secret","nameLocation":"3244:6:12","nodeType":"VariableDeclaration","scope":6132,"src":"3236:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6060,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3236:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6063,"mutability":"mutable","name":"commitmentHash","nameLocation":"3269:14:12","nodeType":"VariableDeclaration","scope":6132,"src":"3261:22:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6062,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3261:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3170:120:12"},"returnParameters":{"id":6070,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6069,"mutability":"mutable","name":"proofHash","nameLocation":"3348:9:12","nodeType":"VariableDeclaration","scope":6132,"src":"3340:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6068,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3340:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3339:19:12"},"scope":6512,"src":"3148:1061:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6212,"nodeType":"Block","src":"4736:846:12","statements":[{"assignments":[6151],"declarations":[{"constant":false,"id":6151,"mutability":"mutable","name":"proof","nameLocation":"4763:5:12","nodeType":"VariableDeclaration","scope":6212,"src":"4747:21:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ZKProof_$5930_storage_ptr","typeString":"struct ZKProofVerifier.ZKProof"},"typeName":{"id":6150,"nodeType":"UserDefinedTypeName","pathNode":{"id":6149,"name":"ZKProof","nameLocations":["4747:7:12"],"nodeType":"IdentifierPath","referencedDeclaration":5930,"src":"4747:7:12"},"referencedDeclaration":5930,"src":"4747:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_ZKProof_$5930_storage_ptr","typeString":"struct ZKProofVerifier.ZKProof"}},"visibility":"internal"}],"id":6155,"initialValue":{"baseExpression":{"id":6152,"name":"proofs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5947,"src":"4771:6:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_ZKProof_$5930_storage_$","typeString":"mapping(bytes32 => struct ZKProofVerifier.ZKProof storage ref)"}},"id":6154,"indexExpression":{"id":6153,"name":"proofHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6135,"src":"4778:9:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4771:17:12","typeDescriptions":{"typeIdentifier":"t_struct$_ZKProof_$5930_storage","typeString":"struct ZKProofVerifier.ZKProof storage ref"}},"nodeType":"VariableDeclarationStatement","src":"4747:41:12"},{"expression":{"arguments":[{"id":6159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4870:15:12","subExpression":{"expression":{"id":6157,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6151,"src":"4871:5:12","typeDescriptions":{"typeIdentifier":"t_struct$_ZKProof_$5930_storage_ptr","typeString":"struct ZKProofVerifier.ZKProof storage pointer"}},"id":6158,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4877:8:12","memberName":"verified","nodeType":"MemberAccess","referencedDeclaration":5929,"src":"4871:14:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"50726f6f6620616c7265616479207665726966696564","id":6160,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4887:24:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_eca3698c5c9d8edcd43b56af6192e93e3352ca84ed0aa9d6ab9412e981da80ed","typeString":"literal_string \"Proof already verified\""},"value":"Proof already verified"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_eca3698c5c9d8edcd43b56af6192e93e3352ca84ed0aa9d6ab9412e981da80ed","typeString":"literal_string \"Proof already verified\""}],"id":6156,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"4862:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4862:50:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6162,"nodeType":"ExpressionStatement","src":"4862:50:12"},{"expression":{"arguments":[{"baseExpression":{"id":6164,"name":"nullifiers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5951,"src":"4991:10:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"}},"id":6166,"indexExpression":{"id":6165,"name":"nullifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6139,"src":"5002:9:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4991:21:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e756c6c6966696572206e6f7420666f756e64","id":6167,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5014:21:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_1259e4a2d925e8286d10411ca8b89114652f03f6f23cc48047d37dbcda0c522a","typeString":"literal_string \"Nullifier not found\""},"value":"Nullifier not found"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1259e4a2d925e8286d10411ca8b89114652f03f6f23cc48047d37dbcda0c522a","typeString":"literal_string \"Nullifier not found\""}],"id":6163,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"4983:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6168,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4983:53:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6169,"nodeType":"ExpressionStatement","src":"4983:53:12"},{"assignments":[6171],"declarations":[{"constant":false,"id":6171,"mutability":"mutable","name":"computedProofHash","nameLocation":"5111:17:12","nodeType":"VariableDeclaration","scope":6212,"src":"5103:25:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6170,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5103:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":6178,"initialValue":{"arguments":[{"id":6174,"name":"voteHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6137,"src":"5168:8:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":6175,"name":"nullifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6139,"src":"5178:9:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":6176,"name":"secret","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6141,"src":"5189:6:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":6172,"name":"CryptographicUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7219,"src":"5131:18:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_CryptographicUtils_$7219_$","typeString":"type(library CryptographicUtils)"}},"id":6173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5150:17:12","memberName":"createZKProofHash","nodeType":"MemberAccess","referencedDeclaration":6847,"src":"5131:36:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32,bytes32) pure returns (bytes32)"}},"id":6177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5131:65:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"5103:93:12"},{"expression":{"id":6184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6179,"name":"isValid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6147,"src":"5259:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":6182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6180,"name":"computedProofHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6171,"src":"5270:17:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6181,"name":"proofHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6135,"src":"5291:9:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"5270:30:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":6183,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5269:32:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5259:42:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6185,"nodeType":"ExpressionStatement","src":"5259:42:12"},{"condition":{"id":6186,"name":"isValid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6147,"src":"5326:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":6208,"nodeType":"Block","src":"5458:82:12","statements":[{"eventCall":{"arguments":[{"id":6202,"name":"proofHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6135,"src":"5494:9:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"hexValue":"66616c7365","id":6203,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5505:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"expression":{"id":6204,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5512:5:12","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":6205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5518:9:12","memberName":"timestamp","nodeType":"MemberAccess","src":"5512:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6201,"name":"ZKProofVerified","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5985,"src":"5478:15:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_bool_$_t_uint256_$returns$__$","typeString":"function (bytes32,bool,uint256)"}},"id":6206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5478:50:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6207,"nodeType":"EmitStatement","src":"5473:55:12"}]},"id":6209,"nodeType":"IfStatement","src":"5322:218:12","trueBody":{"id":6200,"nodeType":"Block","src":"5335:117:12","statements":[{"expression":{"id":6191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":6187,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6151,"src":"5350:5:12","typeDescriptions":{"typeIdentifier":"t_struct$_ZKProof_$5930_storage_ptr","typeString":"struct ZKProofVerifier.ZKProof storage pointer"}},"id":6189,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5356:8:12","memberName":"verified","nodeType":"MemberAccess","referencedDeclaration":5929,"src":"5350:14:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":6190,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5367:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5350:21:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6192,"nodeType":"ExpressionStatement","src":"5350:21:12"},{"eventCall":{"arguments":[{"id":6194,"name":"proofHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6135,"src":"5407:9:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"hexValue":"74727565","id":6195,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5418:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"expression":{"id":6196,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5424:5:12","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":6197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5430:9:12","memberName":"timestamp","nodeType":"MemberAccess","src":"5424:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6193,"name":"ZKProofVerified","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5985,"src":"5391:15:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_bool_$_t_uint256_$returns$__$","typeString":"function (bytes32,bool,uint256)"}},"id":6198,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5391:49:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6199,"nodeType":"EmitStatement","src":"5386:54:12"}]}},{"expression":{"id":6210,"name":"isValid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6147,"src":"5567:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":6148,"id":6211,"nodeType":"Return","src":"5560:14:12"}]},"documentation":{"id":6133,"nodeType":"StructuredDocumentation","src":"4217:317:12","text":" @dev Verifies a zero-knowledge proof\n @param proofHash The proof hash to verify\n @param voteHash The vote hash being proved\n @param nullifier The nullifier used in the proof\n @param secret The secret used in the proof\n @return isValid Whether the proof is valid"},"functionSelector":"e81f927b","id":6213,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":6144,"name":"proofHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6135,"src":"4702:9:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":6145,"kind":"modifierInvocation","modifierName":{"id":6143,"name":"onlyValidProof","nameLocations":["4687:14:12"],"nodeType":"IdentifierPath","referencedDeclaration":6022,"src":"4687:14:12"},"nodeType":"ModifierInvocation","src":"4687:25:12"}],"name":"verifyZKProof","nameLocation":"4549:13:12","nodeType":"FunctionDefinition","parameters":{"id":6142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6135,"mutability":"mutable","name":"proofHash","nameLocation":"4581:9:12","nodeType":"VariableDeclaration","scope":6213,"src":"4573:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6134,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4573:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6137,"mutability":"mutable","name":"voteHash","nameLocation":"4609:8:12","nodeType":"VariableDeclaration","scope":6213,"src":"4601:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6136,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4601:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6139,"mutability":"mutable","name":"nullifier","nameLocation":"4636:9:12","nodeType":"VariableDeclaration","scope":6213,"src":"4628:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6138,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4628:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6141,"mutability":"mutable","name":"secret","nameLocation":"4664:6:12","nodeType":"VariableDeclaration","scope":6213,"src":"4656:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6140,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4656:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4562:115:12"},"returnParameters":{"id":6148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6147,"mutability":"mutable","name":"isValid","nameLocation":"4727:7:12","nodeType":"VariableDeclaration","scope":6213,"src":"4722:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6146,"name":"bool","nodeType":"ElementaryTypeName","src":"4722:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4721:14:12"},"scope":6512,"src":"4540:1042:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6276,"nodeType":"Block","src":"6089:676:12","statements":[{"expression":{"id":6235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6227,"name":"proofHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6225,"src":"6132:9:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6230,"name":"voteHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6216,"src":"6163:8:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":6231,"name":"nullifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6218,"src":"6173:9:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":6232,"name":"secret","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6220,"src":"6184:6:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":6233,"name":"commitmentHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6222,"src":"6192:14:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":6228,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"6144:4:12","typeDescriptions":{"typeIdentifier":"t_contract$_ZKProofVerifier_$6512","typeString":"contract ZKProofVerifier"}},"id":6229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6149:13:12","memberName":"createZKProof","nodeType":"MemberAccess","referencedDeclaration":6132,"src":"6144:18:12","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32,bytes32,bytes32) external returns (bytes32)"}},"id":6234,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6144:63:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"6132:75:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":6236,"nodeType":"ExpressionStatement","src":"6132:75:12"},{"assignments":[6239],"declarations":[{"constant":false,"id":6239,"mutability":"mutable","name":"voteProof","nameLocation":"6285:9:12","nodeType":"VariableDeclaration","scope":6276,"src":"6268:26:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_VoteProof_$5942_memory_ptr","typeString":"struct ZKProofVerifier.VoteProof"},"typeName":{"id":6238,"nodeType":"UserDefinedTypeName","pathNode":{"id":6237,"name":"VoteProof","nameLocations":["6268:9:12"],"nodeType":"IdentifierPath","referencedDeclaration":5942,"src":"6268:9:12"},"referencedDeclaration":5942,"src":"6268:9:12","typeDescriptions":{"typeIdentifier":"t_struct$_VoteProof_$5942_storage_ptr","typeString":"struct ZKProofVerifier.VoteProof"}},"visibility":"internal"}],"id":6250,"initialValue":{"arguments":[{"expression":{"id":6241,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6329:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6333:6:12","memberName":"sender","nodeType":"MemberAccess","src":"6329:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6243,"name":"voteHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6216,"src":"6364:8:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":6244,"name":"nullifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6218,"src":"6398:9:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":6245,"name":"secret","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6220,"src":"6430:6:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"baseExpression":{"id":6246,"name":"proofs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5947,"src":"6460:6:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_ZKProof_$5930_storage_$","typeString":"mapping(bytes32 => struct ZKProofVerifier.ZKProof storage ref)"}},"id":6248,"indexExpression":{"id":6247,"name":"proofHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6225,"src":"6467:9:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6460:17:12","typeDescriptions":{"typeIdentifier":"t_struct$_ZKProof_$5930_storage","typeString":"struct ZKProofVerifier.ZKProof storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_struct$_ZKProof_$5930_storage","typeString":"struct ZKProofVerifier.ZKProof storage ref"}],"id":6240,"name":"VoteProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5942,"src":"6297:9:12","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_VoteProof_$5942_storage_ptr_$","typeString":"type(struct ZKProofVerifier.VoteProof storage pointer)"}},"id":6249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["6322:5:12","6354:8:12","6387:9:12","6422:6:12","6451:7:12"],"names":["voter","voteHash","nullifier","secret","zkProof"],"nodeType":"FunctionCall","src":"6297:192:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_VoteProof_$5942_memory_ptr","typeString":"struct ZKProofVerifier.VoteProof memory"}},"nodeType":"VariableDeclarationStatement","src":"6268:221:12"},{"expression":{"id":6255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6251,"name":"voteProofs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5961,"src":"6543:10:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_VoteProof_$5942_storage_$","typeString":"mapping(bytes32 => struct ZKProofVerifier.VoteProof storage ref)"}},"id":6253,"indexExpression":{"id":6252,"name":"proofHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6225,"src":"6554:9:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6543:21:12","typeDescriptions":{"typeIdentifier":"t_struct$_VoteProof_$5942_storage","typeString":"struct ZKProofVerifier.VoteProof storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6254,"name":"voteProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6239,"src":"6567:9:12","typeDescriptions":{"typeIdentifier":"t_struct$_VoteProof_$5942_memory_ptr","typeString":"struct ZKProofVerifier.VoteProof memory"}},"src":"6543:33:12","typeDescriptions":{"typeIdentifier":"t_struct$_VoteProof_$5942_storage","typeString":"struct ZKProofVerifier.VoteProof storage ref"}},"id":6256,"nodeType":"ExpressionStatement","src":"6543:33:12"},{"expression":{"arguments":[{"id":6262,"name":"proofHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6225,"src":"6616:9:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"baseExpression":{"id":6257,"name":"voterProofs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5956,"src":"6587:11:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_bytes32_$dyn_storage_$","typeString":"mapping(address => bytes32[] storage ref)"}},"id":6260,"indexExpression":{"expression":{"id":6258,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6599:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6603:6:12","memberName":"sender","nodeType":"MemberAccess","src":"6599:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6587:23:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":6261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6611:4:12","memberName":"push","nodeType":"MemberAccess","src":"6587:28:12","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$_t_bytes32_$returns$__$attached_to$_t_array$_t_bytes32_$dyn_storage_ptr_$","typeString":"function (bytes32[] storage pointer,bytes32)"}},"id":6263,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6587:39:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6264,"nodeType":"ExpressionStatement","src":"6587:39:12"},{"eventCall":{"arguments":[{"expression":{"id":6266,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6671:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6675:6:12","memberName":"sender","nodeType":"MemberAccess","src":"6671:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6268,"name":"voteHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6216,"src":"6683:8:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":6269,"name":"proofHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6225,"src":"6693:9:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":6270,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"6704:5:12","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":6271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6710:9:12","memberName":"timestamp","nodeType":"MemberAccess","src":"6704:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6265,"name":"VoteProofSubmitted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5995,"src":"6652:18:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_bytes32_$_t_bytes32_$_t_uint256_$returns$__$","typeString":"function (address,bytes32,bytes32,uint256)"}},"id":6272,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6652:68:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6273,"nodeType":"EmitStatement","src":"6647:73:12"},{"expression":{"id":6274,"name":"proofHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6225,"src":"6748:9:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":6226,"id":6275,"nodeType":"Return","src":"6741:16:12"}]},"documentation":{"id":6214,"nodeType":"StructuredDocumentation","src":"5590:311:12","text":" @dev Submits a complete vote proof with ZK verification\n @param voteHash Hash of the vote\n @param nullifier Unique nullifier\n @param secret Secret for proof generation\n @param commitmentHash Commitment to the vote\n @return proofHash The created proof hash"},"functionSelector":"451b923c","id":6277,"implemented":true,"kind":"function","modifiers":[],"name":"submitVoteProof","nameLocation":"5916:15:12","nodeType":"FunctionDefinition","parameters":{"id":6223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6216,"mutability":"mutable","name":"voteHash","nameLocation":"5950:8:12","nodeType":"VariableDeclaration","scope":6277,"src":"5942:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6215,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5942:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6218,"mutability":"mutable","name":"nullifier","nameLocation":"5977:9:12","nodeType":"VariableDeclaration","scope":6277,"src":"5969:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6217,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5969:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6220,"mutability":"mutable","name":"secret","nameLocation":"6005:6:12","nodeType":"VariableDeclaration","scope":6277,"src":"5997:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6219,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5997:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6222,"mutability":"mutable","name":"commitmentHash","nameLocation":"6030:14:12","nodeType":"VariableDeclaration","scope":6277,"src":"6022:22:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6221,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6022:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5931:120:12"},"returnParameters":{"id":6226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6225,"mutability":"mutable","name":"proofHash","nameLocation":"6078:9:12","nodeType":"VariableDeclaration","scope":6277,"src":"6070:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6224,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6070:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6069:19:12"},"scope":6512,"src":"5907:858:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6289,"nodeType":"Block","src":"6996:39:12","statements":[{"expression":{"id":6287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6285,"name":"merkleRoot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5965,"src":"7007:10:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6286,"name":"newRoot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6280,"src":"7020:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"7007:20:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":6288,"nodeType":"ExpressionStatement","src":"7007:20:12"}]},"documentation":{"id":6278,"nodeType":"StructuredDocumentation","src":"6813:115:12","text":" @dev Updates the Merkle root for voter verification\n @param newRoot The new Merkle root"},"functionSelector":"4783f0ef","id":6290,"implemented":true,"kind":"function","modifiers":[{"id":6283,"kind":"modifierInvocation","modifierName":{"id":6282,"name":"onlyOwner","nameLocations":["6986:9:12"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"6986:9:12"},"nodeType":"ModifierInvocation","src":"6986:9:12"}],"name":"updateMerkleRoot","nameLocation":"6943:16:12","nodeType":"FunctionDefinition","parameters":{"id":6281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6280,"mutability":"mutable","name":"newRoot","nameLocation":"6968:7:12","nodeType":"VariableDeclaration","scope":6290,"src":"6960:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6279,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6960:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6959:17:12"},"returnParameters":{"id":6284,"nodeType":"ParameterList","parameters":[],"src":"6996:0:12"},"scope":6512,"src":"6934:101:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6317,"nodeType":"Block","src":"7386:147:12","statements":[{"assignments":[6302],"declarations":[{"constant":false,"id":6302,"mutability":"mutable","name":"leaf","nameLocation":"7405:4:12","nodeType":"VariableDeclaration","scope":6317,"src":"7397:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6301,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7397:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":6309,"initialValue":{"arguments":[{"arguments":[{"id":6306,"name":"voter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6293,"src":"7439:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":6304,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"7422:3:12","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":6305,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7426:12:12","memberName":"encodePacked","nodeType":"MemberAccess","src":"7422:16:12","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":6307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7422:23:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6303,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"7412:9:12","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":6308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7412:34:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"7397:49:12"},{"expression":{"arguments":[{"id":6312,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6302,"src":"7501:4:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":6313,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6296,"src":"7507:5:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},{"id":6314,"name":"merkleRoot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5965,"src":"7514:10:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":6310,"name":"CryptographicUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7219,"src":"7464:18:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_CryptographicUtils_$7219_$","typeString":"type(library CryptographicUtils)"}},"id":6311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7483:17:12","memberName":"verifyMerkleProof","nodeType":"MemberAccess","referencedDeclaration":6868,"src":"7464:36:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_array$_t_bytes32_$dyn_calldata_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32[] calldata,bytes32) pure returns (bool)"}},"id":6315,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7464:61:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":6300,"id":6316,"nodeType":"Return","src":"7457:68:12"}]},"documentation":{"id":6291,"nodeType":"StructuredDocumentation","src":"7043:204:12","text":" @dev Verifies a voter's inclusion in the Merkle tree\n @param voter The voter address\n @param proof The Merkle proof\n @return isValid Whether the voter is included"},"functionSelector":"e6ab8c54","id":6318,"implemented":true,"kind":"function","modifiers":[],"name":"verifyVoterInclusion","nameLocation":"7262:20:12","nodeType":"FunctionDefinition","parameters":{"id":6297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6293,"mutability":"mutable","name":"voter","nameLocation":"7301:5:12","nodeType":"VariableDeclaration","scope":6318,"src":"7293:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6292,"name":"address","nodeType":"ElementaryTypeName","src":"7293:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6296,"mutability":"mutable","name":"proof","nameLocation":"7336:5:12","nodeType":"VariableDeclaration","scope":6318,"src":"7317:24:12","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":6294,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7317:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":6295,"nodeType":"ArrayTypeName","src":"7317:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"7282:66:12"},"returnParameters":{"id":6300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6299,"mutability":"mutable","name":"isValid","nameLocation":"7377:7:12","nodeType":"VariableDeclaration","scope":6318,"src":"7372:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6298,"name":"bool","nodeType":"ElementaryTypeName","src":"7372:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7371:14:12"},"scope":6512,"src":"7253:280:12","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":6334,"nodeType":"Block","src":"7858:43:12","statements":[{"expression":{"baseExpression":{"id":6330,"name":"proofs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5947,"src":"7876:6:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_ZKProof_$5930_storage_$","typeString":"mapping(bytes32 => struct ZKProofVerifier.ZKProof storage ref)"}},"id":6332,"indexExpression":{"id":6331,"name":"proofHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6321,"src":"7883:9:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7876:17:12","typeDescriptions":{"typeIdentifier":"t_struct$_ZKProof_$5930_storage","typeString":"struct ZKProofVerifier.ZKProof storage ref"}},"functionReturnParameters":6329,"id":6333,"nodeType":"Return","src":"7869:24:12"}]},"documentation":{"id":6319,"nodeType":"StructuredDocumentation","src":"7574:128:12","text":" @dev Gets a ZK proof by hash\n @param proofHash The proof hash\n @return The ZK proof structure"},"functionSelector":"d51b456b","id":6335,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":6324,"name":"proofHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6321,"src":"7806:9:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":6325,"kind":"modifierInvocation","modifierName":{"id":6323,"name":"onlyValidProof","nameLocations":["7791:14:12"],"nodeType":"IdentifierPath","referencedDeclaration":6022,"src":"7791:14:12"},"nodeType":"ModifierInvocation","src":"7791:25:12"}],"name":"getZKProof","nameLocation":"7717:10:12","nodeType":"FunctionDefinition","parameters":{"id":6322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6321,"mutability":"mutable","name":"proofHash","nameLocation":"7736:9:12","nodeType":"VariableDeclaration","scope":6335,"src":"7728:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6320,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7728:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7727:19:12"},"returnParameters":{"id":6329,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6328,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6335,"src":"7836:14:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ZKProof_$5930_memory_ptr","typeString":"struct ZKProofVerifier.ZKProof"},"typeName":{"id":6327,"nodeType":"UserDefinedTypeName","pathNode":{"id":6326,"name":"ZKProof","nameLocations":["7836:7:12"],"nodeType":"IdentifierPath","referencedDeclaration":5930,"src":"7836:7:12"},"referencedDeclaration":5930,"src":"7836:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_ZKProof_$5930_storage_ptr","typeString":"struct ZKProofVerifier.ZKProof"}},"visibility":"internal"}],"src":"7835:16:12"},"scope":6512,"src":"7708:193:12","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":6348,"nodeType":"Block","src":"8165:47:12","statements":[{"expression":{"baseExpression":{"id":6344,"name":"voteProofs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5961,"src":"8183:10:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_VoteProof_$5942_storage_$","typeString":"mapping(bytes32 => struct ZKProofVerifier.VoteProof storage ref)"}},"id":6346,"indexExpression":{"id":6345,"name":"proofHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6338,"src":"8194:9:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8183:21:12","typeDescriptions":{"typeIdentifier":"t_struct$_VoteProof_$5942_storage","typeString":"struct ZKProofVerifier.VoteProof storage ref"}},"functionReturnParameters":6343,"id":6347,"nodeType":"Return","src":"8176:28:12"}]},"documentation":{"id":6336,"nodeType":"StructuredDocumentation","src":"7909:132:12","text":" @dev Gets a vote proof by hash\n @param proofHash The proof hash\n @return The vote proof structure"},"functionSelector":"a067228e","id":6349,"implemented":true,"kind":"function","modifiers":[],"name":"getVoteProof","nameLocation":"8056:12:12","nodeType":"FunctionDefinition","parameters":{"id":6339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6338,"mutability":"mutable","name":"proofHash","nameLocation":"8077:9:12","nodeType":"VariableDeclaration","scope":6349,"src":"8069:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6337,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8069:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8068:19:12"},"returnParameters":{"id":6343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6342,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6349,"src":"8141:16:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_VoteProof_$5942_memory_ptr","typeString":"struct ZKProofVerifier.VoteProof"},"typeName":{"id":6341,"nodeType":"UserDefinedTypeName","pathNode":{"id":6340,"name":"VoteProof","nameLocations":["8141:9:12"],"nodeType":"IdentifierPath","referencedDeclaration":5942,"src":"8141:9:12"},"referencedDeclaration":5942,"src":"8141:9:12","typeDescriptions":{"typeIdentifier":"t_struct$_VoteProof_$5942_storage_ptr","typeString":"struct ZKProofVerifier.VoteProof"}},"visibility":"internal"}],"src":"8140:18:12"},"scope":6512,"src":"8047:165:12","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":6362,"nodeType":"Block","src":"8472:44:12","statements":[{"expression":{"baseExpression":{"id":6358,"name":"voterProofs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5956,"src":"8490:11:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_bytes32_$dyn_storage_$","typeString":"mapping(address => bytes32[] storage ref)"}},"id":6360,"indexExpression":{"id":6359,"name":"voter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6352,"src":"8502:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8490:18:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"functionReturnParameters":6357,"id":6361,"nodeType":"Return","src":"8483:25:12"}]},"documentation":{"id":6350,"nodeType":"StructuredDocumentation","src":"8220:130:12","text":" @dev Gets all proofs for a voter\n @param voter The voter address\n @return Array of proof hashes"},"functionSelector":"2607788e","id":6363,"implemented":true,"kind":"function","modifiers":[],"name":"getVoterProofs","nameLocation":"8365:14:12","nodeType":"FunctionDefinition","parameters":{"id":6353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6352,"mutability":"mutable","name":"voter","nameLocation":"8388:5:12","nodeType":"VariableDeclaration","scope":6363,"src":"8380:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6351,"name":"address","nodeType":"ElementaryTypeName","src":"8380:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8379:15:12"},"returnParameters":{"id":6357,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6356,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6363,"src":"8448:16:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":6354,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8448:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":6355,"nodeType":"ArrayTypeName","src":"8448:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"8447:18:12"},"scope":6512,"src":"8356:160:12","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":6375,"nodeType":"Block","src":"8764:47:12","statements":[{"expression":{"baseExpression":{"id":6371,"name":"nullifiers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5951,"src":"8782:10:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"}},"id":6373,"indexExpression":{"id":6372,"name":"nullifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6366,"src":"8793:9:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8782:21:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":6370,"id":6374,"nodeType":"Return","src":"8775:28:12"}]},"documentation":{"id":6364,"nodeType":"StructuredDocumentation","src":"8524:161:12","text":" @dev Checks if a nullifier has been used\n @param nullifier The nullifier to check\n @return Whether the nullifier has been used"},"functionSelector":"22dc7b4c","id":6376,"implemented":true,"kind":"function","modifiers":[],"name":"isNullifierUsed","nameLocation":"8700:15:12","nodeType":"FunctionDefinition","parameters":{"id":6367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6366,"mutability":"mutable","name":"nullifier","nameLocation":"8724:9:12","nodeType":"VariableDeclaration","scope":6376,"src":"8716:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6365,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8716:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8715:19:12"},"returnParameters":{"id":6370,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6369,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6376,"src":"8758:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6368,"name":"bool","nodeType":"ElementaryTypeName","src":"8758:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8757:6:12"},"scope":6512,"src":"8691:120:12","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":6384,"nodeType":"Block","src":"8981:38:12","statements":[{"expression":{"id":6382,"name":"proofCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5963,"src":"8999:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6381,"id":6383,"nodeType":"Return","src":"8992:19:12"}]},"documentation":{"id":6377,"nodeType":"StructuredDocumentation","src":"8819:99:12","text":" @dev Gets the total number of proofs created\n @return The proof counter"},"functionSelector":"5be4ee1b","id":6385,"implemented":true,"kind":"function","modifiers":[],"name":"getProofCount","nameLocation":"8933:13:12","nodeType":"FunctionDefinition","parameters":{"id":6378,"nodeType":"ParameterList","parameters":[],"src":"8946:2:12"},"returnParameters":{"id":6381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6380,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6385,"src":"8972:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6379,"name":"uint256","nodeType":"ElementaryTypeName","src":"8972:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8971:9:12"},"scope":6512,"src":"8924:95:12","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":6393,"nodeType":"Block","src":"9176:36:12","statements":[{"expression":{"id":6391,"name":"merkleRoot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5965,"src":"9194:10:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":6390,"id":6392,"nodeType":"Return","src":"9187:17:12"}]},"documentation":{"id":6386,"nodeType":"StructuredDocumentation","src":"9027:86:12","text":" @dev Gets the current Merkle root\n @return The Merkle root"},"functionSelector":"49590657","id":6394,"implemented":true,"kind":"function","modifiers":[],"name":"getMerkleRoot","nameLocation":"9128:13:12","nodeType":"FunctionDefinition","parameters":{"id":6387,"nodeType":"ParameterList","parameters":[],"src":"9141:2:12"},"returnParameters":{"id":6390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6389,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6394,"src":"9167:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6388,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9167:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"9166:9:12"},"scope":6512,"src":"9119:93:12","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":6406,"nodeType":"Block","src":"9450:55:12","statements":[{"expression":{"id":6404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6402,"name":"verificationThreshold","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5967,"src":"9461:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6403,"name":"newThreshold","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6397,"src":"9485:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9461:36:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6405,"nodeType":"ExpressionStatement","src":"9461:36:12"}]},"documentation":{"id":6395,"nodeType":"StructuredDocumentation","src":"9254:112:12","text":" @dev Updates the verification threshold\n @param newThreshold The new threshold value"},"functionSelector":"89aa56a4","id":6407,"implemented":true,"kind":"function","modifiers":[{"id":6400,"kind":"modifierInvocation","modifierName":{"id":6399,"name":"onlyOwner","nameLocations":["9440:9:12"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"9440:9:12"},"nodeType":"ModifierInvocation","src":"9440:9:12"}],"name":"updateVerificationThreshold","nameLocation":"9381:27:12","nodeType":"FunctionDefinition","parameters":{"id":6398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6397,"mutability":"mutable","name":"newThreshold","nameLocation":"9417:12:12","nodeType":"VariableDeclaration","scope":6407,"src":"9409:20:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6396,"name":"uint256","nodeType":"ElementaryTypeName","src":"9409:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9408:22:12"},"returnParameters":{"id":6401,"nodeType":"ParameterList","parameters":[],"src":"9450:0:12"},"scope":6512,"src":"9372:133:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6483,"nodeType":"Block","src":"10057:501:12","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6428,"name":"proofHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6411,"src":"10090:11:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":6429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10102:6:12","memberName":"length","nodeType":"MemberAccess","src":"10090:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":6430,"name":"voteHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6414,"src":"10112:10:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":6431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10123:6:12","memberName":"length","nodeType":"MemberAccess","src":"10112:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10090:39:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6433,"name":"voteHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6414,"src":"10146:10:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":6434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10157:6:12","memberName":"length","nodeType":"MemberAccess","src":"10146:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":6435,"name":"nullifiers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6417,"src":"10167:10:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":6436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10178:6:12","memberName":"length","nodeType":"MemberAccess","src":"10167:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10146:38:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10090:94:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6439,"name":"nullifiers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6417,"src":"10201:10:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":6440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10212:6:12","memberName":"length","nodeType":"MemberAccess","src":"10201:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":6441,"name":"secrets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6420,"src":"10222:7:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":6442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10230:6:12","memberName":"length","nodeType":"MemberAccess","src":"10222:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10201:35:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10090:146:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4172726179206c656e67746873206d757374206d61746368","id":6445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10251:26:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_ad675bd5284d0e4b6ac8e6b09a30c7f01661e52badac4d4e8acf154e437ad93e","typeString":"literal_string \"Array lengths must match\""},"value":"Array lengths must match"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ad675bd5284d0e4b6ac8e6b09a30c7f01661e52badac4d4e8acf154e437ad93e","typeString":"literal_string \"Array lengths must match\""}],"id":6427,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"10068:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6446,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10068:220:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6447,"nodeType":"ExpressionStatement","src":"10068:220:12"},{"body":{"id":6479,"nodeType":"Block","src":"10358:155:12","statements":[{"condition":{"arguments":[{"baseExpression":{"id":6461,"name":"proofHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6411,"src":"10396:11:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":6463,"indexExpression":{"id":6462,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6449,"src":"10408:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10396:14:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"baseExpression":{"id":6464,"name":"voteHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6414,"src":"10412:10:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":6466,"indexExpression":{"id":6465,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6449,"src":"10423:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10412:13:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"baseExpression":{"id":6467,"name":"nullifiers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6417,"src":"10427:10:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":6469,"indexExpression":{"id":6468,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6449,"src":"10438:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10427:13:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"baseExpression":{"id":6470,"name":"secrets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6420,"src":"10442:7:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":6472,"indexExpression":{"id":6471,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6449,"src":"10450:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10442:10:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":6459,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"10377:4:12","typeDescriptions":{"typeIdentifier":"t_contract$_ZKProofVerifier_$6512","typeString":"contract ZKProofVerifier"}},"id":6460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10382:13:12","memberName":"verifyZKProof","nodeType":"MemberAccess","referencedDeclaration":6213,"src":"10377:18:12","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32,bytes32,bytes32) external returns (bool)"}},"id":6473,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10377:76:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6478,"nodeType":"IfStatement","src":"10373:129:12","trueBody":{"id":6477,"nodeType":"Block","src":"10455:47:12","statements":[{"expression":{"id":6475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10474:12:12","subExpression":{"id":6474,"name":"validCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6425,"src":"10474:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6476,"nodeType":"ExpressionStatement","src":"10474:12:12"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6452,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6449,"src":"10329:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":6453,"name":"proofHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6411,"src":"10333:11:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":6454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10345:6:12","memberName":"length","nodeType":"MemberAccess","src":"10333:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10329:22:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6480,"initializationExpression":{"assignments":[6449],"declarations":[{"constant":false,"id":6449,"mutability":"mutable","name":"i","nameLocation":"10322:1:12","nodeType":"VariableDeclaration","scope":6480,"src":"10314:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6448,"name":"uint256","nodeType":"ElementaryTypeName","src":"10314:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6451,"initialValue":{"hexValue":"30","id":6450,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10326:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10314:13:12"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":6457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10353:3:12","subExpression":{"id":6456,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6449,"src":"10353:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6458,"nodeType":"ExpressionStatement","src":"10353:3:12"},"nodeType":"ForStatement","src":"10309:204:12"},{"expression":{"id":6481,"name":"validCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6425,"src":"10540:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6426,"id":6482,"nodeType":"Return","src":"10533:17:12"}]},"documentation":{"id":6408,"nodeType":"StructuredDocumentation","src":"9513:298:12","text":" @dev Batch verifies multiple proofs\n @param proofHashes Array of proof hashes to verify\n @param voteHashes Array of vote hashes\n @param nullifiers Array of nullifiers\n @param secrets Array of secrets\n @return validCount Number of valid proofs"},"functionSelector":"c423f910","id":6484,"implemented":true,"kind":"function","modifiers":[{"id":6423,"kind":"modifierInvocation","modifierName":{"id":6422,"name":"onlyOwner","nameLocations":["10018:9:12"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"10018:9:12"},"nodeType":"ModifierInvocation","src":"10018:9:12"}],"name":"batchVerifyProofs","nameLocation":"9826:17:12","nodeType":"FunctionDefinition","parameters":{"id":6421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6411,"mutability":"mutable","name":"proofHashes","nameLocation":"9873:11:12","nodeType":"VariableDeclaration","scope":6484,"src":"9854:30:12","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":6409,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9854:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":6410,"nodeType":"ArrayTypeName","src":"9854:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":6414,"mutability":"mutable","name":"voteHashes","nameLocation":"9914:10:12","nodeType":"VariableDeclaration","scope":6484,"src":"9895:29:12","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":6412,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9895:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":6413,"nodeType":"ArrayTypeName","src":"9895:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":6417,"mutability":"mutable","name":"nullifiers","nameLocation":"9954:10:12","nodeType":"VariableDeclaration","scope":6484,"src":"9935:29:12","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":6415,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9935:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":6416,"nodeType":"ArrayTypeName","src":"9935:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":6420,"mutability":"mutable","name":"secrets","nameLocation":"9994:7:12","nodeType":"VariableDeclaration","scope":6484,"src":"9975:26:12","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":6418,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9975:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":6419,"nodeType":"ArrayTypeName","src":"9975:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"9843:165:12"},"returnParameters":{"id":6426,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6425,"mutability":"mutable","name":"validCount","nameLocation":"10045:10:12","nodeType":"VariableDeclaration","scope":6484,"src":"10037:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6424,"name":"uint256","nodeType":"ElementaryTypeName","src":"10037:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10036:20:12"},"scope":6512,"src":"9817:741:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6510,"nodeType":"Block","src":"10815:128:12","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":6501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":6493,"name":"proofs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5947,"src":"10834:6:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_ZKProof_$5930_storage_$","typeString":"mapping(bytes32 => struct ZKProofVerifier.ZKProof storage ref)"}},"id":6495,"indexExpression":{"id":6494,"name":"proofHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6487,"src":"10841:9:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10834:17:12","typeDescriptions":{"typeIdentifier":"t_struct$_ZKProof_$5930_storage","typeString":"struct ZKProofVerifier.ZKProof storage ref"}},"id":6496,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10852:9:12","memberName":"proofHash","nodeType":"MemberAccess","referencedDeclaration":5925,"src":"10834:27:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":6499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10873:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6498,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10865:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":6497,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10865:7:12","typeDescriptions":{}}},"id":6500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10865:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"10834:41:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"50726f6f6620646f6573206e6f74206578697374","id":6502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10877:22:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_75a08d511f8296e78d325f4ea3c5048a36bd22550904d4e3937660cd4da45744","typeString":"literal_string \"Proof does not exist\""},"value":"Proof does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_75a08d511f8296e78d325f4ea3c5048a36bd22550904d4e3937660cd4da45744","typeString":"literal_string \"Proof does not exist\""}],"id":6492,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"10826:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6503,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10826:74:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6504,"nodeType":"ExpressionStatement","src":"10826:74:12"},{"expression":{"id":6508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"10911:24:12","subExpression":{"baseExpression":{"id":6505,"name":"proofs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5947,"src":"10918:6:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_ZKProof_$5930_storage_$","typeString":"mapping(bytes32 => struct ZKProofVerifier.ZKProof storage ref)"}},"id":6507,"indexExpression":{"id":6506,"name":"proofHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6487,"src":"10925:9:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10918:17:12","typeDescriptions":{"typeIdentifier":"t_struct$_ZKProof_$5930_storage","typeString":"struct ZKProofVerifier.ZKProof storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6509,"nodeType":"ExpressionStatement","src":"10911:24:12"}]},"documentation":{"id":6485,"nodeType":"StructuredDocumentation","src":"10604:133:12","text":" @dev Emergency function to invalidate a proof (admin only)\n @param proofHash The proof hash to invalidate"},"functionSelector":"5089cec2","id":6511,"implemented":true,"kind":"function","modifiers":[{"id":6490,"kind":"modifierInvocation","modifierName":{"id":6489,"name":"onlyOwner","nameLocations":["10805:9:12"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"10805:9:12"},"nodeType":"ModifierInvocation","src":"10805:9:12"}],"name":"emergencyInvalidateProof","nameLocation":"10752:24:12","nodeType":"FunctionDefinition","parameters":{"id":6488,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6487,"mutability":"mutable","name":"proofHash","nameLocation":"10785:9:12","nodeType":"VariableDeclaration","scope":6511,"src":"10777:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6486,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10777:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"10776:19:12"},"returnParameters":{"id":6491,"nodeType":"ParameterList","parameters":[],"src":"10815:0:12"},"scope":6512,"src":"10743:200:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":6513,"src":"339:10607:12","usedErrors":[13,18],"usedEvents":[24,5977,5985,5995,6003]}],"src":"33:10914:12"},"id":12},"contracts/libraries/CryptographicUtils.sol":{"ast":{"absolutePath":"contracts/libraries/CryptographicUtils.sol","exportedSymbols":{"CryptographicUtils":[7219],"ECDSA":[702],"Hashes":[742],"MerkleProof":[1815]},"id":7220,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6514,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:13"},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","id":6515,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7220,"sourceUnit":703,"src":"60:62:13","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol","file":"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol","id":6516,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7220,"sourceUnit":1816,"src":"124:68:13","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"CryptographicUtils","contractDependencies":[],"contractKind":"library","documentation":{"id":6517,"nodeType":"StructuredDocumentation","src":"196:179:13","text":" @title CryptographicUtils\n @dev Advanced cryptographic utilities for secure voting\n @notice Provides commitment schemes, threshold cryptography, and vote mixing"},"fullyImplemented":true,"id":7219,"linearizedBaseContracts":[7219],"name":"CryptographicUtils","nameLocation":"385:18:13","nodeType":"ContractDefinition","nodes":[{"global":false,"id":6520,"libraryName":{"id":6518,"name":"ECDSA","nameLocations":["417:5:13"],"nodeType":"IdentifierPath","referencedDeclaration":702,"src":"417:5:13"},"nodeType":"UsingForDirective","src":"411:24:13","typeName":{"id":6519,"name":"bytes32","nodeType":"ElementaryTypeName","src":"427:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"canonicalName":"CryptographicUtils.Commitment","id":6529,"members":[{"constant":false,"id":6522,"mutability":"mutable","name":"commitmentHash","nameLocation":"504:14:13","nodeType":"VariableDeclaration","scope":6529,"src":"496:22:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6521,"name":"bytes32","nodeType":"ElementaryTypeName","src":"496:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6524,"mutability":"mutable","name":"timestamp","nameLocation":"537:9:13","nodeType":"VariableDeclaration","scope":6529,"src":"529:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6523,"name":"uint256","nodeType":"ElementaryTypeName","src":"529:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6526,"mutability":"mutable","name":"revealed","nameLocation":"562:8:13","nodeType":"VariableDeclaration","scope":6529,"src":"557:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6525,"name":"bool","nodeType":"ElementaryTypeName","src":"557:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6528,"mutability":"mutable","name":"revealedValue","nameLocation":"589:13:13","nodeType":"VariableDeclaration","scope":6529,"src":"581:21:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6527,"name":"bytes32","nodeType":"ElementaryTypeName","src":"581:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Commitment","nameLocation":"474:10:13","nodeType":"StructDefinition","scope":7219,"src":"467:143:13","visibility":"public"},{"canonicalName":"CryptographicUtils.ThresholdSignature","id":6539,"members":[{"constant":false,"id":6531,"mutability":"mutable","name":"messageHash","nameLocation":"663:11:13","nodeType":"VariableDeclaration","scope":6539,"src":"655:19:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6530,"name":"bytes32","nodeType":"ElementaryTypeName","src":"655:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6534,"mutability":"mutable","name":"signatures","nameLocation":"693:10:13","nodeType":"VariableDeclaration","scope":6539,"src":"685:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":6532,"name":"bytes","nodeType":"ElementaryTypeName","src":"685:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":6533,"nodeType":"ArrayTypeName","src":"685:7:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":6536,"mutability":"mutable","name":"threshold","nameLocation":"722:9:13","nodeType":"VariableDeclaration","scope":6539,"src":"714:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6535,"name":"uint256","nodeType":"ElementaryTypeName","src":"714:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6538,"mutability":"mutable","name":"totalSigners","nameLocation":"750:12:13","nodeType":"VariableDeclaration","scope":6539,"src":"742:20:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6537,"name":"uint256","nodeType":"ElementaryTypeName","src":"742:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"ThresholdSignature","nameLocation":"625:18:13","nodeType":"StructDefinition","scope":7219,"src":"618:152:13","visibility":"public"},{"canonicalName":"CryptographicUtils.VoteMix","id":6548,"members":[{"constant":false,"id":6541,"mutability":"mutable","name":"originalVote","nameLocation":"812:12:13","nodeType":"VariableDeclaration","scope":6548,"src":"804:20:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6540,"name":"bytes32","nodeType":"ElementaryTypeName","src":"804:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6543,"mutability":"mutable","name":"mixedVote","nameLocation":"843:9:13","nodeType":"VariableDeclaration","scope":6548,"src":"835:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6542,"name":"bytes32","nodeType":"ElementaryTypeName","src":"835:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6545,"mutability":"mutable","name":"mixIndex","nameLocation":"871:8:13","nodeType":"VariableDeclaration","scope":6548,"src":"863:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6544,"name":"uint256","nodeType":"ElementaryTypeName","src":"863:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6547,"mutability":"mutable","name":"randomness","nameLocation":"898:10:13","nodeType":"VariableDeclaration","scope":6548,"src":"890:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6546,"name":"bytes32","nodeType":"ElementaryTypeName","src":"890:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"VoteMix","nameLocation":"785:7:13","nodeType":"StructDefinition","scope":7219,"src":"778:138:13","visibility":"public"},{"anonymous":false,"eventSelector":"c68f18208a7700f32c4b855cbe842d01e8bb05971d3a0d36910061941fded28f","id":6556,"name":"CommitmentCreated","nameLocation":"953:17:13","nodeType":"EventDefinition","parameters":{"id":6555,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6550,"indexed":true,"mutability":"mutable","name":"voter","nameLocation":"987:5:13","nodeType":"VariableDeclaration","scope":6556,"src":"971:21:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6549,"name":"address","nodeType":"ElementaryTypeName","src":"971:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6552,"indexed":false,"mutability":"mutable","name":"commitmentHash","nameLocation":"1002:14:13","nodeType":"VariableDeclaration","scope":6556,"src":"994:22:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6551,"name":"bytes32","nodeType":"ElementaryTypeName","src":"994:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6554,"indexed":false,"mutability":"mutable","name":"timestamp","nameLocation":"1026:9:13","nodeType":"VariableDeclaration","scope":6556,"src":"1018:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6553,"name":"uint256","nodeType":"ElementaryTypeName","src":"1018:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:66:13"},"src":"947:90:13"},{"anonymous":false,"eventSelector":"4f983bdf6a5f2b22ca8980639a3fe2f32dc04d436f2ea1201a61dfde4165481d","id":6564,"name":"CommitmentRevealed","nameLocation":"1049:18:13","nodeType":"EventDefinition","parameters":{"id":6563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6558,"indexed":true,"mutability":"mutable","name":"voter","nameLocation":"1084:5:13","nodeType":"VariableDeclaration","scope":6564,"src":"1068:21:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6557,"name":"address","nodeType":"ElementaryTypeName","src":"1068:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6560,"indexed":false,"mutability":"mutable","name":"originalValue","nameLocation":"1099:13:13","nodeType":"VariableDeclaration","scope":6564,"src":"1091:21:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6559,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1091:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6562,"indexed":false,"mutability":"mutable","name":"commitmentHash","nameLocation":"1122:14:13","nodeType":"VariableDeclaration","scope":6564,"src":"1114:22:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6561,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1114:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1067:70:13"},"src":"1043:95:13"},{"anonymous":false,"eventSelector":"a0b4a49a6a825fcf54f59e68a9df38458f51d679f4060b122e964a115bf8987d","id":6572,"name":"ThresholdSignatureCreated","nameLocation":"1150:25:13","nodeType":"EventDefinition","parameters":{"id":6571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6566,"indexed":true,"mutability":"mutable","name":"messageHash","nameLocation":"1192:11:13","nodeType":"VariableDeclaration","scope":6572,"src":"1176:27:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6565,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1176:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6568,"indexed":false,"mutability":"mutable","name":"threshold","nameLocation":"1213:9:13","nodeType":"VariableDeclaration","scope":6572,"src":"1205:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6567,"name":"uint256","nodeType":"ElementaryTypeName","src":"1205:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6570,"indexed":false,"mutability":"mutable","name":"totalSigners","nameLocation":"1232:12:13","nodeType":"VariableDeclaration","scope":6572,"src":"1224:20:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6569,"name":"uint256","nodeType":"ElementaryTypeName","src":"1224:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1175:70:13"},"src":"1144:102:13"},{"anonymous":false,"eventSelector":"aac65b3c89cf2bdefe00c779ea6453621b54ad3caecfdf5bf36ccf447cf51772","id":6580,"name":"VoteMixed","nameLocation":"1258:9:13","nodeType":"EventDefinition","parameters":{"id":6579,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6574,"indexed":true,"mutability":"mutable","name":"originalVote","nameLocation":"1284:12:13","nodeType":"VariableDeclaration","scope":6580,"src":"1268:28:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6573,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1268:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6576,"indexed":false,"mutability":"mutable","name":"mixedVote","nameLocation":"1306:9:13","nodeType":"VariableDeclaration","scope":6580,"src":"1298:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6575,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1298:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6578,"indexed":false,"mutability":"mutable","name":"mixIndex","nameLocation":"1325:8:13","nodeType":"VariableDeclaration","scope":6580,"src":"1317:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6577,"name":"uint256","nodeType":"ElementaryTypeName","src":"1317:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1267:67:13"},"src":"1252:83:13"},{"body":{"id":6602,"nodeType":"Block","src":"1753:113:13","statements":[{"expression":{"id":6598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6590,"name":"commitmentHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6588,"src":"1764:14:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":6594,"name":"vote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6583,"src":"1808:4:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":6595,"name":"randomness","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6585,"src":"1814:10:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":6592,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1791:3:13","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":6593,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1795:12:13","memberName":"encodePacked","nodeType":"MemberAccess","src":"1791:16:13","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":6596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1791:34:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6591,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1781:9:13","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":6597,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1781:45:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"1764:62:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":6599,"nodeType":"ExpressionStatement","src":"1764:62:13"},{"expression":{"id":6600,"name":"commitmentHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6588,"src":"1844:14:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":6589,"id":6601,"nodeType":"Return","src":"1837:21:13"}]},"documentation":{"id":6581,"nodeType":"StructuredDocumentation","src":"1393:211:13","text":" @dev Creates a commitment hash for vote hiding\n @param vote The vote to commit\n @param randomness Random value for commitment\n @return commitmentHash The commitment hash"},"id":6603,"implemented":true,"kind":"function","modifiers":[],"name":"createCommitment","nameLocation":"1619:16:13","nodeType":"FunctionDefinition","parameters":{"id":6586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6583,"mutability":"mutable","name":"vote","nameLocation":"1644:4:13","nodeType":"VariableDeclaration","scope":6603,"src":"1636:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6582,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1636:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6585,"mutability":"mutable","name":"randomness","nameLocation":"1658:10:13","nodeType":"VariableDeclaration","scope":6603,"src":"1650:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6584,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1650:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1635:34:13"},"returnParameters":{"id":6589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6588,"mutability":"mutable","name":"commitmentHash","nameLocation":"1731:14:13","nodeType":"VariableDeclaration","scope":6603,"src":"1723:22:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6587,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1723:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1722:24:13"},"scope":7219,"src":"1610:256:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6629,"nodeType":"Block","src":"2300:135:13","statements":[{"assignments":[6616],"declarations":[{"constant":false,"id":6616,"mutability":"mutable","name":"computedHash","nameLocation":"2319:12:13","nodeType":"VariableDeclaration","scope":6629,"src":"2311:20:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6615,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2311:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":6624,"initialValue":{"arguments":[{"arguments":[{"id":6620,"name":"vote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6606,"src":"2361:4:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":6621,"name":"randomness","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6608,"src":"2367:10:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":6618,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2344:3:13","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":6619,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2348:12:13","memberName":"encodePacked","nodeType":"MemberAccess","src":"2344:16:13","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":6622,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2344:34:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6617,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2334:9:13","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":6623,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2334:45:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2311:68:13"},{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":6627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6625,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6616,"src":"2397:12:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6626,"name":"commitmentHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6610,"src":"2413:14:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2397:30:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":6614,"id":6628,"nodeType":"Return","src":"2390:37:13"}]},"documentation":{"id":6604,"nodeType":"StructuredDocumentation","src":"1874:263:13","text":" @dev Verifies a commitment reveal\n @param vote The revealed vote\n @param randomness The randomness used in commitment\n @param commitmentHash The original commitment hash\n @return isValid Whether the reveal is valid"},"id":6630,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCommitment","nameLocation":"2152:16:13","nodeType":"FunctionDefinition","parameters":{"id":6611,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6606,"mutability":"mutable","name":"vote","nameLocation":"2187:4:13","nodeType":"VariableDeclaration","scope":6630,"src":"2179:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6605,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2179:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6608,"mutability":"mutable","name":"randomness","nameLocation":"2211:10:13","nodeType":"VariableDeclaration","scope":6630,"src":"2203:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6607,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2203:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6610,"mutability":"mutable","name":"commitmentHash","nameLocation":"2241:14:13","nodeType":"VariableDeclaration","scope":6630,"src":"2233:22:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6609,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2233:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2168:94:13"},"returnParameters":{"id":6614,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6613,"mutability":"mutable","name":"isValid","nameLocation":"2291:7:13","nodeType":"VariableDeclaration","scope":6630,"src":"2286:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6612,"name":"bool","nodeType":"ElementaryTypeName","src":"2286:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2285:14:13"},"scope":7219,"src":"2143:292:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6758,"nodeType":"Block","src":"3049:979:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6647,"name":"signatures","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6636,"src":"3068:10:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes calldata[] calldata"}},"id":6648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3079:6:13","memberName":"length","nodeType":"MemberAccess","src":"3068:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":6649,"name":"signers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6639,"src":"3089:7:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":6650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3097:6:13","memberName":"length","nodeType":"MemberAccess","src":"3089:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3068:35:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5369676e617475726520636f756e74206d69736d61746368","id":6652,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3105:26:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_af35a36312b932d8537d4ae1f963849170791b1e8dd81b5ab94ef94074039ba1","typeString":"literal_string \"Signature count mismatch\""},"value":"Signature count mismatch"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_af35a36312b932d8537d4ae1f963849170791b1e8dd81b5ab94ef94074039ba1","typeString":"literal_string \"Signature count mismatch\""}],"id":6646,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"3060:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6653,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3060:72:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6654,"nodeType":"ExpressionStatement","src":"3060:72:13"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6656,"name":"signatures","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6636,"src":"3151:10:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes calldata[] calldata"}},"id":6657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3162:6:13","memberName":"length","nodeType":"MemberAccess","src":"3151:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":6658,"name":"threshold","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6641,"src":"3172:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3151:30:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e74207369676e61747572657320666f72207468726573686f6c64","id":6660,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3183:39:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_d4f610570b205398c3c538c40069de5b89e5d74d9985c80f860a165fbac40d20","typeString":"literal_string \"Insufficient signatures for threshold\""},"value":"Insufficient signatures for threshold"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d4f610570b205398c3c538c40069de5b89e5d74d9985c80f860a165fbac40d20","typeString":"literal_string \"Insufficient signatures for threshold\""}],"id":6655,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"3143:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3143:80:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6662,"nodeType":"ExpressionStatement","src":"3143:80:13"},{"assignments":[6664],"declarations":[{"constant":false,"id":6664,"mutability":"mutable","name":"validSignatures","nameLocation":"3252:15:13","nodeType":"VariableDeclaration","scope":6758,"src":"3244:23:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6663,"name":"uint256","nodeType":"ElementaryTypeName","src":"3244:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6666,"initialValue":{"hexValue":"30","id":6665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3270:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3244:27:13"},{"assignments":[6671],"declarations":[{"constant":false,"id":6671,"mutability":"mutable","name":"recoveredSigners","nameLocation":"3299:16:13","nodeType":"VariableDeclaration","scope":6758,"src":"3282:33:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":6669,"name":"address","nodeType":"ElementaryTypeName","src":"3282:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6670,"nodeType":"ArrayTypeName","src":"3282:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":6678,"initialValue":{"arguments":[{"expression":{"id":6675,"name":"signatures","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6636,"src":"3332:10:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes calldata[] calldata"}},"id":6676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3343:6:13","memberName":"length","nodeType":"MemberAccess","src":"3332:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6674,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"3318:13:13","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":6672,"name":"address","nodeType":"ElementaryTypeName","src":"3322:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6673,"nodeType":"ArrayTypeName","src":"3322:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":6677,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3318:32:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"3282:68:13"},{"body":{"id":6715,"nodeType":"Block","src":"3419:258:13","statements":[{"assignments":[6691],"declarations":[{"constant":false,"id":6691,"mutability":"mutable","name":"recoveredSigner","nameLocation":"3442:15:13","nodeType":"VariableDeclaration","scope":6715,"src":"3434:23:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6690,"name":"address","nodeType":"ElementaryTypeName","src":"3434:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":6698,"initialValue":{"arguments":[{"baseExpression":{"id":6694,"name":"signatures","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6636,"src":"3480:10:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes calldata[] calldata"}},"id":6696,"indexExpression":{"id":6695,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6680,"src":"3491:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3480:13:13","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"id":6692,"name":"messageHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6633,"src":"3460:11:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":6693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3472:7:13","memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":458,"src":"3460:19:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$attached_to$_t_bytes32_$","typeString":"function (bytes32,bytes memory) pure returns (address)"}},"id":6697,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3460:34:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3434:60:13"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6699,"name":"recoveredSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6691,"src":"3513:15:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"baseExpression":{"id":6700,"name":"signers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6639,"src":"3532:7:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":6702,"indexExpression":{"id":6701,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6680,"src":"3540:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3532:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3513:29:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6714,"nodeType":"IfStatement","src":"3509:157:13","trueBody":{"id":6713,"nodeType":"Block","src":"3544:122:13","statements":[{"expression":{"id":6708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6704,"name":"recoveredSigners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6671,"src":"3563:16:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":6706,"indexExpression":{"id":6705,"name":"validSignatures","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6664,"src":"3580:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3563:33:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6707,"name":"recoveredSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6691,"src":"3599:15:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3563:51:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6709,"nodeType":"ExpressionStatement","src":"3563:51:13"},{"expression":{"id":6711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3633:17:13","subExpression":{"id":6710,"name":"validSignatures","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6664,"src":"3633:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6712,"nodeType":"ExpressionStatement","src":"3633:17:13"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6683,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6680,"src":"3391:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":6684,"name":"signatures","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6636,"src":"3395:10:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes calldata[] calldata"}},"id":6685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3406:6:13","memberName":"length","nodeType":"MemberAccess","src":"3395:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3391:21:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6716,"initializationExpression":{"assignments":[6680],"declarations":[{"constant":false,"id":6680,"mutability":"mutable","name":"i","nameLocation":"3384:1:13","nodeType":"VariableDeclaration","scope":6716,"src":"3376:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6679,"name":"uint256","nodeType":"ElementaryTypeName","src":"3376:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6682,"initialValue":{"hexValue":"30","id":6681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3388:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3376:13:13"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":6688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3414:3:13","subExpression":{"id":6687,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6680,"src":"3414:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6689,"nodeType":"ExpressionStatement","src":"3414:3:13"},"nodeType":"ForStatement","src":"3371:306:13"},{"body":{"id":6752,"nodeType":"Block","src":"3783:182:13","statements":[{"body":{"id":6750,"nodeType":"Block","src":"3848:106:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":6740,"name":"recoveredSigners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6671,"src":"3875:16:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":6742,"indexExpression":{"id":6741,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6718,"src":"3892:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3875:19:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"baseExpression":{"id":6743,"name":"recoveredSigners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6671,"src":"3898:16:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":6745,"indexExpression":{"id":6744,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6728,"src":"3915:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3898:19:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3875:42:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4475706c6963617465207369676e6572","id":6747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3919:18:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_fce2d7e15248f5d22bd7cd979fe29b0a3cd528187b95b758e0a32fd9407eaceb","typeString":"literal_string \"Duplicate signer\""},"value":"Duplicate signer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fce2d7e15248f5d22bd7cd979fe29b0a3cd528187b95b758e0a32fd9407eaceb","typeString":"literal_string \"Duplicate signer\""}],"id":6739,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"3867:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6748,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3867:71:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6749,"nodeType":"ExpressionStatement","src":"3867:71:13"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6733,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6728,"src":"3822:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6734,"name":"validSignatures","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6664,"src":"3826:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3822:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6751,"initializationExpression":{"assignments":[6728],"declarations":[{"constant":false,"id":6728,"mutability":"mutable","name":"j","nameLocation":"3811:1:13","nodeType":"VariableDeclaration","scope":6751,"src":"3803:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6727,"name":"uint256","nodeType":"ElementaryTypeName","src":"3803:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6732,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6729,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6718,"src":"3815:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":6730,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3819:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3815:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3803:17:13"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":6737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3843:3:13","subExpression":{"id":6736,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6728,"src":"3843:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6738,"nodeType":"ExpressionStatement","src":"3843:3:13"},"nodeType":"ForStatement","src":"3798:156:13"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6721,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6718,"src":"3757:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6722,"name":"validSignatures","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6664,"src":"3761:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3757:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6753,"initializationExpression":{"assignments":[6718],"declarations":[{"constant":false,"id":6718,"mutability":"mutable","name":"i","nameLocation":"3750:1:13","nodeType":"VariableDeclaration","scope":6753,"src":"3742:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6717,"name":"uint256","nodeType":"ElementaryTypeName","src":"3742:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6720,"initialValue":{"hexValue":"30","id":6719,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3754:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3742:13:13"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":6725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3778:3:13","subExpression":{"id":6724,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6718,"src":"3778:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6726,"nodeType":"ExpressionStatement","src":"3778:3:13"},"nodeType":"ForStatement","src":"3737:228:13"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6754,"name":"validSignatures","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6664,"src":"3992:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":6755,"name":"threshold","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6641,"src":"4011:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3992:28:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":6645,"id":6757,"nodeType":"Return","src":"3985:35:13"}]},"documentation":{"id":6631,"nodeType":"StructuredDocumentation","src":"2494:338:13","text":" @dev Creates a threshold signature verification\n @param messageHash Hash of the message to verify\n @param signatures Array of signatures\n @param signers Array of signer addresses\n @param threshold Minimum number of valid signatures required\n @return isValid Whether threshold is met"},"id":6759,"implemented":true,"kind":"function","modifiers":[],"name":"verifyThresholdSignature","nameLocation":"2847:24:13","nodeType":"FunctionDefinition","parameters":{"id":6642,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6633,"mutability":"mutable","name":"messageHash","nameLocation":"2890:11:13","nodeType":"VariableDeclaration","scope":6759,"src":"2882:19:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6632,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2882:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6636,"mutability":"mutable","name":"signatures","nameLocation":"2929:10:13","nodeType":"VariableDeclaration","scope":6759,"src":"2912:27:13","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":6634,"name":"bytes","nodeType":"ElementaryTypeName","src":"2912:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":6635,"nodeType":"ArrayTypeName","src":"2912:7:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":6639,"mutability":"mutable","name":"signers","nameLocation":"2969:7:13","nodeType":"VariableDeclaration","scope":6759,"src":"2950:26:13","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":6637,"name":"address","nodeType":"ElementaryTypeName","src":"2950:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6638,"nodeType":"ArrayTypeName","src":"2950:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":6641,"mutability":"mutable","name":"threshold","nameLocation":"2995:9:13","nodeType":"VariableDeclaration","scope":6759,"src":"2987:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6640,"name":"uint256","nodeType":"ElementaryTypeName","src":"2987:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2871:140:13"},"returnParameters":{"id":6645,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6644,"mutability":"mutable","name":"isValid","nameLocation":"3040:7:13","nodeType":"VariableDeclaration","scope":6759,"src":"3035:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6643,"name":"bool","nodeType":"ElementaryTypeName","src":"3035:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3034:14:13"},"scope":7219,"src":"2838:1190:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6789,"nodeType":"Block","src":"4487:227:13","statements":[{"assignments":[6772],"declarations":[{"constant":false,"id":6772,"mutability":"mutable","name":"mixHash","nameLocation":"4575:7:13","nodeType":"VariableDeclaration","scope":6789,"src":"4567:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6771,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4567:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":6780,"initialValue":{"arguments":[{"arguments":[{"id":6776,"name":"randomness","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6764,"src":"4612:10:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":6777,"name":"mixIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6766,"src":"4624:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6774,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4595:3:13","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":6775,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4599:12:13","memberName":"encodePacked","nodeType":"MemberAccess","src":"4595:16:13","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":6778,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4595:38:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6773,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4585:9:13","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":6779,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4585:49:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4567:67:13"},{"expression":{"id":6785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6781,"name":"mixedVote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6769,"src":"4645:9:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":6784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6782,"name":"originalVote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6762,"src":"4657:12:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6783,"name":"mixHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6772,"src":"4672:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4657:22:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4645:34:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":6786,"nodeType":"ExpressionStatement","src":"4645:34:13"},{"expression":{"id":6787,"name":"mixedVote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6769,"src":"4697:9:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":6770,"id":6788,"nodeType":"Return","src":"4690:16:13"}]},"documentation":{"id":6760,"nodeType":"StructuredDocumentation","src":"4076:252:13","text":" @dev Creates a mixed vote using Chaum mixing\n @param originalVote The original vote\n @param randomness Random value for mixing\n @param mixIndex Index in the mixing round\n @return mixedVote The mixed vote"},"id":6790,"implemented":true,"kind":"function","modifiers":[],"name":"mixVote","nameLocation":"4343:7:13","nodeType":"FunctionDefinition","parameters":{"id":6767,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6762,"mutability":"mutable","name":"originalVote","nameLocation":"4369:12:13","nodeType":"VariableDeclaration","scope":6790,"src":"4361:20:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6761,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4361:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6764,"mutability":"mutable","name":"randomness","nameLocation":"4400:10:13","nodeType":"VariableDeclaration","scope":6790,"src":"4392:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6763,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4392:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6766,"mutability":"mutable","name":"mixIndex","nameLocation":"4429:8:13","nodeType":"VariableDeclaration","scope":6790,"src":"4421:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6765,"name":"uint256","nodeType":"ElementaryTypeName","src":"4421:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4350:94:13"},"returnParameters":{"id":6770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6769,"mutability":"mutable","name":"mixedVote","nameLocation":"4476:9:13","nodeType":"VariableDeclaration","scope":6790,"src":"4468:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6768,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4468:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4467:19:13"},"scope":7219,"src":"4334:380:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6820,"nodeType":"Block","src":"5135:238:13","statements":[{"assignments":[6803],"declarations":[{"constant":false,"id":6803,"mutability":"mutable","name":"mixHash","nameLocation":"5231:7:13","nodeType":"VariableDeclaration","scope":6820,"src":"5223:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6802,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5223:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":6811,"initialValue":{"arguments":[{"arguments":[{"id":6807,"name":"randomness","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6795,"src":"5268:10:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":6808,"name":"mixIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6797,"src":"5280:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6805,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5251:3:13","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":6806,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5255:12:13","memberName":"encodePacked","nodeType":"MemberAccess","src":"5251:16:13","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":6809,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5251:38:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6804,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"5241:9:13","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":6810,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5241:49:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"5223:67:13"},{"expression":{"id":6816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6812,"name":"originalVote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6800,"src":"5301:12:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":6815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6813,"name":"mixedVote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6793,"src":"5316:9:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6814,"name":"mixHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6803,"src":"5328:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"5316:19:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"5301:34:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":6817,"nodeType":"ExpressionStatement","src":"5301:34:13"},{"expression":{"id":6818,"name":"originalVote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6800,"src":"5353:12:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":6801,"id":6819,"nodeType":"Return","src":"5346:19:13"}]},"documentation":{"id":6791,"nodeType":"StructuredDocumentation","src":"4722:252:13","text":" @dev Unmixes a vote using the same parameters\n @param mixedVote The mixed vote\n @param randomness Random value used in mixing\n @param mixIndex Index used in mixing\n @return originalVote The original vote"},"id":6821,"implemented":true,"kind":"function","modifiers":[],"name":"unmixVote","nameLocation":"4989:9:13","nodeType":"FunctionDefinition","parameters":{"id":6798,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6793,"mutability":"mutable","name":"mixedVote","nameLocation":"5017:9:13","nodeType":"VariableDeclaration","scope":6821,"src":"5009:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6792,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5009:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6795,"mutability":"mutable","name":"randomness","nameLocation":"5045:10:13","nodeType":"VariableDeclaration","scope":6821,"src":"5037:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6794,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5037:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6797,"mutability":"mutable","name":"mixIndex","nameLocation":"5074:8:13","nodeType":"VariableDeclaration","scope":6821,"src":"5066:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6796,"name":"uint256","nodeType":"ElementaryTypeName","src":"5066:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4998:91:13"},"returnParameters":{"id":6801,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6800,"mutability":"mutable","name":"originalVote","nameLocation":"5121:12:13","nodeType":"VariableDeclaration","scope":6821,"src":"5113:20:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6799,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5113:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5112:22:13"},"scope":7219,"src":"4980:393:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6846,"nodeType":"Block","src":"5873:110:13","statements":[{"expression":{"id":6842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6833,"name":"proofHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6831,"src":"5884:9:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":6837,"name":"vote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6824,"src":"5923:4:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":6838,"name":"nullifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6826,"src":"5929:9:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":6839,"name":"secret","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6828,"src":"5940:6:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":6835,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5906:3:13","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":6836,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5910:12:13","memberName":"encodePacked","nodeType":"MemberAccess","src":"5906:16:13","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":6840,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5906:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6834,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"5896:9:13","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":6841,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5896:52:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"5884:64:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":6843,"nodeType":"ExpressionStatement","src":"5884:64:13"},{"expression":{"id":6844,"name":"proofHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6831,"src":"5966:9:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":6832,"id":6845,"nodeType":"Return","src":"5959:16:13"}]},"documentation":{"id":6822,"nodeType":"StructuredDocumentation","src":"5432:283:13","text":" @dev Creates a zero-knowledge proof hash for vote verification\n @param vote The vote to prove\n @param nullifier Random value to prevent double-spending\n @param secret Secret value for proof generation\n @return proofHash The proof hash"},"id":6847,"implemented":true,"kind":"function","modifiers":[],"name":"createZKProofHash","nameLocation":"5730:17:13","nodeType":"FunctionDefinition","parameters":{"id":6829,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6824,"mutability":"mutable","name":"vote","nameLocation":"5766:4:13","nodeType":"VariableDeclaration","scope":6847,"src":"5758:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6823,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5758:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6826,"mutability":"mutable","name":"nullifier","nameLocation":"5789:9:13","nodeType":"VariableDeclaration","scope":6847,"src":"5781:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6825,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5781:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6828,"mutability":"mutable","name":"secret","nameLocation":"5817:6:13","nodeType":"VariableDeclaration","scope":6847,"src":"5809:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6827,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5809:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5747:83:13"},"returnParameters":{"id":6832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6831,"mutability":"mutable","name":"proofHash","nameLocation":"5862:9:13","nodeType":"VariableDeclaration","scope":6847,"src":"5854:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6830,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5854:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5853:19:13"},"scope":7219,"src":"5721:262:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6867,"nodeType":"Block","src":"6371:63:13","statements":[{"expression":{"arguments":[{"id":6862,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6853,"src":"6408:5:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},{"id":6863,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6855,"src":"6415:4:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":6864,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6850,"src":"6421:4:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":6860,"name":"MerkleProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1815,"src":"6389:11:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MerkleProof_$1815_$","typeString":"type(library MerkleProof)"}},"id":6861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6401:6:13","memberName":"verify","nodeType":"MemberAccess","referencedDeclaration":771,"src":"6389:18:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32[] memory,bytes32,bytes32) pure returns (bool)"}},"id":6865,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6389:37:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":6859,"id":6866,"nodeType":"Return","src":"6382:44:13"}]},"documentation":{"id":6848,"nodeType":"StructuredDocumentation","src":"5991:222:13","text":" @dev Verifies a Merkle proof for inclusion\n @param leaf The leaf node\n @param proof The Merkle proof\n @param root The Merkle root\n @return isValid Whether the proof is valid"},"id":6868,"implemented":true,"kind":"function","modifiers":[],"name":"verifyMerkleProof","nameLocation":"6228:17:13","nodeType":"FunctionDefinition","parameters":{"id":6856,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6850,"mutability":"mutable","name":"leaf","nameLocation":"6264:4:13","nodeType":"VariableDeclaration","scope":6868,"src":"6256:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6849,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6256:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6853,"mutability":"mutable","name":"proof","nameLocation":"6298:5:13","nodeType":"VariableDeclaration","scope":6868,"src":"6279:24:13","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":6851,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6279:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":6852,"nodeType":"ArrayTypeName","src":"6279:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":6855,"mutability":"mutable","name":"root","nameLocation":"6322:4:13","nodeType":"VariableDeclaration","scope":6868,"src":"6314:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6854,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6314:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6245:88:13"},"returnParameters":{"id":6859,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6858,"mutability":"mutable","name":"isValid","nameLocation":"6362:7:13","nodeType":"VariableDeclaration","scope":6868,"src":"6357:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6857,"name":"bool","nodeType":"ElementaryTypeName","src":"6357:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6356:14:13"},"scope":7219,"src":"6219:215:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6969,"nodeType":"Block","src":"6731:614:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6878,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6872,"src":"6750:6:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":6879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6757:6:13","memberName":"length","nodeType":"MemberAccess","src":"6750:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6880,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6766:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6750:17:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"456d707479206c6561766573206172726179","id":6882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6769:20:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_4b51a346026a42a2d6ebd34e52f86b2b7ded33a11cbeedc5fbca3b42dd345235","typeString":"literal_string \"Empty leaves array\""},"value":"Empty leaves array"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4b51a346026a42a2d6ebd34e52f86b2b7ded33a11cbeedc5fbca3b42dd345235","typeString":"literal_string \"Empty leaves array\""}],"id":6877,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"6742:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6883,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6742:48:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6884,"nodeType":"ExpressionStatement","src":"6742:48:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6885,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6872,"src":"6815:6:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":6886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6822:6:13","memberName":"length","nodeType":"MemberAccess","src":"6815:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":6887,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6832:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6815:18:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6894,"nodeType":"IfStatement","src":"6811:67:13","trueBody":{"id":6893,"nodeType":"Block","src":"6835:43:13","statements":[{"expression":{"baseExpression":{"id":6889,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6872,"src":"6857:6:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":6891,"indexExpression":{"hexValue":"30","id":6890,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6864:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6857:9:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":6876,"id":6892,"nodeType":"Return","src":"6850:16:13"}]}},{"assignments":[6899],"declarations":[{"constant":false,"id":6899,"mutability":"mutable","name":"currentLevel","nameLocation":"6915:12:13","nodeType":"VariableDeclaration","scope":6969,"src":"6898:29:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":6897,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6898:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":6898,"nodeType":"ArrayTypeName","src":"6898:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":6911,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6903,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6872,"src":"6945:6:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":6904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6952:6:13","memberName":"length","nodeType":"MemberAccess","src":"6945:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":6905,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6961:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6945:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6907,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6944:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":6908,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6966:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"6944:23:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6902,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"6930:13:13","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes32[] memory)"},"typeName":{"baseType":{"id":6900,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6934:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":6901,"nodeType":"ArrayTypeName","src":"6934:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}}},"id":6910,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6930:38:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"6898:70:13"},{"body":{"id":6963,"nodeType":"Block","src":"7036:235:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6924,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6913,"src":"7055:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":6925,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7059:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7055:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":6927,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6872,"src":"7063:6:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":6928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7070:6:13","memberName":"length","nodeType":"MemberAccess","src":"7063:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7055:21:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":6961,"nodeType":"Block","src":"7194:66:13","statements":[{"expression":{"id":6959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6951,"name":"currentLevel","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6899,"src":"7213:12:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":6955,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6952,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6913,"src":"7226:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":6953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7230:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"7226:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7213:19:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":6956,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6872,"src":"7235:6:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":6958,"indexExpression":{"id":6957,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6913,"src":"7242:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7235:9:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"7213:31:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":6960,"nodeType":"ExpressionStatement","src":"7213:31:13"}]},"id":6962,"nodeType":"IfStatement","src":"7051:209:13","trueBody":{"id":6950,"nodeType":"Block","src":"7078:110:13","statements":[{"expression":{"id":6948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6930,"name":"currentLevel","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6899,"src":"7097:12:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":6934,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6931,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6913,"src":"7110:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":6932,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7114:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"7110:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7097:19:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"baseExpression":{"id":6938,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6872,"src":"7146:6:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":6940,"indexExpression":{"id":6939,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6913,"src":"7153:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7146:9:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"baseExpression":{"id":6941,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6872,"src":"7157:6:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":6945,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6942,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6913,"src":"7164:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":6943,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7168:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7164:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7157:13:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":6936,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"7129:3:13","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":6937,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7133:12:13","memberName":"encodePacked","nodeType":"MemberAccess","src":"7129:16:13","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":6946,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7129:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6935,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"7119:9:13","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":6947,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7119:53:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"7097:75:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":6949,"nodeType":"ExpressionStatement","src":"7097:75:13"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6916,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6913,"src":"7009:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":6917,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6872,"src":"7013:6:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":6918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7020:6:13","memberName":"length","nodeType":"MemberAccess","src":"7013:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7009:17:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6964,"initializationExpression":{"assignments":[6913],"declarations":[{"constant":false,"id":6913,"mutability":"mutable","name":"i","nameLocation":"7002:1:13","nodeType":"VariableDeclaration","scope":6964,"src":"6994:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6912,"name":"uint256","nodeType":"ElementaryTypeName","src":"6994:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6915,"initialValue":{"hexValue":"30","id":6914,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7006:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6994:13:13"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":6922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6920,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6913,"src":"7028:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":6921,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7033:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"7028:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6923,"nodeType":"ExpressionStatement","src":"7028:6:13"},"nodeType":"ForStatement","src":"6989:282:13"},{"expression":{"arguments":[{"id":6966,"name":"currentLevel","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6899,"src":"7324:12:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}],"id":6965,"name":"createMerkleRootFromLevel","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7166,"src":"7298:25:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes32[] memory) pure returns (bytes32)"}},"id":6967,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7298:39:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":6876,"id":6968,"nodeType":"Return","src":"7291:46:13"}]},"documentation":{"id":6869,"nodeType":"StructuredDocumentation","src":"6442:157:13","text":" @dev Creates a Merkle root from leaves (calldata version)\n @param leaves Array of leaf nodes\n @return root The Merkle root"},"id":6970,"implemented":true,"kind":"function","modifiers":[],"name":"createMerkleRoot","nameLocation":"6614:16:13","nodeType":"FunctionDefinition","parameters":{"id":6873,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6872,"mutability":"mutable","name":"leaves","nameLocation":"6650:6:13","nodeType":"VariableDeclaration","scope":6970,"src":"6631:25:13","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":6870,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6631:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":6871,"nodeType":"ArrayTypeName","src":"6631:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"6630:27:13"},"returnParameters":{"id":6876,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6875,"mutability":"mutable","name":"root","nameLocation":"6719:4:13","nodeType":"VariableDeclaration","scope":6970,"src":"6711:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6874,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6711:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6710:14:13"},"scope":7219,"src":"6605:740:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7071,"nodeType":"Block","src":"7648:614:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6980,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6974,"src":"7667:6:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":6981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7674:6:13","memberName":"length","nodeType":"MemberAccess","src":"7667:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6982,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7683:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7667:17:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"456d707479206c6561766573206172726179","id":6984,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7686:20:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_4b51a346026a42a2d6ebd34e52f86b2b7ded33a11cbeedc5fbca3b42dd345235","typeString":"literal_string \"Empty leaves array\""},"value":"Empty leaves array"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4b51a346026a42a2d6ebd34e52f86b2b7ded33a11cbeedc5fbca3b42dd345235","typeString":"literal_string \"Empty leaves array\""}],"id":6979,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"7659:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6985,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7659:48:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6986,"nodeType":"ExpressionStatement","src":"7659:48:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6987,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6974,"src":"7732:6:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":6988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7739:6:13","memberName":"length","nodeType":"MemberAccess","src":"7732:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":6989,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7749:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7732:18:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6996,"nodeType":"IfStatement","src":"7728:67:13","trueBody":{"id":6995,"nodeType":"Block","src":"7752:43:13","statements":[{"expression":{"baseExpression":{"id":6991,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6974,"src":"7774:6:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":6993,"indexExpression":{"hexValue":"30","id":6992,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7781:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7774:9:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":6978,"id":6994,"nodeType":"Return","src":"7767:16:13"}]}},{"assignments":[7001],"declarations":[{"constant":false,"id":7001,"mutability":"mutable","name":"currentLevel","nameLocation":"7832:12:13","nodeType":"VariableDeclaration","scope":7071,"src":"7815:29:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":6999,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7815:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":7000,"nodeType":"ArrayTypeName","src":"7815:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":7013,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7005,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6974,"src":"7862:6:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":7006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7869:6:13","memberName":"length","nodeType":"MemberAccess","src":"7862:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":7007,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7878:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7862:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7009,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7861:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":7010,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7883:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"7861:23:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7004,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"7847:13:13","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes32[] memory)"},"typeName":{"baseType":{"id":7002,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7851:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":7003,"nodeType":"ArrayTypeName","src":"7851:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}}},"id":7012,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7847:38:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"7815:70:13"},{"body":{"id":7065,"nodeType":"Block","src":"7953:235:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7026,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7015,"src":"7972:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":7027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7976:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7972:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":7029,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6974,"src":"7980:6:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":7030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7987:6:13","memberName":"length","nodeType":"MemberAccess","src":"7980:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7972:21:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":7063,"nodeType":"Block","src":"8111:66:13","statements":[{"expression":{"id":7061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7053,"name":"currentLevel","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7001,"src":"8130:12:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":7057,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7054,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7015,"src":"8143:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":7055,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8147:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"8143:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8130:19:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":7058,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6974,"src":"8152:6:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":7060,"indexExpression":{"id":7059,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7015,"src":"8159:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8152:9:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"8130:31:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":7062,"nodeType":"ExpressionStatement","src":"8130:31:13"}]},"id":7064,"nodeType":"IfStatement","src":"7968:209:13","trueBody":{"id":7052,"nodeType":"Block","src":"7995:110:13","statements":[{"expression":{"id":7050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7032,"name":"currentLevel","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7001,"src":"8014:12:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":7036,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7033,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7015,"src":"8027:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":7034,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8031:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"8027:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8014:19:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"baseExpression":{"id":7040,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6974,"src":"8063:6:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":7042,"indexExpression":{"id":7041,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7015,"src":"8070:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8063:9:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"baseExpression":{"id":7043,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6974,"src":"8074:6:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":7047,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7044,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7015,"src":"8081:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":7045,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8085:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8081:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8074:13:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":7038,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"8046:3:13","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":7039,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8050:12:13","memberName":"encodePacked","nodeType":"MemberAccess","src":"8046:16:13","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":7048,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8046:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7037,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"8036:9:13","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7049,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8036:53:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"8014:75:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":7051,"nodeType":"ExpressionStatement","src":"8014:75:13"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7018,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7015,"src":"7926:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":7019,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6974,"src":"7930:6:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":7020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7937:6:13","memberName":"length","nodeType":"MemberAccess","src":"7930:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7926:17:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7066,"initializationExpression":{"assignments":[7015],"declarations":[{"constant":false,"id":7015,"mutability":"mutable","name":"i","nameLocation":"7919:1:13","nodeType":"VariableDeclaration","scope":7066,"src":"7911:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7014,"name":"uint256","nodeType":"ElementaryTypeName","src":"7911:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7017,"initialValue":{"hexValue":"30","id":7016,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7923:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"7911:13:13"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":7024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7022,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7015,"src":"7945:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":7023,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7950:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"7945:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7025,"nodeType":"ExpressionStatement","src":"7945:6:13"},"nodeType":"ForStatement","src":"7906:282:13"},{"expression":{"arguments":[{"id":7068,"name":"currentLevel","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7001,"src":"8241:12:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}],"id":7067,"name":"createMerkleRootFromLevel","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7166,"src":"8215:25:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes32[] memory) pure returns (bytes32)"}},"id":7069,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8215:39:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":6978,"id":7070,"nodeType":"Return","src":"8208:46:13"}]},"documentation":{"id":6971,"nodeType":"StructuredDocumentation","src":"7353:155:13","text":" @dev Creates a Merkle root from leaves (memory version)\n @param leaves Array of leaf nodes\n @return root The Merkle root"},"id":7072,"implemented":true,"kind":"function","modifiers":[],"name":"createMerkleRootFromMemory","nameLocation":"7523:26:13","nodeType":"FunctionDefinition","parameters":{"id":6975,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6974,"mutability":"mutable","name":"leaves","nameLocation":"7567:6:13","nodeType":"VariableDeclaration","scope":7072,"src":"7550:23:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":6972,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7550:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":6973,"nodeType":"ArrayTypeName","src":"7550:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"7549:25:13"},"returnParameters":{"id":6978,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6977,"mutability":"mutable","name":"root","nameLocation":"7636:4:13","nodeType":"VariableDeclaration","scope":7072,"src":"7628:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6976,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7628:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7627:14:13"},"scope":7219,"src":"7514:748:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7165,"nodeType":"Block","src":"8556:525:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7081,"name":"level","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7076,"src":"8571:5:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":7082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8577:6:13","memberName":"length","nodeType":"MemberAccess","src":"8571:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":7083,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8587:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8571:17:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7090,"nodeType":"IfStatement","src":"8567:65:13","trueBody":{"id":7089,"nodeType":"Block","src":"8590:42:13","statements":[{"expression":{"baseExpression":{"id":7085,"name":"level","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7076,"src":"8612:5:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":7087,"indexExpression":{"hexValue":"30","id":7086,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8618:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8612:8:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":7080,"id":7088,"nodeType":"Return","src":"8605:15:13"}]}},{"assignments":[7095],"declarations":[{"constant":false,"id":7095,"mutability":"mutable","name":"nextLevel","nameLocation":"8669:9:13","nodeType":"VariableDeclaration","scope":7165,"src":"8652:26:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":7093,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8652:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":7094,"nodeType":"ArrayTypeName","src":"8652:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":7107,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7099,"name":"level","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7076,"src":"8696:5:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":7100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8702:6:13","memberName":"length","nodeType":"MemberAccess","src":"8696:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":7101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8711:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8696:16:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7103,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8695:18:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":7104,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8716:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"8695:22:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7098,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"8681:13:13","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes32[] memory)"},"typeName":{"baseType":{"id":7096,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8685:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":7097,"nodeType":"ArrayTypeName","src":"8685:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}}},"id":7106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8681:37:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"8652:66:13"},{"body":{"id":7159,"nodeType":"Block","src":"8785:225:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7120,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7109,"src":"8804:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":7121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8808:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8804:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":7123,"name":"level","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7076,"src":"8812:5:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":7124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8818:6:13","memberName":"length","nodeType":"MemberAccess","src":"8812:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8804:20:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":7157,"nodeType":"Block","src":"8937:62:13","statements":[{"expression":{"id":7155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7147,"name":"nextLevel","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7095,"src":"8956:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":7151,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7148,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7109,"src":"8966:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":7149,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8970:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"8966:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8956:16:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":7152,"name":"level","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7076,"src":"8975:5:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":7154,"indexExpression":{"id":7153,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7109,"src":"8981:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8975:8:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"8956:27:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":7156,"nodeType":"ExpressionStatement","src":"8956:27:13"}]},"id":7158,"nodeType":"IfStatement","src":"8800:199:13","trueBody":{"id":7146,"nodeType":"Block","src":"8826:105:13","statements":[{"expression":{"id":7144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7126,"name":"nextLevel","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7095,"src":"8845:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":7130,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7127,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7109,"src":"8855:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":7128,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8859:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"8855:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8845:16:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"baseExpression":{"id":7134,"name":"level","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7076,"src":"8891:5:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":7136,"indexExpression":{"id":7135,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7109,"src":"8897:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8891:8:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"baseExpression":{"id":7137,"name":"level","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7076,"src":"8901:5:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":7141,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7138,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7109,"src":"8907:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":7139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8911:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8907:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8901:12:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":7132,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"8874:3:13","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":7133,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8878:12:13","memberName":"encodePacked","nodeType":"MemberAccess","src":"8874:16:13","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":7142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8874:40:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7131,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"8864:9:13","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8864:51:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"8845:70:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":7145,"nodeType":"ExpressionStatement","src":"8845:70:13"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7112,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7109,"src":"8759:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":7113,"name":"level","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7076,"src":"8763:5:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":7114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8769:6:13","memberName":"length","nodeType":"MemberAccess","src":"8763:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8759:16:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7160,"initializationExpression":{"assignments":[7109],"declarations":[{"constant":false,"id":7109,"mutability":"mutable","name":"i","nameLocation":"8752:1:13","nodeType":"VariableDeclaration","scope":7160,"src":"8744:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7108,"name":"uint256","nodeType":"ElementaryTypeName","src":"8744:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7111,"initialValue":{"hexValue":"30","id":7110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8756:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8744:13:13"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":7118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7116,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7109,"src":"8777:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":7117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8782:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"8777:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7119,"nodeType":"ExpressionStatement","src":"8777:6:13"},"nodeType":"ForStatement","src":"8739:271:13"},{"expression":{"arguments":[{"id":7162,"name":"nextLevel","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7095,"src":"9063:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}],"id":7161,"name":"createMerkleRootFromLevel","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7166,"src":"9037:25:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes32[] memory) pure returns (bytes32)"}},"id":7163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9037:36:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":7080,"id":7164,"nodeType":"Return","src":"9030:43:13"}]},"documentation":{"id":7073,"nodeType":"StructuredDocumentation","src":"8270:149:13","text":" @dev Recursive function to build Merkle tree\n @param level Current level of the tree\n @return root The Merkle root"},"id":7166,"implemented":true,"kind":"function","modifiers":[],"name":"createMerkleRootFromLevel","nameLocation":"8434:25:13","nodeType":"FunctionDefinition","parameters":{"id":7077,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7076,"mutability":"mutable","name":"level","nameLocation":"8477:5:13","nodeType":"VariableDeclaration","scope":7166,"src":"8460:22:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":7074,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8460:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":7075,"nodeType":"ArrayTypeName","src":"8460:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"8459:24:13"},"returnParameters":{"id":7080,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7079,"mutability":"mutable","name":"root","nameLocation":"8544:4:13","nodeType":"VariableDeclaration","scope":7166,"src":"8536:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7078,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8536:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8535:14:13"},"scope":7219,"src":"8425:656:13","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":7191,"nodeType":"Block","src":"9442:186:13","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7178,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"9511:5:13","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9517:6:13","memberName":"number","nodeType":"MemberAccess","src":"9511:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":7180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9526:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9511:16:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7177,"name":"blockhash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-5,"src":"9501:9:13","typeDescriptions":{"typeIdentifier":"t_function_blockhash_view$_t_uint256_$returns$_t_bytes32_$","typeString":"function (uint256) view returns (bytes32)"}},"id":7182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9501:27:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":7183,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"9543:5:13","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9549:9:13","memberName":"timestamp","nodeType":"MemberAccess","src":"9543:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":7185,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"9573:5:13","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9579:10:13","memberName":"prevrandao","nodeType":"MemberAccess","src":"9573:16:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7187,"name":"seed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7169,"src":"9604:4:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":7175,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"9470:3:13","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":7176,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9474:12:13","memberName":"encodePacked","nodeType":"MemberAccess","src":"9470:16:13","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":7188,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9470:149:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7174,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"9460:9:13","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7189,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9460:160:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":7173,"id":7190,"nodeType":"Return","src":"9453:167:13"}]},"documentation":{"id":7167,"nodeType":"StructuredDocumentation","src":"9125:186:13","text":" @dev Generates a pseudo-random number based on block data\n @param seed Additional seed for randomness\n @return randomNumber The generated random number"},"id":7192,"implemented":true,"kind":"function","modifiers":[],"name":"generateRandomNumber","nameLocation":"9326:20:13","nodeType":"FunctionDefinition","parameters":{"id":7170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7169,"mutability":"mutable","name":"seed","nameLocation":"9355:4:13","nodeType":"VariableDeclaration","scope":7192,"src":"9347:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7168,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9347:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"9346:14:13"},"returnParameters":{"id":7173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7172,"mutability":"mutable","name":"randomNumber","nameLocation":"9422:12:13","nodeType":"VariableDeclaration","scope":7192,"src":"9414:20:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7171,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9414:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"9413:22:13"},"scope":7219,"src":"9317:311:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7217,"nodeType":"Block","src":"10034:103:13","statements":[{"expression":{"id":7213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7204,"name":"voteHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7202,"src":"10045:8:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":7208,"name":"voter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7195,"src":"10083:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7209,"name":"vote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7197,"src":"10090:4:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":7210,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7199,"src":"10096:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7206,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"10066:3:13","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":7207,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10070:12:13","memberName":"encodePacked","nodeType":"MemberAccess","src":"10066:16:13","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":7211,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10066:36:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7205,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"10056:9:13","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10056:47:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"10045:58:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":7214,"nodeType":"ExpressionStatement","src":"10045:58:13"},{"expression":{"id":7215,"name":"voteHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7202,"src":"10121:8:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":7203,"id":7216,"nodeType":"Return","src":"10114:15:13"}]},"documentation":{"id":7193,"nodeType":"StructuredDocumentation","src":"9636:249:13","text":" @dev Creates a deterministic hash for vote verification\n @param voter The voter address\n @param vote The vote value\n @param nonce The nonce for uniqueness\n @return voteHash The deterministic vote hash"},"id":7218,"implemented":true,"kind":"function","modifiers":[],"name":"createVoteHash","nameLocation":"9900:14:13","nodeType":"FunctionDefinition","parameters":{"id":7200,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7195,"mutability":"mutable","name":"voter","nameLocation":"9933:5:13","nodeType":"VariableDeclaration","scope":7218,"src":"9925:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7194,"name":"address","nodeType":"ElementaryTypeName","src":"9925:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7197,"mutability":"mutable","name":"vote","nameLocation":"9957:4:13","nodeType":"VariableDeclaration","scope":7218,"src":"9949:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7196,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9949:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":7199,"mutability":"mutable","name":"nonce","nameLocation":"9980:5:13","nodeType":"VariableDeclaration","scope":7218,"src":"9972:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7198,"name":"uint256","nodeType":"ElementaryTypeName","src":"9972:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9914:78:13"},"returnParameters":{"id":7203,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7202,"mutability":"mutable","name":"voteHash","nameLocation":"10024:8:13","nodeType":"VariableDeclaration","scope":7218,"src":"10016:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7201,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10016:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"10015:18:13"},"scope":7219,"src":"9891:246:13","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":7220,"src":"377:9763:13","usedErrors":[],"usedEvents":[6556,6564,6572,6580]}],"src":"33:10108:13"},"id":13}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Pausable.sol":{"Pausable":{"abi":[{"inputs":[],"name":"EnforcedPause","type":"error"},{"inputs":[],"name":"ExpectedPause","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"paused()":"5c975abb"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xdb484371dfbb848cb6f5d70464e9ac9b2900e4164ead76bbce4fef0b44bcc68f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9d6f6f6600a2bec622f699081b58350873b5e63ce05464d17d674a290bb8a7c\",\"dweb:/ipfs/QmQKVzSQY1PM3Bid4QhgVVZyx6B4Jx7XgaQzLKHj38vJz8\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ReentrancyGuard":{"abi":[{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ECDSA":{"abi":[{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"}],"evm":{"bytecode":{"functionDebugData":{"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"linkReferences":{},"object":"608060405234601a57604051603f6020823930815050603f90f35b600080fdfe6080604052600080fdfea26469706673582212201880293c10f97aeafbe959ffe32bd5e719c4b78e6768150eef9e2bc6078f57d964736f6c634300081c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x1A JUMPI PUSH1 0x40 MLOAD PUSH1 0x3F PUSH1 0x20 DUP3 CODECOPY ADDRESS DUP2 POP POP PUSH1 0x3F SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 XOR DUP1 0x29 EXTCODECOPY LT 0xF9 PUSH27 0xEAFBE959FFE32BD5E719C4B78E6768150EEF9E2BC6078F57D96473 PUSH16 0x6C634300081C00330000000000000000 ","sourceMap":"344:7470:4:-:0;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"revert_error_42b3090547df1d2001c96683413b8cf91c1b902ef5e3cb8d9f6f304cf7446f74":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080604052600080fdfea26469706673582212201880293c10f97aeafbe959ffe32bd5e719c4b78e6768150eef9e2bc6078f57d964736f6c634300081c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 XOR DUP1 0x29 EXTCODECOPY LT 0xF9 PUSH27 0xEAFBE959FFE32BD5E719C4B78E6768150EEF9E2BC6078F57D96473 PUSH16 0x6C634300081C00330000000000000000 ","sourceMap":"344:7470:4:-:0;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/Hashes.sol":{"Hashes":{"abi":[],"evm":{"bytecode":{"functionDebugData":{"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"linkReferences":{},"object":"608060405234601a57604051603f6020823930815050603f90f35b600080fdfe6080604052600080fdfea2646970667358221220179b75a372d1ceed4d65f266a7acdd4c0b175581c5c72befce18bf78c385e5b964736f6c634300081c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x1A JUMPI PUSH1 0x40 MLOAD PUSH1 0x3F PUSH1 0x20 DUP3 CODECOPY ADDRESS DUP2 POP POP PUSH1 0x3F SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 OR SWAP12 PUSH22 0xA372D1CEED4D65F266A7ACDD4C0B175581C5C72BEFCE XOR 0xBF PUSH25 0xC385E5B964736F6C634300081C003300000000000000000000 ","sourceMap":"221:811:5:-:0;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"revert_error_42b3090547df1d2001c96683413b8cf91c1b902ef5e3cb8d9f6f304cf7446f74":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080604052600080fdfea2646970667358221220179b75a372d1ceed4d65f266a7acdd4c0b175581c5c72befce18bf78c385e5b964736f6c634300081c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 OR SWAP12 PUSH22 0xA372D1CEED4D65F266A7ACDD4C0B175581C5C72BEFCE XOR 0xBF PUSH25 0xC385E5B964736F6C634300081C003300000000000000000000 ","sourceMap":"221:811:5:-:0;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library of standard hash functions. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/Hashes.sol\":\"Hashes\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/Hashes.sol\":{\"keccak256\":\"0x8cbd338f083224b4b6f0ff42cbda641a0a6c31ffcdca197452b97fe4d0918269\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f517dec5ba0c6491395acbf7f1d621f4e89e8f218bf5303c867b1c5ad70c6b11\",\"dweb:/ipfs/QmWmXHRLEw8W6ckth7NyYTU88YfvuS7xSsfae5ksL8qNUe\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol":{"MerkleProof":{"abi":[{"inputs":[],"name":"MerkleProofInvalidMultiproof","type":"error"}],"evm":{"bytecode":{"functionDebugData":{"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"linkReferences":{},"object":"608060405234601a57604051603f6020823930815050603f90f35b600080fdfe6080604052600080fdfea26469706673582212203e9ea46d3d2ea7ce7e8826374fc213d77eec2d935334bcfc86dc2d4d7a3228b364736f6c634300081c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x1A JUMPI PUSH1 0x40 MLOAD PUSH1 0x3F PUSH1 0x20 DUP3 CODECOPY ADDRESS DUP2 POP POP PUSH1 0x3F SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATACOPY SWAP15 LOG4 PUSH14 0x3D2EA7CE7E8826374FC213D77EEC 0x2D SWAP4 MSTORE8 CALLVALUE 0xBC 0xFC DUP7 0xDC 0x2D 0x4D PUSH27 0x3228B364736F6C634300081C003300000000000000000000000000 ","sourceMap":"1353:22982:6:-:0;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"revert_error_42b3090547df1d2001c96683413b8cf91c1b902ef5e3cb8d9f6f304cf7446f74":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080604052600080fdfea26469706673582212203e9ea46d3d2ea7ce7e8826374fc213d77eec2d935334bcfc86dc2d4d7a3228b364736f6c634300081c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATACOPY SWAP15 LOG4 PUSH14 0x3D2EA7CE7E8826374FC213D77EEC 0x2D SWAP4 MSTORE8 CALLVALUE 0xBC 0xFC DUP7 0xDC 0x2D 0x4D PUSH27 0x3228B364736F6C634300081C003300000000000000000000000000 ","sourceMap":"1353:22982:6:-:0;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MerkleProofInvalidMultiproof\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"These functions deal with verification of Merkle Tree proofs. The tree and the proofs can be generated using our https://github.com/OpenZeppelin/merkle-tree[JavaScript library]. You will find a quickstart guide in the readme. WARNING: You should avoid using leaf values that are 64 bytes long prior to hashing, or use a hash function other than keccak256 for hashing leaves. This is because the concatenation of a sorted pair of internal nodes in the Merkle tree could be reinterpreted as a leaf value. OpenZeppelin's JavaScript library generates Merkle trees that are safe against this attack out of the box. IMPORTANT: Consider memory side-effects when using custom hashing functions that access memory in an unsafe way. NOTE: This library supports proof verification for merkle trees built using custom _commutative_ hashing functions (i.e. `H(a, b) == H(b, a)`). Proving leaf inclusion in trees built using non-commutative hashing functions requires additional logic that is not supported by this library.\",\"errors\":{\"MerkleProofInvalidMultiproof()\":[{\"details\":\"The multiproof provided is not valid.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":\"MerkleProof\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/Hashes.sol\":{\"keccak256\":\"0x8cbd338f083224b4b6f0ff42cbda641a0a6c31ffcdca197452b97fe4d0918269\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f517dec5ba0c6491395acbf7f1d621f4e89e8f218bf5303c867b1c5ad70c6b11\",\"dweb:/ipfs/QmWmXHRLEw8W6ckth7NyYTU88YfvuS7xSsfae5ksL8qNUe\"]},\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":{\"keccak256\":\"0x36a0c409c437a753cac9b92b75f93b0fbe92803bf2c8ff1517e54b247f166134\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f91ba472de411aa557cdbf6560c40750d87bd11c9060bc04d2ba7119af9d5a6\",\"dweb:/ipfs/QmQjtYo2i7dDvzCEzZ67bDoNSG4RrwMoxPWuqFmX5Xzpuw\"]}},\"version\":1}"}},"contracts/BlocPol.sol":{"BlocPol":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"candidateId","type":"uint256"},{"indexed":false,"internalType":"string","name":"name","type":"string"},{"indexed":false,"internalType":"string","name":"ipfsHash","type":"string"}],"name":"CandidateRegistered","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"voter","type":"address"},{"indexed":true,"internalType":"uint256","name":"candidateId","type":"uint256"},{"indexed":false,"internalType":"bytes32","name":"voteHash","type":"bytes32"},{"indexed":false,"internalType":"bytes32","name":"txHash","type":"bytes32"}],"name":"VoteCast","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"startTime","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"endTime","type":"uint256"}],"name":"VotingSessionStarted","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"stopTime","type":"uint256"}],"name":"VotingSessionStopped","type":"event"},{"inputs":[],"name":"admin","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"deploymentTimestamp","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getAllVotes","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"candidateId","type":"uint256"}],"name":"getCandidate","outputs":[{"components":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"ipfsHash","type":"string"},{"internalType":"uint256","name":"voteCount","type":"uint256"}],"internalType":"struct BlocPol.Candidate","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getCandidates","outputs":[{"components":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"ipfsHash","type":"string"},{"internalType":"uint256","name":"voteCount","type":"uint256"}],"internalType":"struct BlocPol.Candidate[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getDeploymentTimestamp","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"candidateId","type":"uint256"}],"name":"getTotalVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"voter","type":"address"}],"name":"getVoteHash","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"voter","type":"address"}],"name":"getVoteTxHash","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"voter","type":"address"}],"name":"getVotedCandidate","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"addr","type":"address"}],"name":"hasAddressVoted","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"isVotingActive","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"ipfsHash","type":"string"}],"name":"registerCandidate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"durationSeconds","type":"uint256"}],"name":"startVotingSession","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"stopVotingSession","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"candidateId","type":"uint256"}],"name":"vote","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"votingActive","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"votingEndTime","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"votingStartTime","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"cleanup_uint160":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"constructor_BlocPol":{"entryPoint":163,"id":1951,"parameterSlots":0,"returnSlots":0},"convert_address_to_address":{"entryPoint":97,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint160_to_address":{"entryPoint":90,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint160_to_uint160":{"entryPoint":57,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint256_to_uint256":{"entryPoint":135,"id":null,"parameterSlots":1,"returnSlots":1},"identity":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"shift_left":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"update_byte_slice_shift":{"entryPoint":126,"id":null,"parameterSlots":2,"returnSlots":1},"update_byte_slice_shift_0":{"entryPoint":36,"id":null,"parameterSlots":2,"returnSlots":1},"update_storage_value_offset_address_to_address":{"entryPoint":104,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offset_uint256_to_uint256":{"entryPoint":145,"id":null,"parameterSlots":2,"returnSlots":0}},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x1F JUMPI PUSH1 0xE PUSH1 0xA3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1633 PUSH2 0xB8 DUP3 CODECOPY PUSH2 0x1633 SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST PUSH1 0x4B SWAP1 PUSH1 0x4E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x4B SWAP1 PUSH1 0x39 JUMP JUMPDEST PUSH1 0x4B SWAP1 PUSH1 0x5A JUMP JUMPDEST SWAP1 PUSH1 0x74 PUSH1 0x4B PUSH1 0x7A SWAP3 PUSH1 0x61 JUMP JUMPDEST DUP3 SLOAD PUSH1 0x24 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST SWAP1 PUSH1 0x0 NOT SWAP1 PUSH1 0x2F JUMP JUMPDEST PUSH1 0x4B PUSH1 0x4B PUSH1 0x4B SWAP3 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x9D PUSH1 0x4B PUSH1 0x7A SWAP3 PUSH1 0x87 JUMP JUMPDEST DUP3 SLOAD PUSH1 0x7E JUMP JUMPDEST PUSH1 0xAC CALLER PUSH1 0x0 PUSH1 0x68 JUMP JUMPDEST PUSH1 0xB5 TIMESTAMP PUSH1 0x1 PUSH1 0x91 JUMP JUMPDEST JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x121B93F EQ PUSH2 0x142 JUMPI DUP1 PUSH4 0x6A49FCE EQ PUSH2 0x13D JUMPI DUP1 PUSH4 0xDBCE4DD EQ PUSH2 0x138 JUMPI DUP1 PUSH4 0x17A0AD8E EQ PUSH2 0x133 JUMPI DUP1 PUSH4 0x1EA736E0 EQ PUSH2 0x12E JUMPI DUP1 PUSH4 0x2019A608 EQ PUSH2 0x129 JUMPI DUP1 PUSH4 0x2CE35E11 EQ PUSH2 0x124 JUMPI DUP1 PUSH4 0x35B8E820 EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x408E2727 EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x47CF6F76 EQ PUSH2 0x115 JUMPI DUP1 PUSH4 0x851B6EF2 EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0x959812F8 EQ PUSH2 0x10B JUMPI DUP1 PUSH4 0x96A379D8 EQ PUSH2 0x106 JUMPI DUP1 PUSH4 0x9980A55A EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0xBFC12C05 EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0xE061A858 EQ PUSH2 0xF7 JUMPI DUP1 PUSH4 0xE3E6CA7D EQ PUSH2 0xF2 JUMPI DUP1 PUSH4 0xEDAA5DFC EQ PUSH2 0xED JUMPI PUSH4 0xF851A440 SUB PUSH2 0x147 JUMPI PUSH2 0x698 JUMP JUMPDEST PUSH2 0x653 JUMP JUMPDEST PUSH2 0x638 JUMP JUMPDEST PUSH2 0x61D JUMP JUMPDEST PUSH2 0x602 JUMP JUMPDEST PUSH2 0x5DE JUMP JUMPDEST PUSH2 0x5C3 JUMP JUMPDEST PUSH2 0x5A8 JUMP JUMPDEST PUSH2 0x545 JUMP JUMPDEST PUSH2 0x4C3 JUMP JUMPDEST PUSH2 0x496 JUMP JUMPDEST PUSH2 0x449 JUMP JUMPDEST PUSH2 0x41D JUMP JUMPDEST PUSH2 0x402 JUMP JUMPDEST PUSH2 0x3CB JUMP JUMPDEST PUSH2 0x391 JUMP JUMPDEST PUSH2 0x375 JUMP JUMPDEST PUSH2 0x2D0 JUMP JUMPDEST PUSH2 0x17B JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 JUMPDEST SUB PUSH2 0x147 JUMPI JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x162 DUP3 PUSH2 0x14C JUMP JUMPDEST JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x147 JUMPI PUSH2 0x178 SWAP2 PUSH2 0x155 JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x147 JUMPI PUSH2 0x193 PUSH2 0x18E CALLDATASIZE PUSH1 0x4 PUSH2 0x164 JUMP JUMPDEST PUSH2 0xB60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 SWAP2 SUB SLT PUSH2 0x147 JUMPI JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x1BF JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1AF JUMP JUMPDEST PUSH2 0x1F0 PUSH2 0x1F9 PUSH1 0x20 SWAP4 PUSH2 0x203 SWAP4 PUSH2 0x1E4 DUP2 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP4 DUP5 SWAP3 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP6 DUP7 SWAP2 ADD PUSH2 0x1AC JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP1 JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD DUP3 MSTORE SWAP1 PUSH2 0x178 SWAP1 PUSH1 0x60 DUP1 PUSH2 0x241 PUSH2 0x22F PUSH1 0x80 DUP6 ADD PUSH1 0x20 DUP9 ADD MLOAD DUP7 DUP3 SUB PUSH1 0x20 DUP9 ADD MSTORE PUSH2 0x1CF JUMP JUMPDEST PUSH1 0x40 DUP8 ADD MLOAD DUP6 DUP3 SUB PUSH1 0x40 DUP8 ADD MSTORE PUSH2 0x1CF JUMP JUMPDEST SWAP5 ADD MLOAD SWAP2 ADD MSTORE JUMP JUMPDEST SWAP1 PUSH2 0x178 SWAP2 PUSH2 0x207 JUMP JUMPDEST SWAP1 PUSH2 0x269 PUSH2 0x25F DUP4 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 PUSH2 0x27B PUSH1 0x20 DUP4 MUL DUP5 ADD SWAP5 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x0 SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x28F JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 PUSH1 0x20 PUSH2 0x2B2 PUSH2 0x2AB DUP4 DUP6 PUSH1 0x1 SWAP6 SUB DUP8 MSTORE DUP10 MLOAD PUSH2 0x249 JUMP JUMPDEST SWAP8 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP4 ADD SWAP4 ADD SWAP2 SWAP4 SWAP3 SWAP1 PUSH2 0x280 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH2 0x178 SWAP3 SWAP2 ADD SWAP1 PUSH2 0x253 JUMP JUMPDEST CALLVALUE PUSH2 0x147 JUMPI PUSH2 0x2E0 CALLDATASIZE PUSH1 0x4 PUSH2 0x19D JUMP JUMPDEST PUSH2 0x199 PUSH2 0x2EB PUSH2 0xDCD JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x2BF JUMP JUMPDEST SWAP1 SWAP2 DUP3 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x147 JUMPI DUP2 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x147 JUMPI PUSH1 0x20 ADD SWAP3 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH2 0x147 JUMPI JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x40 DUP3 DUP5 SUB SLT PUSH2 0x147 JUMPI DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x147 JUMPI DUP4 PUSH2 0x350 SWAP2 DUP5 ADD PUSH2 0x2F7 JUMP JUMPDEST SWAP3 SWAP1 SWAP4 PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x147 JUMPI PUSH2 0x371 SWAP3 ADD PUSH2 0x2F7 JUMP JUMPDEST SWAP1 SWAP2 JUMP JUMPDEST CALLVALUE PUSH2 0x147 JUMPI PUSH2 0x193 PUSH2 0x388 CALLDATASIZE PUSH1 0x4 PUSH2 0x327 JUMP JUMPDEST SWAP3 SWAP2 SWAP1 SWAP2 PUSH2 0x1260 JUMP JUMPDEST CALLVALUE PUSH2 0x147 JUMPI PUSH2 0x3A1 CALLDATASIZE PUSH1 0x4 PUSH2 0x19D JUMP JUMPDEST PUSH2 0x193 PUSH2 0x1320 JUMP JUMPDEST PUSH2 0x178 SWAP2 PUSH1 0x8 MUL SHR DUP2 JUMP JUMPDEST SWAP1 PUSH2 0x178 SWAP2 SLOAD PUSH2 0x3A9 JUMP JUMPDEST PUSH2 0x178 PUSH1 0x0 PUSH1 0x4 PUSH2 0x3B4 JUMP JUMPDEST CALLVALUE PUSH2 0x147 JUMPI PUSH2 0x3DB CALLDATASIZE PUSH1 0x4 PUSH2 0x19D JUMP JUMPDEST PUSH2 0x199 PUSH2 0x3E6 PUSH2 0x3BF JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH2 0x178 PUSH1 0x0 PUSH1 0x3 PUSH2 0x3B4 JUMP JUMPDEST CALLVALUE PUSH2 0x147 JUMPI PUSH2 0x412 CALLDATASIZE PUSH1 0x4 PUSH2 0x19D JUMP JUMPDEST PUSH2 0x199 PUSH2 0x3E6 PUSH2 0x3F6 JUMP JUMPDEST CALLVALUE PUSH2 0x147 JUMPI PUSH2 0x199 PUSH2 0x3E6 PUSH2 0x433 CALLDATASIZE PUSH1 0x4 PUSH2 0x164 JUMP JUMPDEST PUSH2 0x1328 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH2 0x178 SWAP3 SWAP2 ADD SWAP1 PUSH2 0x207 JUMP JUMPDEST CALLVALUE PUSH2 0x147 JUMPI PUSH2 0x199 PUSH2 0x464 PUSH2 0x45F CALLDATASIZE PUSH1 0x4 PUSH2 0x164 JUMP JUMPDEST PUSH2 0x1341 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x438 JUMP JUMPDEST PUSH2 0x178 SWAP2 PUSH1 0x8 MUL SHR JUMPDEST PUSH1 0xFF AND SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x178 SWAP2 SLOAD PUSH2 0x470 JUMP JUMPDEST PUSH2 0x178 PUSH1 0x0 PUSH1 0x2 PUSH2 0x47F JUMP JUMPDEST CALLVALUE PUSH2 0x147 JUMPI PUSH2 0x4A6 CALLDATASIZE PUSH1 0x4 PUSH2 0x19D JUMP JUMPDEST PUSH2 0x199 PUSH2 0x4B1 PUSH2 0x48A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x147 JUMPI PUSH2 0x4D3 CALLDATASIZE PUSH1 0x4 PUSH2 0x19D JUMP JUMPDEST PUSH2 0x199 PUSH2 0x4B1 PUSH2 0x1350 JUMP JUMPDEST SWAP1 PUSH2 0x4FE PUSH2 0x4F7 PUSH2 0x4ED DUP5 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP5 MSTORE SWAP3 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x50F JUMPI POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 PUSH2 0x52C PUSH2 0x525 PUSH1 0x1 SWAP3 DUP7 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP5 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 ADD PUSH2 0x502 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH2 0x178 SWAP3 SWAP2 ADD SWAP1 PUSH2 0x4DE JUMP JUMPDEST CALLVALUE PUSH2 0x147 JUMPI PUSH2 0x555 CALLDATASIZE PUSH1 0x4 PUSH2 0x19D JUMP JUMPDEST PUSH2 0x199 PUSH2 0x560 PUSH2 0x13B4 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x534 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x14E JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x162 DUP3 PUSH2 0x578 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x147 JUMPI PUSH2 0x178 SWAP2 PUSH2 0x587 JUMP JUMPDEST CALLVALUE PUSH2 0x147 JUMPI PUSH2 0x199 PUSH2 0x3E6 PUSH2 0x5BE CALLDATASIZE PUSH1 0x4 PUSH2 0x594 JUMP JUMPDEST PUSH2 0x1465 JUMP JUMPDEST CALLVALUE PUSH2 0x147 JUMPI PUSH2 0x5D3 CALLDATASIZE PUSH1 0x4 PUSH2 0x19D JUMP JUMPDEST PUSH2 0x199 PUSH2 0x3E6 PUSH2 0x1497 JUMP JUMPDEST CALLVALUE PUSH2 0x147 JUMPI PUSH2 0x193 PUSH2 0x5F1 CALLDATASIZE PUSH1 0x4 PUSH2 0x164 JUMP JUMPDEST PUSH2 0x158D JUMP JUMPDEST PUSH2 0x178 PUSH1 0x0 PUSH1 0x1 PUSH2 0x3B4 JUMP JUMPDEST CALLVALUE PUSH2 0x147 JUMPI PUSH2 0x612 CALLDATASIZE PUSH1 0x4 PUSH2 0x19D JUMP JUMPDEST PUSH2 0x199 PUSH2 0x3E6 PUSH2 0x5F6 JUMP JUMPDEST CALLVALUE PUSH2 0x147 JUMPI PUSH2 0x199 PUSH2 0x3E6 PUSH2 0x633 CALLDATASIZE PUSH1 0x4 PUSH2 0x594 JUMP JUMPDEST PUSH2 0x1596 JUMP JUMPDEST CALLVALUE PUSH2 0x147 JUMPI PUSH2 0x199 PUSH2 0x4B1 PUSH2 0x64E CALLDATASIZE PUSH1 0x4 PUSH2 0x594 JUMP JUMPDEST PUSH2 0x15BE JUMP JUMPDEST CALLVALUE PUSH2 0x147 JUMPI PUSH2 0x199 PUSH2 0x3E6 PUSH2 0x669 CALLDATASIZE PUSH1 0x4 PUSH2 0x594 JUMP JUMPDEST PUSH2 0x15D5 JUMP JUMPDEST PUSH2 0x178 SWAP2 PUSH1 0x8 MUL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x178 SWAP2 SLOAD PUSH2 0x66E JUMP JUMPDEST PUSH2 0x178 PUSH1 0x0 DUP1 PUSH2 0x682 JUMP JUMPDEST CALLVALUE PUSH2 0x147 JUMPI PUSH2 0x6A8 CALLDATASIZE PUSH1 0x4 PUSH2 0x19D JUMP JUMPDEST PUSH2 0x199 PUSH2 0x6B3 PUSH2 0x68D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH2 0x178 SWAP1 PUSH2 0x479 JUMP JUMPDEST PUSH2 0x178 SWAP1 SLOAD PUSH2 0x6CD JUMP JUMPDEST ISZERO PUSH2 0x6E7 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x566F74696E67206973206E6F7420616374697665 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x178 SWAP1 DUP2 JUMP JUMPDEST PUSH2 0x178 SWAP1 SLOAD PUSH2 0x723 JUMP JUMPDEST ISZERO PUSH2 0x73B JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x566F74696E67206E6F7420696E20616C6C6F77656420706572696F6400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x162 SWAP1 PUSH2 0x796 PUSH2 0x791 PUSH1 0x2 PUSH2 0x6D6 JUMP JUMPDEST PUSH2 0x6E0 JUMP JUMPDEST PUSH2 0x7A3 PUSH2 0x178 PUSH1 0x3 PUSH2 0x72A JUMP JUMPDEST TIMESTAMP LT ISZERO DUP1 PUSH2 0x7BA JUMPI JUMPDEST PUSH2 0x7B5 SWAP1 PUSH2 0x734 JUMP JUMPDEST PUSH2 0x858 JUMP JUMPDEST POP PUSH2 0x7B5 PUSH2 0x7CB PUSH2 0x178 PUSH1 0x4 PUSH2 0x72A JUMP JUMPDEST TIMESTAMP GT ISZERO SWAP1 POP PUSH2 0x7AC JUMP JUMPDEST PUSH2 0x178 SWAP1 PUSH2 0x56C SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 JUMP JUMPDEST PUSH2 0x178 SWAP1 PUSH2 0x7D5 JUMP JUMPDEST PUSH2 0x178 SWAP1 PUSH2 0x7E9 JUMP JUMPDEST SWAP1 PUSH2 0x805 SWAP1 PUSH2 0x7F2 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x81A JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x165BDD481A185D9948185B1C9958591E481D9BDD1959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x162 SWAP1 PUSH2 0x87E PUSH2 0x879 PUSH2 0x875 PUSH2 0x870 CALLER PUSH1 0x8 PUSH2 0x7FB JUMP JUMPDEST PUSH2 0x6D6 JUMP JUMPDEST ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x813 JUMP JUMPDEST PUSH2 0xA08 JUMP JUMPDEST PUSH2 0x178 PUSH2 0x178 PUSH2 0x178 SWAP3 SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x805 SWAP1 PUSH2 0x883 JUMP JUMPDEST ISZERO PUSH2 0x8A1 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x496E76616C69642063616E646964617465 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x8FF JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH2 0x8DA JUMP JUMPDEST SWAP1 PUSH1 0x0 NOT SWAP1 JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x924 PUSH2 0x178 PUSH2 0x92B SWAP3 PUSH2 0x883 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x904 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST SWAP1 PUSH1 0xFF SWAP1 PUSH2 0x90A JUMP JUMPDEST SWAP1 PUSH2 0x948 PUSH2 0x178 PUSH2 0x92B SWAP3 ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x92F JUMP JUMPDEST PUSH2 0x1A8 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x60 SHL SWAP1 JUMP JUMPDEST PUSH1 0x20 SWAP4 SWAP3 PUSH2 0x97A PUSH1 0x14 DUP4 PUSH2 0x97A DUP9 SWAP6 PUSH2 0x203 SWAP8 PUSH2 0x94F JUMP JUMPDEST ADD SWAP2 DUP3 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x9B8 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x980 JUMP JUMPDEST SWAP1 PUSH2 0x924 PUSH2 0x178 PUSH2 0x92B SWAP3 SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x8FF JUMPI JUMP JUMPDEST SWAP3 PUSH2 0x97A PUSH1 0x20 PUSH2 0x203 SWAP5 PUSH2 0x97A PUSH1 0x14 DUP9 PUSH2 0x97A DUP6 SWAP12 SWAP11 DUP7 SWAP10 PUSH2 0x94F JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP2 ADD SWAP3 SWAP2 PUSH2 0x162 SWAP2 PUSH1 0x20 ADD MSTORE JUMP JUMPDEST PUSH2 0xA28 PUSH2 0xA21 PUSH1 0x0 PUSH2 0xA1B DUP5 PUSH1 0x6 PUSH2 0x890 JUMP JUMPDEST ADD PUSH2 0x72A JUMP JUMPDEST DUP3 EQ PUSH2 0x89A JUMP JUMPDEST PUSH2 0xA50 PUSH1 0x3 PUSH2 0xA38 DUP4 PUSH1 0x6 PUSH2 0x890 JUMP JUMPDEST ADD PUSH2 0xA4A PUSH2 0xA45 DUP3 PUSH2 0x72A JUMP JUMPDEST PUSH2 0x8F0 JUMP JUMPDEST SWAP1 PUSH2 0x914 JUMP JUMPDEST PUSH2 0xA65 PUSH1 0x1 PUSH2 0xA60 CALLER PUSH1 0x8 PUSH2 0x7FB JUMP JUMPDEST PUSH2 0x938 JUMP JUMPDEST PUSH2 0xA79 DUP2 PUSH2 0xA74 CALLER PUSH1 0x9 PUSH2 0x7FB JUMP JUMPDEST PUSH2 0x914 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9C DUP2 PUSH1 0x20 DUP2 ADD PUSH2 0xA90 TIMESTAMP DUP7 CALLER DUP5 PUSH2 0x962 JUMP JUMPDEST SWAP1 DUP2 SUB DUP3 MSTORE SUB DUP3 PUSH2 0x996 JUMP JUMPDEST PUSH2 0xAAE PUSH2 0xAA7 DUP3 MLOAD SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST KECCAK256 SWAP1 PUSH2 0xAC4 DUP3 PUSH2 0xABF CALLER PUSH1 0xA PUSH2 0x7FB JUMP JUMPDEST PUSH2 0x9BD JUMP JUMPDEST PUSH32 0xEFFD419499491389E01FE2774ED0A6FDDD60460399033FDA8E42CE83081DB172 PUSH2 0xAF8 PUSH2 0xAF2 PUSH1 0x1 PUSH2 0x883 JUMP JUMPDEST NUMBER PUSH2 0x9CB JUMP JUMPDEST PUSH2 0xB18 PUSH2 0xB04 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST DUP1 SWAP3 PUSH2 0xA90 PUSH1 0x20 DUP4 ADD SWAP2 BLOCKHASH NUMBER DUP9 CALLER DUP6 PUSH2 0x9D8 JUMP JUMPDEST PUSH2 0xB23 PUSH2 0xAA7 DUP3 MLOAD SWAP1 JUMP JUMPDEST KECCAK256 PUSH2 0xB33 DUP2 PUSH2 0xABF CALLER PUSH1 0xB PUSH2 0x7FB JUMP JUMPDEST PUSH2 0xB45 PUSH2 0xB3F CALLER PUSH2 0x7F2 JUMP JUMPDEST SWAP4 PUSH2 0x883 JUMP JUMPDEST SWAP4 PUSH2 0xB5B PUSH2 0xB52 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 SWAP3 DUP4 PUSH2 0x9F5 JUMP JUMPDEST SUB SWAP1 LOG3 JUMP JUMPDEST PUSH2 0x162 SWAP1 PUSH2 0x780 JUMP JUMPDEST SWAP1 PUSH2 0x162 PUSH2 0xB76 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 PUSH2 0x996 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x9B8 JUMPI PUSH1 0x20 DUP1 SWAP2 MUL ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0xBA7 PUSH2 0xBA2 DUP4 PUSH2 0xB7D JUMP JUMPDEST PUSH2 0xB69 JUMP JUMPDEST SWAP2 DUP3 MSTORE JUMP JUMPDEST PUSH2 0x178 PUSH1 0x80 PUSH2 0xB69 JUMP JUMPDEST PUSH2 0xBBE PUSH2 0xBAC JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x60 PUSH1 0x20 DUP4 ADD DUP2 SWAP1 MSTORE PUSH1 0x40 DUP4 ADD DUP2 SWAP1 MSTORE DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x178 PUSH2 0xBB6 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0xBF0 JUMPI POP POP POP JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH2 0xBFB PUSH2 0xBD9 JUMP JUMPDEST DUP2 DUP5 ADD MSTORE ADD PUSH2 0xBE4 JUMP JUMPDEST SWAP1 PUSH2 0x162 PUSH2 0xC1B PUSH2 0xC15 DUP5 PUSH2 0xB95 JUMP JUMPDEST SWAP4 PUSH2 0xB7D JUMP JUMPDEST PUSH1 0x1F NOT ADD PUSH1 0x20 DUP5 ADD PUSH2 0xBE1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0xC61 JUMPI PUSH2 0xC58 PUSH1 0x1 SWAP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP2 MUL ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0xC28 JUMP JUMPDEST SWAP1 PUSH2 0xC6F DUP3 MLOAD SWAP1 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0xC61 JUMPI PUSH1 0x20 DUP1 SWAP2 MUL ADD ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x2 DUP4 DIV SWAP3 AND DUP1 ISZERO PUSH2 0xCB6 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0xCB1 JUMPI JUMP JUMPDEST PUSH2 0xC80 JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0xCA6 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x0 SWAP4 SWAP3 SWAP2 PUSH2 0xCDD PUSH2 0xCD3 DUP4 PUSH2 0xC96 JUMP JUMPDEST DUP1 DUP6 MSTORE SWAP4 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0xD2F JUMPI POP PUSH1 0x1 EQ PUSH2 0xCF6 JUMPI POP POP POP JUMP JUMPDEST PUSH2 0xD09 SWAP2 SWAP3 SWAP4 SWAP5 POP PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x0 SWAP3 JUMPDEST DUP2 DUP5 LT PUSH2 0xD1B JUMPI POP POP ADD SWAP1 JUMP JUMPDEST DUP1 SLOAD DUP5 DUP5 ADD MSTORE PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0xD0E JUMP JUMPDEST SWAP3 SWAP5 SWAP6 POP POP POP PUSH1 0xFF NOT AND DUP3 MSTORE ISZERO ISZERO PUSH1 0x20 MUL ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x178 SWAP2 PUSH2 0xCC0 JUMP JUMPDEST SWAP1 PUSH2 0x162 PUSH2 0xD68 SWAP3 PUSH2 0xD5F PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP4 DUP5 DUP1 SWAP3 PUSH2 0xD44 JUMP JUMPDEST SUB DUP4 PUSH2 0x996 JUMP JUMPDEST SWAP1 PUSH2 0x162 PUSH2 0xDBD PUSH1 0x3 PUSH2 0xD80 PUSH2 0xBAC JUMP JUMPDEST SWAP5 PUSH2 0xD91 PUSH2 0xD8D DUP3 PUSH2 0x72A JUMP JUMPDEST DUP8 MSTORE JUMP JUMPDEST PUSH2 0xDA7 PUSH2 0xDA0 PUSH1 0x1 DUP4 ADD PUSH2 0xD4E JUMP JUMPDEST PUSH1 0x20 DUP9 ADD MSTORE JUMP JUMPDEST PUSH2 0xA1B PUSH2 0xDB6 PUSH1 0x2 DUP4 ADD PUSH2 0xD4E JUMP JUMPDEST PUSH1 0x40 DUP9 ADD MSTORE JUMP JUMPDEST PUSH1 0x60 DUP5 ADD MSTORE JUMP JUMPDEST PUSH2 0x178 SWAP1 PUSH2 0xD6F JUMP JUMPDEST PUSH1 0x7 PUSH2 0xDDF PUSH2 0xDDA DUP3 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xC05 JUMP JUMPDEST SWAP1 PUSH2 0xDEA PUSH1 0x0 PUSH2 0x883 JUMP JUMPDEST PUSH2 0xDF5 PUSH2 0x178 DUP4 SLOAD SWAP1 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0xE47 JUMPI PUSH2 0xE42 SWAP1 PUSH2 0xE26 PUSH2 0xE21 PUSH1 0x6 PUSH2 0xE1B PUSH2 0xE15 DUP6 DUP9 PUSH2 0xC3E JUMP JUMPDEST SWAP1 PUSH2 0x3B4 JUMP JUMPDEST SWAP1 PUSH2 0x890 JUMP JUMPDEST PUSH2 0xDC4 JUMP JUMPDEST PUSH2 0xE30 DUP3 DUP7 PUSH2 0xC66 JUMP JUMPDEST MSTORE PUSH2 0xE3B DUP2 DUP6 PUSH2 0xC66 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH2 0xDEA JUMP JUMPDEST POP POP SWAP1 JUMP JUMPDEST PUSH2 0x178 SWAP1 PUSH2 0x56C JUMP JUMPDEST PUSH2 0x178 SWAP1 SLOAD PUSH2 0xE4C JUMP JUMPDEST ISZERO PUSH2 0xE66 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C792061646D696E2063616E20706572666F726D20746869732061637469 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x37B7 PUSH1 0xF1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x162 SWAP4 SWAP3 SWAP2 PUSH2 0xED4 PUSH2 0xECD PUSH2 0x56C PUSH1 0x0 PUSH2 0xE55 JUMP JUMPDEST CALLER EQ PUSH2 0xE5F JUMP JUMPDEST PUSH2 0x1193 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x9B8 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD SWAP1 JUMP JUMPDEST SWAP1 DUP3 PUSH1 0x0 SWAP4 SWAP3 DUP3 CALLDATACOPY ADD MSTORE JUMP JUMPDEST SWAP1 SWAP3 SWAP2 SWAP3 PUSH2 0xF12 PUSH2 0xBA2 DUP3 PUSH2 0xED9 JUMP JUMPDEST SWAP4 DUP2 DUP6 MSTORE DUP2 DUP4 ADD GT PUSH2 0x147 JUMPI PUSH2 0x162 SWAP2 PUSH1 0x20 DUP6 ADD SWAP1 PUSH2 0xEF6 JUMP JUMPDEST PUSH2 0x178 SWAP2 CALLDATASIZE SWAP2 PUSH2 0xF02 JUMP JUMPDEST SWAP2 PUSH1 0x0 NOT PUSH1 0x8 SWAP3 SWAP1 SWAP3 MUL SWAP2 DUP3 SHL SWAP2 SHL PUSH2 0x90A JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0xF5C PUSH2 0x178 PUSH2 0x92B SWAP4 PUSH2 0x883 JUMP JUMPDEST SWAP1 DUP4 SLOAD PUSH2 0xF37 JUMP JUMPDEST PUSH2 0x162 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0xF4B JUMP JUMPDEST DUP2 DUP2 LT PUSH2 0xF7B JUMPI POP POP JUMP JUMPDEST DUP1 PUSH2 0xF89 PUSH1 0x0 PUSH1 0x1 SWAP4 PUSH2 0xF64 JUMP JUMPDEST ADD PUSH2 0xF70 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x1F DUP2 GT PUSH2 0xF9E JUMPI POP POP POP JUMP JUMPDEST PUSH2 0xFB0 PUSH2 0x162 SWAP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x1F DUP5 ADD DUP2 SWAP1 DIV DUP4 ADD SWAP4 LT PUSH2 0xFD2 JUMPI JUMPDEST PUSH1 0x20 PUSH1 0x1F SWAP1 SWAP2 ADD DIV ADD SWAP1 PUSH2 0xF70 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0xFC3 JUMP JUMPDEST SWAP1 PUSH2 0xFE5 DUP2 MLOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x9B8 JUMPI PUSH2 0x1009 DUP3 PUSH2 0x1003 DUP6 SLOAD PUSH2 0xC96 JUMP JUMPDEST DUP6 PUSH2 0xF8F JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x1044 JUMPI PUSH2 0x92B SWAP3 SWAP2 PUSH1 0x0 SWAP2 DUP4 PUSH2 0x1039 JUMPI JUMPDEST POP POP PUSH1 0x0 NOT PUSH1 0x8 DUP4 MUL SHR NOT AND SWAP1 PUSH1 0x2 MUL OR SWAP1 JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x1025 JUMP JUMPDEST PUSH1 0x1F NOT DUP4 AND SWAP2 PUSH2 0x1059 DUP6 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x1097 JUMPI POP SWAP2 PUSH1 0x2 SWAP4 SWAP2 DUP6 PUSH1 0x1 SWAP7 SWAP5 LT PUSH2 0x107E JUMPI JUMPDEST POP POP POP MUL ADD SWAP1 SSTORE JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0x8 PUSH1 0x1F DUP6 AND MUL SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x1075 JUMP JUMPDEST SWAP2 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP8 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP3 ADD PUSH2 0x105D JUMP JUMPDEST SWAP1 PUSH2 0x162 SWAP2 PUSH2 0xFDC JUMP JUMPDEST PUSH1 0x3 PUSH2 0x110B PUSH1 0x60 PUSH2 0x162 SWAP5 PUSH2 0x10D8 PUSH2 0x10D2 PUSH1 0x0 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST DUP7 PUSH2 0x914 JUMP JUMPDEST PUSH2 0x10EF PUSH2 0x10E6 PUSH1 0x20 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP8 ADD PUSH2 0x10AF JUMP JUMPDEST PUSH2 0x1106 PUSH2 0x10FD PUSH1 0x40 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP8 ADD PUSH2 0x10AF JUMP JUMPDEST ADD MLOAD SWAP1 JUMP JUMPDEST SWAP2 ADD PUSH2 0x914 JUMP JUMPDEST SWAP1 PUSH2 0x162 SWAP2 PUSH2 0x10B9 JUMP JUMPDEST SWAP1 DUP2 SLOAD SWAP2 PUSH9 0x10000000000000000 DUP4 LT ISZERO PUSH2 0x9B8 JUMPI DUP3 PUSH2 0x1144 SWAP2 PUSH1 0x1 PUSH2 0x162 SWAP6 ADD DUP2 SSTORE PUSH2 0xC3E JUMP JUMPDEST SWAP1 PUSH2 0xF4B JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x1F9 DUP2 PUSH2 0x1161 DUP2 PUSH2 0x203 SWAP6 PUSH1 0x20 SWAP2 DUP2 MSTORE ADD SWAP1 JUMP JUMPDEST DUP1 SWAP6 PUSH2 0xEF6 JUMP JUMPDEST SWAP3 SWAP1 PUSH2 0x1185 SWAP1 PUSH2 0x178 SWAP6 SWAP4 PUSH1 0x40 DUP7 ADD SWAP2 DUP7 DUP4 SUB PUSH1 0x0 DUP9 ADD MSTORE PUSH2 0x114A JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 DUP6 SUB SWAP2 ADD MSTORE PUSH2 0x114A JUMP JUMPDEST PUSH2 0x125B PUSH32 0xEC1A365AEEEC255796BF50D7A2A8F24D0D5F5C6ADA0167B6C647428D9164582 SWAP4 SWAP5 PUSH2 0x1248 PUSH2 0x11C6 PUSH1 0x5 PUSH2 0x72A JUMP JUMPDEST PUSH2 0x11D9 PUSH2 0x11D2 DUP3 PUSH2 0x8F0 JUMP JUMPDEST PUSH1 0x5 PUSH2 0x914 JUMP JUMPDEST PUSH2 0x1238 PUSH2 0x11E4 PUSH2 0xBAC JUMP JUMPDEST PUSH2 0x11EC DUP4 DUP3 MSTORE JUMP JUMPDEST PUSH2 0x1200 PUSH2 0x11F9 DUP10 DUP10 PUSH2 0xF2C JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH2 0x1214 PUSH2 0x120D DUP7 DUP13 PUSH2 0xF2C JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE JUMP JUMPDEST PUSH2 0x1228 PUSH2 0x1221 PUSH1 0x0 PUSH2 0x883 JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE JUMP JUMPDEST PUSH2 0x1233 DUP4 PUSH1 0x6 PUSH2 0x890 JUMP JUMPDEST PUSH2 0x1112 JUMP JUMPDEST PUSH2 0x1243 DUP2 PUSH1 0x7 PUSH2 0x111C JUMP JUMPDEST PUSH2 0x883 JUMP JUMPDEST SWAP6 PUSH2 0x1252 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP5 DUP6 SWAP5 DUP6 PUSH2 0x1168 JUMP JUMPDEST SUB SWAP1 LOG2 JUMP JUMPDEST SWAP1 PUSH2 0x162 SWAP4 SWAP3 SWAP2 PUSH2 0xEB6 JUMP JUMPDEST PUSH2 0x127C PUSH2 0xECD PUSH2 0x56C PUSH1 0x0 PUSH2 0xE55 JUMP JUMPDEST PUSH2 0x162 PUSH2 0x12C4 JUMP JUMPDEST ISZERO PUSH2 0x128B JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x566F74696E67206E6F7420616374697665 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x12D6 PUSH2 0x12D1 PUSH1 0x2 PUSH2 0x6D6 JUMP JUMPDEST PUSH2 0x1284 JUMP JUMPDEST PUSH2 0x12E2 PUSH1 0x0 PUSH1 0x2 PUSH2 0x938 JUMP JUMPDEST PUSH2 0x12ED TIMESTAMP PUSH1 0x4 PUSH2 0x914 JUMP JUMPDEST PUSH32 0x74FD836262D1AD6BBD13B40F5A80A5415F4D2DB6EE1D7D8F9C9BB515D9F04E01 PUSH2 0x131B PUSH2 0x3E6 PUSH1 0x4 PUSH2 0x72A JUMP JUMPDEST SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x162 PUSH2 0x126C JUMP JUMPDEST PUSH1 0x3 PUSH2 0xA1B PUSH2 0x178 SWAP3 PUSH2 0x1339 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x6 PUSH2 0x890 JUMP JUMPDEST PUSH2 0xE21 PUSH2 0x178 SWAP2 PUSH2 0x1339 PUSH2 0xBD9 JUMP JUMPDEST PUSH2 0x135A PUSH1 0x2 PUSH2 0x6D6 JUMP JUMPDEST DUP1 PUSH2 0x137C JUMPI JUMPDEST DUP1 PUSH2 0x1368 JUMPI SWAP1 JUMP JUMPDEST POP PUSH2 0x1376 PUSH2 0x178 PUSH1 0x4 PUSH2 0x72A JUMP JUMPDEST TIMESTAMP GT ISZERO SWAP1 JUMP JUMPDEST POP PUSH2 0x138A PUSH2 0x178 PUSH1 0x3 PUSH2 0x72A JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x1360 JUMP JUMPDEST CALLDATASIZE SWAP1 CALLDATACOPY JUMP JUMPDEST SWAP1 PUSH2 0x162 PUSH2 0x13A7 PUSH2 0xC15 DUP5 PUSH2 0xB95 JUMP JUMPDEST PUSH1 0x1F NOT ADD PUSH1 0x20 DUP5 ADD PUSH2 0x1392 JUMP JUMPDEST PUSH1 0x7 PUSH2 0x13C6 PUSH2 0x13C1 DUP3 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1397 JUMP JUMPDEST SWAP1 PUSH2 0x13D1 PUSH1 0x0 PUSH2 0x883 JUMP JUMPDEST PUSH2 0x13DC PUSH2 0x178 DUP4 SLOAD SWAP1 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0xE47 JUMPI PUSH2 0x1414 SWAP1 PUSH2 0x140E PUSH2 0x1401 PUSH1 0x3 PUSH2 0xA1B PUSH1 0x6 PUSH2 0xE1B PUSH2 0xE15 DUP8 DUP11 PUSH2 0xC3E JUMP JUMPDEST PUSH2 0x140B DUP4 DUP8 PUSH2 0xC66 JUMP JUMPDEST MSTORE JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH2 0x13D1 JUMP JUMPDEST ISZERO PUSH2 0x1420 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F20766F746520666F756E6420666F72207468697320616464726573730000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x1492 PUSH2 0x178 SWAP2 PUSH2 0x1474 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH2 0x148B PUSH2 0x1486 PUSH2 0x870 DUP4 PUSH1 0x8 PUSH2 0x7FB JUMP JUMPDEST PUSH2 0x1419 JUMP JUMPDEST PUSH1 0xA PUSH2 0x7FB JUMP JUMPDEST PUSH2 0x72A JUMP JUMPDEST PUSH2 0x178 PUSH1 0x1 PUSH2 0x72A JUMP JUMPDEST PUSH2 0x162 SWAP1 PUSH2 0x14B5 PUSH2 0xECD PUSH2 0x56C PUSH1 0x0 PUSH2 0xE55 JUMP JUMPDEST PUSH2 0x150B JUMP JUMPDEST ISZERO PUSH2 0x14C1 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x566F74696E6720616C726561647920616374697665 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x8FF JUMPI JUMP JUMPDEST PUSH2 0x1544 PUSH2 0x154B SWAP2 PUSH2 0x1527 PUSH2 0x1522 PUSH2 0x875 PUSH1 0x2 PUSH2 0x6D6 JUMP JUMPDEST PUSH2 0x14BA JUMP JUMPDEST PUSH2 0x1533 PUSH1 0x1 PUSH1 0x2 PUSH2 0x938 JUMP JUMPDEST PUSH2 0x153E TIMESTAMP PUSH1 0x3 PUSH2 0x914 JUMP JUMPDEST TIMESTAMP PUSH2 0x14FE JUMP JUMPDEST PUSH1 0x4 PUSH2 0x914 JUMP JUMPDEST PUSH32 0xE280A408633821740A429FB671E01CACF8D1D70D5C2735F4F94EC0EDEF4EA6DE PUSH2 0x1576 PUSH1 0x3 PUSH2 0x72A JUMP JUMPDEST PUSH2 0x1580 PUSH1 0x4 PUSH2 0x72A JUMP JUMPDEST SWAP1 PUSH2 0x131B PUSH2 0xB52 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x162 SWAP1 PUSH2 0x14A1 JUMP JUMPDEST PUSH2 0x1492 PUSH2 0x178 SWAP2 PUSH2 0x15A5 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH2 0x15B7 PUSH2 0x1486 PUSH2 0x870 DUP4 PUSH1 0x8 PUSH2 0x7FB JUMP JUMPDEST PUSH1 0xB PUSH2 0x7FB JUMP JUMPDEST PUSH2 0x870 PUSH2 0x178 SWAP2 PUSH2 0x15CD PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x8 PUSH2 0x7FB JUMP JUMPDEST PUSH2 0x1492 PUSH2 0x178 SWAP2 PUSH2 0x15E4 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH2 0x15F6 PUSH2 0x1486 PUSH2 0x870 DUP4 PUSH1 0x8 PUSH2 0x7FB JUMP JUMPDEST PUSH1 0x9 PUSH2 0x7FB JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASPRICE 0xC7 CALLDATALOAD NUMBER 0x26 0xC6 CALLDATACOPY PUSH13 0x1F7D51946388E080A41417150 SELFDESTRUCT PUSH11 0x7BF4094C5DA4F572706473 PUSH16 0x6C634300081C00330000000000000000 ","sourceMap":"60:5329:7:-:0;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;60:5329:7;;;;;;;;;;:::o;:::-;;;;;-1:-1:-1;;;;;60:5329:7;;;;;;;-1:-1:-1;;;;;60:5329:7;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::o;:::-;;-1:-1:-1;;60:5329:7;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;1666:99::-;1691:18;1699:10;1691:18;;:::i;:::-;1720:37;1742:15;1720:37;;:::i;:::-;1666:99::o"},"deployedBytecode":{"functionDebugData":{"abi_decode":{"entryPoint":413,"id":null,"parameterSlots":2,"returnSlots":0},"abi_decode_address":{"entryPoint":1415,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_available_length_string":{"entryPoint":3842,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_string_calldata":{"entryPoint":759,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_string_calldatat_string_calldata":{"entryPoint":807,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_address":{"entryPoint":1428,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_uint256":{"entryPoint":356,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_uint256":{"entryPoint":341,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_string_storage":{"entryPoint":3396,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_struct_Candidate":{"entryPoint":585,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_address_to_address_nonPadded_inplace":{"entryPoint":2383,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_array_struct_Candidate_dyn":{"entryPoint":595,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_struct_Candidate_memory_ptr_dyn_memory_ptr":{"entryPoint":703,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_uint256_dyn":{"entryPoint":1332,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_uint256_dyn_memory_ptr":{"entryPoint":1246,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_bool":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_bool_to_bool":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_bytes32":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_bytes32_bytes32":{"entryPoint":2549,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_bytes32_to_bytes32":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_packed_address_uint256_uint256":{"entryPoint":2402,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_packed_address_uint256_uint256_bytes32":{"entryPoint":2520,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_string":{"entryPoint":463,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string_calldata":{"entryPoint":4426,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_string_calldata_string_calldata":{"entryPoint":4456,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_string_storage":{"entryPoint":3264,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_stringliteral":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_4753b041641313f1ca2fbfa3890c4d0c79c5ac55aa0cd2bcb91e0eb948ae8f7c":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_5e08":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_5e1c":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_a1ff":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_bd60":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_cc03":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_cc030520df3aefef2c03c6e97ccc60431aa6bc0780bf1796a5706e22e40f5f0f":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_e87d":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_f717":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_f717c48f565c1f6c8c7139cf54f577e481ac65760eb92c077a08597c622f2a8a":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_struct_Candidate":{"entryPoint":519,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_bytes32":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_stringliteral_5e08":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_stringliteral_5e1c":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_stringliteral_a1ff":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_stringliteral_bd60":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_stringliteral_e87d":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_struct_Candidate":{"entryPoint":1080,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_uint256_to_uint256":{"entryPoint":424,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_uint256_to_uint256_nonPadded_inplace":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_uint256_uint256":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"allocate_and_zero_memory_array_array_struct_Candidate_dyn":{"entryPoint":3077,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_and_zero_memory_array_array_uint256_dyn":{"entryPoint":5015,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_and_zero_memory_struct_struct_Candidate":{"entryPoint":2998,"id":null,"parameterSlots":0,"returnSlots":1},"allocate_memory":{"entryPoint":2921,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_memory_array_array_struct_Candidate_dyn":{"entryPoint":2965,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_memory_array_array_uint256_dyn":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_memory_struct_struct_Candidate":{"entryPoint":2988,"id":null,"parameterSlots":0,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_array_struct_Candidate_dyn":{"entryPoint":2941,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_string":{"entryPoint":3801,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_array_struct_Candidate_dyn":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_array_uint256_dyn_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_array_struct_Candidate_dyn":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_array_uint256_dyn_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_array_struct_Candidate_dyn":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_push_from_uint256_to_array_uint256_dyn_storage_ptr":{"entryPoint":4380,"id":null,"parameterSlots":2,"returnSlots":0},"array_storeLengthForEncoding_array_struct_Candidate_dyn":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_uint256":{"entryPoint":5374,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_uint256":{"entryPoint":2507,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":3983,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_address":{"entryPoint":1388,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_from_storage_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_uint160":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_bytes1":{"entryPoint":3952,"id":null,"parameterSlots":2,"returnSlots":0},"convert_address_to_address":{"entryPoint":2034,"id":null,"parameterSlots":1,"returnSlots":1},"convert_array_string_calldata_to_string":{"entryPoint":3884,"id":null,"parameterSlots":2,"returnSlots":1},"convert_bool_to_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_bytes32_to_bytes32":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_by_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_struct_Candidate_storage_to_struct_Candidate":{"entryPoint":3524,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_rational_by_to_t_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint160_to_address":{"entryPoint":2025,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint160_to_uint160":{"entryPoint":2005,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint256_to_uint256":{"entryPoint":2179,"id":null,"parameterSlots":1,"returnSlots":1},"copy_array_from_storage_to_memory_string":{"entryPoint":3406,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_string_to_string":{"entryPoint":4060,"id":null,"parameterSlots":2,"returnSlots":0},"copy_calldata_to_memory_with_cleanup":{"entryPoint":3830,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":428,"id":null,"parameterSlots":3,"returnSlots":0},"copy_struct_to_storage_from_struct_Candidate_to_struct_Candidate":{"entryPoint":4281,"id":null,"parameterSlots":2,"returnSlots":0},"divide_by_ceil":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"external_fun_admin":{"entryPoint":1688,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_deploymentTimestamp":{"entryPoint":1538,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getAllVotes":{"entryPoint":1349,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getCandidate":{"entryPoint":1097,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getCandidates":{"entryPoint":720,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getDeploymentTimestamp":{"entryPoint":1475,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getTotalVotes":{"entryPoint":1053,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getVoteHash":{"entryPoint":1448,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getVoteTxHash":{"entryPoint":1565,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getVotedCandidate":{"entryPoint":1619,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_hasAddressVoted":{"entryPoint":1592,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_isVotingActive":{"entryPoint":1219,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_registerCandidate":{"entryPoint":885,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_startVotingSession":{"entryPoint":1502,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_stopVotingSession":{"entryPoint":913,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_vote":{"entryPoint":379,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_votingActive":{"entryPoint":1174,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_votingEndTime":{"entryPoint":971,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_votingStartTime":{"entryPoint":1026,"id":null,"parameterSlots":0,"returnSlots":0},"extract_byte_array_length":{"entryPoint":3222,"id":null,"parameterSlots":1,"returnSlots":1},"extract_from_storage_value_dynamict_address":{"entryPoint":1646,"id":null,"parameterSlots":2,"returnSlots":1},"extract_from_storage_value_dynamict_bool":{"entryPoint":1136,"id":null,"parameterSlots":2,"returnSlots":1},"extract_from_storage_value_dynamict_uint256":{"entryPoint":937,"id":null,"parameterSlots":2,"returnSlots":1},"extract_from_storage_value_offset_address":{"entryPoint":3660,"id":null,"parameterSlots":1,"returnSlots":1},"extract_from_storage_value_offset_bool":{"entryPoint":1741,"id":null,"parameterSlots":1,"returnSlots":1},"extract_from_storage_value_offset_bytes32":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"extract_from_storage_value_offset_uint256":{"entryPoint":1827,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":2454,"id":null,"parameterSlots":2,"returnSlots":0},"fun_getAllVotes":{"entryPoint":5044,"id":2354,"parameterSlots":0,"returnSlots":1},"fun_getCandidate":{"entryPoint":4929,"id":2201,"parameterSlots":1,"returnSlots":1},"fun_getCandidates":{"entryPoint":3533,"id":2188,"parameterSlots":0,"returnSlots":1},"fun_getDeploymentTimestamp":{"entryPoint":5271,"id":2290,"parameterSlots":0,"returnSlots":1},"fun_getTotalVotes":{"entryPoint":4904,"id":2214,"parameterSlots":1,"returnSlots":1},"fun_getVoteHash":{"entryPoint":5221,"id":2263,"parameterSlots":1,"returnSlots":1},"fun_getVoteTxHash":{"entryPoint":5526,"id":2282,"parameterSlots":1,"returnSlots":1},"fun_getVotedCandidate":{"entryPoint":5589,"id":2309,"parameterSlots":1,"returnSlots":1},"fun_hasAddressVoted":{"entryPoint":5566,"id":2244,"parameterSlots":1,"returnSlots":1},"fun_isVotingActive":{"entryPoint":4944,"id":2232,"parameterSlots":0,"returnSlots":1},"fun_registerCandidate":{"entryPoint":4704,"id":1989,"parameterSlots":4,"returnSlots":0},"fun_registerCandidate_inner":{"entryPoint":4499,"id":null,"parameterSlots":4,"returnSlots":0},"fun_startVotingSession":{"entryPoint":5517,"id":2024,"parameterSlots":1,"returnSlots":0},"fun_startVotingSession_inner":{"entryPoint":5387,"id":null,"parameterSlots":1,"returnSlots":0},"fun_stopVotingSession":{"entryPoint":4896,"id":2048,"parameterSlots":0,"returnSlots":0},"fun_stopVotingSession_inner":{"entryPoint":4804,"id":null,"parameterSlots":0,"returnSlots":0},"fun_vote":{"entryPoint":2912,"id":2142,"parameterSlots":1,"returnSlots":0},"fun_vote_inner":{"entryPoint":2568,"id":null,"parameterSlots":1,"returnSlots":0},"getter_fun_admin":{"entryPoint":1677,"id":1856,"parameterSlots":0,"returnSlots":1},"getter_fun_deploymentTimestamp":{"entryPoint":1526,"id":1858,"parameterSlots":0,"returnSlots":1},"getter_fun_votingActive":{"entryPoint":1162,"id":1860,"parameterSlots":0,"returnSlots":1},"getter_fun_votingEndTime":{"entryPoint":959,"id":1864,"parameterSlots":0,"returnSlots":1},"getter_fun_votingStartTime":{"entryPoint":1014,"id":1862,"parameterSlots":0,"returnSlots":1},"increment_uint256":{"entryPoint":2288,"id":null,"parameterSlots":1,"returnSlots":1},"increment_wrapping_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_address":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_uint160":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"mapping_index_access_mapping_address_bool_of_address":{"entryPoint":2043,"id":null,"parameterSlots":2,"returnSlots":1},"mapping_index_access_mapping_uint256_struct_Candidate_storage_of_uint256":{"entryPoint":2192,"id":null,"parameterSlots":2,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"memory_array_index_access_struct_Candidate_dyn":{"entryPoint":3174,"id":null,"parameterSlots":2,"returnSlots":1},"memory_array_index_access_uint256_dyn":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"modifier_onlyAdmin":{"entryPoint":5281,"id":1902,"parameterSlots":1,"returnSlots":0},"modifier_onlyAdmin_1958":{"entryPoint":3766,"id":1902,"parameterSlots":4,"returnSlots":0},"modifier_onlyAdmin_2027":{"entryPoint":4716,"id":1902,"parameterSlots":0,"returnSlots":0},"modifier_onlyDuringVoting":{"entryPoint":1920,"id":1924,"parameterSlots":1,"returnSlots":0},"modifier_onlyOnce":{"entryPoint":2136,"id":1937,"parameterSlots":1,"returnSlots":0},"panic_error_0x11":{"entryPoint":2266,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":3200,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":3112,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":2432,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_bytes32":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_memoryt_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_reference_type_struct_Candidate":{"entryPoint":3439,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_split_dynamic_address":{"entryPoint":1666,"id":null,"parameterSlots":2,"returnSlots":1},"read_from_storage_split_dynamic_bool":{"entryPoint":1151,"id":null,"parameterSlots":2,"returnSlots":1},"read_from_storage_split_dynamic_uint256":{"entryPoint":948,"id":null,"parameterSlots":2,"returnSlots":1},"read_from_storage_split_offset_address":{"entryPoint":3669,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_split_offset_bool":{"entryPoint":1750,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_split_offset_bytes32":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_split_offset_uint256":{"entryPoint":1834,"id":null,"parameterSlots":1,"returnSlots":1},"require_helper_stringliteral":{"entryPoint":4740,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_5e08":{"entryPoint":2202,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_5e1c":{"entryPoint":1760,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_a1ff":{"entryPoint":5145,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_bd60":{"entryPoint":3679,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_cc03":{"entryPoint":5306,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_e87d":{"entryPoint":1844,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_f717":{"entryPoint":2067,"id":null,"parameterSlots":1,"returnSlots":0},"revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb":{"entryPoint":327,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_96":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_0_unsigned":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_right_unsigned":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"storage_array_index_access_uint256_dyn":{"entryPoint":3134,"id":null,"parameterSlots":2,"returnSlots":2},"storage_array_index_access_uint256_dyn_ptr":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":2},"storage_set_to_zero_uint256":{"entryPoint":3940,"id":null,"parameterSlots":2,"returnSlots":0},"store_literal_in_memory_4753b041641313f1ca2fbfa3890c4d0c79c5ac55aa0cd2bcb91e0eb948ae8f7c":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_5e08d3f48383789a6de57bd1ce2690d9c2e7e2730c9898292987cc6cddf215e1":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_5e1ccd0e56e280ec3a5d0205315110ca5cef988766a0ae364ddc07c51c65fe48":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_a1ffdd4658c7200ed7760116cfeeb47dde15c13b38def0dfcf72d73343842a17":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_bd60e0b05a8fda2ba656c4aa2dafb250f5de988439f87c5e504029f988ca599b":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_cc030520df3aefef2c03c6e97ccc60431aa6bc0780bf1796a5706e22e40f5f0f":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_e87dcbaad14ef148f0a4562e364235fe9715a3707f1535c018ac07bfb7628205":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_f717c48f565c1f6c8c7139cf54f577e481ac65760eb92c077a08597c622f2a8a":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":3895,"id":null,"parameterSlots":3,"returnSlots":1},"update_byte_slice_shift":{"entryPoint":2308,"id":null,"parameterSlots":2,"returnSlots":1},"update_byte_slice_shift_0":{"entryPoint":2351,"id":null,"parameterSlots":2,"returnSlots":1},"update_storage_value_offset_bool_to_bool":{"entryPoint":2360,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offset_bytes32_to_bytes32":{"entryPoint":2493,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offset_string_to_string":{"entryPoint":4271,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offset_struct_Candidate_to_struct_Candidate":{"entryPoint":4370,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offset_uint256_to_uint256":{"entryPoint":2324,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_uint256_to_uint256":{"entryPoint":3915,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_address":{"entryPoint":1400,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_uint256":{"entryPoint":332,"id":null,"parameterSlots":1,"returnSlots":0},"write_to_memory_string":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"write_to_memory_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"zero_complex_memory_array_array_struct_Candidate_dyn":{"entryPoint":3041,"id":null,"parameterSlots":2,"returnSlots":0},"zero_memory_chunk_uint256":{"entryPoint":5010,"id":null,"parameterSlots":2,"returnSlots":0},"zero_value_for_split_array_struct_Candidate_dyn":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"zero_value_for_struct_Candidate":{"entryPoint":3033,"id":null,"parameterSlots":0,"returnSlots":1},"zero_value_for_uint256":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080604052600436101561001257600080fd5b60003560e01c80630121b93f1461014257806306a49fce1461013d5780630dbce4dd1461013857806317a0ad8e146101335780631ea736e01461012e5780632019a608146101295780632ce35e111461012457806335b8e8201461011f578063408e27271461011a57806347cf6f7614610115578063851b6ef214610110578063959812f81461010b57806396a379d8146101065780639980a55a14610101578063bfc12c05146100fc578063e061a858146100f7578063e3e6ca7d146100f2578063edaa5dfc146100ed5763f851a4400361014757610698565b610653565b610638565b61061d565b610602565b6105de565b6105c3565b6105a8565b610545565b6104c3565b610496565b610449565b61041d565b610402565b6103cb565b610391565b610375565b6102d0565b61017b565b600080fd5b805b0361014757565b905035906101628261014c565b565b906020828203126101475761017891610155565b90565b346101475761019361018e366004610164565b610b60565b60405180805b0390f35b600091031261014757565b9052565b60005b8381106101bf5750506000910152565b81810151838201526020016101af565b6101f06101f9602093610203936101e4815190565b80835293849260200190565b958691016101ac565b601f01601f191690565b0190565b80518252906101789060608061024161022f60808501602088015186820360208801526101cf565b604087015185820360408701526101cf565b940151910152565b9061017891610207565b9061026961025f835190565b8083529160200190565b908161027b6020830284019460200190565b926000915b83831061028f57505050505090565b909192939460206102b26102ab83856001950387528951610249565b9760200190565b9301930191939290610280565b602080825261017892910190610253565b34610147576102e036600461019d565b6101996102eb610dcd565b604051918291826102bf565b909182601f830112156101475781359167ffffffffffffffff831161014757602001926001830284011161014757565b909160408284031261014757813567ffffffffffffffff811161014757836103509184016102f7565b929093602082013567ffffffffffffffff81116101475761037192016102f7565b9091565b3461014757610193610388366004610327565b92919091611260565b34610147576103a136600461019d565b610193611320565b610178916008021c81565b9061017891546103a9565b610178600060046103b4565b34610147576103db36600461019d565b6101996103e66103bf565b6040519182918290815260200190565b610178600060036103b4565b346101475761041236600461019d565b6101996103e66103f6565b34610147576101996103e6610433366004610164565b611328565b602080825261017892910190610207565b346101475761019961046461045f366004610164565b611341565b60405191829182610438565b610178916008021c5b60ff1690565b906101789154610470565b6101786000600261047f565b34610147576104a636600461019d565b6101996104b161048a565b60405191829182901515815260200190565b34610147576104d336600461019d565b6101996104b1611350565b906104fe6104f76104ed845190565b8084529260200190565b9260200190565b9060005b81811061050f5750505090565b90919261052c6105256001928651815260200190565b9460200190565b929101610502565b6020808252610178929101906104de565b346101475761055536600461019d565b6101996105606113b4565b60405191829182610534565b6001600160a01b031690565b6001600160a01b03811661014e565b9050359061016282610578565b906020828203126101475761017891610587565b34610147576101996103e66105be366004610594565b611465565b34610147576105d336600461019d565b6101996103e6611497565b34610147576101936105f1366004610164565b61158d565b610178600060016103b4565b346101475761061236600461019d565b6101996103e66105f6565b34610147576101996103e6610633366004610594565b611596565b34610147576101996104b161064e366004610594565b6115be565b34610147576101996103e6610669366004610594565b6115d5565b610178916008021c6001600160a01b031690565b90610178915461066e565b610178600080610682565b34610147576106a836600461019d565b6101996106b361068d565b604051918291826001600160a01b03909116815260200190565b61017890610479565b61017890546106cd565b156106e757565b60405162461bcd60e51b8152602060048201526014602482015273566f74696e67206973206e6f742061637469766560601b6044820152606490fd5b6101789081565b6101789054610723565b1561073b57565b60405162461bcd60e51b815260206004820152601c60248201527f566f74696e67206e6f7420696e20616c6c6f77656420706572696f64000000006044820152606490fd5b6101629061079661079160026106d6565b6106e0565b6107a3610178600361072a565b421015806107ba575b6107b590610734565b610858565b506107b56107cb610178600461072a565b42111590506107ac565b6101789061056c906001600160a01b031682565b610178906107d5565b610178906107e9565b90610805906107f2565b600052602052604060002090565b1561081a57565b60405162461bcd60e51b8152602060048201526016602482015275165bdd481a185d9948185b1c9958591e481d9bdd195960521b6044820152606490fd5b6101629061087e6108796108756108703360086107fb565b6106d6565b1590565b610813565b610a08565b6101786101786101789290565b9061080590610883565b156108a157565b60405162461bcd60e51b8152602060048201526011602482015270496e76616c69642063616e64696461746560781b6044820152606490fd5b634e487b7160e01b600052601160045260246000fd5b60001981146108ff5760010190565b6108da565b90600019905b9181191691161790565b9061092461017861092b92610883565b8254610904565b9055565b9060ff9061090a565b9061094861017861092b92151590565b825461092f565b6101a8906001600160a01b031660601b90565b6020939261097a60148361097a88956102039761094f565b01918252565b634e487b7160e01b600052604160045260246000fd5b90601f01601f1916810190811067ffffffffffffffff8211176109b857604052565b610980565b9061092461017861092b9290565b919082039182116108ff57565b9261097a60206102039461097a60148861097a859b9a869961094f565b9081526040810192916101629160200152565b610a28610a216000610a1b846006610890565b0161072a565b821461089a565b610a506003610a38836006610890565b01610a4a610a458261072a565b6108f0565b90610914565b610a656001610a603360086107fb565b610938565b610a7981610a743360096107fb565b610914565b604051610a9c8160208101610a9042863384610962565b90810382520382610996565b610aae610aa7825190565b9160200190565b2090610ac482610abf33600a6107fb565b6109bd565b7feffd419499491389e01fe2774ed0a6fddd60460399033fda8e42ce83081db172610af8610af26001610883565b436109cb565b610b18610b0460405190565b8092610a90602083019140438833856109d8565b610b23610aa7825190565b20610b3381610abf33600b6107fb565b610b45610b3f336107f2565b93610883565b93610b5b610b5260405190565b928392836109f5565b0390a3565b61016290610780565b90610162610b7660405190565b9283610996565b67ffffffffffffffff81116109b85760208091020190565b90610ba7610ba283610b7d565b610b69565b918252565b6101786080610b69565b610bbe610bac565b60008082526060602083018190526040830181905282015290565b610178610bb6565b60005b828110610bf057505050565b602090610bfb610bd9565b8184015201610be4565b90610162610c1b610c1584610b95565b93610b7d565b601f190160208401610be1565b634e487b7160e01b600052603260045260246000fd5b8054821015610c6157610c58600191600052602060002090565b91020190600090565b610c28565b90610c6f825190565b811015610c61576020809102010190565b634e487b7160e01b600052602260045260246000fd5b9060016002830492168015610cb6575b6020831014610cb157565b610c80565b91607f1691610ca6565b80546000939291610cdd610cd383610c96565b8085529360200190565b9160018116908115610d2f5750600114610cf657505050565b610d099192939450600052602060002090565b916000925b818410610d1b5750500190565b805484840152602090930192600101610d0e565b92949550505060ff1916825215156020020190565b9061017891610cc0565b90610162610d6892610d5f60405190565b93848092610d44565b0383610996565b90610162610dbd6003610d80610bac565b94610d91610d8d8261072a565b8752565b610da7610da060018301610d4e565b6020880152565b610a1b610db660028301610d4e565b6040880152565b6060840152565b61017890610d6f565b6007610ddf610dda825490565b610c05565b90610dea6000610883565b610df5610178835490565b811015610e4757610e4290610e26610e216006610e1b610e158588610c3e565b906103b4565b90610890565b610dc4565b610e308286610c66565b52610e3b8185610c66565b5060010190565b610dea565b505090565b6101789061056c565b6101789054610e4c565b15610e6657565b60405162461bcd60e51b815260206004820152602260248201527f4f6e6c792061646d696e2063616e20706572666f726d2074686973206163746960448201526137b760f11b6064820152608490fd5b90610162939291610ed4610ecd61056c6000610e55565b3314610e5f565b611193565b67ffffffffffffffff81116109b857602090601f01601f19160190565b90826000939282370152565b90929192610f12610ba282610ed9565b938185528183011161014757610162916020850190610ef6565b610178913691610f02565b9160001960089290920291821b911b61090a565b9190610f5c61017861092b93610883565b908354610f37565b61016291600091610f4b565b818110610f7b575050565b80610f896000600193610f64565b01610f70565b9190601f8111610f9e57505050565b610fb061016293600052602060002090565b906020601f840181900483019310610fd2575b6020601f909101040190610f70565b9091508190610fc3565b90610fe5815190565b9067ffffffffffffffff82116109b857611009826110038554610c96565b85610f8f565b602090601f83116001146110445761092b929160009183611039575b5050600019600883021c1916906002021790565b015190503880611025565b601f1983169161105985600052602060002090565b9260005b8181106110975750916002939185600196941061107e575b50505002019055565b01516000196008601f8516021c19169055388080611075565b9193602060018192878701518155019501920161105d565b9061016291610fdc565b600361110b6060610162946110d86110d2600083015190565b86610914565b6110ef6110e6602083015190565b600187016110af565b6111066110fd604083015190565b600287016110af565b015190565b9101610914565b90610162916110b9565b90815491680100000000000000008310156109b8578261114491600161016295018155610c3e565b90610f4b565b91906101f981611161816102039560209181520190565b8095610ef6565b92906111859061017895936040860191868303600088015261114a565b92602081850391015261114a565b61125b7f0ec1a365aeeec255796bf50d7a2a8f24d0d5f5c6ada0167b6c647428d916458293946112486111c6600561072a565b6111d96111d2826108f0565b6005610914565b6112386111e4610bac565b6111ec838252565b6112006111f98989610f2c565b6020830152565b61121461120d868c610f2c565b6040830152565b6112286112216000610883565b6060830152565b611233836006610890565b611112565b61124381600761111c565b610883565b9561125260405190565b94859485611168565b0390a2565b90610162939291610eb6565b61127c610ecd61056c6000610e55565b6101626112c4565b1561128b57565b60405162461bcd60e51b8152602060048201526011602482015270566f74696e67206e6f742061637469766560781b6044820152606490fd5b6112d66112d160026106d6565b611284565b6112e260006002610938565b6112ed426004610914565b7f74fd836262d1ad6bbd13b40f5a80a5415f4d2db6ee1d7d8f9c9bb515d9f04e0161131b6103e6600461072a565b0390a1565b61016261126c565b6003610a1b61017892611339600090565b506006610890565b610e2161017891611339610bd9565b61135a60026106d6565b8061137c575b806113685790565b50611376610178600461072a565b42111590565b5061138a610178600361072a565b421015611360565b369037565b906101626113a7610c1584610b95565b601f190160208401611392565b60076113c66113c1825490565b611397565b906113d16000610883565b6113dc610178835490565b811015610e47576114149061140e6114016003610a1b6006610e1b610e15878a610c3e565b61140b8387610c66565b52565b60010190565b6113d1565b1561142057565b60405162461bcd60e51b815260206004820152601e60248201527f4e6f20766f746520666f756e6420666f722074686973206164647265737300006044820152606490fd5b61149261017891611474600090565b5061148b6114866108708360086107fb565b611419565b600a6107fb565b61072a565b610178600161072a565b610162906114b5610ecd61056c6000610e55565b61150b565b156114c157565b60405162461bcd60e51b8152602060048201526015602482015274566f74696e6720616c72656164792061637469766560581b6044820152606490fd5b919082018092116108ff57565b61154461154b9161152761152261087560026106d6565b6114ba565b61153360016002610938565b61153e426003610914565b426114fe565b6004610914565b7fe280a408633821740a429fb671e01cacf8d1d70d5c2735f4f94ec0edef4ea6de611576600361072a565b611580600461072a565b9061131b610b5260405190565b610162906114a1565b611492610178916115a5600090565b506115b76114866108708360086107fb565b600b6107fb565b610870610178916115cd600090565b5060086107fb565b611492610178916115e4600090565b506115f66114866108708360086107fb565b60096107fb56fea26469706673582212203ac7354326c6376c01f7d51946388e080a41417150ff6a7bf4094c5da4f5727064736f6c634300081c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x121B93F EQ PUSH2 0x142 JUMPI DUP1 PUSH4 0x6A49FCE EQ PUSH2 0x13D JUMPI DUP1 PUSH4 0xDBCE4DD EQ PUSH2 0x138 JUMPI DUP1 PUSH4 0x17A0AD8E EQ PUSH2 0x133 JUMPI DUP1 PUSH4 0x1EA736E0 EQ PUSH2 0x12E JUMPI DUP1 PUSH4 0x2019A608 EQ PUSH2 0x129 JUMPI DUP1 PUSH4 0x2CE35E11 EQ PUSH2 0x124 JUMPI DUP1 PUSH4 0x35B8E820 EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x408E2727 EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x47CF6F76 EQ PUSH2 0x115 JUMPI DUP1 PUSH4 0x851B6EF2 EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0x959812F8 EQ PUSH2 0x10B JUMPI DUP1 PUSH4 0x96A379D8 EQ PUSH2 0x106 JUMPI DUP1 PUSH4 0x9980A55A EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0xBFC12C05 EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0xE061A858 EQ PUSH2 0xF7 JUMPI DUP1 PUSH4 0xE3E6CA7D EQ PUSH2 0xF2 JUMPI DUP1 PUSH4 0xEDAA5DFC EQ PUSH2 0xED JUMPI PUSH4 0xF851A440 SUB PUSH2 0x147 JUMPI PUSH2 0x698 JUMP JUMPDEST PUSH2 0x653 JUMP JUMPDEST PUSH2 0x638 JUMP JUMPDEST PUSH2 0x61D JUMP JUMPDEST PUSH2 0x602 JUMP JUMPDEST PUSH2 0x5DE JUMP JUMPDEST PUSH2 0x5C3 JUMP JUMPDEST PUSH2 0x5A8 JUMP JUMPDEST PUSH2 0x545 JUMP JUMPDEST PUSH2 0x4C3 JUMP JUMPDEST PUSH2 0x496 JUMP JUMPDEST PUSH2 0x449 JUMP JUMPDEST PUSH2 0x41D JUMP JUMPDEST PUSH2 0x402 JUMP JUMPDEST PUSH2 0x3CB JUMP JUMPDEST PUSH2 0x391 JUMP JUMPDEST PUSH2 0x375 JUMP JUMPDEST PUSH2 0x2D0 JUMP JUMPDEST PUSH2 0x17B JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 JUMPDEST SUB PUSH2 0x147 JUMPI JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x162 DUP3 PUSH2 0x14C JUMP JUMPDEST JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x147 JUMPI PUSH2 0x178 SWAP2 PUSH2 0x155 JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x147 JUMPI PUSH2 0x193 PUSH2 0x18E CALLDATASIZE PUSH1 0x4 PUSH2 0x164 JUMP JUMPDEST PUSH2 0xB60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 SWAP2 SUB SLT PUSH2 0x147 JUMPI JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x1BF JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1AF JUMP JUMPDEST PUSH2 0x1F0 PUSH2 0x1F9 PUSH1 0x20 SWAP4 PUSH2 0x203 SWAP4 PUSH2 0x1E4 DUP2 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP4 DUP5 SWAP3 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP6 DUP7 SWAP2 ADD PUSH2 0x1AC JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP1 JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD DUP3 MSTORE SWAP1 PUSH2 0x178 SWAP1 PUSH1 0x60 DUP1 PUSH2 0x241 PUSH2 0x22F PUSH1 0x80 DUP6 ADD PUSH1 0x20 DUP9 ADD MLOAD DUP7 DUP3 SUB PUSH1 0x20 DUP9 ADD MSTORE PUSH2 0x1CF JUMP JUMPDEST PUSH1 0x40 DUP8 ADD MLOAD DUP6 DUP3 SUB PUSH1 0x40 DUP8 ADD MSTORE PUSH2 0x1CF JUMP JUMPDEST SWAP5 ADD MLOAD SWAP2 ADD MSTORE JUMP JUMPDEST SWAP1 PUSH2 0x178 SWAP2 PUSH2 0x207 JUMP JUMPDEST SWAP1 PUSH2 0x269 PUSH2 0x25F DUP4 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 PUSH2 0x27B PUSH1 0x20 DUP4 MUL DUP5 ADD SWAP5 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x0 SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x28F JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 PUSH1 0x20 PUSH2 0x2B2 PUSH2 0x2AB DUP4 DUP6 PUSH1 0x1 SWAP6 SUB DUP8 MSTORE DUP10 MLOAD PUSH2 0x249 JUMP JUMPDEST SWAP8 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP4 ADD SWAP4 ADD SWAP2 SWAP4 SWAP3 SWAP1 PUSH2 0x280 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH2 0x178 SWAP3 SWAP2 ADD SWAP1 PUSH2 0x253 JUMP JUMPDEST CALLVALUE PUSH2 0x147 JUMPI PUSH2 0x2E0 CALLDATASIZE PUSH1 0x4 PUSH2 0x19D JUMP JUMPDEST PUSH2 0x199 PUSH2 0x2EB PUSH2 0xDCD JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x2BF JUMP JUMPDEST SWAP1 SWAP2 DUP3 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x147 JUMPI DUP2 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x147 JUMPI PUSH1 0x20 ADD SWAP3 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH2 0x147 JUMPI JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x40 DUP3 DUP5 SUB SLT PUSH2 0x147 JUMPI DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x147 JUMPI DUP4 PUSH2 0x350 SWAP2 DUP5 ADD PUSH2 0x2F7 JUMP JUMPDEST SWAP3 SWAP1 SWAP4 PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x147 JUMPI PUSH2 0x371 SWAP3 ADD PUSH2 0x2F7 JUMP JUMPDEST SWAP1 SWAP2 JUMP JUMPDEST CALLVALUE PUSH2 0x147 JUMPI PUSH2 0x193 PUSH2 0x388 CALLDATASIZE PUSH1 0x4 PUSH2 0x327 JUMP JUMPDEST SWAP3 SWAP2 SWAP1 SWAP2 PUSH2 0x1260 JUMP JUMPDEST CALLVALUE PUSH2 0x147 JUMPI PUSH2 0x3A1 CALLDATASIZE PUSH1 0x4 PUSH2 0x19D JUMP JUMPDEST PUSH2 0x193 PUSH2 0x1320 JUMP JUMPDEST PUSH2 0x178 SWAP2 PUSH1 0x8 MUL SHR DUP2 JUMP JUMPDEST SWAP1 PUSH2 0x178 SWAP2 SLOAD PUSH2 0x3A9 JUMP JUMPDEST PUSH2 0x178 PUSH1 0x0 PUSH1 0x4 PUSH2 0x3B4 JUMP JUMPDEST CALLVALUE PUSH2 0x147 JUMPI PUSH2 0x3DB CALLDATASIZE PUSH1 0x4 PUSH2 0x19D JUMP JUMPDEST PUSH2 0x199 PUSH2 0x3E6 PUSH2 0x3BF JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH2 0x178 PUSH1 0x0 PUSH1 0x3 PUSH2 0x3B4 JUMP JUMPDEST CALLVALUE PUSH2 0x147 JUMPI PUSH2 0x412 CALLDATASIZE PUSH1 0x4 PUSH2 0x19D JUMP JUMPDEST PUSH2 0x199 PUSH2 0x3E6 PUSH2 0x3F6 JUMP JUMPDEST CALLVALUE PUSH2 0x147 JUMPI PUSH2 0x199 PUSH2 0x3E6 PUSH2 0x433 CALLDATASIZE PUSH1 0x4 PUSH2 0x164 JUMP JUMPDEST PUSH2 0x1328 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH2 0x178 SWAP3 SWAP2 ADD SWAP1 PUSH2 0x207 JUMP JUMPDEST CALLVALUE PUSH2 0x147 JUMPI PUSH2 0x199 PUSH2 0x464 PUSH2 0x45F CALLDATASIZE PUSH1 0x4 PUSH2 0x164 JUMP JUMPDEST PUSH2 0x1341 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x438 JUMP JUMPDEST PUSH2 0x178 SWAP2 PUSH1 0x8 MUL SHR JUMPDEST PUSH1 0xFF AND SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x178 SWAP2 SLOAD PUSH2 0x470 JUMP JUMPDEST PUSH2 0x178 PUSH1 0x0 PUSH1 0x2 PUSH2 0x47F JUMP JUMPDEST CALLVALUE PUSH2 0x147 JUMPI PUSH2 0x4A6 CALLDATASIZE PUSH1 0x4 PUSH2 0x19D JUMP JUMPDEST PUSH2 0x199 PUSH2 0x4B1 PUSH2 0x48A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x147 JUMPI PUSH2 0x4D3 CALLDATASIZE PUSH1 0x4 PUSH2 0x19D JUMP JUMPDEST PUSH2 0x199 PUSH2 0x4B1 PUSH2 0x1350 JUMP JUMPDEST SWAP1 PUSH2 0x4FE PUSH2 0x4F7 PUSH2 0x4ED DUP5 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP5 MSTORE SWAP3 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x50F JUMPI POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 PUSH2 0x52C PUSH2 0x525 PUSH1 0x1 SWAP3 DUP7 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP5 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 ADD PUSH2 0x502 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH2 0x178 SWAP3 SWAP2 ADD SWAP1 PUSH2 0x4DE JUMP JUMPDEST CALLVALUE PUSH2 0x147 JUMPI PUSH2 0x555 CALLDATASIZE PUSH1 0x4 PUSH2 0x19D JUMP JUMPDEST PUSH2 0x199 PUSH2 0x560 PUSH2 0x13B4 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x534 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x14E JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x162 DUP3 PUSH2 0x578 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x147 JUMPI PUSH2 0x178 SWAP2 PUSH2 0x587 JUMP JUMPDEST CALLVALUE PUSH2 0x147 JUMPI PUSH2 0x199 PUSH2 0x3E6 PUSH2 0x5BE CALLDATASIZE PUSH1 0x4 PUSH2 0x594 JUMP JUMPDEST PUSH2 0x1465 JUMP JUMPDEST CALLVALUE PUSH2 0x147 JUMPI PUSH2 0x5D3 CALLDATASIZE PUSH1 0x4 PUSH2 0x19D JUMP JUMPDEST PUSH2 0x199 PUSH2 0x3E6 PUSH2 0x1497 JUMP JUMPDEST CALLVALUE PUSH2 0x147 JUMPI PUSH2 0x193 PUSH2 0x5F1 CALLDATASIZE PUSH1 0x4 PUSH2 0x164 JUMP JUMPDEST PUSH2 0x158D JUMP JUMPDEST PUSH2 0x178 PUSH1 0x0 PUSH1 0x1 PUSH2 0x3B4 JUMP JUMPDEST CALLVALUE PUSH2 0x147 JUMPI PUSH2 0x612 CALLDATASIZE PUSH1 0x4 PUSH2 0x19D JUMP JUMPDEST PUSH2 0x199 PUSH2 0x3E6 PUSH2 0x5F6 JUMP JUMPDEST CALLVALUE PUSH2 0x147 JUMPI PUSH2 0x199 PUSH2 0x3E6 PUSH2 0x633 CALLDATASIZE PUSH1 0x4 PUSH2 0x594 JUMP JUMPDEST PUSH2 0x1596 JUMP JUMPDEST CALLVALUE PUSH2 0x147 JUMPI PUSH2 0x199 PUSH2 0x4B1 PUSH2 0x64E CALLDATASIZE PUSH1 0x4 PUSH2 0x594 JUMP JUMPDEST PUSH2 0x15BE JUMP JUMPDEST CALLVALUE PUSH2 0x147 JUMPI PUSH2 0x199 PUSH2 0x3E6 PUSH2 0x669 CALLDATASIZE PUSH1 0x4 PUSH2 0x594 JUMP JUMPDEST PUSH2 0x15D5 JUMP JUMPDEST PUSH2 0x178 SWAP2 PUSH1 0x8 MUL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x178 SWAP2 SLOAD PUSH2 0x66E JUMP JUMPDEST PUSH2 0x178 PUSH1 0x0 DUP1 PUSH2 0x682 JUMP JUMPDEST CALLVALUE PUSH2 0x147 JUMPI PUSH2 0x6A8 CALLDATASIZE PUSH1 0x4 PUSH2 0x19D JUMP JUMPDEST PUSH2 0x199 PUSH2 0x6B3 PUSH2 0x68D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH2 0x178 SWAP1 PUSH2 0x479 JUMP JUMPDEST PUSH2 0x178 SWAP1 SLOAD PUSH2 0x6CD JUMP JUMPDEST ISZERO PUSH2 0x6E7 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x566F74696E67206973206E6F7420616374697665 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x178 SWAP1 DUP2 JUMP JUMPDEST PUSH2 0x178 SWAP1 SLOAD PUSH2 0x723 JUMP JUMPDEST ISZERO PUSH2 0x73B JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x566F74696E67206E6F7420696E20616C6C6F77656420706572696F6400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x162 SWAP1 PUSH2 0x796 PUSH2 0x791 PUSH1 0x2 PUSH2 0x6D6 JUMP JUMPDEST PUSH2 0x6E0 JUMP JUMPDEST PUSH2 0x7A3 PUSH2 0x178 PUSH1 0x3 PUSH2 0x72A JUMP JUMPDEST TIMESTAMP LT ISZERO DUP1 PUSH2 0x7BA JUMPI JUMPDEST PUSH2 0x7B5 SWAP1 PUSH2 0x734 JUMP JUMPDEST PUSH2 0x858 JUMP JUMPDEST POP PUSH2 0x7B5 PUSH2 0x7CB PUSH2 0x178 PUSH1 0x4 PUSH2 0x72A JUMP JUMPDEST TIMESTAMP GT ISZERO SWAP1 POP PUSH2 0x7AC JUMP JUMPDEST PUSH2 0x178 SWAP1 PUSH2 0x56C SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 JUMP JUMPDEST PUSH2 0x178 SWAP1 PUSH2 0x7D5 JUMP JUMPDEST PUSH2 0x178 SWAP1 PUSH2 0x7E9 JUMP JUMPDEST SWAP1 PUSH2 0x805 SWAP1 PUSH2 0x7F2 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x81A JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x165BDD481A185D9948185B1C9958591E481D9BDD1959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x162 SWAP1 PUSH2 0x87E PUSH2 0x879 PUSH2 0x875 PUSH2 0x870 CALLER PUSH1 0x8 PUSH2 0x7FB JUMP JUMPDEST PUSH2 0x6D6 JUMP JUMPDEST ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x813 JUMP JUMPDEST PUSH2 0xA08 JUMP JUMPDEST PUSH2 0x178 PUSH2 0x178 PUSH2 0x178 SWAP3 SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x805 SWAP1 PUSH2 0x883 JUMP JUMPDEST ISZERO PUSH2 0x8A1 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x496E76616C69642063616E646964617465 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x8FF JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH2 0x8DA JUMP JUMPDEST SWAP1 PUSH1 0x0 NOT SWAP1 JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x924 PUSH2 0x178 PUSH2 0x92B SWAP3 PUSH2 0x883 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x904 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST SWAP1 PUSH1 0xFF SWAP1 PUSH2 0x90A JUMP JUMPDEST SWAP1 PUSH2 0x948 PUSH2 0x178 PUSH2 0x92B SWAP3 ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x92F JUMP JUMPDEST PUSH2 0x1A8 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x60 SHL SWAP1 JUMP JUMPDEST PUSH1 0x20 SWAP4 SWAP3 PUSH2 0x97A PUSH1 0x14 DUP4 PUSH2 0x97A DUP9 SWAP6 PUSH2 0x203 SWAP8 PUSH2 0x94F JUMP JUMPDEST ADD SWAP2 DUP3 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x9B8 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x980 JUMP JUMPDEST SWAP1 PUSH2 0x924 PUSH2 0x178 PUSH2 0x92B SWAP3 SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x8FF JUMPI JUMP JUMPDEST SWAP3 PUSH2 0x97A PUSH1 0x20 PUSH2 0x203 SWAP5 PUSH2 0x97A PUSH1 0x14 DUP9 PUSH2 0x97A DUP6 SWAP12 SWAP11 DUP7 SWAP10 PUSH2 0x94F JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP2 ADD SWAP3 SWAP2 PUSH2 0x162 SWAP2 PUSH1 0x20 ADD MSTORE JUMP JUMPDEST PUSH2 0xA28 PUSH2 0xA21 PUSH1 0x0 PUSH2 0xA1B DUP5 PUSH1 0x6 PUSH2 0x890 JUMP JUMPDEST ADD PUSH2 0x72A JUMP JUMPDEST DUP3 EQ PUSH2 0x89A JUMP JUMPDEST PUSH2 0xA50 PUSH1 0x3 PUSH2 0xA38 DUP4 PUSH1 0x6 PUSH2 0x890 JUMP JUMPDEST ADD PUSH2 0xA4A PUSH2 0xA45 DUP3 PUSH2 0x72A JUMP JUMPDEST PUSH2 0x8F0 JUMP JUMPDEST SWAP1 PUSH2 0x914 JUMP JUMPDEST PUSH2 0xA65 PUSH1 0x1 PUSH2 0xA60 CALLER PUSH1 0x8 PUSH2 0x7FB JUMP JUMPDEST PUSH2 0x938 JUMP JUMPDEST PUSH2 0xA79 DUP2 PUSH2 0xA74 CALLER PUSH1 0x9 PUSH2 0x7FB JUMP JUMPDEST PUSH2 0x914 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9C DUP2 PUSH1 0x20 DUP2 ADD PUSH2 0xA90 TIMESTAMP DUP7 CALLER DUP5 PUSH2 0x962 JUMP JUMPDEST SWAP1 DUP2 SUB DUP3 MSTORE SUB DUP3 PUSH2 0x996 JUMP JUMPDEST PUSH2 0xAAE PUSH2 0xAA7 DUP3 MLOAD SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST KECCAK256 SWAP1 PUSH2 0xAC4 DUP3 PUSH2 0xABF CALLER PUSH1 0xA PUSH2 0x7FB JUMP JUMPDEST PUSH2 0x9BD JUMP JUMPDEST PUSH32 0xEFFD419499491389E01FE2774ED0A6FDDD60460399033FDA8E42CE83081DB172 PUSH2 0xAF8 PUSH2 0xAF2 PUSH1 0x1 PUSH2 0x883 JUMP JUMPDEST NUMBER PUSH2 0x9CB JUMP JUMPDEST PUSH2 0xB18 PUSH2 0xB04 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST DUP1 SWAP3 PUSH2 0xA90 PUSH1 0x20 DUP4 ADD SWAP2 BLOCKHASH NUMBER DUP9 CALLER DUP6 PUSH2 0x9D8 JUMP JUMPDEST PUSH2 0xB23 PUSH2 0xAA7 DUP3 MLOAD SWAP1 JUMP JUMPDEST KECCAK256 PUSH2 0xB33 DUP2 PUSH2 0xABF CALLER PUSH1 0xB PUSH2 0x7FB JUMP JUMPDEST PUSH2 0xB45 PUSH2 0xB3F CALLER PUSH2 0x7F2 JUMP JUMPDEST SWAP4 PUSH2 0x883 JUMP JUMPDEST SWAP4 PUSH2 0xB5B PUSH2 0xB52 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 SWAP3 DUP4 PUSH2 0x9F5 JUMP JUMPDEST SUB SWAP1 LOG3 JUMP JUMPDEST PUSH2 0x162 SWAP1 PUSH2 0x780 JUMP JUMPDEST SWAP1 PUSH2 0x162 PUSH2 0xB76 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 PUSH2 0x996 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x9B8 JUMPI PUSH1 0x20 DUP1 SWAP2 MUL ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0xBA7 PUSH2 0xBA2 DUP4 PUSH2 0xB7D JUMP JUMPDEST PUSH2 0xB69 JUMP JUMPDEST SWAP2 DUP3 MSTORE JUMP JUMPDEST PUSH2 0x178 PUSH1 0x80 PUSH2 0xB69 JUMP JUMPDEST PUSH2 0xBBE PUSH2 0xBAC JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x60 PUSH1 0x20 DUP4 ADD DUP2 SWAP1 MSTORE PUSH1 0x40 DUP4 ADD DUP2 SWAP1 MSTORE DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x178 PUSH2 0xBB6 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0xBF0 JUMPI POP POP POP JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH2 0xBFB PUSH2 0xBD9 JUMP JUMPDEST DUP2 DUP5 ADD MSTORE ADD PUSH2 0xBE4 JUMP JUMPDEST SWAP1 PUSH2 0x162 PUSH2 0xC1B PUSH2 0xC15 DUP5 PUSH2 0xB95 JUMP JUMPDEST SWAP4 PUSH2 0xB7D JUMP JUMPDEST PUSH1 0x1F NOT ADD PUSH1 0x20 DUP5 ADD PUSH2 0xBE1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0xC61 JUMPI PUSH2 0xC58 PUSH1 0x1 SWAP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP2 MUL ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0xC28 JUMP JUMPDEST SWAP1 PUSH2 0xC6F DUP3 MLOAD SWAP1 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0xC61 JUMPI PUSH1 0x20 DUP1 SWAP2 MUL ADD ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x2 DUP4 DIV SWAP3 AND DUP1 ISZERO PUSH2 0xCB6 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0xCB1 JUMPI JUMP JUMPDEST PUSH2 0xC80 JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0xCA6 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x0 SWAP4 SWAP3 SWAP2 PUSH2 0xCDD PUSH2 0xCD3 DUP4 PUSH2 0xC96 JUMP JUMPDEST DUP1 DUP6 MSTORE SWAP4 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0xD2F JUMPI POP PUSH1 0x1 EQ PUSH2 0xCF6 JUMPI POP POP POP JUMP JUMPDEST PUSH2 0xD09 SWAP2 SWAP3 SWAP4 SWAP5 POP PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x0 SWAP3 JUMPDEST DUP2 DUP5 LT PUSH2 0xD1B JUMPI POP POP ADD SWAP1 JUMP JUMPDEST DUP1 SLOAD DUP5 DUP5 ADD MSTORE PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0xD0E JUMP JUMPDEST SWAP3 SWAP5 SWAP6 POP POP POP PUSH1 0xFF NOT AND DUP3 MSTORE ISZERO ISZERO PUSH1 0x20 MUL ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x178 SWAP2 PUSH2 0xCC0 JUMP JUMPDEST SWAP1 PUSH2 0x162 PUSH2 0xD68 SWAP3 PUSH2 0xD5F PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP4 DUP5 DUP1 SWAP3 PUSH2 0xD44 JUMP JUMPDEST SUB DUP4 PUSH2 0x996 JUMP JUMPDEST SWAP1 PUSH2 0x162 PUSH2 0xDBD PUSH1 0x3 PUSH2 0xD80 PUSH2 0xBAC JUMP JUMPDEST SWAP5 PUSH2 0xD91 PUSH2 0xD8D DUP3 PUSH2 0x72A JUMP JUMPDEST DUP8 MSTORE JUMP JUMPDEST PUSH2 0xDA7 PUSH2 0xDA0 PUSH1 0x1 DUP4 ADD PUSH2 0xD4E JUMP JUMPDEST PUSH1 0x20 DUP9 ADD MSTORE JUMP JUMPDEST PUSH2 0xA1B PUSH2 0xDB6 PUSH1 0x2 DUP4 ADD PUSH2 0xD4E JUMP JUMPDEST PUSH1 0x40 DUP9 ADD MSTORE JUMP JUMPDEST PUSH1 0x60 DUP5 ADD MSTORE JUMP JUMPDEST PUSH2 0x178 SWAP1 PUSH2 0xD6F JUMP JUMPDEST PUSH1 0x7 PUSH2 0xDDF PUSH2 0xDDA DUP3 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xC05 JUMP JUMPDEST SWAP1 PUSH2 0xDEA PUSH1 0x0 PUSH2 0x883 JUMP JUMPDEST PUSH2 0xDF5 PUSH2 0x178 DUP4 SLOAD SWAP1 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0xE47 JUMPI PUSH2 0xE42 SWAP1 PUSH2 0xE26 PUSH2 0xE21 PUSH1 0x6 PUSH2 0xE1B PUSH2 0xE15 DUP6 DUP9 PUSH2 0xC3E JUMP JUMPDEST SWAP1 PUSH2 0x3B4 JUMP JUMPDEST SWAP1 PUSH2 0x890 JUMP JUMPDEST PUSH2 0xDC4 JUMP JUMPDEST PUSH2 0xE30 DUP3 DUP7 PUSH2 0xC66 JUMP JUMPDEST MSTORE PUSH2 0xE3B DUP2 DUP6 PUSH2 0xC66 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH2 0xDEA JUMP JUMPDEST POP POP SWAP1 JUMP JUMPDEST PUSH2 0x178 SWAP1 PUSH2 0x56C JUMP JUMPDEST PUSH2 0x178 SWAP1 SLOAD PUSH2 0xE4C JUMP JUMPDEST ISZERO PUSH2 0xE66 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C792061646D696E2063616E20706572666F726D20746869732061637469 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x37B7 PUSH1 0xF1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x162 SWAP4 SWAP3 SWAP2 PUSH2 0xED4 PUSH2 0xECD PUSH2 0x56C PUSH1 0x0 PUSH2 0xE55 JUMP JUMPDEST CALLER EQ PUSH2 0xE5F JUMP JUMPDEST PUSH2 0x1193 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x9B8 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD SWAP1 JUMP JUMPDEST SWAP1 DUP3 PUSH1 0x0 SWAP4 SWAP3 DUP3 CALLDATACOPY ADD MSTORE JUMP JUMPDEST SWAP1 SWAP3 SWAP2 SWAP3 PUSH2 0xF12 PUSH2 0xBA2 DUP3 PUSH2 0xED9 JUMP JUMPDEST SWAP4 DUP2 DUP6 MSTORE DUP2 DUP4 ADD GT PUSH2 0x147 JUMPI PUSH2 0x162 SWAP2 PUSH1 0x20 DUP6 ADD SWAP1 PUSH2 0xEF6 JUMP JUMPDEST PUSH2 0x178 SWAP2 CALLDATASIZE SWAP2 PUSH2 0xF02 JUMP JUMPDEST SWAP2 PUSH1 0x0 NOT PUSH1 0x8 SWAP3 SWAP1 SWAP3 MUL SWAP2 DUP3 SHL SWAP2 SHL PUSH2 0x90A JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0xF5C PUSH2 0x178 PUSH2 0x92B SWAP4 PUSH2 0x883 JUMP JUMPDEST SWAP1 DUP4 SLOAD PUSH2 0xF37 JUMP JUMPDEST PUSH2 0x162 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0xF4B JUMP JUMPDEST DUP2 DUP2 LT PUSH2 0xF7B JUMPI POP POP JUMP JUMPDEST DUP1 PUSH2 0xF89 PUSH1 0x0 PUSH1 0x1 SWAP4 PUSH2 0xF64 JUMP JUMPDEST ADD PUSH2 0xF70 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x1F DUP2 GT PUSH2 0xF9E JUMPI POP POP POP JUMP JUMPDEST PUSH2 0xFB0 PUSH2 0x162 SWAP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x1F DUP5 ADD DUP2 SWAP1 DIV DUP4 ADD SWAP4 LT PUSH2 0xFD2 JUMPI JUMPDEST PUSH1 0x20 PUSH1 0x1F SWAP1 SWAP2 ADD DIV ADD SWAP1 PUSH2 0xF70 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0xFC3 JUMP JUMPDEST SWAP1 PUSH2 0xFE5 DUP2 MLOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x9B8 JUMPI PUSH2 0x1009 DUP3 PUSH2 0x1003 DUP6 SLOAD PUSH2 0xC96 JUMP JUMPDEST DUP6 PUSH2 0xF8F JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x1044 JUMPI PUSH2 0x92B SWAP3 SWAP2 PUSH1 0x0 SWAP2 DUP4 PUSH2 0x1039 JUMPI JUMPDEST POP POP PUSH1 0x0 NOT PUSH1 0x8 DUP4 MUL SHR NOT AND SWAP1 PUSH1 0x2 MUL OR SWAP1 JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x1025 JUMP JUMPDEST PUSH1 0x1F NOT DUP4 AND SWAP2 PUSH2 0x1059 DUP6 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x1097 JUMPI POP SWAP2 PUSH1 0x2 SWAP4 SWAP2 DUP6 PUSH1 0x1 SWAP7 SWAP5 LT PUSH2 0x107E JUMPI JUMPDEST POP POP POP MUL ADD SWAP1 SSTORE JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0x8 PUSH1 0x1F DUP6 AND MUL SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x1075 JUMP JUMPDEST SWAP2 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP8 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP3 ADD PUSH2 0x105D JUMP JUMPDEST SWAP1 PUSH2 0x162 SWAP2 PUSH2 0xFDC JUMP JUMPDEST PUSH1 0x3 PUSH2 0x110B PUSH1 0x60 PUSH2 0x162 SWAP5 PUSH2 0x10D8 PUSH2 0x10D2 PUSH1 0x0 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST DUP7 PUSH2 0x914 JUMP JUMPDEST PUSH2 0x10EF PUSH2 0x10E6 PUSH1 0x20 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP8 ADD PUSH2 0x10AF JUMP JUMPDEST PUSH2 0x1106 PUSH2 0x10FD PUSH1 0x40 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP8 ADD PUSH2 0x10AF JUMP JUMPDEST ADD MLOAD SWAP1 JUMP JUMPDEST SWAP2 ADD PUSH2 0x914 JUMP JUMPDEST SWAP1 PUSH2 0x162 SWAP2 PUSH2 0x10B9 JUMP JUMPDEST SWAP1 DUP2 SLOAD SWAP2 PUSH9 0x10000000000000000 DUP4 LT ISZERO PUSH2 0x9B8 JUMPI DUP3 PUSH2 0x1144 SWAP2 PUSH1 0x1 PUSH2 0x162 SWAP6 ADD DUP2 SSTORE PUSH2 0xC3E JUMP JUMPDEST SWAP1 PUSH2 0xF4B JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x1F9 DUP2 PUSH2 0x1161 DUP2 PUSH2 0x203 SWAP6 PUSH1 0x20 SWAP2 DUP2 MSTORE ADD SWAP1 JUMP JUMPDEST DUP1 SWAP6 PUSH2 0xEF6 JUMP JUMPDEST SWAP3 SWAP1 PUSH2 0x1185 SWAP1 PUSH2 0x178 SWAP6 SWAP4 PUSH1 0x40 DUP7 ADD SWAP2 DUP7 DUP4 SUB PUSH1 0x0 DUP9 ADD MSTORE PUSH2 0x114A JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 DUP6 SUB SWAP2 ADD MSTORE PUSH2 0x114A JUMP JUMPDEST PUSH2 0x125B PUSH32 0xEC1A365AEEEC255796BF50D7A2A8F24D0D5F5C6ADA0167B6C647428D9164582 SWAP4 SWAP5 PUSH2 0x1248 PUSH2 0x11C6 PUSH1 0x5 PUSH2 0x72A JUMP JUMPDEST PUSH2 0x11D9 PUSH2 0x11D2 DUP3 PUSH2 0x8F0 JUMP JUMPDEST PUSH1 0x5 PUSH2 0x914 JUMP JUMPDEST PUSH2 0x1238 PUSH2 0x11E4 PUSH2 0xBAC JUMP JUMPDEST PUSH2 0x11EC DUP4 DUP3 MSTORE JUMP JUMPDEST PUSH2 0x1200 PUSH2 0x11F9 DUP10 DUP10 PUSH2 0xF2C JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH2 0x1214 PUSH2 0x120D DUP7 DUP13 PUSH2 0xF2C JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE JUMP JUMPDEST PUSH2 0x1228 PUSH2 0x1221 PUSH1 0x0 PUSH2 0x883 JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE JUMP JUMPDEST PUSH2 0x1233 DUP4 PUSH1 0x6 PUSH2 0x890 JUMP JUMPDEST PUSH2 0x1112 JUMP JUMPDEST PUSH2 0x1243 DUP2 PUSH1 0x7 PUSH2 0x111C JUMP JUMPDEST PUSH2 0x883 JUMP JUMPDEST SWAP6 PUSH2 0x1252 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP5 DUP6 SWAP5 DUP6 PUSH2 0x1168 JUMP JUMPDEST SUB SWAP1 LOG2 JUMP JUMPDEST SWAP1 PUSH2 0x162 SWAP4 SWAP3 SWAP2 PUSH2 0xEB6 JUMP JUMPDEST PUSH2 0x127C PUSH2 0xECD PUSH2 0x56C PUSH1 0x0 PUSH2 0xE55 JUMP JUMPDEST PUSH2 0x162 PUSH2 0x12C4 JUMP JUMPDEST ISZERO PUSH2 0x128B JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x566F74696E67206E6F7420616374697665 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x12D6 PUSH2 0x12D1 PUSH1 0x2 PUSH2 0x6D6 JUMP JUMPDEST PUSH2 0x1284 JUMP JUMPDEST PUSH2 0x12E2 PUSH1 0x0 PUSH1 0x2 PUSH2 0x938 JUMP JUMPDEST PUSH2 0x12ED TIMESTAMP PUSH1 0x4 PUSH2 0x914 JUMP JUMPDEST PUSH32 0x74FD836262D1AD6BBD13B40F5A80A5415F4D2DB6EE1D7D8F9C9BB515D9F04E01 PUSH2 0x131B PUSH2 0x3E6 PUSH1 0x4 PUSH2 0x72A JUMP JUMPDEST SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x162 PUSH2 0x126C JUMP JUMPDEST PUSH1 0x3 PUSH2 0xA1B PUSH2 0x178 SWAP3 PUSH2 0x1339 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x6 PUSH2 0x890 JUMP JUMPDEST PUSH2 0xE21 PUSH2 0x178 SWAP2 PUSH2 0x1339 PUSH2 0xBD9 JUMP JUMPDEST PUSH2 0x135A PUSH1 0x2 PUSH2 0x6D6 JUMP JUMPDEST DUP1 PUSH2 0x137C JUMPI JUMPDEST DUP1 PUSH2 0x1368 JUMPI SWAP1 JUMP JUMPDEST POP PUSH2 0x1376 PUSH2 0x178 PUSH1 0x4 PUSH2 0x72A JUMP JUMPDEST TIMESTAMP GT ISZERO SWAP1 JUMP JUMPDEST POP PUSH2 0x138A PUSH2 0x178 PUSH1 0x3 PUSH2 0x72A JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x1360 JUMP JUMPDEST CALLDATASIZE SWAP1 CALLDATACOPY JUMP JUMPDEST SWAP1 PUSH2 0x162 PUSH2 0x13A7 PUSH2 0xC15 DUP5 PUSH2 0xB95 JUMP JUMPDEST PUSH1 0x1F NOT ADD PUSH1 0x20 DUP5 ADD PUSH2 0x1392 JUMP JUMPDEST PUSH1 0x7 PUSH2 0x13C6 PUSH2 0x13C1 DUP3 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1397 JUMP JUMPDEST SWAP1 PUSH2 0x13D1 PUSH1 0x0 PUSH2 0x883 JUMP JUMPDEST PUSH2 0x13DC PUSH2 0x178 DUP4 SLOAD SWAP1 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0xE47 JUMPI PUSH2 0x1414 SWAP1 PUSH2 0x140E PUSH2 0x1401 PUSH1 0x3 PUSH2 0xA1B PUSH1 0x6 PUSH2 0xE1B PUSH2 0xE15 DUP8 DUP11 PUSH2 0xC3E JUMP JUMPDEST PUSH2 0x140B DUP4 DUP8 PUSH2 0xC66 JUMP JUMPDEST MSTORE JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH2 0x13D1 JUMP JUMPDEST ISZERO PUSH2 0x1420 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F20766F746520666F756E6420666F72207468697320616464726573730000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x1492 PUSH2 0x178 SWAP2 PUSH2 0x1474 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH2 0x148B PUSH2 0x1486 PUSH2 0x870 DUP4 PUSH1 0x8 PUSH2 0x7FB JUMP JUMPDEST PUSH2 0x1419 JUMP JUMPDEST PUSH1 0xA PUSH2 0x7FB JUMP JUMPDEST PUSH2 0x72A JUMP JUMPDEST PUSH2 0x178 PUSH1 0x1 PUSH2 0x72A JUMP JUMPDEST PUSH2 0x162 SWAP1 PUSH2 0x14B5 PUSH2 0xECD PUSH2 0x56C PUSH1 0x0 PUSH2 0xE55 JUMP JUMPDEST PUSH2 0x150B JUMP JUMPDEST ISZERO PUSH2 0x14C1 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x566F74696E6720616C726561647920616374697665 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x8FF JUMPI JUMP JUMPDEST PUSH2 0x1544 PUSH2 0x154B SWAP2 PUSH2 0x1527 PUSH2 0x1522 PUSH2 0x875 PUSH1 0x2 PUSH2 0x6D6 JUMP JUMPDEST PUSH2 0x14BA JUMP JUMPDEST PUSH2 0x1533 PUSH1 0x1 PUSH1 0x2 PUSH2 0x938 JUMP JUMPDEST PUSH2 0x153E TIMESTAMP PUSH1 0x3 PUSH2 0x914 JUMP JUMPDEST TIMESTAMP PUSH2 0x14FE JUMP JUMPDEST PUSH1 0x4 PUSH2 0x914 JUMP JUMPDEST PUSH32 0xE280A408633821740A429FB671E01CACF8D1D70D5C2735F4F94EC0EDEF4EA6DE PUSH2 0x1576 PUSH1 0x3 PUSH2 0x72A JUMP JUMPDEST PUSH2 0x1580 PUSH1 0x4 PUSH2 0x72A JUMP JUMPDEST SWAP1 PUSH2 0x131B PUSH2 0xB52 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x162 SWAP1 PUSH2 0x14A1 JUMP JUMPDEST PUSH2 0x1492 PUSH2 0x178 SWAP2 PUSH2 0x15A5 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH2 0x15B7 PUSH2 0x1486 PUSH2 0x870 DUP4 PUSH1 0x8 PUSH2 0x7FB JUMP JUMPDEST PUSH1 0xB PUSH2 0x7FB JUMP JUMPDEST PUSH2 0x870 PUSH2 0x178 SWAP2 PUSH2 0x15CD PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x8 PUSH2 0x7FB JUMP JUMPDEST PUSH2 0x1492 PUSH2 0x178 SWAP2 PUSH2 0x15E4 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH2 0x15F6 PUSH2 0x1486 PUSH2 0x870 DUP4 PUSH1 0x8 PUSH2 0x7FB JUMP JUMPDEST PUSH1 0x9 PUSH2 0x7FB JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASPRICE 0xC7 CALLDATALOAD NUMBER 0x26 0xC6 CALLDATACOPY PUSH13 0x1F7D51946388E080A41417150 SELFDESTRUCT PUSH11 0x7BF4094C5DA4F572706473 PUSH16 0x6C634300081C00330000000000000000 ","sourceMap":"60:5329:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::o;:::-;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;:::o;:::-;;;:::o;:::-;;;;;;;;-1:-1:-1;;60:5329:7;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;60:5329:7;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;:::i;766:25::-;;;;;:::i;60:5329::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;732:27;;;;;:::i;60:5329::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;701:24::-;;;;;:::i;60:5329::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;:::i;:::-;-1:-1:-1;;;;;60:5329:7;;:::o;:::-;-1:-1:-1;;;;;60:5329:7;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;:::i;:::-;;:::i;663:31::-;;;;;:::i;60:5329::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;-1:-1:-1;;;;;60:5329:7;;;;;;;;;:::i;636:20::-;;;;;:::i;60:5329::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;60:5329:7;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;-1:-1:-1;;;60:5329:7;;;;;;;;;;;;-1:-1:-1;;;60:5329:7;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;-1:-1:-1;;;60:5329:7;;;;;;;;;;;;;;;;;;;;1291:226;1508:1;1291:226;1330:45;1338:12;;;:::i;:::-;1330:45;:::i;:::-;1394:34;1413:15;;;:::i;1394:34::-;:15;:34;;:70;;;1291:226;1386:111;;;:::i;:::-;1508:1;:::i;1394:70::-;1451:13;1386:111;1432:32;1451:13;;;:::i;1432:32::-;1394:15;1432:32;;1394:70;;;;60:5329;;;;;-1:-1:-1;;;;;60:5329:7;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;60:5329:7;;;;;;;;;;;;-1:-1:-1;;;60:5329:7;;;;;;;1523:107;1621:1;1523:107;1554:56;1562:21;1563:20;;1572:10;1563:8;:20;:::i;:::-;;:::i;:::-;1562:21;;60:5329;1562:21;1554:56;:::i;:::-;1621:1;:::i;60:5329::-;;;;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;-1:-1:-1;;;60:5329:7;;;;;;;;;;;;-1:-1:-1;;;60:5329:7;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;60:5329:7;;;;;;;:::o;:::-;;:::i;:::-;;-1:-1:-1;;60:5329:7;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;60:5329:7;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;60:5329:7;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;2764:677;2842:71;2850:26;;:23;;:10;:23;:::i;:::-;:26;;:::i;:::-;:41;;2842:71;:::i;:::-;2924:35;:33;:23;;2850:10;2924:23;:::i;:::-;:33;:35;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;2970:27;2993:4;2970:20;2979:10;2970:8;:20;:::i;:::-;:27;:::i;:::-;3008:42;2979:10;3008:28;2979:10;3008:16;:28;:::i;:::-;:42;:::i;:::-;60:5329;;3090:58;;;;;;3132:15;2979:10;;3090:58;;:::i;:::-;;;;;;;;;:::i;:::-;3080:69;;;60:5329;;;3080:69;;60:5329;;;;3080:69;;2979:10;3160:38;2979:10;3160:27;2979:10;3160:15;:27;:::i;:::-;:38;:::i;:::-;3382:51;3302:16;;2993:4;3302:16;:::i;:::-;3278:12;3302:16;:::i;:::-;3236:84;;60:5329;;;;3236:84;;;;;;;3292:27;;3278:12;2979:10;;3236:84;;:::i;:::-;3226:95;;;60:5329;;;3226:95;;3332:34;2979:10;3332:25;2979:10;3332:13;:25;:::i;:34::-;3382:51;;2979:10;3382:51;:::i;:::-;;;:::i;:::-;;;;60:5329;;;;3382:51;;;;;;:::i;:::-;;;;2764:677::o;:::-;;;;:::i;60:5329::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;;;:::o;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;60:5329:7;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;3480:292::-;3601:12;3585:36;3601:19;;60:5329;;;3601:19;3585:36;:::i;:::-;3637:10;;3646:1;3637:10;:::i;:::-;3649:23;3653:19;;60:5329;;;3649:23;;;;;;3674:3;3704:10;3694:37;3704:27;:10;3715:15;;;;;:::i;:::-;;;:::i;:::-;3704:27;;:::i;:::-;3694:37;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;-1:-1:-1;60:5329:7;;;;3674:3;3637:10;;3649:23;;;3480:292;:::o;60:5329::-;;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;-1:-1:-1;;;60:5329:7;;;;;;;;;;;;;;;;;-1:-1:-1;;;60:5329:7;;;;;;;1167:118;;1276:1;1167:118;;;1199:66;1207:19;1221:5;;;:::i;1207:19::-;:10;:19;1199:66;:::i;:::-;1276:1;:::i;60:5329::-;;;;;;;;;;-1:-1:-1;;60:5329:7;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;-1:-1:-1;;60:5329:7;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;60:5329:7;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;60:5329:7;;;;;;;;;;;;;;;;-1:-1:-1;60:5329:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;60:5329:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;1805:332::-;2081:48;;1805:332;;2081:48;1929:17;;;:::i;:::-;;;;;:::i;:::-;;;:::i;:::-;1957:67;1983:41;;:::i;:::-;;;;60:5329;;1983:41;;;;;;:::i;:::-;;;;60:5329;;1983:41;;;;;;:::i;:::-;;;;60:5329;;1983:41;;;2022:1;1983:41;:::i;:::-;;;;60:5329;;1983:41;1957:23;;:10;:23;:::i;:::-;:67;:::i;:::-;2035:30;:17;:12;:30;:::i;:::-;2081:48;:::i;:::-;;;60:5329;;;;2081:48;;;;;;:::i;:::-;;;;1805:332::o;:::-;;;;;;;:::i;1167:118::-;1199:66;1207:19;1221:5;;;:::i;1199:66::-;1276:1;;:::i;60:5329::-;;;;:::o;:::-;;;-1:-1:-1;;;60:5329:7;;;;;;;;;;;;-1:-1:-1;;;60:5329:7;;;;;;;2490:233;2549:42;2557:12;;;:::i;:::-;2549:42;:::i;:::-;2602:20;2617:5;2602:20;;:::i;:::-;2633:31;2649:15;2633:31;;:::i;:::-;2680:35;;2701:13;;;:::i;2680:35::-;;;;2490:233::o;:::-;;;:::i;3918:129::-;4006:33;:23;:33;3918:129;3982:4;60:5329;;;3982:4;4006:23;:10;:23;:::i;3780:130::-;3879:23;3872:30;3780:130;3843:16;;:::i;4055:167::-;4128:12;;;:::i;:::-;:50;;;4055:167;4128:86;;;4055:167;:::o;4128:86::-;4201:13;4182:32;4201:13;;;:::i;4182:32::-;:15;:32;;4055:167;:::o;4128:50::-;4163:15;4144:34;4163:15;;;:::i;4144:34::-;:15;:34;;4128:50;;60:5329;;;;:::o;:::-;;;;;;;:::i;:::-;-1:-1:-1;;60:5329:7;;;;;:::i;5098:288::-;5203:12;5192:31;5203:19;;60:5329;;;5203:19;5192:31;:::i;:::-;5239:10;;5248:1;5239:10;:::i;:::-;5251:23;5255:19;;60:5329;;;5251:23;;;;;;5276:3;5307:10;5296:48;5307:37;;:27;:10;5318:15;;;;;:::i;5307:37::-;5296:48;;;;:::i;:::-;60:5329;;5296:48;60:5329;;;;5276:3;5239:10;;60:5329;;;;:::o;:::-;;;-1:-1:-1;;;60:5329:7;;;;;;;;;;;;;;;;;;;;4346:185;4501:22;;4346:185;4405:7;60:5329;;;4405:7;4433:15;4425:58;4433:15;;;:8;:15;:::i;:::-;4425:58;:::i;:::-;4501:15;:22;:::i;:::-;;:::i;4732:108::-;4813:19;;;:::i;1167:118::-;1276:1;1167:118;1199:66;1207:19;1221:5;;;:::i;1199:66::-;1276:1;:::i;60:5329::-;;;;:::o;:::-;;;-1:-1:-1;;;60:5329:7;;;;;;;;;;;;-1:-1:-1;;;60:5329:7;;;;;;;;;;;;;;;;;:::o;2145:337::-;2373:33;2357:49;2145:337;2225:47;2233:13;2234:12;;;:::i;2233:13::-;2225:47;:::i;:::-;2283:19;2298:4;2283:19;;:::i;:::-;2313:33;2331:15;2313:33;;:::i;:::-;2331:15;2373:33;:::i;:::-;2357:49;;:::i;:::-;2422:52;2443:15;;;:::i;:::-;2460:13;;;:::i;:::-;2422:52;;;60:5329;;;;2145:337;;;;:::i;4539:185::-;4696:20;;4539:185;4600:7;60:5329;;;4600:7;4628:15;4620:58;4628:15;;;:8;:15;:::i;4620:58::-;4696:13;:20;:::i;4230:108::-;4316:14;;4230:108;4292:4;60:5329;;;4292:4;4316:14;:8;:14;:::i;4848:189::-;5006:23;;4848:189;4913:4;60:5329;;;4913:4;4938:15;4930:58;4938:15;;;:8;:15;:::i;4930:58::-;5006:16;:23;:::i"},"methodIdentifiers":{"admin()":"f851a440","deploymentTimestamp()":"bfc12c05","getAllVotes()":"851b6ef2","getCandidate(uint256)":"35b8e820","getCandidates()":"06a49fce","getDeploymentTimestamp()":"96a379d8","getTotalVotes(uint256)":"2ce35e11","getVoteHash(address)":"959812f8","getVoteTxHash(address)":"e061a858","getVotedCandidate(address)":"edaa5dfc","hasAddressVoted(address)":"e3e6ca7d","isVotingActive()":"47cf6f76","registerCandidate(string,string)":"0dbce4dd","startVotingSession(uint256)":"9980a55a","stopVotingSession()":"17a0ad8e","vote(uint256)":"0121b93f","votingActive()":"408e2727","votingEndTime()":"1ea736e0","votingStartTime()":"2019a608"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"candidateId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"ipfsHash\",\"type\":\"string\"}],\"name\":\"CandidateRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"candidateId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"voteHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"}],\"name\":\"VoteCast\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"}],\"name\":\"VotingSessionStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"stopTime\",\"type\":\"uint256\"}],\"name\":\"VotingSessionStopped\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deploymentTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllVotes\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"candidateId\",\"type\":\"uint256\"}],\"name\":\"getCandidate\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"ipfsHash\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"voteCount\",\"type\":\"uint256\"}],\"internalType\":\"struct BlocPol.Candidate\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCandidates\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"ipfsHash\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"voteCount\",\"type\":\"uint256\"}],\"internalType\":\"struct BlocPol.Candidate[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDeploymentTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"candidateId\",\"type\":\"uint256\"}],\"name\":\"getTotalVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"}],\"name\":\"getVoteHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"}],\"name\":\"getVoteTxHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"}],\"name\":\"getVotedCandidate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"hasAddressVoted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isVotingActive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"ipfsHash\",\"type\":\"string\"}],\"name\":\"registerCandidate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"durationSeconds\",\"type\":\"uint256\"}],\"name\":\"startVotingSession\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopVotingSession\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"candidateId\",\"type\":\"uint256\"}],\"name\":\"vote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"votingActive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"votingEndTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"votingStartTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BlocPol.sol\":\"BlocPol\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/BlocPol.sol\":{\"keccak256\":\"0xcdc6260863823e219d284ab646c619919b127e1898bc95f8abe83b91e2d07f0d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://62e407b5c1951d591af31797013f3dbab341faad3b3b396c25507af11cdbcb90\",\"dweb:/ipfs/QmQwX4CfcCbkCmtpWtHTgVnX1AE2fAhTnMSZRkKsZUorwC\"]}},\"version\":1}"}},"contracts/BlocPolAdvanced.sol":{"BlocPolAdvanced":{"abi":[{"inputs":[{"internalType":"address","name":"_zkProofVerifier","type":"address"},{"internalType":"address","name":"_liquidDemocracy","type":"address"},{"internalType":"address","name":"_voteMixing","type":"address"},{"internalType":"uint256","name":"_minVotingPower","type":"uint256"},{"internalType":"uint256","name":"_maxVotingPower","type":"uint256"},{"internalType":"uint256","name":"_commitmentPeriod","type":"uint256"},{"internalType":"uint256","name":"_revealPeriod","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"EnforcedPause","type":"error"},{"inputs":[],"name":"ExpectedPause","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"actionHash","type":"bytes32"},{"indexed":true,"internalType":"address","name":"actor","type":"address"},{"indexed":false,"internalType":"string","name":"action","type":"string"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"AuditLogCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"candidateId","type":"uint256"},{"indexed":false,"internalType":"string","name":"name","type":"string"},{"indexed":false,"internalType":"string","name":"ipfsHash","type":"string"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"CandidateRegistered","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"power","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"DelegationCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"voter","type":"address"},{"indexed":true,"internalType":"uint256","name":"candidateId","type":"uint256"},{"indexed":false,"internalType":"enum BlocPolAdvanced.VoteType","name":"voteType","type":"uint8"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"VoteCast","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"originalVote","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"mixedVote","type":"bytes32"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"VoteMixed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"voter","type":"address"},{"indexed":true,"internalType":"uint256","name":"candidateId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"VoteRevealed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"sessionId","type":"uint256"},{"indexed":false,"internalType":"enum BlocPolAdvanced.VotingMode","name":"mode","type":"uint8"},{"indexed":false,"internalType":"uint256","name":"startTime","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"endTime","type":"uint256"}],"name":"VotingSessionCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"sessionId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"totalVotes","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"VotingSessionEnded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"proofHash","type":"bytes32"},{"indexed":false,"internalType":"bool","name":"isValid","type":"bool"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"ZKProofVerified","type":"event"},{"inputs":[{"internalType":"uint256","name":"sessionId","type":"uint256"},{"internalType":"uint256","name":"candidateId","type":"uint256"},{"internalType":"uint256","name":"votingPower","type":"uint256"}],"name":"castDelegatedVote","outputs":[{"internalType":"uint256","name":"voteId","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"sessionId","type":"uint256"},{"internalType":"uint256","name":"candidateId","type":"uint256"},{"internalType":"bytes32","name":"commitmentHash","type":"bytes32"},{"internalType":"uint256","name":"votingPower","type":"uint256"}],"name":"castVote","outputs":[{"internalType":"uint256","name":"voteId","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"sessionId","type":"uint256"},{"internalType":"uint256","name":"candidateId","type":"uint256"},{"internalType":"bytes32","name":"zkProofHash","type":"bytes32"},{"internalType":"uint256","name":"votingPower","type":"uint256"}],"name":"castZKVote","outputs":[{"internalType":"uint256","name":"voteId","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"commitmentPeriod","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"durationSeconds","type":"uint256"},{"internalType":"enum BlocPolAdvanced.VotingMode","name":"mode","type":"uint8"}],"name":"createVotingSession","outputs":[{"internalType":"uint256","name":"sessionId","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"sessionId","type":"uint256"}],"name":"endVotingSession","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getAllCandidates","outputs":[{"components":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"ipfsHash","type":"string"},{"internalType":"uint256","name":"voteCount","type":"uint256"},{"internalType":"uint256","name":"delegatedVoteCount","type":"uint256"},{"internalType":"bool","name":"isActive","type":"bool"},{"internalType":"uint256","name":"registrationTime","type":"uint256"}],"internalType":"struct BlocPolAdvanced.Candidate[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"actionHash","type":"bytes32"}],"name":"getAuditTrail","outputs":[{"components":[{"internalType":"bytes32","name":"actionHash","type":"bytes32"},{"internalType":"address","name":"actor","type":"address"},{"internalType":"string","name":"action","type":"string"},{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"bytes32[]","name":"proof","type":"bytes32[]"}],"internalType":"struct BlocPolAdvanced.AuditTrail","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"candidateId","type":"uint256"}],"name":"getCandidate","outputs":[{"components":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"ipfsHash","type":"string"},{"internalType":"uint256","name":"voteCount","type":"uint256"},{"internalType":"uint256","name":"delegatedVoteCount","type":"uint256"},{"internalType":"bool","name":"isActive","type":"bool"},{"internalType":"uint256","name":"registrationTime","type":"uint256"}],"internalType":"struct BlocPolAdvanced.Candidate","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"candidateId","type":"uint256"}],"name":"getCandidateTotalVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"sessionId","type":"uint256"}],"name":"getSessionTotals","outputs":[{"internalType":"uint256","name":"totalVotes","type":"uint256"},{"internalType":"uint256","name":"totalVotingPower","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"voteId","type":"uint256"}],"name":"getVote","outputs":[{"components":[{"internalType":"address","name":"voter","type":"address"},{"internalType":"uint256","name":"candidateId","type":"uint256"},{"internalType":"uint256[]","name":"rankedChoices","type":"uint256[]"},{"internalType":"bytes32","name":"commitmentHash","type":"bytes32"},{"internalType":"bytes32","name":"zkProofHash","type":"bytes32"},{"internalType":"bytes32","name":"mixedVoteHash","type":"bytes32"},{"internalType":"uint256","name":"votingPower","type":"uint256"},{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"bool","name":"isRevealed","type":"bool"},{"internalType":"enum BlocPolAdvanced.VoteType","name":"voteType","type":"uint8"}],"internalType":"struct BlocPolAdvanced.AdvancedVote","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"voter","type":"address"}],"name":"getVoterVotes","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"sessionId","type":"uint256"}],"name":"getVotingSession","outputs":[{"components":[{"internalType":"uint256","name":"sessionId","type":"uint256"},{"internalType":"uint256","name":"startTime","type":"uint256"},{"internalType":"uint256","name":"endTime","type":"uint256"},{"internalType":"uint256","name":"revealTime","type":"uint256"},{"internalType":"bool","name":"isActive","type":"bool"},{"internalType":"bool","name":"isRevealed","type":"bool"},{"internalType":"uint256","name":"totalVotes","type":"uint256"},{"internalType":"uint256","name":"totalVotingPower","type":"uint256"},{"internalType":"enum BlocPolAdvanced.VotingMode","name":"mode","type":"uint8"},{"internalType":"bytes32","name":"merkleRoot","type":"bytes32"}],"internalType":"struct BlocPolAdvanced.VotingSession","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"voter","type":"address"},{"internalType":"uint256","name":"sessionId","type":"uint256"}],"name":"hasVoterVoted","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"liquidDemocracy","outputs":[{"internalType":"contract LiquidDemocracy","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"liquidDemocracyEnabled","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"maxVotingPower","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"minVotingPower","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"ipfsHash","type":"string"}],"name":"registerCandidate","outputs":[{"internalType":"uint256","name":"candidateId","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"revealPeriod","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"voteId","type":"uint256"},{"internalType":"bytes32","name":"originalVote","type":"bytes32"},{"internalType":"bytes32","name":"randomness","type":"bytes32"}],"name":"revealVote","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bool","name":"_zkProofsEnabled","type":"bool"},{"internalType":"bool","name":"_liquidDemocracyEnabled","type":"bool"},{"internalType":"bool","name":"_voteMixingEnabled","type":"bool"}],"name":"setFeatures","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"unpause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_minVotingPower","type":"uint256"},{"internalType":"uint256","name":"_maxVotingPower","type":"uint256"},{"internalType":"uint256","name":"_commitmentPeriod","type":"uint256"},{"internalType":"uint256","name":"_revealPeriod","type":"uint256"}],"name":"updateVotingParameters","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"voteMixing","outputs":[{"internalType":"contract VoteMixing","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"voteMixingEnabled","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"zkProofVerifier","outputs":[{"internalType":"contract ZKProofVerifier","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"zkProofsEnabled","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"abi_decode_address_fromMemory":{"entryPoint":169,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_addresst_addresst_addresst_uint256t_uint256t_uint256t_uint256_fromMemory":{"entryPoint":201,"id":null,"parameterSlots":2,"returnSlots":7},"abi_decode_uint256_fromMemory":{"entryPoint":188,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_address":{"entryPoint":836,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":114,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"cleanup_address":{"entryPoint":136,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_uint160":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"constant_NOT_ENTERED":{"entryPoint":777,"id":null,"parameterSlots":0,"returnSlots":1},"constructor_BlocPolAdvanced":{"entryPoint":579,"id":2730,"parameterSlots":7,"returnSlots":0},"constructor_Ownable":{"entryPoint":855,"id":50,"parameterSlots":1,"returnSlots":0},"constructor_Pausable":{"entryPoint":768,"id":null,"parameterSlots":1,"returnSlots":0},"constructor_ReentrancyGuard":{"entryPoint":787,"id":307,"parameterSlots":1,"returnSlots":0},"convert_address_to_address":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_address_to_contract_LiquidDemocracy":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_address_to_contract_VoteMixing":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_address_to_contract_ZKProofVerifier":{"entryPoint":371,"id":null,"parameterSlots":1,"returnSlots":1},"convert_bool_to_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_by_to_address":{"entryPoint":827,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_by_to_uint160":{"entryPoint":814,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_by_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_rational_by_to_t_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint160_to_contract_ZKProofVerifier":{"entryPoint":362,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint160_to_uint160":{"entryPoint":342,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint256_to_uint256":{"entryPoint":438,"id":null,"parameterSlots":1,"returnSlots":1},"copy_arguments_for_constructor_object_BlocPolAdvanced":{"entryPoint":303,"id":null,"parameterSlots":0,"returnSlots":7},"extract_from_storage_value_offset_address":{"entryPoint":931,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":76,"id":null,"parameterSlots":2,"returnSlots":0},"fun_transferOwnership":{"entryPoint":950,"id":146,"parameterSlots":1,"returnSlots":0},"panic_error_0x41":{"entryPoint":54,"id":null,"parameterSlots":0,"returnSlots":0},"read_from_storage_split_offset_address":{"entryPoint":940,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_0":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_16":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_right_unsigned":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"update_byte_slice_20_shift":{"entryPoint":380,"id":null,"parameterSlots":2,"returnSlots":1},"update_byte_slice_shift":{"entryPoint":428,"id":null,"parameterSlots":2,"returnSlots":1},"update_byte_slice_shift_0":{"entryPoint":474,"id":null,"parameterSlots":2,"returnSlots":1},"update_byte_slice_shift_1":{"entryPoint":506,"id":null,"parameterSlots":2,"returnSlots":1},"update_byte_slice_shift_2":{"entryPoint":542,"id":null,"parameterSlots":2,"returnSlots":1},"update_storage_value_offset_2_bool_to_bool":{"entryPoint":556,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offset_address_to_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offset_bool_to_bool":{"entryPoint":483,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offset_contract_LiquidDemocracy_to_contract_LiquidDemocracy":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offset_contract_VoteMixing_to_contract_VoteMixing":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offset_contract_ZKProofVerifier_to_contract_ZKProofVerifier":{"entryPoint":401,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offset_t_bool_to_t_bool":{"entryPoint":519,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offset_uint256_to_uint256":{"entryPoint":451,"id":null,"parameterSlots":2,"returnSlots":0},"validator_revert_address":{"entryPoint":151,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_uint256":{"entryPoint":182,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x31 JUMPI PUSH2 0x20 PUSH2 0x14 PUSH2 0x12F JUMP JUMPDEST SWAP6 SWAP5 SWAP1 SWAP5 SWAP4 SWAP2 SWAP4 PUSH2 0x243 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x39E3 PUSH2 0x409 DUP3 CODECOPY PUSH2 0x39E3 SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x6D JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x36 JUMP JUMPDEST SWAP1 PUSH2 0x86 PUSH2 0x7F PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 PUSH2 0x4C JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND JUMPDEST SUB PUSH2 0x31 JUMPI JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0x86 DUP3 PUSH2 0x97 JUMP JUMPDEST DUP1 PUSH2 0xA2 JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0x86 DUP3 PUSH2 0xB6 JUMP JUMPDEST PUSH1 0xE0 DUP2 DUP4 SUB SLT PUSH2 0x31 JUMPI PUSH2 0xDD DUP3 DUP3 PUSH2 0xA9 JUMP JUMPDEST SWAP3 PUSH2 0xEB DUP4 PUSH1 0x20 DUP5 ADD PUSH2 0xA9 JUMP JUMPDEST SWAP3 PUSH2 0xF9 DUP2 PUSH1 0x40 DUP6 ADD PUSH2 0xA9 JUMP JUMPDEST SWAP3 PUSH2 0x107 DUP3 PUSH1 0x60 DUP4 ADD PUSH2 0xBC JUMP JUMPDEST SWAP3 PUSH2 0x94 PUSH2 0x118 DUP5 PUSH1 0x80 DUP6 ADD PUSH2 0xBC JUMP JUMPDEST SWAP4 PUSH1 0xC0 PUSH2 0x128 DUP3 PUSH1 0xA0 DUP8 ADD PUSH2 0xBC JUMP JUMPDEST SWAP5 ADD PUSH2 0xBC JUMP JUMPDEST PUSH2 0x14D PUSH2 0x3DEC DUP1 CODESIZE SUB DUP1 PUSH2 0x142 DUP2 PUSH2 0x72 JUMP JUMPDEST SWAP3 DUP4 CODECOPY DUP2 ADD SWAP1 PUSH2 0xC9 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 JUMP JUMPDEST PUSH2 0x94 SWAP1 PUSH2 0x88 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 JUMP JUMPDEST PUSH2 0x94 SWAP1 PUSH2 0x156 JUMP JUMPDEST PUSH2 0x94 SWAP1 PUSH2 0x16A JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1A1 PUSH2 0x94 PUSH2 0x1A8 SWAP3 PUSH2 0x173 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x17C JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST SWAP1 PUSH1 0x0 NOT SWAP1 PUSH2 0x187 JUMP JUMPDEST PUSH2 0x94 PUSH2 0x94 PUSH2 0x94 SWAP3 SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1D3 PUSH2 0x94 PUSH2 0x1A8 SWAP3 PUSH2 0x1B6 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x1AC JUMP JUMPDEST SWAP1 PUSH1 0xFF SWAP1 PUSH2 0x187 JUMP JUMPDEST SWAP1 PUSH2 0x1F3 PUSH2 0x94 PUSH2 0x1A8 SWAP3 ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x1DA JUMP JUMPDEST SWAP1 PUSH2 0xFF00 SWAP1 PUSH1 0x8 SHL PUSH2 0x187 JUMP JUMPDEST SWAP1 PUSH2 0x217 PUSH2 0x94 PUSH2 0x1A8 SWAP3 ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x1FA JUMP JUMPDEST SWAP1 PUSH3 0xFF0000 SWAP1 PUSH1 0x10 SHL PUSH2 0x187 JUMP JUMPDEST SWAP1 PUSH2 0x23C PUSH2 0x94 PUSH2 0x1A8 SWAP3 ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x21E JUMP JUMPDEST PUSH2 0x2A7 SWAP7 SWAP6 SWAP4 PUSH2 0x28B PUSH2 0x284 PUSH2 0x299 SWAP6 PUSH2 0x271 PUSH2 0x27D PUSH2 0x2A0 SWAP11 SWAP8 PUSH2 0x271 PUSH2 0x276 PUSH2 0x292 SWAP10 PUSH2 0x271 CALLER PUSH2 0x300 JUMP JUMPDEST PUSH2 0x173 JUMP JUMPDEST PUSH1 0xD PUSH2 0x191 JUMP JUMPDEST PUSH1 0xE PUSH2 0x191 JUMP JUMPDEST PUSH1 0xF PUSH2 0x191 JUMP JUMPDEST PUSH1 0x10 PUSH2 0x1C3 JUMP JUMPDEST PUSH1 0x11 PUSH2 0x1C3 JUMP JUMPDEST PUSH1 0x12 PUSH2 0x1C3 JUMP JUMPDEST PUSH1 0x13 PUSH2 0x1C3 JUMP JUMPDEST PUSH2 0x2DC PUSH2 0x2B4 PUSH1 0x0 PUSH2 0x1B6 JUMP JUMPDEST PUSH2 0x2BF DUP2 PUSH1 0x9 PUSH2 0x1C3 JUMP JUMPDEST PUSH2 0x2CA DUP2 PUSH1 0xA PUSH2 0x1C3 JUMP JUMPDEST PUSH2 0x2D5 DUP2 PUSH1 0xB PUSH2 0x1C3 JUMP JUMPDEST PUSH1 0xC PUSH2 0x1C3 JUMP JUMPDEST PUSH2 0x2E8 PUSH1 0x1 PUSH1 0x14 PUSH2 0x1E3 JUMP JUMPDEST PUSH2 0x2F4 PUSH1 0x1 PUSH1 0x14 PUSH2 0x207 JUMP JUMPDEST PUSH2 0x86 PUSH1 0x1 PUSH1 0x14 PUSH2 0x22C JUMP JUMPDEST PUSH2 0x86 SWAP1 PUSH2 0x313 JUMP JUMPDEST PUSH2 0x94 PUSH1 0x1 PUSH2 0x1B6 JUMP JUMPDEST PUSH2 0x31C SWAP1 PUSH2 0x357 JUMP JUMPDEST PUSH2 0x86 PUSH2 0x327 PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH2 0x1C3 JUMP JUMPDEST PUSH2 0x88 PUSH2 0x94 PUSH2 0x94 SWAP3 SWAP1 JUMP JUMPDEST PUSH2 0x94 SWAP1 PUSH2 0x32E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x362 DUP2 PUSH2 0x33B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EQ PUSH2 0x386 JUMPI POP POP PUSH2 0x86 SWAP1 PUSH2 0x3B6 JUMP JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP3 MSTORE DUP2 SWAP1 PUSH2 0x39F SWAP1 PUSH1 0x4 DUP4 ADD PUSH2 0x344 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x94 SWAP1 PUSH2 0x88 JUMP JUMPDEST PUSH2 0x94 SWAP1 SLOAD PUSH2 0x3A3 JUMP JUMPDEST PUSH2 0x3D7 PUSH2 0x3D1 PUSH2 0x3C6 PUSH1 0x0 PUSH2 0x3AC JUMP JUMPDEST PUSH2 0x271 DUP5 PUSH1 0x0 PUSH2 0x191 JUMP JUMPDEST SWAP2 PUSH2 0x173 JUMP JUMPDEST SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH2 0x402 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 LOG3 JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xDBCE4DD EQ PUSH2 0x232 JUMPI DUP1 PUSH4 0x1119501E EQ PUSH2 0x22D JUMPI DUP1 PUSH4 0x1943C90B EQ PUSH2 0x228 JUMPI DUP1 PUSH4 0x2966D67A EQ PUSH2 0x223 JUMPI DUP1 PUSH4 0x2BEB449E EQ PUSH2 0x21E JUMPI DUP1 PUSH4 0x2E6997FE EQ PUSH2 0x219 JUMPI DUP1 PUSH4 0x33845E52 EQ PUSH2 0x214 JUMPI DUP1 PUSH4 0x35B8E820 EQ PUSH2 0x20F JUMPI DUP1 PUSH4 0x35BB3D30 EQ PUSH2 0x20A JUMPI DUP1 PUSH4 0x36FFFDE0 EQ PUSH2 0x205 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x200 JUMPI DUP1 PUSH4 0x42AB9786 EQ PUSH2 0x1FB JUMPI DUP1 PUSH4 0x4650BAA1 EQ PUSH2 0x1F6 JUMPI DUP1 PUSH4 0x5414E58E EQ PUSH2 0x1F1 JUMPI DUP1 PUSH4 0x5A55C1F0 EQ PUSH2 0x1EC JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x1E7 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1E2 JUMPI DUP1 PUSH4 0x73A8CE8B EQ PUSH2 0x1DD JUMPI DUP1 PUSH4 0x7C25E889 EQ PUSH2 0x1D8 JUMPI DUP1 PUSH4 0x7DABDD99 EQ PUSH2 0x1D3 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x1CE JUMPI DUP1 PUSH4 0x8A3C5F9B EQ PUSH2 0x1C9 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1C4 JUMPI DUP1 PUSH4 0x8ED1FDE7 EQ PUSH2 0x1BF JUMPI DUP1 PUSH4 0x9B541F76 EQ PUSH2 0x1BA JUMPI DUP1 PUSH4 0x9EF0FB85 EQ PUSH2 0x1B5 JUMPI DUP1 PUSH4 0xABDD80A3 EQ PUSH2 0x1B0 JUMPI DUP1 PUSH4 0xB4483AA7 EQ PUSH2 0x1AB JUMPI DUP1 PUSH4 0xBAC7C890 EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0xC7A800AF EQ PUSH2 0x1A1 JUMPI DUP1 PUSH4 0xCF042511 EQ PUSH2 0x19C JUMPI DUP1 PUSH4 0xDD304E3E EQ PUSH2 0x197 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x192 JUMPI PUSH4 0xF9604681 SUB PUSH2 0x237 JUMPI PUSH2 0xDAC JUMP JUMPDEST PUSH2 0xD88 JUMP JUMPDEST PUSH2 0xD6D JUMP JUMPDEST PUSH2 0xD3A JUMP JUMPDEST PUSH2 0xCBC JUMP JUMPDEST PUSH2 0xC94 JUMP JUMPDEST PUSH2 0xC78 JUMP JUMPDEST PUSH2 0xC5D JUMP JUMPDEST PUSH2 0xC42 JUMP JUMPDEST PUSH2 0xC1A JUMP JUMPDEST PUSH2 0xBCF JUMP JUMPDEST PUSH2 0xB7F JUMP JUMPDEST PUSH2 0xB54 JUMP JUMPDEST PUSH2 0xB30 JUMP JUMPDEST PUSH2 0xB15 JUMP JUMPDEST PUSH2 0xADB JUMP JUMPDEST PUSH2 0xA9D JUMP JUMPDEST PUSH2 0x9E1 JUMP JUMPDEST PUSH2 0x9C6 JUMP JUMPDEST PUSH2 0x99F JUMP JUMPDEST PUSH2 0x85B JUMP JUMPDEST PUSH2 0x81A JUMP JUMPDEST PUSH2 0x7F2 JUMP JUMPDEST PUSH2 0x7A0 JUMP JUMPDEST PUSH2 0x785 JUMP JUMPDEST PUSH2 0x74B JUMP JUMPDEST PUSH2 0x724 JUMP JUMPDEST PUSH2 0x6F5 JUMP JUMPDEST PUSH2 0x689 JUMP JUMPDEST PUSH2 0x516 JUMP JUMPDEST PUSH2 0x481 JUMP JUMPDEST PUSH2 0x45A JUMP JUMPDEST PUSH2 0x348 JUMP JUMPDEST PUSH2 0x2C0 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 SWAP2 DUP3 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x237 JUMPI DUP2 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x237 JUMPI PUSH1 0x20 ADD SWAP3 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH2 0x237 JUMPI JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x40 DUP3 DUP5 SUB SLT PUSH2 0x237 JUMPI DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x237 JUMPI DUP4 PUSH2 0x295 SWAP2 DUP5 ADD PUSH2 0x23C JUMP JUMPDEST SWAP3 SWAP1 SWAP4 PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x237 JUMPI PUSH2 0x2B6 SWAP3 ADD PUSH2 0x23C JUMP JUMPDEST SWAP1 SWAP2 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST JUMP JUMPDEST CALLVALUE PUSH2 0x237 JUMPI PUSH2 0x2EF PUSH2 0x2DF PUSH2 0x2D6 CALLDATASIZE PUSH1 0x4 PUSH2 0x26C JUMP JUMPDEST SWAP3 SWAP2 SWAP1 SWAP2 PUSH2 0x1397 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP1 JUMPDEST SUB PUSH2 0x237 JUMPI JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x2BE DUP3 PUSH2 0x2F3 JUMP JUMPDEST PUSH1 0x80 DUP2 DUP4 SUB SLT PUSH2 0x237 JUMPI PUSH2 0x31D DUP3 DUP3 PUSH2 0x2FC JUMP JUMPDEST SWAP3 PUSH2 0x345 PUSH2 0x32E DUP5 PUSH1 0x20 DUP6 ADD PUSH2 0x2FC JUMP JUMPDEST SWAP4 PUSH1 0x60 PUSH2 0x33E DUP3 PUSH1 0x40 DUP8 ADD PUSH2 0x2FC JUMP JUMPDEST SWAP5 ADD PUSH2 0x2FC JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x237 JUMPI PUSH2 0x2EF PUSH2 0x2DF PUSH2 0x35E CALLDATASIZE PUSH1 0x4 PUSH2 0x309 JUMP JUMPDEST SWAP3 SWAP2 SWAP1 SWAP2 PUSH2 0x1B2E JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x237 JUMPI PUSH2 0x345 SWAP2 PUSH2 0x2FC JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x4 GT ISZERO PUSH2 0x39B JUMPI JUMP JUMPDEST PUSH2 0x37B JUMP JUMPDEST SWAP1 PUSH2 0x2BE DUP3 PUSH2 0x391 JUMP JUMPDEST PUSH2 0x345 SWAP1 PUSH2 0x3A0 JUMP JUMPDEST PUSH2 0x2BA SWAP1 PUSH2 0x3AA JUMP JUMPDEST DUP1 MLOAD DUP3 MSTORE PUSH2 0x2BE SWAP2 SWAP1 PUSH2 0x120 SWAP1 DUP2 SWAP1 PUSH2 0x3DA PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x20 DUP7 ADD MSTORE JUMP JUMPDEST PUSH2 0x3E9 PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x40 DUP7 ADD MSTORE JUMP JUMPDEST PUSH2 0x3F8 PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x60 DUP7 ADD MSTORE JUMP JUMPDEST PUSH1 0x80 DUP2 DUP2 ADD MLOAD ISZERO ISZERO SWAP1 DUP6 ADD MSTORE PUSH1 0xA0 DUP2 DUP2 ADD MLOAD ISZERO ISZERO SWAP1 DUP6 ADD MSTORE PUSH2 0x41F PUSH1 0xC0 DUP3 ADD MLOAD PUSH1 0xC0 DUP7 ADD MSTORE JUMP JUMPDEST PUSH2 0x42E PUSH1 0xE0 DUP3 ADD MLOAD PUSH1 0xE0 DUP7 ADD MSTORE JUMP JUMPDEST PUSH2 0x442 PUSH2 0x100 DUP3 ADD MLOAD PUSH2 0x100 DUP7 ADD SWAP1 PUSH2 0x3B3 JUMP JUMPDEST ADD MLOAD SWAP2 ADD MSTORE JUMP JUMPDEST PUSH2 0x140 DUP2 ADD SWAP3 SWAP2 PUSH2 0x2BE SWAP2 SWAP1 PUSH2 0x3BC JUMP JUMPDEST CALLVALUE PUSH2 0x237 JUMPI PUSH2 0x2EF PUSH2 0x475 PUSH2 0x470 CALLDATASIZE PUSH1 0x4 PUSH2 0x367 JUMP JUMPDEST PUSH2 0x1C95 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x449 JUMP JUMPDEST CALLVALUE PUSH2 0x237 JUMPI PUSH2 0x2EF PUSH2 0x2DF PUSH2 0x497 CALLDATASIZE PUSH1 0x4 PUSH2 0x309 JUMP JUMPDEST SWAP3 SWAP2 SWAP1 SWAP2 PUSH2 0x1FA4 JUMP JUMPDEST PUSH1 0x0 SWAP2 SUB SLT PUSH2 0x237 JUMPI JUMP JUMPDEST PUSH2 0x345 SWAP2 PUSH1 0x8 MUL SHR JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x345 SWAP2 SLOAD PUSH2 0x4AB JUMP JUMPDEST PUSH2 0x345 PUSH1 0x0 PUSH1 0xD PUSH2 0x4C0 JUMP JUMPDEST PUSH2 0x345 SWAP1 PUSH2 0x4B4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 JUMP JUMPDEST PUSH2 0x345 SWAP1 PUSH2 0x4D7 JUMP JUMPDEST PUSH2 0x345 SWAP1 PUSH2 0x4EB JUMP JUMPDEST PUSH2 0x2BA SWAP1 PUSH2 0x4F4 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD SWAP3 SWAP2 PUSH2 0x2BE SWAP2 SWAP1 PUSH2 0x4FD JUMP JUMPDEST CALLVALUE PUSH2 0x237 JUMPI PUSH2 0x526 CALLDATASIZE PUSH1 0x4 PUSH2 0x4A0 JUMP JUMPDEST PUSH2 0x2EF PUSH2 0x531 PUSH2 0x4CB JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x506 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x550 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x540 JUMP JUMPDEST PUSH2 0x581 PUSH2 0x58A PUSH1 0x20 SWAP4 PUSH2 0x594 SWAP4 PUSH2 0x575 DUP2 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP4 DUP5 SWAP3 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP6 DUP7 SWAP2 ADD PUSH2 0x53D JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP1 JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD DUP3 MSTORE SWAP1 PUSH2 0x345 SWAP1 PUSH1 0xC0 DUP1 PUSH2 0x5D2 PUSH2 0x5C0 PUSH1 0xE0 DUP6 ADD PUSH1 0x20 DUP9 ADD MLOAD DUP7 DUP3 SUB PUSH1 0x20 DUP9 ADD MSTORE PUSH2 0x560 JUMP JUMPDEST PUSH1 0x40 DUP8 ADD MLOAD DUP6 DUP3 SUB PUSH1 0x40 DUP8 ADD MSTORE PUSH2 0x560 JUMP JUMPDEST SWAP5 PUSH2 0x5E2 PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x60 DUP7 ADD MSTORE JUMP JUMPDEST PUSH2 0x5F1 PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0x80 DUP7 ADD MSTORE JUMP JUMPDEST PUSH1 0xA0 DUP2 DUP2 ADD MLOAD ISZERO ISZERO SWAP1 DUP6 ADD MSTORE PUSH2 0x442 JUMP JUMPDEST SWAP1 PUSH2 0x345 SWAP2 PUSH2 0x598 JUMP JUMPDEST SWAP1 PUSH2 0x622 PUSH2 0x618 DUP4 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 PUSH2 0x634 PUSH1 0x20 DUP4 MUL DUP5 ADD SWAP5 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x0 SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x648 JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 PUSH1 0x20 PUSH2 0x66B PUSH2 0x664 DUP4 DUP6 PUSH1 0x1 SWAP6 SUB DUP8 MSTORE DUP10 MLOAD PUSH2 0x602 JUMP JUMPDEST SWAP8 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP4 ADD SWAP4 ADD SWAP2 SWAP4 SWAP3 SWAP1 PUSH2 0x639 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH2 0x345 SWAP3 SWAP2 ADD SWAP1 PUSH2 0x60C JUMP JUMPDEST CALLVALUE PUSH2 0x237 JUMPI PUSH2 0x699 CALLDATASIZE PUSH1 0x4 PUSH2 0x4A0 JUMP JUMPDEST PUSH2 0x2EF PUSH2 0x6A4 PUSH2 0x2167 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x678 JUMP JUMPDEST DUP1 ISZERO ISZERO PUSH2 0x2F5 JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x2BE DUP3 PUSH2 0x6B0 JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x60 DUP3 DUP5 SUB SLT PUSH2 0x237 JUMPI PUSH2 0x345 PUSH2 0x6DE DUP5 DUP5 PUSH2 0x6B8 JUMP JUMPDEST SWAP4 PUSH1 0x40 PUSH2 0x6EE DUP3 PUSH1 0x20 DUP8 ADD PUSH2 0x6B8 JUMP JUMPDEST SWAP5 ADD PUSH2 0x6B8 JUMP JUMPDEST CALLVALUE PUSH2 0x237 JUMPI PUSH2 0x70E PUSH2 0x708 CALLDATASIZE PUSH1 0x4 PUSH2 0x6C5 JUMP JUMPDEST SWAP2 PUSH2 0x223C JUMP JUMPDEST PUSH1 0x40 MLOAD STOP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH2 0x345 SWAP3 SWAP2 ADD SWAP1 PUSH2 0x598 JUMP JUMPDEST CALLVALUE PUSH2 0x237 JUMPI PUSH2 0x2EF PUSH2 0x73F PUSH2 0x73A CALLDATASIZE PUSH1 0x4 PUSH2 0x367 JUMP JUMPDEST PUSH2 0x2247 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x713 JUMP JUMPDEST CALLVALUE PUSH2 0x237 JUMPI PUSH2 0x70E PUSH2 0x75E CALLDATASIZE PUSH1 0x4 PUSH2 0x367 JUMP JUMPDEST PUSH2 0x24C7 JUMP JUMPDEST PUSH2 0x345 SWAP2 PUSH1 0x8 MUL SHR DUP2 JUMP JUMPDEST SWAP1 PUSH2 0x345 SWAP2 SLOAD PUSH2 0x763 JUMP JUMPDEST PUSH2 0x345 PUSH1 0x0 PUSH1 0x10 PUSH2 0x76E JUMP JUMPDEST CALLVALUE PUSH2 0x237 JUMPI PUSH2 0x795 CALLDATASIZE PUSH1 0x4 PUSH2 0x4A0 JUMP JUMPDEST PUSH2 0x2EF PUSH2 0x2DF PUSH2 0x779 JUMP JUMPDEST CALLVALUE PUSH2 0x237 JUMPI PUSH2 0x7B0 CALLDATASIZE PUSH1 0x4 PUSH2 0x4A0 JUMP JUMPDEST PUSH2 0x70E PUSH2 0x24E3 JUMP JUMPDEST PUSH1 0x4 GT ISZERO PUSH2 0x237 JUMPI JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x2BE DUP3 PUSH2 0x7B8 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0x237 JUMPI PUSH2 0x345 SWAP1 PUSH1 0x20 PUSH2 0x7EB DUP3 DUP7 PUSH2 0x2FC JUMP JUMPDEST SWAP5 ADD PUSH2 0x7C2 JUMP JUMPDEST CALLVALUE PUSH2 0x237 JUMPI PUSH2 0x2EF PUSH2 0x2DF PUSH2 0x808 CALLDATASIZE PUSH1 0x4 PUSH2 0x7CF JUMP JUMPDEST SWAP1 PUSH2 0x27C2 JUMP JUMPDEST PUSH2 0x345 PUSH1 0x0 PUSH1 0xF PUSH2 0x4C0 JUMP JUMPDEST CALLVALUE PUSH2 0x237 JUMPI PUSH2 0x82A CALLDATASIZE PUSH1 0x4 PUSH2 0x4A0 JUMP JUMPDEST PUSH2 0x2EF PUSH2 0x531 PUSH2 0x80E JUMP JUMPDEST PUSH2 0x345 SWAP2 PUSH1 0x8 MUL SHR JUMPDEST PUSH1 0xFF AND SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x345 SWAP2 SLOAD PUSH2 0x835 JUMP JUMPDEST PUSH2 0x345 PUSH1 0x1 PUSH1 0x14 PUSH2 0x844 JUMP JUMPDEST CALLVALUE PUSH2 0x237 JUMPI PUSH2 0x86B CALLDATASIZE PUSH1 0x4 PUSH2 0x4A0 JUMP JUMPDEST PUSH2 0x2EF PUSH2 0x876 PUSH2 0x84F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH2 0x2BA SWAP1 PUSH2 0x4B4 JUMP JUMPDEST SWAP1 PUSH2 0x8B1 PUSH2 0x8AA PUSH2 0x8A0 DUP5 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP5 MSTORE SWAP3 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x8C2 JUMPI POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 PUSH2 0x8DF PUSH2 0x8D8 PUSH1 0x1 SWAP3 DUP7 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP5 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 ADD PUSH2 0x8B5 JUMP JUMPDEST SWAP1 PUSH2 0x345 SWAP1 PUSH2 0x120 DUP1 PUSH2 0x92B PUSH2 0x140 DUP5 ADD PUSH2 0x90A PUSH1 0x0 DUP9 ADD MLOAD PUSH1 0x0 DUP8 ADD SWAP1 PUSH2 0x888 JUMP JUMPDEST PUSH2 0x919 PUSH1 0x20 DUP9 ADD MLOAD PUSH1 0x20 DUP8 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 DUP8 ADD MLOAD DUP6 DUP3 SUB PUSH1 0x40 DUP8 ADD MSTORE PUSH2 0x891 JUMP JUMPDEST SWAP5 PUSH2 0x93B PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x60 DUP7 ADD MSTORE JUMP JUMPDEST PUSH2 0x94A PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0x80 DUP7 ADD MSTORE JUMP JUMPDEST PUSH2 0x959 PUSH1 0xA0 DUP3 ADD MLOAD PUSH1 0xA0 DUP7 ADD MSTORE JUMP JUMPDEST PUSH2 0x968 PUSH1 0xC0 DUP3 ADD MLOAD PUSH1 0xC0 DUP7 ADD MSTORE JUMP JUMPDEST PUSH2 0x977 PUSH1 0xE0 DUP3 ADD MLOAD PUSH1 0xE0 DUP7 ADD MSTORE JUMP JUMPDEST PUSH2 0x100 DUP2 DUP2 ADD MLOAD ISZERO ISZERO SWAP1 DUP6 ADD MSTORE ADD MLOAD SWAP2 ADD SWAP1 PUSH2 0x3B3 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH2 0x345 SWAP3 SWAP2 ADD SWAP1 PUSH2 0x8E7 JUMP JUMPDEST CALLVALUE PUSH2 0x237 JUMPI PUSH2 0x2EF PUSH2 0x9BA PUSH2 0x9B5 CALLDATASIZE PUSH1 0x4 PUSH2 0x367 JUMP JUMPDEST PUSH2 0x2931 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x98E JUMP JUMPDEST CALLVALUE PUSH2 0x237 JUMPI PUSH2 0x9D6 CALLDATASIZE PUSH1 0x4 PUSH2 0x4A0 JUMP JUMPDEST PUSH2 0x2EF PUSH2 0x876 PUSH2 0x294D JUMP JUMPDEST CALLVALUE PUSH2 0x237 JUMPI PUSH2 0x9F1 CALLDATASIZE PUSH1 0x4 PUSH2 0x4A0 JUMP JUMPDEST PUSH2 0x70E PUSH2 0x298F JUMP JUMPDEST SWAP1 PUSH2 0xA08 PUSH2 0x8AA PUSH2 0x8A0 DUP5 MLOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0xA19 JUMPI POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 PUSH2 0xA2F PUSH2 0x8D8 PUSH1 0x1 SWAP3 DUP7 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 ADD PUSH2 0xA0C JUMP JUMPDEST DUP1 MLOAD DUP3 MSTORE PUSH2 0x345 SWAP2 PUSH1 0x80 PUSH2 0xA6C PUSH1 0xA0 DUP4 ADD PUSH2 0xA5A PUSH1 0x20 DUP7 ADD MLOAD PUSH1 0x20 DUP7 ADD SWAP1 PUSH2 0x888 JUMP JUMPDEST PUSH1 0x40 DUP6 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x40 DUP7 ADD MSTORE PUSH2 0x560 JUMP JUMPDEST SWAP3 PUSH2 0xA7C PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x60 DUP6 ADD MSTORE JUMP JUMPDEST ADD MLOAD SWAP1 PUSH1 0x80 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x9F9 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH2 0x345 SWAP3 SWAP2 ADD SWAP1 PUSH2 0xA37 JUMP JUMPDEST CALLVALUE PUSH2 0x237 JUMPI PUSH2 0x2EF PUSH2 0xAB8 PUSH2 0xAB3 CALLDATASIZE PUSH1 0x4 PUSH2 0x367 JUMP JUMPDEST PUSH2 0x2AA5 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0xA8C JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP2 ADD SWAP3 SWAP2 PUSH2 0x2BE SWAP2 PUSH1 0x20 ADD MSTORE JUMP JUMPDEST ADD MSTORE JUMP JUMPDEST CALLVALUE PUSH2 0x237 JUMPI PUSH2 0xAF3 PUSH2 0xAEE CALLDATASIZE PUSH1 0x4 PUSH2 0x367 JUMP JUMPDEST PUSH2 0x2AC1 JUMP JUMPDEST SWAP1 PUSH2 0x2EF PUSH2 0xB00 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 SWAP3 DUP4 PUSH2 0xAC4 JUMP JUMPDEST PUSH2 0x345 PUSH1 0x0 PUSH1 0xE PUSH2 0x4C0 JUMP JUMPDEST CALLVALUE PUSH2 0x237 JUMPI PUSH2 0xB25 CALLDATASIZE PUSH1 0x4 PUSH2 0x4A0 JUMP JUMPDEST PUSH2 0x2EF PUSH2 0x531 PUSH2 0xB09 JUMP JUMPDEST CALLVALUE PUSH2 0x237 JUMPI PUSH2 0xB40 CALLDATASIZE PUSH1 0x4 PUSH2 0x4A0 JUMP JUMPDEST PUSH2 0x70E PUSH2 0x2AFA JUMP JUMPDEST PUSH2 0x345 PUSH1 0x0 PUSH1 0x12 PUSH2 0x76E JUMP JUMPDEST CALLVALUE PUSH2 0x237 JUMPI PUSH2 0xB64 CALLDATASIZE PUSH1 0x4 PUSH2 0x4A0 JUMP JUMPDEST PUSH2 0x2EF PUSH2 0x2DF PUSH2 0xB48 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD SWAP3 SWAP2 PUSH2 0x2BE SWAP2 SWAP1 PUSH2 0x888 JUMP JUMPDEST CALLVALUE PUSH2 0x237 JUMPI PUSH2 0xB8F CALLDATASIZE PUSH1 0x4 PUSH2 0x4A0 JUMP JUMPDEST PUSH2 0x2EF PUSH2 0xB9A PUSH2 0x2B02 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0xB6F JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x60 DUP3 DUP5 SUB SLT PUSH2 0x237 JUMPI PUSH2 0x345 PUSH2 0xBBF DUP5 DUP5 PUSH2 0x2FC JUMP JUMPDEST SWAP4 PUSH1 0x40 PUSH2 0x33E DUP3 PUSH1 0x20 DUP8 ADD PUSH2 0x2FC JUMP JUMPDEST CALLVALUE PUSH2 0x237 JUMPI PUSH2 0x70E PUSH2 0xBE2 CALLDATASIZE PUSH1 0x4 PUSH2 0xBA6 JUMP JUMPDEST SWAP2 PUSH2 0x2C38 JUMP JUMPDEST PUSH2 0x2F5 DUP2 PUSH2 0x4B4 JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x2BE DUP3 PUSH2 0xBE8 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0x237 JUMPI PUSH2 0x345 SWAP1 PUSH1 0x20 PUSH2 0x33E DUP3 DUP7 PUSH2 0xBF1 JUMP JUMPDEST CALLVALUE PUSH2 0x237 JUMPI PUSH2 0x2EF PUSH2 0x876 PUSH2 0xC30 CALLDATASIZE PUSH1 0x4 PUSH2 0xBFE JUMP JUMPDEST SWAP1 PUSH2 0x2D71 JUMP JUMPDEST PUSH2 0x345 PUSH1 0x0 PUSH1 0x11 PUSH2 0x76E JUMP JUMPDEST CALLVALUE PUSH2 0x237 JUMPI PUSH2 0xC52 CALLDATASIZE PUSH1 0x4 PUSH2 0x4A0 JUMP JUMPDEST PUSH2 0x2EF PUSH2 0x2DF PUSH2 0xC36 JUMP JUMPDEST CALLVALUE PUSH2 0x237 JUMPI PUSH2 0x2EF PUSH2 0x2DF PUSH2 0xC73 CALLDATASIZE PUSH1 0x4 PUSH2 0x367 JUMP JUMPDEST PUSH2 0x2D8C JUMP JUMPDEST CALLVALUE PUSH2 0x237 JUMPI PUSH2 0x2EF PUSH2 0x2DF PUSH2 0xC8E CALLDATASIZE PUSH1 0x4 PUSH2 0xBA6 JUMP JUMPDEST SWAP2 PUSH2 0x3250 JUMP JUMPDEST CALLVALUE PUSH2 0x237 JUMPI PUSH2 0x70E PUSH2 0xCA7 CALLDATASIZE PUSH1 0x4 PUSH2 0x309 JUMP JUMPDEST SWAP3 SWAP2 SWAP1 SWAP2 PUSH2 0x3298 JUMP JUMPDEST PUSH2 0x345 PUSH1 0x2 PUSH1 0x14 PUSH2 0x844 JUMP JUMPDEST CALLVALUE PUSH2 0x237 JUMPI PUSH2 0xCCC CALLDATASIZE PUSH1 0x4 PUSH2 0x4A0 JUMP JUMPDEST PUSH2 0x2EF PUSH2 0x876 PUSH2 0xCB0 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x237 JUMPI PUSH2 0x345 SWAP2 PUSH2 0xBF1 JUMP JUMPDEST SWAP1 PUSH2 0xCFA PUSH2 0x8AA PUSH2 0x8A0 DUP5 MLOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0xD0B JUMPI POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 PUSH2 0xD21 PUSH2 0x8D8 PUSH1 0x1 SWAP3 DUP7 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 ADD PUSH2 0xCFE JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH2 0x345 SWAP3 SWAP2 ADD SWAP1 PUSH2 0xCEB JUMP JUMPDEST CALLVALUE PUSH2 0x237 JUMPI PUSH2 0x2EF PUSH2 0xD55 PUSH2 0xD50 CALLDATASIZE PUSH1 0x4 PUSH2 0xCD7 JUMP JUMPDEST PUSH2 0x32AD JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0xD29 JUMP JUMPDEST PUSH2 0x345 PUSH1 0x0 PUSH1 0x14 PUSH2 0x844 JUMP JUMPDEST CALLVALUE PUSH2 0x237 JUMPI PUSH2 0xD7D CALLDATASIZE PUSH1 0x4 PUSH2 0x4A0 JUMP JUMPDEST PUSH2 0x2EF PUSH2 0x876 PUSH2 0xD61 JUMP JUMPDEST CALLVALUE PUSH2 0x237 JUMPI PUSH2 0x70E PUSH2 0xD9B CALLDATASIZE PUSH1 0x4 PUSH2 0xCD7 JUMP JUMPDEST PUSH2 0x331B JUMP JUMPDEST PUSH2 0x345 PUSH1 0x0 PUSH1 0x13 PUSH2 0x76E JUMP JUMPDEST CALLVALUE PUSH2 0x237 JUMPI PUSH2 0xDBC CALLDATASIZE PUSH1 0x4 PUSH2 0x4A0 JUMP JUMPDEST PUSH2 0x2EF PUSH2 0x2DF PUSH2 0xDA0 JUMP JUMPDEST SWAP1 PUSH2 0x345 SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0xDD7 PUSH2 0x3324 JUMP JUMPDEST PUSH2 0x1265 JUMP JUMPDEST PUSH2 0x345 SWAP1 DUP2 JUMP JUMPDEST PUSH2 0x345 SWAP1 SLOAD PUSH2 0xDDC JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0xE12 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH2 0xDED JUMP JUMPDEST SWAP1 PUSH1 0x0 NOT SWAP1 JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST PUSH2 0x345 PUSH2 0x345 PUSH2 0x345 SWAP3 SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0xE44 PUSH2 0x345 PUSH2 0xE4B SWAP3 PUSH2 0xE27 JUMP JUMPDEST DUP3 SLOAD PUSH2 0xE17 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xE87 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0xE4F JUMP JUMPDEST SWAP1 PUSH2 0x2BE PUSH2 0xE99 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 PUSH2 0xE65 JUMP JUMPDEST PUSH2 0x345 PUSH1 0xE0 PUSH2 0xE8C JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xE87 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD SWAP1 JUMP JUMPDEST SWAP1 DUP3 PUSH1 0x0 SWAP4 SWAP3 DUP3 CALLDATACOPY ADD MSTORE JUMP JUMPDEST SWAP1 SWAP3 SWAP2 SWAP3 PUSH2 0xEE8 PUSH2 0xEE3 DUP3 PUSH2 0xEAA JUMP JUMPDEST PUSH2 0xE8C JUMP JUMPDEST SWAP4 DUP2 DUP6 MSTORE DUP2 DUP4 ADD GT PUSH2 0x237 JUMPI PUSH2 0x2BE SWAP2 PUSH1 0x20 DUP6 ADD SWAP1 PUSH2 0xEC7 JUMP JUMPDEST PUSH2 0x345 SWAP2 CALLDATASIZE SWAP2 PUSH2 0xED3 JUMP JUMPDEST SWAP1 PUSH2 0xF17 SWAP1 PUSH2 0xE27 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x2 DUP4 DIV SWAP3 AND DUP1 ISZERO PUSH2 0xF5B JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0xF56 JUMPI JUMP JUMPDEST PUSH2 0xF25 JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0xF4B JUMP JUMPDEST SWAP2 PUSH1 0x0 NOT PUSH1 0x8 SWAP3 SWAP1 SWAP3 MUL SWAP2 DUP3 SHL SWAP2 SHL PUSH2 0xE1D JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0xF8A PUSH2 0x345 PUSH2 0xE4B SWAP4 PUSH2 0xE27 JUMP JUMPDEST SWAP1 DUP4 SLOAD PUSH2 0xF65 JUMP JUMPDEST PUSH2 0x2BE SWAP2 PUSH1 0x0 SWAP2 PUSH2 0xF79 JUMP JUMPDEST DUP2 DUP2 LT PUSH2 0xFA9 JUMPI POP POP JUMP JUMPDEST DUP1 PUSH2 0xFB7 PUSH1 0x0 PUSH1 0x1 SWAP4 PUSH2 0xF92 JUMP JUMPDEST ADD PUSH2 0xF9E JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x1F DUP2 GT PUSH2 0xFCC JUMPI POP POP POP JUMP JUMPDEST PUSH2 0xFDE PUSH2 0x2BE SWAP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x1F DUP5 ADD DUP2 SWAP1 DIV DUP4 ADD SWAP4 LT PUSH2 0x1000 JUMPI JUMPDEST PUSH1 0x20 PUSH1 0x1F SWAP1 SWAP2 ADD DIV ADD SWAP1 PUSH2 0xF9E JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0xFF1 JUMP JUMPDEST SWAP1 PUSH2 0x1013 DUP2 MLOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0xE87 JUMPI PUSH2 0x1037 DUP3 PUSH2 0x1031 DUP6 SLOAD PUSH2 0xF3B JUMP JUMPDEST DUP6 PUSH2 0xFBD JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x1072 JUMPI PUSH2 0xE4B SWAP3 SWAP2 PUSH1 0x0 SWAP2 DUP4 PUSH2 0x1067 JUMPI JUMPDEST POP POP PUSH1 0x0 NOT PUSH1 0x8 DUP4 MUL SHR NOT AND SWAP1 PUSH1 0x2 MUL OR SWAP1 JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x1053 JUMP JUMPDEST PUSH1 0x1F NOT DUP4 AND SWAP2 PUSH2 0x1087 DUP6 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x10C5 JUMPI POP SWAP2 PUSH1 0x2 SWAP4 SWAP2 DUP6 PUSH1 0x1 SWAP7 SWAP5 LT PUSH2 0x10AC JUMPI JUMPDEST POP POP POP MUL ADD SWAP1 SSTORE JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0x8 PUSH1 0x1F DUP6 AND MUL SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x10A3 JUMP JUMPDEST SWAP2 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP8 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP3 ADD PUSH2 0x108B JUMP JUMPDEST SWAP1 PUSH2 0x2BE SWAP2 PUSH2 0x100A JUMP JUMPDEST SWAP1 PUSH1 0xFF SWAP1 PUSH2 0xE1D JUMP JUMPDEST SWAP1 PUSH2 0x1100 PUSH2 0x345 PUSH2 0xE4B SWAP3 ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x10E7 JUMP JUMPDEST PUSH1 0x6 PUSH2 0x11A0 PUSH1 0xC0 PUSH2 0x2BE SWAP5 PUSH2 0x1126 PUSH2 0x1120 PUSH1 0x0 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST DUP7 PUSH2 0xE34 JUMP JUMPDEST PUSH2 0x113D PUSH2 0x1134 PUSH1 0x20 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP8 ADD PUSH2 0x10DD JUMP JUMPDEST PUSH2 0x1154 PUSH2 0x114B PUSH1 0x40 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP8 ADD PUSH2 0x10DD JUMP JUMPDEST PUSH2 0x116B PUSH2 0x1162 PUSH1 0x60 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x3 DUP8 ADD PUSH2 0xE34 JUMP JUMPDEST PUSH2 0x1182 PUSH2 0x1179 PUSH1 0x80 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x4 DUP8 ADD PUSH2 0xE34 JUMP JUMPDEST PUSH2 0x119B PUSH2 0x1192 PUSH1 0xA0 DUP4 ADD MLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x5 DUP8 ADD PUSH2 0x10F0 JUMP JUMPDEST ADD MLOAD SWAP1 JUMP JUMPDEST SWAP2 ADD PUSH2 0xE34 JUMP JUMPDEST SWAP1 PUSH2 0x2BE SWAP2 PUSH2 0x1107 JUMP JUMPDEST SWAP1 SWAP2 PUSH2 0x594 SWAP1 DUP4 SWAP1 DUP1 SWAP4 PUSH2 0xEC7 JUMP JUMPDEST ADD SWAP2 PUSH2 0x11B1 JUMP JUMPDEST SWAP2 PUSH2 0x11B1 JUMP JUMPDEST SWAP1 PUSH2 0x11DA PUSH2 0xEE3 DUP4 PUSH2 0xEAA JUMP JUMPDEST SWAP2 DUP3 MSTORE JUMP JUMPDEST PUSH2 0x11E9 PUSH1 0x14 PUSH2 0x11CD JUMP JUMPDEST PUSH20 0x10D05391125110551157D49151D254D511549151 PUSH1 0x62 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x345 PUSH2 0x11DF JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x58A DUP2 PUSH2 0x1228 DUP2 PUSH2 0x594 SWAP6 PUSH1 0x20 SWAP2 DUP2 MSTORE ADD SWAP1 JUMP JUMPDEST DUP1 SWAP6 PUSH2 0xEC7 JUMP JUMPDEST SWAP6 SWAP5 SWAP3 PUSH2 0x2BE SWAP5 PUSH2 0x1252 PUSH2 0x1260 SWAP4 PUSH1 0x40 SWAP6 PUSH1 0x60 DUP12 ADD SWAP2 DUP12 DUP4 SUB PUSH1 0x0 DUP14 ADD MSTORE PUSH2 0x1211 JUMP JUMPDEST SWAP2 DUP9 DUP4 SUB PUSH1 0x20 DUP11 ADD MSTORE PUSH2 0x1211 JUMP JUMPDEST SWAP5 ADD MSTORE JUMP JUMPDEST POP SWAP3 SWAP2 PUSH32 0xD97EAF93AD8386D19C4444905F34D814EFFA6ED87627BBBAA1E75E797F5B65D5 SWAP2 PUSH2 0x1391 PUSH2 0x1297 PUSH1 0x9 PUSH2 0xDE3 JUMP JUMPDEST SWAP6 PUSH2 0x12AB PUSH2 0x12A4 DUP9 PUSH2 0xE03 JUMP JUMPDEST PUSH1 0x9 PUSH2 0xE34 JUMP JUMPDEST PUSH2 0x1327 PUSH2 0x12B6 PUSH2 0xEA0 JUMP JUMPDEST PUSH2 0x12BE DUP10 DUP3 MSTORE JUMP JUMPDEST PUSH2 0x12D2 PUSH2 0x12CB DUP7 DUP6 PUSH2 0xF02 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH2 0x12E6 PUSH2 0x12DF DUP10 DUP9 PUSH2 0xF02 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE JUMP JUMPDEST PUSH2 0x1305 PUSH2 0x12F3 PUSH1 0x0 PUSH2 0xE27 JUMP JUMPDEST PUSH2 0x12FE DUP2 PUSH1 0x60 DUP6 ADD MSTORE JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 DUP3 ADD MSTORE PUSH2 0x1317 TIMESTAMP PUSH1 0xC0 DUP4 ADD MSTORE JUMP JUMPDEST PUSH2 0x1322 DUP10 PUSH1 0x3 PUSH2 0xF0D JUMP JUMPDEST PUSH2 0x11A7 JUMP JUMPDEST PUSH2 0x1373 PUSH2 0x1333 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1366 DUP2 DUP11 PUSH2 0x135A DUP12 DUP11 DUP11 DUP10 PUSH1 0x20 DUP8 ADD SWAP6 DUP7 SWAP3 PUSH1 0x20 DUP5 PUSH2 0x11C0 PUSH2 0x345 SWAP9 SWAP7 PUSH2 0x11C7 SWAP7 SWAP6 SWAP1 MSTORE JUMP JUMPDEST SWAP1 DUP2 SUB DUP3 MSTORE SUB DUP3 PUSH2 0xE65 JUMP JUMPDEST PUSH2 0x136E PUSH2 0x1209 JUMP JUMPDEST PUSH2 0x3502 JUMP JUMPDEST PUSH2 0x137C DUP8 PUSH2 0xE27 JUMP JUMPDEST SWAP6 PUSH2 0x1386 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP5 DUP6 SWAP5 TIMESTAMP SWAP4 DUP7 PUSH2 0x122F JUMP JUMPDEST SUB SWAP1 LOG2 SWAP1 JUMP JUMPDEST PUSH2 0x345 SWAP4 SWAP3 SWAP2 SWAP1 PUSH1 0x0 PUSH2 0xDC7 JUMP JUMPDEST PUSH2 0x345 SWAP1 PUSH2 0x83E JUMP JUMPDEST PUSH2 0x345 SWAP1 SLOAD PUSH2 0x13A5 JUMP JUMPDEST ISZERO PUSH2 0x13BF JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x53657373696F6E206E6F7420616374697665 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE DUP1 PUSH1 0x64 DUP2 ADD JUMPDEST SUB SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x345 SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0x1424 PUSH2 0x141F PUSH1 0x4 PUSH2 0x1419 DUP6 PUSH1 0x5 PUSH2 0xF0D JUMP JUMPDEST ADD PUSH2 0x13AE JUMP JUMPDEST PUSH2 0x13B8 JUMP JUMPDEST PUSH2 0x1469 JUMP JUMPDEST ISZERO PUSH2 0x1430 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x496E76616C69642063616E646964617465 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x345 SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0x1489 PUSH2 0x1484 PUSH1 0x5 PUSH2 0x1419 DUP7 PUSH1 0x3 PUSH2 0xF0D JUMP JUMPDEST PUSH2 0x1429 JUMP JUMPDEST PUSH2 0x14D1 JUMP JUMPDEST ISZERO PUSH2 0x1495 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x24B73B30B634B2103B37BA34B733903837BBB2B9 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x345 SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0x14E6 PUSH2 0x345 PUSH1 0x10 PUSH2 0xDE3 JUMP JUMPDEST DUP6 LT ISZERO DUP1 PUSH2 0x14FD JUMPI JUMPDEST PUSH2 0x14F8 SWAP1 PUSH2 0x148E JUMP JUMPDEST PUSH2 0x18F7 JUMP JUMPDEST POP PUSH2 0x14F8 PUSH2 0x150E PUSH2 0x345 PUSH1 0x11 PUSH2 0xDE3 JUMP JUMPDEST DUP7 GT ISZERO SWAP1 POP PUSH2 0x14EF JUMP JUMPDEST SWAP1 PUSH2 0xF17 SWAP1 PUSH2 0x4F4 JUMP JUMPDEST ISZERO PUSH2 0x1529 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416C726561647920766F74656420696E20746869732073657373696F6E000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1575 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x159BDD1A5B99C81C195C9A5BD908195B991959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xE87 JUMPI PUSH1 0x20 DUP1 SWAP2 MUL ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x11DA PUSH2 0xEE3 DUP4 PUSH2 0x15B0 JUMP JUMPDEST CALLDATASIZE SWAP1 CALLDATACOPY JUMP JUMPDEST SWAP1 PUSH2 0x2BE PUSH2 0x15F0 PUSH2 0x15EA DUP5 PUSH2 0x15C8 JUMP JUMPDEST SWAP4 PUSH2 0x15B0 JUMP JUMPDEST PUSH1 0x1F NOT ADD PUSH1 0x20 DUP5 ADD PUSH2 0x15D5 JUMP JUMPDEST PUSH2 0x345 PUSH2 0x140 PUSH2 0xE8C JUMP JUMPDEST SWAP1 PUSH2 0x2BA SWAP1 PUSH2 0x4B4 JUMP JUMPDEST SWAP1 PUSH2 0x2BA SWAP1 PUSH2 0x3A0 JUMP JUMPDEST PUSH2 0x345 SWAP1 MLOAD PUSH2 0x4B4 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH2 0xE1D JUMP JUMPDEST SWAP1 PUSH2 0x1645 PUSH2 0x345 PUSH2 0xE4B SWAP3 PUSH2 0x4F4 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x1626 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 DUP3 DUP3 LT PUSH2 0x165B JUMPI POP POP POP JUMP JUMPDEST PUSH2 0x2BE SWAP3 SWAP2 PUSH2 0x1671 SWAP1 JUMPDEST SWAP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0xF9E JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x40 SHL DUP2 GT PUSH2 0xE87 JUMPI DUP2 PUSH2 0x1693 PUSH2 0x2BE SWAP4 SLOAD SWAP1 JUMP JUMPDEST SWAP1 DUP3 DUP2 SSTORE PUSH2 0x164C JUMP JUMPDEST DUP2 MLOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0xE87 JUMPI PUSH2 0x16D3 PUSH2 0x16C7 PUSH1 0x1 SWAP3 PUSH2 0x16C1 DUP7 DUP7 PUSH2 0x167B JUMP JUMPDEST PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP3 DIV SWAP2 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x16E6 JUMPI POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SWAP1 PUSH1 0x20 PUSH2 0x16F6 PUSH2 0x345 DUP7 MLOAD SWAP1 JUMP JUMPDEST SWAP5 ADD SWAP4 DUP2 DUP5 ADD SSTORE ADD PUSH2 0x16D9 JUMP JUMPDEST SWAP1 PUSH2 0x2BE SWAP2 PUSH2 0x169C JUMP JUMPDEST SWAP1 PUSH2 0xE44 PUSH2 0x345 PUSH2 0xE4B SWAP3 SWAP1 JUMP JUMPDEST PUSH2 0x345 SWAP1 MLOAD PUSH2 0x3A0 JUMP JUMPDEST SWAP1 PUSH2 0xFF00 SWAP1 PUSH1 0x8 SHL PUSH2 0xE1D JUMP JUMPDEST SWAP1 PUSH2 0x1742 PUSH2 0x345 PUSH2 0xE4B SWAP3 PUSH2 0x3AA JUMP JUMPDEST DUP3 SLOAD PUSH2 0x1725 JUMP JUMPDEST SWAP1 PUSH2 0x182B PUSH2 0x120 PUSH1 0x8 PUSH2 0x2BE SWAP5 PUSH2 0x176B PUSH2 0x1765 PUSH1 0x0 DUP8 ADD PUSH2 0x161C JUMP JUMPDEST DUP3 PUSH2 0x1635 JUMP JUMPDEST PUSH2 0x1782 PUSH2 0x1779 PUSH1 0x20 DUP8 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP4 ADD PUSH2 0xE34 JUMP JUMPDEST PUSH2 0x1799 PUSH2 0x1790 PUSH1 0x40 DUP8 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP4 ADD PUSH2 0x1703 JUMP JUMPDEST PUSH2 0x17B0 PUSH2 0x17A7 PUSH1 0x60 DUP8 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x3 DUP4 ADD PUSH2 0x170D JUMP JUMPDEST PUSH2 0x17C7 PUSH2 0x17BE PUSH1 0x80 DUP8 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x4 DUP4 ADD PUSH2 0x170D JUMP JUMPDEST PUSH2 0x17DE PUSH2 0x17D5 PUSH1 0xA0 DUP8 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x5 DUP4 ADD PUSH2 0x170D JUMP JUMPDEST PUSH2 0x17F5 PUSH2 0x17EC PUSH1 0xC0 DUP8 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x6 DUP4 ADD PUSH2 0xE34 JUMP JUMPDEST PUSH2 0x180C PUSH2 0x1803 PUSH1 0xE0 DUP8 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x7 DUP4 ADD PUSH2 0xE34 JUMP JUMPDEST ADD SWAP3 PUSH2 0x1825 PUSH2 0x181F PUSH2 0x100 DUP4 ADD MLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP6 PUSH2 0x10F0 JUMP JUMPDEST ADD PUSH2 0x171B JUMP JUMPDEST SWAP1 PUSH2 0x1732 JUMP JUMPDEST SWAP1 PUSH2 0x2BE SWAP2 PUSH2 0x1749 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x1874 JUMPI PUSH2 0x186B PUSH1 0x1 SWAP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP2 MUL ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x183B JUMP JUMPDEST SWAP1 DUP2 SLOAD SWAP2 PUSH1 0x1 PUSH1 0x40 SHL DUP4 LT ISZERO PUSH2 0xE87 JUMPI DUP3 PUSH2 0x189C SWAP2 PUSH1 0x1 PUSH2 0x2BE SWAP6 ADD DUP2 SSTORE PUSH2 0x1851 JUMP JUMPDEST SWAP1 PUSH2 0xF79 JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0xE12 JUMPI JUMP JUMPDEST ADD SWAP2 DUP3 MSTORE JUMP JUMPDEST PUSH2 0x18BF PUSH1 0x9 PUSH2 0x11CD JUMP JUMPDEST PUSH9 0x1593D51157D0D054D5 PUSH1 0xBA SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x345 PUSH2 0x18B5 JUMP JUMPDEST SWAP2 PUSH1 0x20 PUSH2 0x2BE SWAP3 SWAP5 SWAP4 PUSH2 0xAD7 PUSH1 0x40 DUP3 ADD SWAP7 PUSH1 0x0 DUP4 ADD SWAP1 PUSH2 0x3B3 JUMP JUMPDEST POP PUSH1 0x6 SWAP4 DUP2 PUSH2 0x1906 CALLER DUP8 PUSH2 0x1518 JUMP JUMPDEST SWAP1 PUSH2 0x1910 SWAP2 PUSH2 0xF0D JUMP JUMPDEST PUSH2 0x1919 SWAP1 PUSH2 0x13AE JUMP JUMPDEST ISZERO PUSH2 0x1923 SWAP1 PUSH2 0x1522 JUMP JUMPDEST PUSH1 0x5 SWAP5 PUSH2 0x1930 DUP4 DUP8 PUSH2 0xF0D JUMP JUMPDEST PUSH1 0x2 ADD PUSH2 0x193C SWAP1 PUSH2 0xDE3 JUMP JUMPDEST TIMESTAMP GT ISZERO PUSH2 0x1948 SWAP1 PUSH2 0x156E JUMP JUMPDEST PUSH2 0x1952 PUSH1 0xA PUSH2 0xDE3 JUMP JUMPDEST SWAP6 PUSH2 0x195C DUP8 PUSH2 0xE03 JUMP JUMPDEST PUSH2 0x1967 SWAP1 PUSH1 0xA PUSH2 0xE34 JUMP JUMPDEST PUSH1 0x0 SWAP6 PUSH2 0x1973 DUP8 PUSH2 0xE27 JUMP JUMPDEST PUSH2 0x197C SWAP1 PUSH2 0x15DA JUMP JUMPDEST SWAP1 PUSH2 0x1986 DUP9 PUSH2 0xE27 JUMP JUMPDEST SWAP1 PUSH2 0x198F PUSH2 0x15FD JUMP JUMPDEST SWAP3 PUSH2 0x199C CALLER DUP12 DUP7 ADD PUSH2 0x1608 JUMP JUMPDEST PUSH2 0x19A7 DUP10 PUSH1 0x20 DUP7 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x19BC DUP2 PUSH1 0x80 DUP5 ADD MSTORE JUMP JUMPDEST PUSH1 0xA0 DUP3 ADD MSTORE PUSH2 0x19CC DUP5 PUSH1 0xC0 DUP4 ADD MSTORE JUMP JUMPDEST PUSH2 0x19D7 TIMESTAMP PUSH1 0xE0 DUP4 ADD MSTORE JUMP JUMPDEST DUP7 ISZERO ISZERO PUSH2 0x100 DUP3 ADD MSTORE PUSH2 0x19EE DUP8 PUSH2 0x120 DUP4 ADD PUSH2 0x1612 JUMP JUMPDEST PUSH2 0x19F9 DUP9 PUSH1 0x4 PUSH2 0xF0D JUMP JUMPDEST SWAP1 PUSH2 0x1A03 SWAP2 PUSH2 0x1831 JUMP JUMPDEST DUP4 PUSH2 0x1A0E CALLER DUP5 PUSH2 0x1518 JUMP JUMPDEST SWAP1 PUSH2 0x1A18 SWAP2 PUSH2 0xF0D JUMP JUMPDEST PUSH1 0x1 PUSH2 0x1A23 SWAP2 PUSH2 0x10F0 JUMP JUMPDEST DUP7 PUSH2 0x1A2F CALLER PUSH1 0x7 PUSH2 0x1518 JUMP JUMPDEST SWAP1 PUSH2 0x1A39 SWAP2 PUSH2 0x1879 JUMP JUMPDEST DUP4 DUP2 PUSH2 0x1A45 DUP3 DUP3 PUSH2 0xF0D JUMP JUMPDEST ADD PUSH2 0x1A4F DUP2 PUSH2 0xDE3 JUMP JUMPDEST PUSH2 0x1A58 SWAP1 PUSH2 0xE03 JUMP JUMPDEST PUSH2 0x1A61 SWAP2 PUSH2 0xE34 JUMP JUMPDEST PUSH2 0x1A6A SWAP2 PUSH2 0xF0D JUMP JUMPDEST ADD DUP2 PUSH2 0x1A75 DUP3 PUSH2 0xDE3 JUMP JUMPDEST SWAP1 PUSH2 0x1A7F SWAP2 PUSH2 0x18A2 JUMP JUMPDEST PUSH2 0x1A88 SWAP2 PUSH2 0xE34 JUMP JUMPDEST DUP3 PUSH2 0x1A92 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 SWAP3 PUSH1 0x20 DUP5 ADD SWAP3 PUSH2 0x1ABB SWAP3 DUP10 DUP6 SWAP3 PUSH2 0x18AF PUSH1 0x20 PUSH2 0x594 SWAP5 PUSH2 0x18AF DUP3 DUP9 PUSH2 0x18AF DUP3 SWAP12 SWAP11 DUP4 SWAP10 SWAP1 MSTORE JUMP JUMPDEST SWAP1 DUP2 SUB DUP3 MSTORE SUB PUSH2 0x1ACB SWAP1 DUP3 PUSH2 0xE65 JUMP JUMPDEST PUSH2 0x1AD3 PUSH2 0x18D4 JUMP JUMPDEST SWAP1 PUSH2 0x1ADD SWAP2 PUSH2 0x3502 JUMP JUMPDEST PUSH2 0x1AE6 CALLER PUSH2 0x4F4 JUMP JUMPDEST SWAP1 PUSH2 0x1AF0 SWAP1 PUSH2 0xE27 JUMP JUMPDEST SWAP2 PUSH2 0x1AFA PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST DUP1 SWAP2 TIMESTAMP PUSH2 0x1B07 SWAP2 DUP4 PUSH2 0x18DC JUMP JUMPDEST SUB PUSH32 0x2C9DEB38F462962EADBD85A9D3A4120503EE091F1582EAAA10AA8C6797651D29 SWAP2 LOG3 SWAP1 JUMP JUMPDEST PUSH2 0x345 SWAP4 SWAP3 SWAP2 SWAP1 PUSH1 0x0 PUSH2 0x13FE JUMP JUMPDEST PUSH2 0x1B44 PUSH2 0x15FD JUMP JUMPDEST SWAP1 PUSH1 0x0 DUP3 MSTORE PUSH1 0x20 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP12 ADD PUSH1 0x0 DUP2 MSTORE ADD PUSH1 0x0 JUMPDEST DUP2 MSTORE ADD PUSH1 0x0 DUP2 MSTORE ADD PUSH1 0x0 DUP2 MSTORE ADD PUSH1 0x0 JUMPDEST DUP2 MSTORE ADD PUSH1 0x0 DUP2 MSTORE ADD PUSH1 0x0 DUP2 MSTORE ADD PUSH1 0x0 DUP2 MSTORE ADD PUSH1 0x0 SWAP1 MSTORE POP JUMP JUMPDEST PUSH2 0x345 PUSH2 0x1B3C JUMP JUMPDEST PUSH2 0x345 SWAP1 PUSH1 0x8 SHR PUSH2 0x83E JUMP JUMPDEST PUSH2 0x345 SWAP1 SLOAD PUSH2 0x1B8F JUMP JUMPDEST SWAP1 PUSH2 0x2BE PUSH2 0x1C84 PUSH1 0x8 PUSH2 0x1BB6 PUSH2 0x15FD JUMP JUMPDEST SWAP5 PUSH2 0x1BC7 PUSH2 0x1BC3 DUP3 PUSH2 0xDE3 JUMP JUMPDEST DUP8 MSTORE JUMP JUMPDEST PUSH2 0x1BDD PUSH2 0x1BD6 PUSH1 0x1 DUP4 ADD PUSH2 0xDE3 JUMP JUMPDEST PUSH1 0x20 DUP9 ADD MSTORE JUMP JUMPDEST PUSH2 0x1BF3 PUSH2 0x1BEC PUSH1 0x2 DUP4 ADD PUSH2 0xDE3 JUMP JUMPDEST PUSH1 0x40 DUP9 ADD MSTORE JUMP JUMPDEST PUSH2 0x1C09 PUSH2 0x1C02 PUSH1 0x3 DUP4 ADD PUSH2 0xDE3 JUMP JUMPDEST PUSH1 0x60 DUP9 ADD MSTORE JUMP JUMPDEST PUSH2 0x1C21 PUSH2 0x1C18 PUSH1 0x4 DUP4 ADD PUSH2 0x13AE JUMP JUMPDEST ISZERO ISZERO PUSH1 0x80 DUP9 ADD MSTORE JUMP JUMPDEST PUSH2 0x1C39 PUSH2 0x1C30 PUSH1 0x4 DUP4 ADD PUSH2 0x1B9B JUMP JUMPDEST ISZERO ISZERO PUSH1 0xA0 DUP9 ADD MSTORE JUMP JUMPDEST PUSH2 0x1C4F PUSH2 0x1C48 PUSH1 0x5 DUP4 ADD PUSH2 0xDE3 JUMP JUMPDEST PUSH1 0xC0 DUP9 ADD MSTORE JUMP JUMPDEST PUSH2 0x1C65 PUSH2 0x1C5E PUSH1 0x6 DUP4 ADD PUSH2 0xDE3 JUMP JUMPDEST PUSH1 0xE0 DUP9 ADD MSTORE JUMP JUMPDEST PUSH2 0x1C7E PUSH2 0x1C74 PUSH1 0x7 DUP4 ADD PUSH2 0x13AE JUMP JUMPDEST PUSH2 0x100 DUP9 ADD PUSH2 0x1612 JUMP JUMPDEST ADD PUSH2 0xDE3 JUMP JUMPDEST PUSH2 0x120 DUP5 ADD MSTORE JUMP JUMPDEST PUSH2 0x345 SWAP1 PUSH2 0x1BA5 JUMP JUMPDEST PUSH2 0x1CAC PUSH2 0x345 SWAP2 PUSH2 0x1CA4 PUSH2 0x1B87 JUMP JUMPDEST POP PUSH1 0x5 PUSH2 0xF0D JUMP JUMPDEST PUSH2 0x1C8C JUMP JUMPDEST SWAP1 PUSH2 0x345 SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0x1CCC PUSH2 0x141F PUSH1 0x4 PUSH2 0x1419 DUP6 PUSH1 0x5 PUSH2 0xF0D JUMP JUMPDEST SWAP1 PUSH2 0x345 SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0x1CE7 PUSH2 0x1484 PUSH1 0x5 PUSH2 0x1419 DUP7 PUSH1 0x3 PUSH2 0xF0D JUMP JUMPDEST SWAP1 PUSH2 0x345 SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0x1CFC PUSH2 0x345 PUSH1 0x10 PUSH2 0xDE3 JUMP JUMPDEST DUP6 LT ISZERO DUP1 PUSH2 0x1D13 JUMPI JUMPDEST PUSH2 0x1D0E SWAP1 PUSH2 0x148E JUMP JUMPDEST PUSH2 0x1D99 JUMP JUMPDEST POP PUSH2 0x1D0E PUSH2 0x1D24 PUSH2 0x345 PUSH1 0x11 PUSH2 0xDE3 JUMP JUMPDEST DUP7 GT ISZERO SWAP1 POP PUSH2 0x1D05 JUMP JUMPDEST ISZERO PUSH2 0x1D35 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x1692CB5C1C9BDBD99CC8191A5CD8589B1959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x1D79 PUSH1 0xC PUSH2 0x11CD JUMP JUMPDEST PUSH12 0x1692D7D593D51157D0D054D5 PUSH1 0xA2 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x345 PUSH2 0x1D6F JUMP JUMPDEST PUSH2 0x1F54 SWAP3 SWAP4 PUSH2 0x135A SWAP3 PUSH2 0x1F23 PUSH2 0x1DD8 SWAP8 PUSH2 0x1F4C SWAP5 POP PUSH2 0x1DC0 PUSH2 0x1DBB PUSH1 0x14 PUSH2 0x13AE JUMP JUMPDEST PUSH2 0x1D2E JUMP JUMPDEST PUSH2 0x1DEB PUSH2 0x1DE6 PUSH2 0x1DE2 PUSH2 0x1DDD DUP7 PUSH1 0x6 SWAP14 DUP15 CALLER SWAP1 PUSH2 0x1518 JUMP JUMPDEST PUSH2 0xF0D JUMP JUMPDEST PUSH2 0x13AE JUMP JUMPDEST ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x1522 JUMP JUMPDEST PUSH2 0x1F0D PUSH2 0x1DF8 PUSH1 0xA PUSH2 0xDE3 JUMP JUMPDEST SWAP10 PUSH2 0x1E0C PUSH2 0x1E05 DUP13 PUSH2 0xE03 JUMP JUMPDEST PUSH1 0xA PUSH2 0xE34 JUMP JUMPDEST PUSH2 0x1EB8 DUP11 PUSH2 0x1E99 PUSH1 0x0 PUSH2 0x1E79 PUSH2 0x1E29 PUSH2 0x1E24 DUP4 PUSH2 0xE27 JUMP JUMPDEST PUSH2 0x15DA JUMP JUMPDEST PUSH2 0x1E5C PUSH2 0x1E35 DUP5 PUSH2 0xE27 JUMP JUMPDEST SWAP2 PUSH2 0x1E55 PUSH2 0x1E41 PUSH2 0x15FD JUMP JUMPDEST SWAP8 PUSH2 0x1E4E CALLER DUP9 DUP12 ADD PUSH2 0x1608 JUMP JUMPDEST PUSH1 0x20 DUP10 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 DUP8 ADD MSTORE JUMP JUMPDEST PUSH2 0x1E67 DUP2 PUSH1 0x60 DUP8 ADD MSTORE JUMP JUMPDEST PUSH2 0x1E72 DUP13 PUSH1 0x80 DUP8 ADD MSTORE JUMP JUMPDEST PUSH1 0xA0 DUP6 ADD MSTORE JUMP JUMPDEST PUSH2 0x1E84 DUP8 PUSH1 0xC0 DUP6 ADD MSTORE JUMP JUMPDEST PUSH2 0x1E8F TIMESTAMP PUSH1 0xE0 DUP6 ADD MSTORE JUMP JUMPDEST ISZERO ISZERO PUSH2 0x100 DUP4 ADD MSTORE JUMP JUMPDEST PUSH2 0x1EA8 PUSH1 0x3 PUSH2 0x120 DUP4 ADD PUSH2 0x1612 JUMP JUMPDEST PUSH2 0x1EB3 DUP14 PUSH1 0x4 PUSH2 0xF0D JUMP JUMPDEST PUSH2 0x1831 JUMP JUMPDEST PUSH2 0x1ED0 PUSH1 0x1 PUSH2 0x1ECB DUP8 PUSH2 0x1DD8 CALLER DUP7 PUSH2 0x1518 JUMP JUMPDEST PUSH2 0x10F0 JUMP JUMPDEST PUSH2 0x1EE7 DUP12 PUSH2 0x1EE2 PUSH2 0x345 CALLER PUSH1 0x7 PUSH2 0x1518 JUMP JUMPDEST PUSH2 0x1879 JUMP JUMPDEST PUSH2 0x1F13 DUP6 PUSH1 0x5 PUSH2 0x1DD8 DUP2 PUSH2 0x1EFB DUP5 DUP3 PUSH2 0xF0D JUMP JUMPDEST ADD PUSH2 0x1F0D PUSH2 0x1F08 DUP3 PUSH2 0xDE3 JUMP JUMPDEST PUSH2 0xE03 JUMP JUMPDEST SWAP1 PUSH2 0xE34 JUMP JUMPDEST ADD SWAP2 PUSH2 0x1F1E DUP4 PUSH2 0xDE3 JUMP JUMPDEST PUSH2 0x18A2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP3 DUP8 PUSH1 0x20 DUP6 ADD SWAP4 DUP11 DUP6 SWAP3 PUSH2 0x18AF PUSH1 0x20 PUSH2 0x594 SWAP5 PUSH2 0x18AF DUP3 DUP9 PUSH2 0x18AF DUP3 SWAP12 SWAP11 DUP4 SWAP10 SWAP1 MSTORE JUMP JUMPDEST PUSH2 0x136E PUSH2 0x1D91 JUMP JUMPDEST PUSH2 0x1F66 PUSH2 0x1F60 CALLER PUSH2 0x4F4 JUMP JUMPDEST SWAP2 PUSH2 0xE27 JUMP JUMPDEST SWAP1 PUSH32 0x2C9DEB38F462962EADBD85A9D3A4120503EE091F1582EAAA10AA8C6797651D29 PUSH2 0x1F91 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST DUP1 PUSH2 0x1F9E TIMESTAMP PUSH1 0x3 DUP4 PUSH2 0x18DC JUMP JUMPDEST SUB SWAP1 LOG3 SWAP1 JUMP JUMPDEST PUSH2 0x345 SWAP4 SWAP3 SWAP2 SWAP1 PUSH1 0x0 PUSH2 0x1CB1 JUMP JUMPDEST PUSH2 0x1FBA PUSH2 0xEA0 JUMP JUMPDEST SWAP1 PUSH1 0x0 DUP3 MSTORE PUSH1 0x20 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP9 ADD PUSH1 0x60 DUP2 MSTORE ADD PUSH1 0x60 PUSH2 0x1B6E JUMP JUMPDEST PUSH2 0x345 PUSH2 0x1FB2 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x1FEC JUMPI POP POP POP JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH2 0x1FF7 PUSH2 0x1FD5 JUMP JUMPDEST DUP2 DUP5 ADD MSTORE ADD PUSH2 0x1FE0 JUMP JUMPDEST SWAP1 PUSH2 0x2BE PUSH2 0x2011 PUSH2 0x15EA DUP5 PUSH2 0x15C8 JUMP JUMPDEST PUSH1 0x1F NOT ADD PUSH1 0x20 DUP5 ADD PUSH2 0x1FDD JUMP JUMPDEST SWAP1 PUSH2 0x2027 DUP3 MLOAD SWAP1 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x1874 JUMPI PUSH1 0x20 DUP1 SWAP2 MUL ADD ADD SWAP1 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x0 SWAP4 SWAP3 SWAP2 PUSH2 0x2055 PUSH2 0x204B DUP4 PUSH2 0xF3B JUMP JUMPDEST DUP1 DUP6 MSTORE SWAP4 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x20A7 JUMPI POP PUSH1 0x1 EQ PUSH2 0x206E JUMPI POP POP POP JUMP JUMPDEST PUSH2 0x2081 SWAP2 SWAP3 SWAP4 SWAP5 POP PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x0 SWAP3 JUMPDEST DUP2 DUP5 LT PUSH2 0x2093 JUMPI POP POP ADD SWAP1 JUMP JUMPDEST DUP1 SLOAD DUP5 DUP5 ADD MSTORE PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x2086 JUMP JUMPDEST SWAP3 SWAP5 SWAP6 POP POP POP PUSH1 0xFF NOT AND DUP3 MSTORE ISZERO ISZERO PUSH1 0x20 MUL ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x345 SWAP2 PUSH2 0x2038 JUMP JUMPDEST SWAP1 PUSH2 0x2BE PUSH2 0x20E0 SWAP3 PUSH2 0x20D7 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP4 DUP5 DUP1 SWAP3 PUSH2 0x20BC JUMP JUMPDEST SUB DUP4 PUSH2 0xE65 JUMP JUMPDEST SWAP1 PUSH2 0x2BE PUSH2 0x2157 PUSH1 0x6 PUSH2 0x20F8 PUSH2 0xEA0 JUMP JUMPDEST SWAP5 PUSH2 0x2105 PUSH2 0x1BC3 DUP3 PUSH2 0xDE3 JUMP JUMPDEST PUSH2 0x2114 PUSH2 0x1BD6 PUSH1 0x1 DUP4 ADD PUSH2 0x20C6 JUMP JUMPDEST PUSH2 0x2123 PUSH2 0x1BEC PUSH1 0x2 DUP4 ADD PUSH2 0x20C6 JUMP JUMPDEST PUSH2 0x2132 PUSH2 0x1C02 PUSH1 0x3 DUP4 ADD PUSH2 0xDE3 JUMP JUMPDEST PUSH2 0x2148 PUSH2 0x2141 PUSH1 0x4 DUP4 ADD PUSH2 0xDE3 JUMP JUMPDEST PUSH1 0x80 DUP9 ADD MSTORE JUMP JUMPDEST PUSH2 0x1C7E PUSH2 0x1C30 PUSH1 0x5 DUP4 ADD PUSH2 0x13AE JUMP JUMPDEST PUSH1 0xC0 DUP5 ADD MSTORE JUMP JUMPDEST PUSH2 0x345 SWAP1 PUSH2 0x20E7 JUMP JUMPDEST PUSH2 0x2179 PUSH2 0x2174 PUSH1 0x9 PUSH2 0xDE3 JUMP JUMPDEST PUSH2 0x2001 JUMP JUMPDEST PUSH2 0x2183 PUSH1 0x0 PUSH2 0xE27 JUMP JUMPDEST PUSH2 0x2190 PUSH2 0x345 PUSH1 0x9 PUSH2 0xDE3 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x21CF JUMPI DUP1 PUSH2 0x21AE PUSH2 0x21A9 PUSH2 0x21CA SWAP4 PUSH1 0x3 PUSH2 0xF0D JUMP JUMPDEST PUSH2 0x215E JUMP JUMPDEST PUSH2 0x21B8 DUP3 DUP6 PUSH2 0x201E JUMP JUMPDEST MSTORE PUSH2 0x21C3 DUP2 DUP5 PUSH2 0x201E JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH2 0x2183 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x2BE SWAP3 SWAP2 PUSH2 0x21E1 PUSH2 0x3324 JUMP JUMPDEST PUSH2 0x221B JUMP JUMPDEST SWAP1 PUSH2 0x1742 PUSH2 0x345 PUSH2 0xE4B SWAP3 ISZERO ISZERO SWAP1 JUMP JUMPDEST SWAP1 PUSH3 0xFF0000 SWAP1 PUSH1 0x10 SHL PUSH2 0xE1D JUMP JUMPDEST SWAP1 PUSH2 0x2214 PUSH2 0x345 PUSH2 0xE4B SWAP3 ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x21F6 JUMP JUMPDEST PUSH2 0x2BE SWAP3 SWAP2 PUSH2 0x222E PUSH2 0x2235 SWAP3 PUSH1 0x14 PUSH2 0x10F0 JUMP JUMPDEST PUSH1 0x14 PUSH2 0x21E6 JUMP JUMPDEST PUSH1 0x14 PUSH2 0x2204 JUMP JUMPDEST SWAP1 PUSH2 0x2BE SWAP3 SWAP2 PUSH2 0x21D3 JUMP JUMPDEST PUSH2 0x21A9 PUSH2 0x345 SWAP2 PUSH2 0x2256 PUSH2 0x1FD5 JUMP JUMPDEST POP PUSH1 0x3 PUSH2 0xF0D JUMP JUMPDEST PUSH2 0x2BE SWAP1 PUSH2 0x226A PUSH2 0x3324 JUMP JUMPDEST PUSH2 0x230E JUMP JUMPDEST ISZERO PUSH2 0x2276 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x14D95CDCDA5BDB881B9BDD08195B991959 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x345 SWAP1 PUSH2 0x4B4 JUMP JUMPDEST PUSH2 0x345 SWAP1 SLOAD PUSH2 0x22AF JUMP JUMPDEST PUSH2 0x22CE PUSH2 0x2BA SWAP2 PUSH2 0x4B4 JUMP JUMPDEST PUSH1 0x60 SHL SWAP1 JUMP JUMPDEST ADD DUP1 SWAP3 PUSH2 0x22C2 JUMP JUMPDEST PUSH2 0x22E6 PUSH1 0x14 PUSH2 0x11CD JUMP JUMPDEST PUSH20 0x1593D5125391D7D4D154D4D253D397D153911151 PUSH1 0x62 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x345 PUSH2 0x22DC JUMP JUMPDEST SWAP1 PUSH2 0x231D PUSH2 0x345 DUP4 PUSH1 0x5 PUSH2 0xF0D JUMP JUMPDEST SWAP1 PUSH1 0x4 DUP3 ADD SWAP1 PUSH2 0x232F PUSH2 0x141F DUP4 PUSH2 0x13AE JUMP JUMPDEST PUSH2 0x2349 PUSH2 0x2341 PUSH2 0x345 PUSH1 0x2 DUP7 ADD PUSH2 0xDE3 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x226F JUMP JUMPDEST PUSH2 0x2355 PUSH1 0x0 DUP1 SWAP4 PUSH2 0x10F0 JUMP JUMPDEST PUSH1 0x5 DUP4 ADD SWAP4 PUSH2 0x2366 PUSH2 0x1E24 DUP7 PUSH2 0xDE3 JUMP JUMPDEST SWAP5 PUSH2 0x2371 PUSH1 0x0 PUSH2 0xE27 JUMP JUMPDEST PUSH2 0x237D PUSH2 0x345 DUP4 PUSH2 0xDE3 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x240C JUMPI PUSH2 0x2407 SWAP1 PUSH2 0x2401 PUSH2 0x135A PUSH2 0x23E1 PUSH1 0x4 PUSH2 0x23B6 PUSH1 0x1 PUSH2 0x1C7E DUP8 PUSH2 0x23B0 DUP15 PUSH2 0x23AA DUP4 DUP9 PUSH2 0xF0D JUMP JUMPDEST ADD PUSH2 0x22B8 JUMP JUMPDEST SWAP5 PUSH2 0xF0D JUMP JUMPDEST SWAP1 PUSH2 0x23C0 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP4 DUP5 SWAP3 PUSH1 0x20 DUP5 ADD SWAP3 DUP9 DUP5 PUSH1 0x20 SWAP4 SWAP3 PUSH2 0x18AF DUP6 DUP4 PUSH2 0x22D4 PUSH1 0x14 SWAP6 PUSH2 0x594 SWAP8 SWAP1 MSTORE JUMP JUMPDEST PUSH2 0x23F3 PUSH2 0x23EC DUP3 MLOAD SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST KECCAK256 PUSH2 0x23FE DUP4 DUP12 PUSH2 0x201E JUMP JUMPDEST MSTORE JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH2 0x2371 JUMP JUMPDEST POP PUSH32 0x5EBF5BA0A9D6578537B09FB99EAC524839499181CE448F968B5C9CA6C1B82B47 SWAP4 POP PUSH2 0x24A7 SWAP1 PUSH2 0x24A2 PUSH2 0x135A PUSH2 0x249A PUSH2 0x24AD SWAP6 SWAP9 PUSH2 0x245B PUSH2 0x2452 PUSH2 0x24C2 SWAP10 SWAP13 PUSH2 0x3654 JUMP JUMPDEST PUSH1 0x8 DUP4 ADD PUSH2 0x170D JUMP JUMPDEST PUSH2 0x2470 PUSH1 0x6 PUSH2 0x2469 DUP8 PUSH2 0xDE3 JUMP JUMPDEST SWAP3 ADD PUSH2 0xDE3 JUMP JUMPDEST SWAP1 PUSH2 0x247A PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP4 DUP5 SWAP3 PUSH1 0x20 DUP5 ADD SWAP3 DUP14 DUP5 PUSH1 0x20 SWAP4 SWAP3 PUSH2 0x18AF DUP6 DUP4 PUSH2 0x18AF DUP3 SWAP6 PUSH2 0x594 SWAP8 SWAP1 MSTORE JUMP JUMPDEST PUSH2 0x136E PUSH2 0x2306 JUMP JUMPDEST PUSH2 0xDE3 JUMP JUMPDEST SWAP4 PUSH2 0xE27 JUMP JUMPDEST SWAP3 PUSH2 0x24B7 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP2 DUP3 SWAP2 TIMESTAMP SWAP1 DUP4 PUSH2 0xAC4 JUMP JUMPDEST SUB SWAP1 LOG2 JUMP JUMPDEST PUSH2 0x2BE SWAP1 PUSH2 0x225E JUMP JUMPDEST PUSH2 0x24D8 PUSH2 0x3324 JUMP JUMPDEST PUSH2 0x2BE PUSH2 0x2BE PUSH2 0x3812 JUMP JUMPDEST PUSH2 0x2BE PUSH2 0x24D0 JUMP JUMPDEST SWAP1 PUSH2 0x345 SWAP3 SWAP2 PUSH2 0x24F9 PUSH2 0x3324 JUMP JUMPDEST PUSH2 0x2654 JUMP JUMPDEST SWAP1 PUSH2 0x1100 PUSH2 0x345 PUSH2 0xE4B SWAP3 PUSH2 0x3AA JUMP JUMPDEST PUSH1 0x8 PUSH2 0x25D5 PUSH2 0x120 PUSH2 0x2BE SWAP5 PUSH2 0x2528 PUSH2 0x1120 PUSH1 0x0 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x253F PUSH2 0x2536 PUSH1 0x20 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP8 ADD PUSH2 0xE34 JUMP JUMPDEST PUSH2 0x2556 PUSH2 0x254D PUSH1 0x40 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP8 ADD PUSH2 0xE34 JUMP JUMPDEST PUSH2 0x2564 PUSH2 0x1162 PUSH1 0x60 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x258E PUSH1 0x4 DUP7 ADD PUSH2 0x2581 PUSH2 0x257B PUSH1 0x80 DUP6 ADD MLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP3 PUSH2 0x10F0 JUMP JUMPDEST PUSH1 0xA0 DUP4 ADD MLOAD ISZERO ISZERO SWAP1 PUSH2 0x21E6 JUMP JUMPDEST PUSH2 0x25A5 PUSH2 0x259C PUSH1 0xC0 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x5 DUP8 ADD PUSH2 0xE34 JUMP JUMPDEST PUSH2 0x25BC PUSH2 0x25B3 PUSH1 0xE0 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x6 DUP8 ADD PUSH2 0xE34 JUMP JUMPDEST PUSH2 0x119B PUSH2 0x25CC PUSH2 0x100 DUP4 ADD PUSH2 0x171B JUMP JUMPDEST PUSH1 0x7 DUP8 ADD PUSH2 0x24FE JUMP JUMPDEST SWAP2 ADD PUSH2 0x170D JUMP JUMPDEST SWAP1 PUSH2 0x2BE SWAP2 PUSH2 0x250E JUMP JUMPDEST PUSH2 0x25F2 PUSH2 0x2BA SWAP2 PUSH2 0x3AA JUMP JUMPDEST PUSH1 0xF8 SHL SWAP1 JUMP JUMPDEST ADD DUP1 SWAP3 PUSH2 0x25E6 JUMP JUMPDEST PUSH2 0x260A PUSH1 0x16 PUSH2 0x11CD JUMP JUMPDEST PUSH22 0x1593D5125391D7D4D154D4D253D397D0D49150551151 PUSH1 0x52 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x345 PUSH2 0x2600 JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH2 0xAD7 PUSH2 0x2BE SWAP5 SWAP7 SWAP6 SWAP4 SWAP7 PUSH2 0x12CB PUSH1 0x60 DUP5 ADD SWAP9 PUSH1 0x0 DUP6 ADD SWAP1 PUSH2 0x3B3 JUMP JUMPDEST POP SWAP1 PUSH31 0x914BB2A5E0AC4484C74B57EC82229700DA233D0EED407C4CFF3EB82AAC23BF PUSH2 0x2700 PUSH2 0x278C PUSH2 0x2686 PUSH1 0xB PUSH2 0xDE3 JUMP JUMPDEST SWAP5 PUSH2 0x269A PUSH2 0x2693 DUP8 PUSH2 0xE03 JUMP JUMPDEST PUSH1 0xB PUSH2 0xE34 JUMP JUMPDEST PUSH2 0x2743 DUP7 PUSH2 0x272D PUSH2 0x271B PUSH2 0x26AE DUP6 TIMESTAMP PUSH2 0x18A2 JUMP JUMPDEST PUSH2 0x2707 PUSH2 0x26CE PUSH2 0x26BE DUP9 TIMESTAMP PUSH2 0x18A2 JUMP JUMPDEST PUSH2 0x26C8 PUSH1 0x13 PUSH2 0xDE3 JUMP JUMPDEST SWAP1 PUSH2 0x18A2 JUMP JUMPDEST PUSH1 0x0 SWAP10 DUP11 SWAP4 PUSH2 0x26EE PUSH2 0x26DF DUP7 PUSH2 0xE27 JUMP JUMPDEST SWAP9 PUSH2 0x26E8 PUSH2 0x15FD JUMP JUMPDEST SWAP14 DUP15 ADD MSTORE JUMP JUMPDEST PUSH2 0x26F9 TIMESTAMP PUSH1 0x20 DUP15 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 DUP13 ADD MSTORE JUMP JUMPDEST PUSH1 0x60 DUP11 ADD MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x80 DUP10 ADD MSTORE DUP1 ISZERO ISZERO PUSH1 0xA0 DUP10 ADD MSTORE PUSH2 0xE27 JUMP JUMPDEST PUSH2 0x2726 DUP2 PUSH1 0xC0 DUP10 ADD MSTORE JUMP JUMPDEST PUSH1 0xE0 DUP8 ADD MSTORE JUMP JUMPDEST PUSH2 0x273B DUP8 PUSH2 0x100 DUP8 ADD PUSH2 0x1612 JUMP JUMPDEST PUSH2 0x120 DUP6 ADD MSTORE JUMP JUMPDEST PUSH2 0x2757 DUP4 PUSH2 0x2752 DUP9 PUSH1 0x5 PUSH2 0xF0D JUMP JUMPDEST PUSH2 0x25DC JUMP JUMPDEST PUSH2 0x2784 PUSH2 0x2763 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 ADD DUP10 DUP2 MSTORE SWAP2 SWAP4 DUP5 SWAP3 SWAP2 PUSH2 0x135A SWAP2 PUSH2 0x594 PUSH1 0x1 DUP13 PUSH2 0x18AF DUP6 DUP9 PUSH2 0x25F8 JUMP JUMPDEST PUSH2 0x136E PUSH2 0x262C JUMP JUMPDEST PUSH2 0x27A2 PUSH1 0x40 PUSH2 0x279C PUSH1 0x20 DUP5 ADD MLOAD SWAP1 JUMP JUMPDEST SWAP3 ADD MLOAD SWAP1 JUMP JUMPDEST SWAP3 PUSH2 0x1391 PUSH2 0x27AF DUP7 PUSH2 0xE27 JUMP JUMPDEST SWAP5 PUSH2 0x27B9 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP4 DUP5 SWAP4 DUP5 PUSH2 0x2634 JUMP JUMPDEST PUSH2 0x345 SWAP2 SWAP1 PUSH1 0x0 PUSH2 0x24EB JUMP JUMPDEST PUSH2 0x27D6 PUSH2 0x15FD JUMP JUMPDEST SWAP1 PUSH1 0x0 DUP3 MSTORE PUSH1 0x20 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP12 ADD PUSH1 0x0 DUP2 MSTORE ADD PUSH1 0x60 PUSH2 0x1B5E JUMP JUMPDEST PUSH2 0x345 PUSH2 0x27CE JUMP JUMPDEST SWAP1 PUSH2 0x280B PUSH2 0x16C7 PUSH2 0x8A0 DUP5 SLOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x281C JUMPI POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 PUSH2 0x2840 PUSH2 0x2839 PUSH1 0x1 SWAP3 PUSH2 0x2831 DUP8 PUSH2 0xDE3 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP5 PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 ADD PUSH2 0x280F JUMP JUMPDEST SWAP1 PUSH2 0x345 SWAP2 PUSH2 0x27FC JUMP JUMPDEST SWAP1 PUSH2 0x2BE PUSH2 0x20E0 SWAP3 PUSH2 0x2863 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP4 DUP5 DUP1 SWAP3 PUSH2 0x2848 JUMP JUMPDEST SWAP1 PUSH2 0x2BE PUSH2 0x291E PUSH1 0x8 PUSH2 0x287D PUSH2 0x15FD JUMP JUMPDEST SWAP5 PUSH2 0x2890 PUSH2 0x288A DUP3 PUSH2 0x22B8 JUMP JUMPDEST DUP8 PUSH2 0x1608 JUMP JUMPDEST PUSH2 0x289F PUSH2 0x1BD6 PUSH1 0x1 DUP4 ADD PUSH2 0xDE3 JUMP JUMPDEST PUSH2 0x28AE PUSH2 0x1BEC PUSH1 0x2 DUP4 ADD PUSH2 0x2852 JUMP JUMPDEST PUSH2 0x28BD PUSH2 0x1C02 PUSH1 0x3 DUP4 ADD PUSH2 0xDE3 JUMP JUMPDEST PUSH2 0x28CC PUSH2 0x2141 PUSH1 0x4 DUP4 ADD PUSH2 0xDE3 JUMP JUMPDEST PUSH2 0x28E2 PUSH2 0x28DB PUSH1 0x5 DUP4 ADD PUSH2 0xDE3 JUMP JUMPDEST PUSH1 0xA0 DUP9 ADD MSTORE JUMP JUMPDEST PUSH2 0x28F1 PUSH2 0x1C48 PUSH1 0x6 DUP4 ADD PUSH2 0xDE3 JUMP JUMPDEST PUSH2 0x2900 PUSH2 0x1C5E PUSH1 0x7 DUP4 ADD PUSH2 0xDE3 JUMP JUMPDEST PUSH2 0x2918 PUSH2 0x290E DUP4 DUP4 ADD PUSH2 0x13AE JUMP JUMPDEST ISZERO ISZERO PUSH2 0x100 DUP9 ADD MSTORE JUMP JUMPDEST ADD PUSH2 0x1B9B JUMP JUMPDEST PUSH2 0x120 DUP5 ADD PUSH2 0x1612 JUMP JUMPDEST PUSH2 0x345 SWAP1 PUSH2 0x286C JUMP JUMPDEST PUSH2 0x2948 PUSH2 0x345 SWAP2 PUSH2 0x2940 PUSH2 0x27F4 JUMP JUMPDEST POP PUSH1 0x4 PUSH2 0xF0D JUMP JUMPDEST PUSH2 0x2928 JUMP JUMPDEST PUSH2 0x345 PUSH1 0x2 PUSH2 0x13AE JUMP JUMPDEST PUSH2 0x295F PUSH2 0x3324 JUMP JUMPDEST PUSH2 0x2BE PUSH2 0x297D JUMP JUMPDEST PUSH2 0x4B4 PUSH2 0x345 PUSH2 0x345 SWAP3 SWAP1 JUMP JUMPDEST PUSH2 0x345 SWAP1 PUSH2 0x2967 JUMP JUMPDEST PUSH2 0x2BE PUSH2 0x298A PUSH1 0x0 PUSH2 0x2974 JUMP JUMPDEST PUSH2 0x381A JUMP JUMPDEST PUSH2 0x2BE PUSH2 0x2957 JUMP JUMPDEST PUSH2 0x345 PUSH1 0xA0 PUSH2 0xE8C JUMP JUMPDEST PUSH2 0x29A9 PUSH2 0x2997 JUMP JUMPDEST SWAP1 PUSH1 0x0 DUP3 MSTORE PUSH1 0x20 DUP1 DUP1 DUP1 DUP1 DUP7 ADD PUSH1 0x0 DUP2 MSTORE ADD PUSH1 0x60 DUP2 MSTORE ADD PUSH1 0x0 DUP2 MSTORE ADD PUSH1 0x60 SWAP1 MSTORE POP JUMP JUMPDEST PUSH2 0x345 PUSH2 0x29A1 JUMP JUMPDEST SWAP1 PUSH2 0xF17 JUMP JUMPDEST SWAP1 PUSH2 0x29E9 PUSH2 0x16C7 PUSH2 0x8A0 DUP5 SLOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x29FA JUMPI POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 PUSH2 0x2A0F PUSH2 0x2839 PUSH1 0x1 SWAP3 PUSH2 0x2831 DUP8 PUSH2 0xDE3 JUMP JUMPDEST SWAP3 SWAP2 ADD PUSH2 0x29ED JUMP JUMPDEST SWAP1 PUSH2 0x345 SWAP2 PUSH2 0x29DA JUMP JUMPDEST SWAP1 PUSH2 0x2BE PUSH2 0x20E0 SWAP3 PUSH2 0x2A32 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP4 DUP5 DUP1 SWAP3 PUSH2 0x2A17 JUMP JUMPDEST SWAP1 PUSH2 0x2BE PUSH2 0x2A95 PUSH1 0x4 PUSH2 0x2A4C PUSH2 0x2997 JUMP JUMPDEST SWAP5 PUSH2 0x2A59 PUSH2 0x1BC3 DUP3 PUSH2 0xDE3 JUMP JUMPDEST PUSH2 0x2A71 PUSH2 0x2A68 PUSH1 0x1 DUP4 ADD PUSH2 0x22B8 JUMP JUMPDEST PUSH1 0x20 DUP9 ADD PUSH2 0x1608 JUMP JUMPDEST PUSH2 0x2A80 PUSH2 0x1BEC PUSH1 0x2 DUP4 ADD PUSH2 0x20C6 JUMP JUMPDEST PUSH2 0x2A8F PUSH2 0x1C02 PUSH1 0x3 DUP4 ADD PUSH2 0xDE3 JUMP JUMPDEST ADD PUSH2 0x2A21 JUMP JUMPDEST PUSH1 0x80 DUP5 ADD MSTORE JUMP JUMPDEST PUSH2 0x345 SWAP1 PUSH2 0x2A3B JUMP JUMPDEST PUSH2 0x2ABC PUSH2 0x345 SWAP2 PUSH2 0x2AB4 PUSH2 0x29CC JUMP JUMPDEST POP PUSH1 0x8 PUSH2 0x29D4 JUMP JUMPDEST PUSH2 0x2A9C JUMP JUMPDEST PUSH2 0x1CAC PUSH2 0x2AD0 SWAP2 PUSH2 0x1CA4 PUSH1 0x0 SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x345 PUSH1 0xE0 PUSH2 0x2AE1 PUSH1 0xC0 DUP6 ADD MLOAD SWAP1 JUMP JUMPDEST SWAP4 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x2AEF PUSH2 0x3324 JUMP JUMPDEST PUSH2 0x2BE PUSH2 0x2BE PUSH2 0x38AE JUMP JUMPDEST PUSH2 0x2BE PUSH2 0x2AE7 JUMP JUMPDEST PUSH2 0x345 PUSH1 0x0 PUSH2 0x22B8 JUMP JUMPDEST ISZERO PUSH2 0x2B13 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x4E6F7420796F757220766F7465 PUSH1 0x98 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x2B4F JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x159BDD1948185B1C9958591E481C995D99585B1959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x2B93 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x4E6F7420612064697265637420766F7465 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x2BD3 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x125B9D985B1A590818DBDB5B5A5D1B595B9D PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x2C17 PUSH1 0xD PUSH2 0x11CD JUMP JUMPDEST PUSH13 0x1593D51157D491559150531151 PUSH1 0x9A SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x345 PUSH2 0x2C0D JUMP JUMPDEST PUSH2 0x135A PUSH2 0x2D24 PUSH2 0x2D2C SWAP5 SWAP4 PUSH2 0x24A2 SWAP4 PUSH2 0x2CDB PUSH1 0x1 PUSH2 0x2C5A PUSH2 0x345 DUP5 PUSH1 0x4 PUSH2 0xF0D JUMP JUMPDEST SWAP8 PUSH2 0x2C7F PUSH2 0x2C67 DUP11 PUSH2 0x22B8 JUMP JUMPDEST PUSH2 0x2C79 PUSH2 0x2C73 CALLER PUSH2 0x4B4 JUMP JUMPDEST SWAP2 PUSH2 0x4B4 JUMP JUMPDEST EQ PUSH2 0x2B0C JUMP JUMPDEST PUSH2 0x1ECB PUSH2 0x2CD6 PUSH1 0x8 DUP12 ADD SWAP3 PUSH2 0x2C9E PUSH2 0x2C99 PUSH2 0x1DE2 DUP7 PUSH2 0x13AE JUMP JUMPDEST PUSH2 0x2B48 JUMP JUMPDEST PUSH2 0x2CC3 PUSH2 0x2CAA DUP6 PUSH2 0x1B9B JUMP JUMPDEST PUSH2 0x2CBD PUSH2 0x2CB7 PUSH1 0x0 PUSH2 0x3A0 JUMP JUMPDEST SWAP2 PUSH2 0x3A0 JUMP JUMPDEST EQ PUSH2 0x2B8C JUMP JUMPDEST PUSH2 0x2CCF PUSH1 0x3 DUP14 ADD PUSH2 0xDE3 JUMP JUMPDEST SWAP1 DUP9 PUSH2 0x38B6 JUMP JUMPDEST PUSH2 0x2BCC JUMP JUMPDEST PUSH2 0x2D06 PUSH1 0x1 PUSH2 0x2CEC PUSH1 0x6 DUP10 ADD PUSH2 0xDE3 JUMP JUMPDEST SWAP8 ADD SWAP7 PUSH2 0x1F0D PUSH1 0x3 PUSH2 0x1F13 PUSH2 0x2D00 DUP12 PUSH2 0xDE3 JUMP JUMPDEST DUP3 PUSH2 0xF0D JUMP JUMPDEST PUSH1 0x40 MLOAD JUMPDEST SWAP4 DUP5 SWAP3 PUSH1 0x20 DUP5 ADD SWAP3 DUP4 PUSH1 0x20 DUP2 PUSH2 0x18AF PUSH2 0x594 SWAP4 DUP4 SWAP7 SWAP6 SWAP1 MSTORE JUMP JUMPDEST PUSH2 0x136E PUSH2 0x2C30 JUMP JUMPDEST PUSH2 0x2D38 PUSH2 0x1F60 CALLER PUSH2 0x4F4 JUMP JUMPDEST SWAP1 PUSH32 0xF65A04BE847D83385F9A7ABCF32CFB35055023A4AFFCC7EAA319160746F44528 PUSH2 0x2D63 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST TIMESTAMP DUP2 MSTORE DUP1 PUSH1 0x20 DUP2 ADD JUMPDEST SUB SWAP1 LOG3 JUMP JUMPDEST PUSH2 0x345 SWAP2 PUSH2 0x1DD8 PUSH2 0x1DDD SWAP3 PUSH2 0x2D84 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x6 PUSH2 0x1518 JUMP JUMPDEST PUSH2 0x345 SWAP1 PUSH2 0x26C8 PUSH1 0x4 PUSH2 0x1C7E PUSH1 0x3 SWAP4 PUSH2 0x23B0 DUP6 PUSH2 0x1C7E DUP4 DUP3 PUSH2 0xF0D JUMP JUMPDEST SWAP1 PUSH2 0x345 SWAP4 SWAP3 SWAP2 PUSH2 0x2DC3 PUSH2 0x141F PUSH1 0x4 PUSH2 0x1419 DUP6 PUSH1 0x5 PUSH2 0xF0D JUMP JUMPDEST SWAP1 PUSH2 0x345 SWAP4 SWAP3 SWAP2 PUSH2 0x2DDD PUSH2 0x1484 PUSH1 0x5 PUSH2 0x1419 DUP7 PUSH1 0x3 PUSH2 0xF0D JUMP JUMPDEST SWAP1 PUSH2 0x345 SWAP4 SWAP3 SWAP2 PUSH2 0x2DF1 PUSH2 0x345 PUSH1 0x10 PUSH2 0xDE3 JUMP JUMPDEST DUP5 LT ISZERO DUP1 PUSH2 0x2E08 JUMPI JUMPDEST PUSH2 0x2E03 SWAP1 PUSH2 0x148E JUMP JUMPDEST PUSH2 0x3078 JUMP JUMPDEST POP PUSH2 0x2E03 PUSH2 0x2E19 PUSH2 0x345 PUSH1 0x11 PUSH2 0xDE3 JUMP JUMPDEST DUP6 GT ISZERO SWAP1 POP PUSH2 0x2DFA JUMP JUMPDEST ISZERO PUSH2 0x2E2A JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C69717569642064656D6F63726163792064697361626C656400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0x2BE DUP3 PUSH2 0xBE8 JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0x2BE DUP3 PUSH2 0x2F3 JUMP JUMPDEST SWAP1 SWAP3 SWAP2 SWAP3 PUSH2 0x2E99 PUSH2 0xEE3 DUP3 PUSH2 0x15B0 JUMP JUMPDEST SWAP4 DUP2 DUP6 MSTORE PUSH1 0x20 DUP1 DUP7 ADD SWAP3 MUL DUP4 ADD SWAP3 DUP2 DUP5 GT PUSH2 0x237 JUMPI SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x2EBD JUMPI POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 SWAP2 PUSH2 0x2ECB DUP5 DUP7 PUSH2 0x2E6F JUMP JUMPDEST DUP2 MSTORE ADD SWAP3 ADD SWAP2 PUSH2 0x2EB0 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x237 JUMPI DUP2 MLOAD PUSH2 0x345 SWAP3 PUSH1 0x20 ADD PUSH2 0x2E89 JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0x2BE DUP3 PUSH2 0x6B0 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x120 DUP2 DUP5 SUB SLT PUSH2 0x237 JUMPI PUSH2 0x2F16 PUSH2 0x120 PUSH2 0xE8C JUMP JUMPDEST SWAP3 PUSH2 0x2F21 DUP2 DUP4 PUSH2 0x2E6F JUMP JUMPDEST DUP5 MSTORE PUSH2 0x2F30 DUP2 PUSH1 0x20 DUP5 ADD PUSH2 0x2E7C JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MSTORE PUSH2 0x2F42 DUP2 PUSH1 0x40 DUP5 ADD PUSH2 0x2E7C JUMP JUMPDEST PUSH1 0x40 DUP6 ADD MSTORE PUSH2 0x2F54 DUP2 PUSH1 0x60 DUP5 ADD PUSH2 0x2E7C JUMP JUMPDEST PUSH1 0x60 DUP6 ADD MSTORE PUSH2 0x2F66 DUP2 PUSH1 0x80 DUP5 ADD PUSH2 0x2E6F JUMP JUMPDEST PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP3 ADD MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x237 JUMPI PUSH2 0x2F8F DUP2 PUSH2 0x2FC3 SWAP4 DUP6 ADD PUSH2 0x2ED6 JUMP JUMPDEST PUSH1 0xA0 DUP7 ADD MSTORE PUSH2 0x2FA1 DUP2 PUSH1 0xC0 DUP6 ADD PUSH2 0x2EF0 JUMP JUMPDEST PUSH1 0xC0 DUP7 ADD MSTORE PUSH2 0x2FB3 DUP2 PUSH1 0xE0 DUP6 ADD PUSH2 0x2E7C JUMP JUMPDEST PUSH1 0xE0 DUP7 ADD MSTORE PUSH2 0x100 DUP1 SWAP4 ADD PUSH2 0x2E7C JUMP JUMPDEST SWAP1 DUP4 ADD MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x237 JUMPI DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x237 JUMPI PUSH2 0x345 SWAP3 ADD PUSH2 0x2EFD JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x3002 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E7420766F74696E6720706F77657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x3051 PUSH1 0x13 PUSH2 0x11CD JUMP JUMPDEST PUSH19 0x1111531151D055115117D593D51157D0D054D5 PUSH1 0x6A SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x345 PUSH2 0x3047 JUMP JUMPDEST POP PUSH2 0x308B PUSH2 0x3086 PUSH1 0x14 PUSH2 0x1B9B JUMP JUMPDEST PUSH2 0x2E23 JUMP JUMPDEST PUSH1 0x6 SWAP3 PUSH2 0x30A5 PUSH2 0x1DE6 PUSH2 0x1DE2 PUSH2 0x1DDD DUP6 PUSH2 0x1DD8 CALLER DUP11 PUSH2 0x1518 JUMP JUMPDEST PUSH2 0x30B7 PUSH2 0x30B2 PUSH1 0xE PUSH2 0x22B8 JUMP JUMPDEST PUSH2 0x4F4 JUMP JUMPDEST SWAP1 PUSH1 0x0 PUSH2 0x30C3 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 SWAP1 PUSH4 0x1A9EA1F3 PUSH1 0xE3 SHL DUP3 MSTORE DUP2 DUP1 PUSH2 0x30DF CALLER PUSH1 0x4 DUP4 ADD PUSH2 0xB6F JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x324B JUMPI PUSH2 0x31E6 SWAP4 PUSH2 0x311E PUSH2 0x310C PUSH1 0x60 PUSH2 0x31DE SWAP6 PUSH2 0x135A SWAP8 PUSH1 0x0 SWAP2 PUSH2 0x322A JUMPI JUMPDEST POP ADD MLOAD SWAP1 JUMP JUMPDEST DUP4 SWAP1 PUSH2 0x3117 JUMP JUMPDEST SWAP2 SWAP1 JUMP JUMPDEST LT ISZERO PUSH2 0x2FFB JUMP JUMPDEST PUSH2 0x1F23 PUSH2 0x312B PUSH1 0xA PUSH2 0xDE3 JUMP JUMPDEST SWAP8 PUSH2 0x3138 PUSH2 0x1E05 DUP11 PUSH2 0xE03 JUMP JUMPDEST PUSH2 0x3197 DUP9 PUSH2 0x317D PUSH1 0x0 PUSH2 0x3172 PUSH2 0x3150 PUSH2 0x1E24 DUP4 PUSH2 0xE27 JUMP JUMPDEST PUSH2 0x315C PUSH2 0x1E35 DUP5 PUSH2 0xE27 JUMP JUMPDEST PUSH2 0x3167 DUP2 PUSH1 0x60 DUP8 ADD MSTORE JUMP JUMPDEST PUSH2 0x1E72 DUP2 PUSH1 0x80 DUP8 ADD MSTORE JUMP JUMPDEST PUSH2 0x1E84 DUP9 PUSH1 0xC0 DUP6 ADD MSTORE JUMP JUMPDEST PUSH2 0x318C PUSH1 0x1 PUSH2 0x120 DUP4 ADD PUSH2 0x1612 JUMP JUMPDEST PUSH2 0x1EB3 DUP12 PUSH1 0x4 PUSH2 0xF0D JUMP JUMPDEST PUSH2 0x31AA PUSH1 0x1 PUSH2 0x1ECB DUP6 PUSH2 0x1DD8 CALLER DUP7 PUSH2 0x1518 JUMP JUMPDEST PUSH2 0x31BC DUP10 PUSH2 0x1EE2 PUSH2 0x345 CALLER PUSH1 0x7 PUSH2 0x1518 JUMP JUMPDEST PUSH2 0x31D0 DUP4 PUSH1 0x5 PUSH2 0x1DD8 DUP2 PUSH2 0x1EFB DUP5 DUP3 PUSH2 0xF0D JUMP JUMPDEST ADD PUSH2 0x1F0D DUP5 PUSH2 0x1F1E DUP4 PUSH2 0xDE3 JUMP JUMPDEST PUSH2 0x136E PUSH2 0x3070 JUMP JUMPDEST PUSH2 0x31F2 PUSH2 0x1F60 CALLER PUSH2 0x4F4 JUMP JUMPDEST SWAP1 PUSH32 0x2C9DEB38F462962EADBD85A9D3A4120503EE091F1582EAAA10AA8C6797651D29 PUSH2 0x321D PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST DUP1 PUSH2 0x1F9E TIMESTAMP PUSH1 0x1 DUP4 PUSH2 0x18DC JUMP JUMPDEST PUSH2 0x3245 SWAP2 RETURNDATASIZE DUP1 SWAP2 DUP4 RETURNDATACOPY PUSH2 0x323D DUP2 DUP4 PUSH2 0xE65 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x2FC9 JUMP JUMPDEST CODESIZE PUSH2 0x3106 JUMP JUMPDEST PUSH2 0x2FEF JUMP JUMPDEST PUSH2 0x345 SWAP3 SWAP2 SWAP1 PUSH1 0x0 PUSH2 0x2DA9 JUMP JUMPDEST SWAP1 PUSH2 0x2BE SWAP4 SWAP3 SWAP2 PUSH2 0x326C PUSH2 0x3324 JUMP JUMPDEST SWAP2 PUSH2 0x328A PUSH2 0x3291 SWAP3 PUSH2 0x3283 PUSH2 0x2BE SWAP7 SWAP6 PUSH1 0x10 PUSH2 0xE34 JUMP JUMPDEST PUSH1 0x11 PUSH2 0xE34 JUMP JUMPDEST PUSH1 0x12 PUSH2 0xE34 JUMP JUMPDEST PUSH1 0x13 PUSH2 0xE34 JUMP JUMPDEST SWAP1 PUSH2 0x2BE SWAP4 SWAP3 SWAP2 PUSH2 0x325D JUMP JUMPDEST PUSH2 0x345 SWAP1 PUSH2 0x2852 JUMP JUMPDEST PUSH2 0x32C4 PUSH2 0x345 SWAP2 PUSH2 0x32BC PUSH1 0x60 SWAP1 JUMP JUMPDEST POP PUSH1 0x7 PUSH2 0x1518 JUMP JUMPDEST PUSH2 0x32A4 JUMP JUMPDEST PUSH2 0x2BE SWAP1 PUSH2 0x32D5 PUSH2 0x3324 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x32E0 DUP2 PUSH2 0x2974 JUMP JUMPDEST PUSH2 0x32E9 DUP2 PUSH2 0x4B4 JUMP JUMPDEST PUSH2 0x32F2 DUP5 PUSH2 0x4B4 JUMP JUMPDEST EQ PUSH2 0x3302 JUMPI POP POP PUSH2 0x2BE SWAP1 PUSH2 0x381A JUMP JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP3 MSTORE DUP2 SWAP1 PUSH2 0x13FA SWAP1 PUSH1 0x4 DUP4 ADD PUSH2 0xB6F JUMP JUMPDEST PUSH2 0x2BE SWAP1 PUSH2 0x32C9 JUMP JUMPDEST PUSH2 0x332C PUSH2 0x2B02 JUMP JUMPDEST CALLER SWAP1 PUSH2 0x333A PUSH2 0x2C73 DUP4 PUSH2 0x4B4 JUMP JUMPDEST SUB PUSH2 0x3342 JUMPI POP JUMP JUMPDEST PUSH4 0x118CDAA7 PUSH1 0xE0 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP1 PUSH2 0x335B SWAP1 PUSH1 0x4 PUSH2 0xB6F JUMP JUMPDEST SUB PUSH1 0x0 REVERT JUMPDEST PUSH2 0x594 PUSH2 0x3378 SWAP3 PUSH1 0x20 SWAP3 PUSH2 0x3372 DUP2 MLOAD SWAP1 JUMP JUMPDEST SWAP5 DUP6 SWAP3 SWAP1 JUMP JUMPDEST SWAP4 DUP5 SWAP2 ADD PUSH2 0x53D JUMP JUMPDEST SWAP3 PUSH2 0x18AF PUSH2 0x11DA PUSH2 0x594 SWAP5 PUSH2 0x339A PUSH1 0x20 SWAP9 SWAP8 DUP10 SWAP7 PUSH2 0x3360 JUMP JUMPDEST SWAP1 PUSH2 0x3360 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0xF8A PUSH2 0x345 PUSH2 0xE4B SWAP4 SWAP1 JUMP JUMPDEST PUSH2 0x2BE SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x33A0 JUMP JUMPDEST DUP2 DUP2 LT PUSH2 0x33C6 JUMPI POP POP JUMP JUMPDEST DUP1 PUSH2 0x33D4 PUSH1 0x0 PUSH1 0x1 SWAP4 PUSH2 0x33AF JUMP JUMPDEST ADD PUSH2 0x33BB JUMP JUMPDEST SWAP2 SWAP1 SWAP2 DUP3 DUP3 LT PUSH2 0x33E9 JUMPI POP POP POP JUMP JUMPDEST PUSH2 0x2BE SWAP3 SWAP2 PUSH2 0x33F7 SWAP1 PUSH2 0x1665 JUMP JUMPDEST SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x33BB JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x40 SHL DUP2 GT PUSH2 0xE87 JUMPI DUP2 PUSH2 0x3419 PUSH2 0x2BE SWAP4 SLOAD SWAP1 JUMP JUMPDEST SWAP1 DUP3 DUP2 SSTORE PUSH2 0x33DA JUMP JUMPDEST DUP2 MLOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0xE87 JUMPI PUSH2 0x3447 PUSH2 0x16C7 PUSH1 0x1 SWAP3 PUSH2 0x16C1 DUP7 DUP7 PUSH2 0x3401 JUMP JUMPDEST SWAP3 DIV SWAP2 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x345A JUMPI POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SWAP1 PUSH1 0x20 PUSH2 0x346A PUSH2 0x345 DUP7 MLOAD SWAP1 JUMP JUMPDEST SWAP5 ADD SWAP4 DUP2 DUP5 ADD SSTORE ADD PUSH2 0x344D JUMP JUMPDEST SWAP1 PUSH2 0x2BE SWAP2 PUSH2 0x3422 JUMP JUMPDEST PUSH1 0x4 PUSH2 0x34D4 PUSH1 0x80 PUSH2 0x2BE SWAP5 PUSH2 0x34A0 PUSH2 0x349A PUSH1 0x0 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST DUP7 PUSH2 0x170D JUMP JUMPDEST PUSH2 0x34B8 PUSH2 0x34AF PUSH1 0x20 DUP4 ADD PUSH2 0x161C JUMP JUMPDEST PUSH1 0x1 DUP8 ADD PUSH2 0x1635 JUMP JUMPDEST PUSH2 0x34C6 PUSH2 0x114B PUSH1 0x40 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x119B PUSH2 0x1162 PUSH1 0x60 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST SWAP2 ADD PUSH2 0x3477 JUMP JUMPDEST SWAP1 PUSH2 0x2BE SWAP2 PUSH2 0x3481 JUMP JUMPDEST SWAP3 SWAP2 PUSH1 0x20 PUSH2 0x1260 PUSH2 0x2BE SWAP4 PUSH1 0x40 DUP8 ADD SWAP1 DUP8 DUP3 SUB PUSH1 0x0 DUP10 ADD MSTORE PUSH2 0x560 JUMP JUMPDEST SWAP1 PUSH2 0x135A PUSH2 0x3532 PUSH2 0x35AC SWAP3 PUSH2 0x3517 PUSH1 0xC PUSH2 0xDE3 JUMP JUMPDEST SWAP1 PUSH2 0x3521 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP4 DUP5 SWAP3 PUSH1 0x20 DUP5 ADD SWAP3 TIMESTAMP SWAP1 DUP10 DUP6 PUSH2 0x3381 JUMP JUMPDEST PUSH2 0x353D PUSH2 0x23EC DUP3 MLOAD SWAP1 JUMP JUMPDEST KECCAK256 PUSH2 0x3595 PUSH2 0x354E PUSH2 0x1E24 PUSH1 0x0 PUSH2 0xE27 JUMP JUMPDEST PUSH2 0x3585 PUSH2 0x3559 PUSH2 0x2997 JUMP JUMPDEST SWAP2 PUSH2 0x3562 DUP6 DUP5 MSTORE JUMP JUMPDEST PUSH2 0x356F CALLER PUSH1 0x20 DUP6 ADD PUSH2 0x1608 JUMP JUMPDEST PUSH2 0x357A DUP8 PUSH1 0x40 DUP6 ADD MSTORE JUMP JUMPDEST PUSH2 0x12FE TIMESTAMP PUSH1 0x60 DUP6 ADD MSTORE JUMP JUMPDEST PUSH2 0x3590 DUP4 PUSH1 0x8 PUSH2 0x29D4 JUMP JUMPDEST PUSH2 0x34DB JUMP JUMPDEST PUSH2 0x345 PUSH2 0x35A5 PUSH2 0x1F08 PUSH1 0xC PUSH2 0xDE3 JUMP JUMPDEST PUSH1 0xC PUSH2 0xE34 JUMP JUMPDEST PUSH32 0xF6D3F32241786CAD73E665A475DD59E4AFF37EE43093B5504C05D73D3806F9EF PUSH2 0x2D6C PUSH2 0x35D9 CALLER PUSH2 0x4F4 JUMP JUMPDEST SWAP4 PUSH2 0x35E3 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP2 DUP3 SWAP2 TIMESTAMP SWAP1 DUP4 PUSH2 0x34E5 JUMP JUMPDEST ISZERO PUSH2 0x35F5 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x456D707479206C6561766573206172726179 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x364F JUMPI DIV SWAP1 JUMP JUMPDEST PUSH2 0x362F JUMP JUMPDEST SWAP1 PUSH2 0x3673 PUSH2 0x3660 DUP4 MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x366D PUSH2 0x3113 PUSH1 0x0 PUSH2 0xE27 JUMP JUMPDEST GT PUSH2 0x35EE JUMP JUMPDEST DUP2 MLOAD SWAP2 PUSH1 0x1 SWAP3 PUSH2 0x3685 PUSH2 0x3113 DUP6 PUSH2 0xE27 JUMP JUMPDEST EQ PUSH2 0x37B2 JUMPI PUSH2 0x369E PUSH2 0x3695 DUP3 MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x26C8 DUP6 PUSH2 0xE27 JUMP JUMPDEST SWAP3 PUSH2 0x36B7 PUSH2 0x1E24 PUSH1 0x2 SWAP6 PUSH2 0x36B1 DUP8 PUSH2 0xE27 JUMP JUMPDEST SWAP1 PUSH2 0x3645 JUMP JUMPDEST SWAP2 DUP2 PUSH2 0x36C3 PUSH1 0x0 PUSH2 0xE27 JUMP JUMPDEST SWAP1 JUMPDEST PUSH2 0x36D8 JUMPI JUMPDEST POP POP POP PUSH2 0x345 SWAP2 SWAP3 POP PUSH2 0x38E9 JUMP JUMPDEST PUSH2 0x36E3 PUSH2 0x345 DUP4 MLOAD SWAP1 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x37AD JUMPI SWAP1 PUSH2 0x3782 DUP4 SWAP3 PUSH2 0x3702 PUSH2 0x36FC DUP6 PUSH2 0xE27 JUMP JUMPDEST DUP3 PUSH2 0x18A2 JUMP JUMPDEST PUSH2 0x3710 PUSH2 0x3113 PUSH2 0x345 DUP7 MLOAD SWAP1 JUMP JUMPDEST LT ISZERO PUSH2 0x3789 JUMPI PUSH2 0x3779 PUSH2 0x135A PUSH2 0x3758 PUSH2 0x3730 PUSH2 0x372C DUP6 DUP9 PUSH2 0x201E JUMP JUMPDEST MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x374E PUSH2 0x372C PUSH2 0x3748 PUSH2 0x3742 DUP12 PUSH2 0xE27 JUMP JUMPDEST DUP9 PUSH2 0x18A2 JUMP JUMPDEST DUP10 PUSH2 0x201E JUMP JUMPDEST SWAP1 PUSH2 0x2D0A PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x3763 PUSH2 0x23EC DUP3 MLOAD SWAP1 JUMP JUMPDEST KECCAK256 PUSH2 0x23FE PUSH2 0x3748 PUSH2 0x3773 DUP13 PUSH2 0xE27 JUMP JUMPDEST DUP6 PUSH2 0x3645 JUMP JUMPDEST PUSH2 0x26C8 DUP9 PUSH2 0xE27 JUMP JUMPDEST SWAP1 SWAP2 PUSH2 0x36C5 JUMP JUMPDEST PUSH2 0x37A8 PUSH2 0x3799 PUSH2 0x372C DUP4 DUP7 PUSH2 0x201E JUMP JUMPDEST PUSH2 0x23FE PUSH2 0x3748 PUSH2 0x3773 DUP13 PUSH2 0xE27 JUMP JUMPDEST PUSH2 0x3779 JUMP JUMPDEST PUSH2 0x36CA JUMP JUMPDEST PUSH2 0x345 SWAP2 SWAP3 POP PUSH2 0x372C SWAP1 PUSH2 0x37C6 PUSH1 0x0 PUSH2 0xE27 JUMP JUMPDEST SWAP1 PUSH2 0x201E JUMP JUMPDEST PUSH2 0x37D4 PUSH2 0x396A JUMP JUMPDEST PUSH2 0x2BE PUSH2 0x37E3 PUSH1 0x0 PUSH1 0x2 PUSH2 0x10F0 JUMP JUMPDEST PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x380D CALLER PUSH2 0xB9A JUMP JUMPDEST SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x2BE PUSH2 0x37CC JUMP JUMPDEST PUSH2 0x383B PUSH2 0x3835 PUSH2 0x382A PUSH1 0x0 PUSH2 0x22B8 JUMP JUMPDEST PUSH2 0x30B2 DUP5 PUSH1 0x0 PUSH2 0x1635 JUMP JUMPDEST SWAP2 PUSH2 0x4F4 JUMP JUMPDEST SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH2 0x3866 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x2D6C JUMP JUMPDEST PUSH2 0x3875 PUSH2 0x398D JUMP JUMPDEST PUSH2 0x2BE PUSH2 0x3884 PUSH1 0x1 PUSH1 0x2 PUSH2 0x10F0 JUMP JUMPDEST PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x380D CALLER PUSH2 0xB9A JUMP JUMPDEST PUSH2 0x2BE PUSH2 0x386D JUMP JUMPDEST PUSH2 0x135A PUSH2 0x38D5 PUSH2 0x38E5 SWAP4 PUSH2 0x3113 SWAP4 PUSH2 0x38CC PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x2D0A JUMP JUMPDEST PUSH2 0x38E0 PUSH2 0x23EC DUP3 MLOAD SWAP1 JUMP JUMPDEST KECCAK256 SWAP3 SWAP1 JUMP JUMPDEST EQ SWAP1 JUMP JUMPDEST SWAP1 DUP2 MLOAD SWAP2 PUSH1 0x1 SWAP3 PUSH2 0x38FC PUSH2 0x3113 DUP6 PUSH2 0xE27 JUMP JUMPDEST EQ PUSH2 0x37B2 JUMPI PUSH2 0x390C PUSH2 0x3695 DUP3 MLOAD SWAP1 JUMP JUMPDEST SWAP3 PUSH2 0x391F PUSH2 0x1E24 PUSH1 0x2 SWAP6 PUSH2 0x36B1 DUP8 PUSH2 0xE27 JUMP JUMPDEST SWAP2 DUP2 PUSH2 0x392B PUSH1 0x0 PUSH2 0xE27 JUMP JUMPDEST SWAP1 JUMPDEST PUSH2 0x393F JUMPI POP POP POP PUSH2 0x345 SWAP2 SWAP3 POP PUSH2 0x38E9 JUMP JUMPDEST PUSH2 0x394A PUSH2 0x345 DUP4 MLOAD SWAP1 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x37AD JUMPI SWAP1 PUSH2 0x3963 DUP4 SWAP3 PUSH2 0x3702 PUSH2 0x36FC DUP6 PUSH2 0xE27 JUMP JUMPDEST SWAP1 SWAP2 PUSH2 0x392D JUMP JUMPDEST PUSH2 0x3975 PUSH2 0x1DE2 PUSH2 0x294D JUMP JUMPDEST PUSH2 0x397B JUMPI JUMP JUMPDEST PUSH4 0x8DFC202B PUSH1 0xE0 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH2 0x3995 PUSH2 0x294D JUMP JUMPDEST PUSH2 0x399B JUMPI JUMP JUMPDEST PUSH4 0xD93C0665 PUSH1 0xE0 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATACOPY LOG3 0x25 TLOAD PUSH15 0x3C6CA3C3AE5ED666A3157D36341E81 SWAP14 0xCA BLOCKHASH INVALID DUP3 0xE6 0xAC 0xEA TSTORE SWAP10 0xB7 0x4F PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"594:20401:8:-:0;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;594:20401:8;;;;;;-1:-1:-1;;;;;594:20401:8;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:::o;:::-;-1:-1:-1;;;;;594:20401:8;;:::o;:::-;;:::o;:::-;-1:-1:-1;;;;;594:20401:8;;;;;;:::o;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;:::o;:::-;;;;;-1:-1:-1;;;;;594:20401:8;;;;;;;:::i;:::-;;;;:::i;:::-;;-1:-1:-1;;;;;594:20401:8;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::o;:::-;;-1:-1:-1;;594:20401:8;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;:::i;4727:877::-;5327:28;4727:877;;;5137:36;5150:23;5237:32;4727:877;5075:51;5093:33;5280:36;4727:877;;5013:51;5031:33;5194:32;4727:877;;4990:10;4727:877;:::i;:::-;5031:33;:::i;:::-;5013:51;;:::i;5093:33::-;5075:51;;:::i;5150:23::-;5137:36;;:::i;:::-;5194:32;;:::i;:::-;5237;;:::i;:::-;5280:36;;:::i;:::-;5327:28;;:::i;:::-;5462:16;5376:20;5395:1;5376:20;:::i;:::-;;;;;:::i;:::-;5407:15;;;;:::i;:::-;5433:18;;;;:::i;:::-;5462:16;;:::i;:::-;5499:22;5517:4;5499:22;;:::i;:::-;5532:29;5517:4;5532:29;;:::i;:::-;5572:24;5517:4;5572:24;;:::i;615:2090:2:-;;;;:::i;1818:40:3:-;1857:1;;;:::i;2037:52::-;;;;:::i;:::-;2061:21;2071:11;;:::i;:::-;2061:21;;:::i;594:20401:8:-;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;594:20401:8;;;;;;;;:::o;1225:187:0:-;1297:1;1289:10;;;:::i;:::-;-1:-1:-1;;;;;594:20401:8;;-1:-1:-1;;;;;594:20401:8;;1273:26:0;1269:95;;1392:12;;;;;:::i;1269:95::-;-1:-1:-1;;;1322:31:0;;;;;;;;;;:::i;:::-;;;;594:20401:8;;;;;;;;;;:::i;2912:187:0:-;3052:40;;3004:6;;;:::i;:::-;3020:17;;;;:::i;3052:40::-;;;:::i;:::-;;;;594:20401:8;;;;3052:40:0;;;;2912:187::o"},"deployedBytecode":{"functionDebugData":{"abi_decode":{"entryPoint":1184,"id":null,"parameterSlots":2,"returnSlots":0},"abi_decode_address":{"entryPoint":3057,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_address_fromMemory":{"entryPoint":11887,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_addresst_uint256":{"entryPoint":3070,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_array_address_dyn_fromMemory":{"entryPoint":11990,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_available_length_array_address_dyn_fromMemory":{"entryPoint":11913,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_string":{"entryPoint":3795,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_bool":{"entryPoint":1720,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_bool_fromMemory":{"entryPoint":12016,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_boolt_boolt_bool":{"entryPoint":1733,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_bytes32":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_enum_VotingMode":{"entryPoint":1986,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_string_calldata":{"entryPoint":572,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_string_calldatat_string_calldata":{"entryPoint":620,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_struct_Voter_fromMemory":{"entryPoint":12029,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_struct_Voter_memory_ptr_fromMemory":{"entryPoint":12233,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_address":{"entryPoint":3287,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_uint256":{"entryPoint":871,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_uint256":{"entryPoint":764,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_uint256_fromMemory":{"entryPoint":11900,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_uint256t_bytes32t_bytes32":{"entryPoint":2982,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_uint256t_enum_VotingMode":{"entryPoint":1999,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_uint256t_uint256t_bytes32t_uint256":{"entryPoint":777,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_uint256t_uint256t_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_uint256t_uint256t_uint256t_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":4},"abi_encodeUpdatedPos_array_bytes32_dyn_storage":{"entryPoint":10775,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_array_uint256_dyn_storage":{"entryPoint":10312,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_bytes32":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_string_storage":{"entryPoint":8380,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_struct_Candidate":{"entryPoint":1538,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_address":{"entryPoint":2927,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_address_to_address":{"entryPoint":2184,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_address_to_address_nonPadded_inplace":{"entryPoint":8898,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_array_bytes32_dyn":{"entryPoint":2553,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_bytes32_dyn_storage":{"entryPoint":10714,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_struct_Candidate_dyn":{"entryPoint":1656,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_struct_Candidate_memory_ptr_dyn_memory_ptr":{"entryPoint":1548,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_uint256_dyn":{"entryPoint":3369,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_uint256_dyn_memory_ptr":{"entryPoint":3307,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_uint256_dyn_storage":{"entryPoint":10236,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_uint256_dyn_to_array_uint256_dyn":{"entryPoint":2193,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_bool":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_bytes":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_bytes32":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_bytes32_to_bytes32_nonPadded_inplace":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_contract_LiquidDemocracy":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_contract_VoteMixing":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_contract_VoteMixing_to_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_contract_ZKProofVerifier":{"entryPoint":1277,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_enum_VoteType":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_enum_VoteType_uint256":{"entryPoint":6364,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_enum_VotingMode":{"entryPoint":9702,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_enum_VotingMode_uint256_uint256":{"entryPoint":9780,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_packed_bytes32_bytes32":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_packed_string_bytes_uint256_uint256":{"entryPoint":13185,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_packed_uint256_address_uint256":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_packed_uint256_bytes32":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_packed_uint256_enum_VotingMode_uint256":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_packed_uint256_string_calldata_string_calldata":{"entryPoint":null,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_packed_uint256_uint256_uint256":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_packed_uint256_uint256_uint256_bytes32":{"entryPoint":null,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_packed_uint256_uint256_uint256_uint256":{"entryPoint":null,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_string":{"entryPoint":13152,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string_calldata":{"entryPoint":4529,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_string_calldata_ptr":{"entryPoint":4625,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_string_calldata_string_calldata_uint256":{"entryPoint":4655,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_string_memory_ptr":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string_storage":{"entryPoint":8248,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string_to_string":{"entryPoint":1376,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string_uint256":{"entryPoint":13541,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_stringliteral":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_3547":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_3547a839e0d2412a0f190c9053aacac024d23acd13abc819ac11fbe0ca4e6a09":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_36ba":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_36ba02d776fd732ac627a72d2a4bcd896afdeadba8694171733d88c6775413e0":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_37de":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_3840":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_4b51":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_4b51a346026a42a2d6ebd34e52f86b2b7ded33a11cbeedc5fbca3b42dd345235":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_5e08":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_68c3":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_8395":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_aa74":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_ac9a":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_ac9a77a5a36d8eccd3fc2933468df57234731f208e88bda87e1354b04d3f10d5":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_b8e7":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_d42d":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_e7ba":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_e7ba12c60469871407bc8b4b932fe2fde360d8973aed7437542f698916fa6d4c":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_struct_AdvancedVote":{"entryPoint":2446,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_struct_AdvancedVote_memory_ptr":{"entryPoint":2279,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_struct_AuditTrail":{"entryPoint":2700,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_struct_AuditTrail_memory_ptr":{"entryPoint":2615,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_struct_Candidate":{"entryPoint":1811,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_struct_Candidate_memory_ptr":{"entryPoint":1432,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_struct_VotingSession":{"entryPoint":1097,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_struct_VotingSession_memory_ptr":{"entryPoint":956,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_enum_VotingMode":{"entryPoint":947,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_bool":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_contract_LiquidDemocracy":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_contract_ZKProofVerifier":{"entryPoint":1286,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_stringliteral":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_stringliteral_37de":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_stringliteral_3840":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_stringliteral_5626":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_stringliteral_5e08":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_stringliteral_68c3":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_stringliteral_aa74":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_stringliteral_b8e7":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_stringliteral_d42d":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_uint256_to_uint256":{"entryPoint":698,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_uint256_to_uint256_nonPadded_inplace":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_uint256_uint256":{"entryPoint":2756,"id":null,"parameterSlots":3,"returnSlots":1},"allocate_and_zero_memory_array_array_bytes32_dyn":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_and_zero_memory_array_array_struct_Candidate_dyn":{"entryPoint":8193,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_and_zero_memory_array_array_uint256_dyn":{"entryPoint":5594,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_and_zero_memory_struct_struct_AdvancedVote":{"entryPoint":10190,"id":null,"parameterSlots":0,"returnSlots":1},"allocate_and_zero_memory_struct_struct_AuditTrail":{"entryPoint":10657,"id":null,"parameterSlots":0,"returnSlots":1},"allocate_and_zero_memory_struct_struct_Candidate":{"entryPoint":8114,"id":null,"parameterSlots":0,"returnSlots":1},"allocate_and_zero_memory_struct_struct_VotingSession":{"entryPoint":6972,"id":null,"parameterSlots":0,"returnSlots":1},"allocate_memory":{"entryPoint":3724,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_memory_array_array_bytes32_dyn":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_memory_array_array_struct_Candidate_dyn":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_memory_array_array_uint256_dyn":{"entryPoint":5576,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_memory_array_string":{"entryPoint":4557,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_memory_struct_struct_AdvancedVote_storage_ptr":{"entryPoint":5629,"id":null,"parameterSlots":0,"returnSlots":1},"allocate_memory_struct_struct_AuditTrail":{"entryPoint":10647,"id":null,"parameterSlots":0,"returnSlots":1},"allocate_memory_struct_struct_Candidate_storage_ptr":{"entryPoint":3744,"id":null,"parameterSlots":0,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_array_uint256_dyn":{"entryPoint":5552,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_string":{"entryPoint":3754,"id":null,"parameterSlots":1,"returnSlots":1},"array_convert_length_to_size_array_uint256_dyn_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_array_struct_Candidate_dyn":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_array_struct_Candidate_dyn":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_array_uint256_dyn_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_array_struct_Candidate_dyn":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_array_uint256_dyn_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_push_from_uint256_to_array_uint256_dyn_storage_ptr":{"entryPoint":6265,"id":null,"parameterSlots":2,"returnSlots":0},"array_storeLengthForEncoding_array_struct_Candidate_dyn":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_string_nonPadded_inplace":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_uint256":{"entryPoint":6306,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_uint256":{"entryPoint":13893,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":4029,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_address":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_enum_VoteType":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_enum_VotingMode":{"entryPoint":928,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_from_storage_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_from_storage_contract_ZKProofVerifier":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_storage_array_end_array_bytes32_dyn":{"entryPoint":13274,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_storage_array_end_array_uint256_dyn":{"entryPoint":5708,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_bytes1":{"entryPoint":3998,"id":null,"parameterSlots":2,"returnSlots":0},"clear_storage_range_bytes32":{"entryPoint":13243,"id":null,"parameterSlots":2,"returnSlots":0},"convert_array_array_uint256_dyn_storage_to_array_uint256_dyn":{"entryPoint":12964,"id":null,"parameterSlots":1,"returnSlots":1},"convert_array_string_calldata_to_string":{"entryPoint":3842,"id":null,"parameterSlots":2,"returnSlots":1},"convert_bool_to_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_bytes32_to_bytes32":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_contract_ZKProofVerifier_to_address":{"entryPoint":1268,"id":null,"parameterSlots":1,"returnSlots":1},"convert_enum_VoteType_to_uint8":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_enum_VotingMode_to_uint8":{"entryPoint":938,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_2_by_1_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_by_to_address":{"entryPoint":10612,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_by_to_bytes32":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_by_to_uint160":{"entryPoint":10599,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_by_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_stringliteral_1e55_to_string":{"entryPoint":4617,"id":null,"parameterSlots":0,"returnSlots":1},"convert_stringliteral_1f8a_to_string":{"entryPoint":7569,"id":null,"parameterSlots":0,"returnSlots":1},"convert_stringliteral_689d_to_string":{"entryPoint":8966,"id":null,"parameterSlots":0,"returnSlots":1},"convert_stringliteral_9375_to_string":{"entryPoint":9772,"id":null,"parameterSlots":0,"returnSlots":1},"convert_stringliteral_a692_to_string":{"entryPoint":11312,"id":null,"parameterSlots":0,"returnSlots":1},"convert_stringliteral_fb8a_to_string":{"entryPoint":6356,"id":null,"parameterSlots":0,"returnSlots":1},"convert_stringliteral_to_string":{"entryPoint":12400,"id":null,"parameterSlots":0,"returnSlots":1},"convert_struct_AdvancedVote_storage_to_struct_AdvancedVote":{"entryPoint":10536,"id":null,"parameterSlots":1,"returnSlots":1},"convert_struct_AuditTrail_storage_to_struct_AuditTrail":{"entryPoint":10908,"id":null,"parameterSlots":1,"returnSlots":1},"convert_struct_Candidate_storage_to_struct_Candidate":{"entryPoint":8542,"id":null,"parameterSlots":1,"returnSlots":1},"convert_struct_VotingSession_storage_to_struct_VotingSession":{"entryPoint":7308,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_rational_by_to_t_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint160_to_address":{"entryPoint":1259,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint160_to_uint160":{"entryPoint":1239,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint256_to_uint256":{"entryPoint":3623,"id":null,"parameterSlots":1,"returnSlots":1},"copy_array_from_storage_to_memory_array_bytes32_dyn":{"entryPoint":10785,"id":null,"parameterSlots":1,"returnSlots":1},"copy_array_from_storage_to_memory_array_uint256_dyn":{"entryPoint":10322,"id":null,"parameterSlots":1,"returnSlots":1},"copy_array_from_storage_to_memory_string":{"entryPoint":8390,"id":null,"parameterSlots":1,"returnSlots":1},"copy_array_to_storage_from_array_bytes32_dyn_to_array_bytes32_dyn":{"entryPoint":13346,"id":null,"parameterSlots":2,"returnSlots":0},"copy_array_to_storage_from_array_uint256_dyn_to_array_uint256_dyn":{"entryPoint":5788,"id":null,"parameterSlots":2,"returnSlots":0},"copy_byte_array_to_storage_from_string_to_string":{"entryPoint":4106,"id":null,"parameterSlots":2,"returnSlots":0},"copy_calldata_to_memory_with_cleanup":{"entryPoint":3783,"id":null,"parameterSlots":3,"returnSlots":0},"copy_literal_to_memory_1e554539073ad9f83a4a13ba149be5fdf718b6c3f0c802a69f685ff25ece8944":{"entryPoint":4575,"id":null,"parameterSlots":0,"returnSlots":1},"copy_literal_to_memory_1f8a9df1e476e2c93a7817523ef54fd179aa3a5eb87b026232bce744e8cd0276":{"entryPoint":7535,"id":null,"parameterSlots":0,"returnSlots":1},"copy_literal_to_memory_299217c3eb5f997357deada29f9a01289e312ee1917223912aa56d73e63bf07f":{"entryPoint":12359,"id":null,"parameterSlots":0,"returnSlots":1},"copy_literal_to_memory_689da78f3943b5a8a42e33ff0259c1710469ef61c1bca883a97397bd4bb2a1b3":{"entryPoint":8924,"id":null,"parameterSlots":0,"returnSlots":1},"copy_literal_to_memory_9375db90cee46d94fc88cffeeac29df7046a2805f376567511bfae52c46258dc":{"entryPoint":9728,"id":null,"parameterSlots":0,"returnSlots":1},"copy_literal_to_memory_a692e7ec75b025582e26a2ded4eb422ee7e160c5add1c3d629d778b61c15aee3":{"entryPoint":11277,"id":null,"parameterSlots":0,"returnSlots":1},"copy_literal_to_memory_fb8a3a8f8b3a699e1cfc4696991684714725a0a7378a16e68296dad154175a11":{"entryPoint":6325,"id":null,"parameterSlots":0,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":1341,"id":null,"parameterSlots":3,"returnSlots":0},"copy_struct_to_storage_from_struct_AdvancedVote_to_struct_AdvancedVote":{"entryPoint":5961,"id":null,"parameterSlots":2,"returnSlots":0},"copy_struct_to_storage_from_struct_AuditTrail_to_struct_AuditTrail":{"entryPoint":13441,"id":null,"parameterSlots":2,"returnSlots":0},"copy_struct_to_storage_from_struct_Candidate_to_struct_Candidate":{"entryPoint":4359,"id":null,"parameterSlots":2,"returnSlots":0},"copy_struct_to_storage_from_struct_VotingSession_to_struct_VotingSession":{"entryPoint":9486,"id":null,"parameterSlots":2,"returnSlots":0},"divide_by_ceil":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"external_fun_castDelegatedVote":{"entryPoint":3192,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_castVote":{"entryPoint":840,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_castZKVote":{"entryPoint":1153,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_commitmentPeriod":{"entryPoint":2900,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_createVotingSession":{"entryPoint":2034,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_endVotingSession":{"entryPoint":1867,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getAllCandidates":{"entryPoint":1673,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getAuditTrail":{"entryPoint":2717,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getCandidate":{"entryPoint":1828,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getCandidateTotalVotes":{"entryPoint":3165,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getSessionTotals":{"entryPoint":2779,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getVote":{"entryPoint":2463,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getVoterVotes":{"entryPoint":3386,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getVotingSession":{"entryPoint":1114,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_hasVoterVoted":{"entryPoint":3098,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_liquidDemocracy":{"entryPoint":2837,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_liquidDemocracyEnabled":{"entryPoint":2139,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_maxVotingPower":{"entryPoint":3138,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_minVotingPower":{"entryPoint":1925,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_owner":{"entryPoint":2943,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_pause":{"entryPoint":2864,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_paused":{"entryPoint":2502,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_registerCandidate":{"entryPoint":704,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_renounceOwnership":{"entryPoint":2529,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_revealPeriod":{"entryPoint":3500,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_revealVote":{"entryPoint":3023,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_setFeatures":{"entryPoint":1781,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_transferOwnership":{"entryPoint":3464,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_unpause":{"entryPoint":1952,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_updateVotingParameters":{"entryPoint":3220,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_voteMixing":{"entryPoint":2074,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_voteMixingEnabled":{"entryPoint":3260,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_zkProofVerifier":{"entryPoint":1302,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_zkProofsEnabled":{"entryPoint":3437,"id":null,"parameterSlots":0,"returnSlots":0},"extract_byte_array_length":{"entryPoint":3899,"id":null,"parameterSlots":1,"returnSlots":1},"extract_from_storage_value_dynamict_bool":{"entryPoint":2101,"id":null,"parameterSlots":2,"returnSlots":1},"extract_from_storage_value_dynamict_contract_LiquidDemocracy":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"extract_from_storage_value_dynamict_contract_VoteMixing":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"extract_from_storage_value_dynamict_contract_ZKProofVerifier":{"entryPoint":1195,"id":null,"parameterSlots":2,"returnSlots":1},"extract_from_storage_value_dynamict_uint256":{"entryPoint":1891,"id":null,"parameterSlots":2,"returnSlots":1},"extract_from_storage_value_offset_address":{"entryPoint":8879,"id":null,"parameterSlots":1,"returnSlots":1},"extract_from_storage_value_offset_bool":{"entryPoint":7055,"id":null,"parameterSlots":1,"returnSlots":1},"extract_from_storage_value_offset_bytes32":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"extract_from_storage_value_offset_contract_LiquidDemocracy":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"extract_from_storage_value_offset_enum_VoteType":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"extract_from_storage_value_offset_enum_VotingMode":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"extract_from_storage_value_offset_t_bool":{"entryPoint":5029,"id":null,"parameterSlots":1,"returnSlots":1},"extract_from_storage_value_offset_uint256":{"entryPoint":3548,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":3685,"id":null,"parameterSlots":2,"returnSlots":0},"fun__pause_inner":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"fun__transferOwnership":{"entryPoint":14362,"id":146,"parameterSlots":1,"returnSlots":0},"fun__unpause":{"entryPoint":14354,"id":284,"parameterSlots":0,"returnSlots":0},"fun_castDelegatedVote":{"entryPoint":12880,"id":3282,"parameterSlots":3,"returnSlots":1},"fun_castDelegatedVote_inner":{"entryPoint":12408,"id":null,"parameterSlots":4,"returnSlots":1},"fun_castVote":{"entryPoint":6958,"id":2996,"parameterSlots":4,"returnSlots":1},"fun_castVote_inner":{"entryPoint":6391,"id":null,"parameterSlots":5,"returnSlots":1},"fun_castZKVote":{"entryPoint":8100,"id":3129,"parameterSlots":4,"returnSlots":1},"fun_castZKVote_inner":{"entryPoint":7577,"id":null,"parameterSlots":5,"returnSlots":1},"fun_checkOwner":{"entryPoint":13092,"id":84,"parameterSlots":0,"returnSlots":0},"fun_createMerkleRootFromLevel":{"entryPoint":14569,"id":7166,"parameterSlots":1,"returnSlots":1},"fun_createMerkleRootFromMemory":{"entryPoint":13908,"id":7072,"parameterSlots":1,"returnSlots":1},"fun_createVotingSession":{"entryPoint":10178,"id":2857,"parameterSlots":2,"returnSlots":1},"fun_createVotingSession_inner":{"entryPoint":9812,"id":null,"parameterSlots":3,"returnSlots":1},"fun_endVotingSession":{"entryPoint":9415,"id":3479,"parameterSlots":1,"returnSlots":0},"fun_endVotingSession_inner":{"entryPoint":8974,"id":null,"parameterSlots":1,"returnSlots":0},"fun_getAllCandidates":{"entryPoint":8551,"id":3536,"parameterSlots":0,"returnSlots":1},"fun_getAuditTrail":{"entryPoint":10917,"id":3609,"parameterSlots":1,"returnSlots":1},"fun_getCandidate":{"entryPoint":8775,"id":3493,"parameterSlots":1,"returnSlots":1},"fun_getCandidateTotalVotes":{"entryPoint":11660,"id":3761,"parameterSlots":1,"returnSlots":1},"fun_getSessionTotals":{"entryPoint":10945,"id":3785,"parameterSlots":1,"returnSlots":2},"fun_getVote":{"entryPoint":10545,"id":3550,"parameterSlots":1,"returnSlots":1},"fun_getVoterVotes":{"entryPoint":12973,"id":3578,"parameterSlots":1,"returnSlots":1},"fun_getVotingSession":{"entryPoint":7317,"id":3564,"parameterSlots":1,"returnSlots":1},"fun_hasVoterVoted":{"entryPoint":11633,"id":3595,"parameterSlots":2,"returnSlots":1},"fun_logAuditTrail":{"entryPoint":13570,"id":3742,"parameterSlots":2,"returnSlots":0},"fun_msgSender":{"entryPoint":null,"id":159,"parameterSlots":0,"returnSlots":1},"fun_owner":{"entryPoint":11010,"id":67,"parameterSlots":0,"returnSlots":1},"fun_pause":{"entryPoint":14510,"id":268,"parameterSlots":0,"returnSlots":0},"fun_pause_3675":{"entryPoint":11002,"id":3675,"parameterSlots":0,"returnSlots":0},"fun_pause_inner":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"fun_paused":{"entryPoint":10573,"id":227,"parameterSlots":0,"returnSlots":1},"fun_registerCandidate":{"entryPoint":5015,"id":2783,"parameterSlots":4,"returnSlots":1},"fun_registerCandidate_inner":{"entryPoint":4709,"id":null,"parameterSlots":5,"returnSlots":1},"fun_renounceOwnership":{"entryPoint":10639,"id":98,"parameterSlots":0,"returnSlots":0},"fun_renounceOwnership_inner":{"entryPoint":10621,"id":null,"parameterSlots":0,"returnSlots":0},"fun_requireNotPaused":{"entryPoint":14733,"id":239,"parameterSlots":0,"returnSlots":0},"fun_requirePaused":{"entryPoint":14698,"id":252,"parameterSlots":0,"returnSlots":0},"fun_revealVote":{"entryPoint":11320,"id":3369,"parameterSlots":3,"returnSlots":0},"fun_setFeatures":{"entryPoint":8764,"id":3665,"parameterSlots":3,"returnSlots":0},"fun_setFeatures_inner":{"entryPoint":8731,"id":null,"parameterSlots":3,"returnSlots":0},"fun_transferOwnership":{"entryPoint":13083,"id":126,"parameterSlots":1,"returnSlots":0},"fun_transferOwnership_inner":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"fun_unpause":{"entryPoint":9443,"id":3685,"parameterSlots":0,"returnSlots":0},"fun_unpause_3685_inner":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"fun_unpause_inner":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"fun_updateVotingParameters":{"entryPoint":12952,"id":3640,"parameterSlots":4,"returnSlots":0},"fun_updateVotingParameters_inner":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":0},"fun_verifyCommitment":{"entryPoint":14518,"id":6630,"parameterSlots":3,"returnSlots":1},"getter_fun_commitmentPeriod":{"entryPoint":2888,"id":2509,"parameterSlots":0,"returnSlots":1},"getter_fun_liquidDemocracy":{"entryPoint":2825,"id":2500,"parameterSlots":0,"returnSlots":1},"getter_fun_liquidDemocracyEnabled":{"entryPoint":2127,"id":2515,"parameterSlots":0,"returnSlots":1},"getter_fun_maxVotingPower":{"entryPoint":3126,"id":2507,"parameterSlots":0,"returnSlots":1},"getter_fun_minVotingPower":{"entryPoint":1913,"id":2505,"parameterSlots":0,"returnSlots":1},"getter_fun_revealPeriod":{"entryPoint":3488,"id":2511,"parameterSlots":0,"returnSlots":1},"getter_fun_voteMixing":{"entryPoint":2062,"id":2503,"parameterSlots":0,"returnSlots":1},"getter_fun_voteMixingEnabled":{"entryPoint":3248,"id":2517,"parameterSlots":0,"returnSlots":1},"getter_fun_zkProofVerifier":{"entryPoint":1227,"id":2497,"parameterSlots":0,"returnSlots":1},"getter_fun_zkProofsEnabled":{"entryPoint":3425,"id":2513,"parameterSlots":0,"returnSlots":1},"increment_uint256":{"entryPoint":3587,"id":null,"parameterSlots":1,"returnSlots":1},"increment_wrapping_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_address":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_uint160":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_uint8":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"mapping_index_access_mapping_address_mapping_uint256_bool_of_address":{"entryPoint":5400,"id":null,"parameterSlots":2,"returnSlots":1},"mapping_index_access_mapping_bytes32_struct_AuditTrail_storage_of_bytes32":{"entryPoint":10708,"id":null,"parameterSlots":2,"returnSlots":1},"mapping_index_access_mapping_uint256_struct_Candidate_storage_of_uint256":{"entryPoint":3853,"id":null,"parameterSlots":2,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"memory_array_index_access_bytes32_dyn":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"memory_array_index_access_struct_Candidate_dyn":{"entryPoint":8222,"id":null,"parameterSlots":2,"returnSlots":1},"modifier_onlyActiveSession":{"entryPoint":5118,"id":2615,"parameterSlots":5,"returnSlots":1},"modifier_onlyActiveSession_3009":{"entryPoint":7345,"id":2615,"parameterSlots":5,"returnSlots":1},"modifier_onlyActiveSession_3140":{"entryPoint":11689,"id":2615,"parameterSlots":4,"returnSlots":1},"modifier_onlyOwner":{"entryPoint":10583,"id":58,"parameterSlots":0,"returnSlots":0},"modifier_onlyOwner_104":{"entryPoint":13001,"id":58,"parameterSlots":1,"returnSlots":0},"modifier_onlyOwner_2738":{"entryPoint":3527,"id":58,"parameterSlots":5,"returnSlots":1},"modifier_onlyOwner_2792":{"entryPoint":9451,"id":58,"parameterSlots":3,"returnSlots":1},"modifier_onlyOwner_3375":{"entryPoint":8798,"id":58,"parameterSlots":1,"returnSlots":0},"modifier_onlyOwner_3621":{"entryPoint":12893,"id":58,"parameterSlots":4,"returnSlots":0},"modifier_onlyOwner_3650":{"entryPoint":8659,"id":58,"parameterSlots":3,"returnSlots":0},"modifier_onlyOwner_3669":{"entryPoint":10983,"id":58,"parameterSlots":0,"returnSlots":0},"modifier_onlyOwner_3679":{"entryPoint":9424,"id":58,"parameterSlots":0,"returnSlots":0},"modifier_onlyValidCandidate":{"entryPoint":null,"id":2629,"parameterSlots":5,"returnSlots":1},"modifier_onlyValidCandidate_2873":{"entryPoint":5225,"id":2629,"parameterSlots":5,"returnSlots":1},"modifier_onlyValidCandidate_3143":{"entryPoint":null,"id":2629,"parameterSlots":4,"returnSlots":1},"modifier_onlyValidVotingPower":{"entryPoint":5329,"id":2646,"parameterSlots":5,"returnSlots":1},"modifier_onlyValidVotingPower_3015":{"entryPoint":null,"id":2646,"parameterSlots":5,"returnSlots":1},"modifier_onlyValidVotingPower_3146":{"entryPoint":null,"id":2646,"parameterSlots":4,"returnSlots":1},"modifier_whenNotPaused":{"entryPoint":14445,"id":210,"parameterSlots":0,"returnSlots":0},"modifier_whenPaused":{"entryPoint":14284,"id":218,"parameterSlots":0,"returnSlots":0},"panic_error_0x11":{"entryPoint":3565,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":13871,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":891,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":3877,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":6203,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":3663,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_bytes32":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_memoryt_address":{"entryPoint":5660,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_memoryt_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_memoryt_bytes32":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_memoryt_enum_VoteType":{"entryPoint":5915,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_memoryt_enum_VotingMode":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_memoryt_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_reference_type_struct_AdvancedVote":{"entryPoint":10348,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_reference_type_struct_AuditTrail":{"entryPoint":10811,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_reference_type_struct_Candidate":{"entryPoint":8423,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_reference_type_struct_VotingSession":{"entryPoint":7077,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_split_dynamic_bool":{"entryPoint":2116,"id":null,"parameterSlots":2,"returnSlots":1},"read_from_storage_split_dynamic_contract_LiquidDemocracy":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"read_from_storage_split_dynamic_contract_VoteMixing":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"read_from_storage_split_dynamic_contract_ZKProofVerifier":{"entryPoint":1216,"id":null,"parameterSlots":2,"returnSlots":1},"read_from_storage_split_dynamic_uint256":{"entryPoint":1902,"id":null,"parameterSlots":2,"returnSlots":1},"read_from_storage_split_offset_address":{"entryPoint":8888,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_split_offset_bool":{"entryPoint":7067,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_split_offset_bytes32":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_split_offset_contract_LiquidDemocracy":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_split_offset_enum_VoteType":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_split_offset_enum_VotingMode":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_split_offset_t_bool":{"entryPoint":5038,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_split_offset_uint256":{"entryPoint":3555,"id":null,"parameterSlots":1,"returnSlots":1},"require_helper_stringliteral":{"entryPoint":5410,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_3547":{"entryPoint":8815,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_36ba":{"entryPoint":5486,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_37de":{"entryPoint":11212,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_4b51":{"entryPoint":13806,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_5626":{"entryPoint":5262,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_5e08":{"entryPoint":5161,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_68c3":{"entryPoint":11020,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_8395":{"entryPoint":5048,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_aa74":{"entryPoint":11811,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_ac9a":{"entryPoint":11148,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_b8e7":{"entryPoint":7470,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_d42d":{"entryPoint":11080,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_e7ba":{"entryPoint":12283,"id":null,"parameterSlots":1,"returnSlots":0},"resize_array_array_bytes32_dyn_storage":{"entryPoint":13313,"id":null,"parameterSlots":2,"returnSlots":0},"resize_array_array_uint256_dyn_storage":{"entryPoint":5755,"id":null,"parameterSlots":2,"returnSlots":0},"revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb":{"entryPoint":567,"id":null,"parameterSlots":0,"returnSlots":0},"revert_forward":{"entryPoint":12271,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_0":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_16":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_224":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_248":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_96":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_0_unsigned":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_right_8_unsigned":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_right_unsigned":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"storage_array_index_access_uint256_dyn_ptr":{"entryPoint":6225,"id":null,"parameterSlots":2,"returnSlots":2},"storage_set_to_zero_bytes32":{"entryPoint":13231,"id":null,"parameterSlots":2,"returnSlots":0},"storage_set_to_zero_uint256":{"entryPoint":3986,"id":null,"parameterSlots":2,"returnSlots":0},"store_literal_in_memory_1e554539073ad9f83a4a13ba149be5fdf718b6c3f0c802a69f685ff25ece8944":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_1f8a9df1e476e2c93a7817523ef54fd179aa3a5eb87b026232bce744e8cd0276":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_299217c3eb5f997357deada29f9a01289e312ee1917223912aa56d73e63bf07f":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_3547a839e0d2412a0f190c9053aacac024d23acd13abc819ac11fbe0ca4e6a09":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_36ba02d776fd732ac627a72d2a4bcd896afdeadba8694171733d88c6775413e0":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_37deded7645232335d6363ec0ce7bfd4fafcb64b738b05599f29832c44ad0e2b":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_3840a5cc1a84a02085a692a9b758a13328803624db8bbb884e8a5a360a1930c3":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_4b51a346026a42a2d6ebd34e52f86b2b7ded33a11cbeedc5fbca3b42dd345235":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_56268e085e104397d934c0352c8a5df3fb368f3865f4c99a5e0a7d2f8d502cbe":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_5e08d3f48383789a6de57bd1ce2690d9c2e7e2730c9898292987cc6cddf215e1":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_689da78f3943b5a8a42e33ff0259c1710469ef61c1bca883a97397bd4bb2a1b3":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_68c38339e7f8527bca021e81c262ada4a2a1fee6c820a407205d421963108057":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_839544cc0fb5d16787f6441633a106424ee8a196fb189a6c1966ac6f3b81e51f":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9375db90cee46d94fc88cffeeac29df7046a2805f376567511bfae52c46258dc":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_a692e7ec75b025582e26a2ded4eb422ee7e160c5add1c3d629d778b61c15aee3":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_aa741414fb01752a80be946108d9945051dae7052b49eb75a02daf50ee3a7fb0":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_ac9a77a5a36d8eccd3fc2933468df57234731f208e88bda87e1354b04d3f10d5":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b8e7691b0400f1eba69ce636d75aee57553f8c2e4369676f82e78110df0976c1":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_d42d83aa0c2183a61b68cd47c8e1b5835de575ce708623305e88faa2e5d1fae2":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_e7ba12c60469871407bc8b4b932fe2fde360d8973aed7437542f698916fa6d4c":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_fb8a3a8f8b3a699e1cfc4696991684714725a0a7378a16e68296dad154175a11":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"update_byte_slice_20_shift":{"entryPoint":5670,"id":null,"parameterSlots":2,"returnSlots":1},"update_byte_slice_dynamic32":{"entryPoint":3941,"id":null,"parameterSlots":3,"returnSlots":1},"update_byte_slice_shift":{"entryPoint":3607,"id":null,"parameterSlots":2,"returnSlots":1},"update_byte_slice_shift_0":{"entryPoint":4327,"id":null,"parameterSlots":2,"returnSlots":1},"update_byte_slice_shift_1":{"entryPoint":5925,"id":null,"parameterSlots":2,"returnSlots":1},"update_byte_slice_shift_2":{"entryPoint":8694,"id":null,"parameterSlots":2,"returnSlots":1},"update_storage_value_bytes32_to_bytes32":{"entryPoint":13216,"id":null,"parameterSlots":3,"returnSlots":0},"update_storage_value_offset_2_bool_to_bool":{"entryPoint":8708,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offset_address_to_address":{"entryPoint":5685,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offset_array_bytes32_dyn_to_array_bytes32_dyn":{"entryPoint":13431,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offset_array_uint256_dyn_to_array_uint256_dyn":{"entryPoint":5891,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offset_bool_to_bool":{"entryPoint":4336,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offset_bytes32_to_bytes32":{"entryPoint":5901,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offset_enum_VoteType_to_enum_VoteType":{"entryPoint":5938,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offset_enum_VotingMode_to_enum_VotingMode":{"entryPoint":9470,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offset_string_to_string":{"entryPoint":4317,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offset_struct_AdvancedVote_to_struct_AdvancedVote":{"entryPoint":6193,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offset_struct_AuditTrail_to_struct_AuditTrail":{"entryPoint":13531,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offset_struct_Candidate_to_struct_Candidate":{"entryPoint":4519,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offset_struct_VotingSession_to_struct_VotingSession":{"entryPoint":9692,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offset_t_bool_to_t_bool":{"entryPoint":8678,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offset_uint256_to_uint256":{"entryPoint":3636,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_uint256_to_uint256":{"entryPoint":3961,"id":null,"parameterSlots":3,"returnSlots":0},"validator_assert_enum_VotingMode":{"entryPoint":913,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_address":{"entryPoint":3048,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_bool":{"entryPoint":1712,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_bytes32":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_enum_VotingMode":{"entryPoint":1976,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_uint256":{"entryPoint":755,"id":null,"parameterSlots":1,"returnSlots":0},"write_to_memory_address":{"entryPoint":5640,"id":null,"parameterSlots":2,"returnSlots":0},"write_to_memory_bool":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"write_to_memory_bytes32":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"write_to_memory_enum_VoteType":{"entryPoint":5650,"id":null,"parameterSlots":2,"returnSlots":0},"write_to_memory_enum_VotingMode":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"write_to_memory_string":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"write_to_memory_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"zero_complex_memory_array_array_struct_Candidate_dyn":{"entryPoint":8157,"id":null,"parameterSlots":2,"returnSlots":0},"zero_memory_chunk_uint256":{"entryPoint":5589,"id":null,"parameterSlots":2,"returnSlots":0},"zero_value_for_split_array_struct_Candidate_dyn":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"zero_value_for_split_struct_AdvancedVote":{"entryPoint":10228,"id":null,"parameterSlots":0,"returnSlots":1},"zero_value_for_split_struct_AuditTrail":{"entryPoint":10700,"id":null,"parameterSlots":0,"returnSlots":1},"zero_value_for_split_struct_VotingSession":{"entryPoint":7047,"id":null,"parameterSlots":0,"returnSlots":1},"zero_value_for_split_uint256":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"zero_value_for_struct_Candidate":{"entryPoint":8149,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xDBCE4DD EQ PUSH2 0x232 JUMPI DUP1 PUSH4 0x1119501E EQ PUSH2 0x22D JUMPI DUP1 PUSH4 0x1943C90B EQ PUSH2 0x228 JUMPI DUP1 PUSH4 0x2966D67A EQ PUSH2 0x223 JUMPI DUP1 PUSH4 0x2BEB449E EQ PUSH2 0x21E JUMPI DUP1 PUSH4 0x2E6997FE EQ PUSH2 0x219 JUMPI DUP1 PUSH4 0x33845E52 EQ PUSH2 0x214 JUMPI DUP1 PUSH4 0x35B8E820 EQ PUSH2 0x20F JUMPI DUP1 PUSH4 0x35BB3D30 EQ PUSH2 0x20A JUMPI DUP1 PUSH4 0x36FFFDE0 EQ PUSH2 0x205 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x200 JUMPI DUP1 PUSH4 0x42AB9786 EQ PUSH2 0x1FB JUMPI DUP1 PUSH4 0x4650BAA1 EQ PUSH2 0x1F6 JUMPI DUP1 PUSH4 0x5414E58E EQ PUSH2 0x1F1 JUMPI DUP1 PUSH4 0x5A55C1F0 EQ PUSH2 0x1EC JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x1E7 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1E2 JUMPI DUP1 PUSH4 0x73A8CE8B EQ PUSH2 0x1DD JUMPI DUP1 PUSH4 0x7C25E889 EQ PUSH2 0x1D8 JUMPI DUP1 PUSH4 0x7DABDD99 EQ PUSH2 0x1D3 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x1CE JUMPI DUP1 PUSH4 0x8A3C5F9B EQ PUSH2 0x1C9 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1C4 JUMPI DUP1 PUSH4 0x8ED1FDE7 EQ PUSH2 0x1BF JUMPI DUP1 PUSH4 0x9B541F76 EQ PUSH2 0x1BA JUMPI DUP1 PUSH4 0x9EF0FB85 EQ PUSH2 0x1B5 JUMPI DUP1 PUSH4 0xABDD80A3 EQ PUSH2 0x1B0 JUMPI DUP1 PUSH4 0xB4483AA7 EQ PUSH2 0x1AB JUMPI DUP1 PUSH4 0xBAC7C890 EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0xC7A800AF EQ PUSH2 0x1A1 JUMPI DUP1 PUSH4 0xCF042511 EQ PUSH2 0x19C JUMPI DUP1 PUSH4 0xDD304E3E EQ PUSH2 0x197 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x192 JUMPI PUSH4 0xF9604681 SUB PUSH2 0x237 JUMPI PUSH2 0xDAC JUMP JUMPDEST PUSH2 0xD88 JUMP JUMPDEST PUSH2 0xD6D JUMP JUMPDEST PUSH2 0xD3A JUMP JUMPDEST PUSH2 0xCBC JUMP JUMPDEST PUSH2 0xC94 JUMP JUMPDEST PUSH2 0xC78 JUMP JUMPDEST PUSH2 0xC5D JUMP JUMPDEST PUSH2 0xC42 JUMP JUMPDEST PUSH2 0xC1A JUMP JUMPDEST PUSH2 0xBCF JUMP JUMPDEST PUSH2 0xB7F JUMP JUMPDEST PUSH2 0xB54 JUMP JUMPDEST PUSH2 0xB30 JUMP JUMPDEST PUSH2 0xB15 JUMP JUMPDEST PUSH2 0xADB JUMP JUMPDEST PUSH2 0xA9D JUMP JUMPDEST PUSH2 0x9E1 JUMP JUMPDEST PUSH2 0x9C6 JUMP JUMPDEST PUSH2 0x99F JUMP JUMPDEST PUSH2 0x85B JUMP JUMPDEST PUSH2 0x81A JUMP JUMPDEST PUSH2 0x7F2 JUMP JUMPDEST PUSH2 0x7A0 JUMP JUMPDEST PUSH2 0x785 JUMP JUMPDEST PUSH2 0x74B JUMP JUMPDEST PUSH2 0x724 JUMP JUMPDEST PUSH2 0x6F5 JUMP JUMPDEST PUSH2 0x689 JUMP JUMPDEST PUSH2 0x516 JUMP JUMPDEST PUSH2 0x481 JUMP JUMPDEST PUSH2 0x45A JUMP JUMPDEST PUSH2 0x348 JUMP JUMPDEST PUSH2 0x2C0 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 SWAP2 DUP3 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x237 JUMPI DUP2 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x237 JUMPI PUSH1 0x20 ADD SWAP3 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH2 0x237 JUMPI JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x40 DUP3 DUP5 SUB SLT PUSH2 0x237 JUMPI DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x237 JUMPI DUP4 PUSH2 0x295 SWAP2 DUP5 ADD PUSH2 0x23C JUMP JUMPDEST SWAP3 SWAP1 SWAP4 PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x237 JUMPI PUSH2 0x2B6 SWAP3 ADD PUSH2 0x23C JUMP JUMPDEST SWAP1 SWAP2 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST JUMP JUMPDEST CALLVALUE PUSH2 0x237 JUMPI PUSH2 0x2EF PUSH2 0x2DF PUSH2 0x2D6 CALLDATASIZE PUSH1 0x4 PUSH2 0x26C JUMP JUMPDEST SWAP3 SWAP2 SWAP1 SWAP2 PUSH2 0x1397 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP1 JUMPDEST SUB PUSH2 0x237 JUMPI JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x2BE DUP3 PUSH2 0x2F3 JUMP JUMPDEST PUSH1 0x80 DUP2 DUP4 SUB SLT PUSH2 0x237 JUMPI PUSH2 0x31D DUP3 DUP3 PUSH2 0x2FC JUMP JUMPDEST SWAP3 PUSH2 0x345 PUSH2 0x32E DUP5 PUSH1 0x20 DUP6 ADD PUSH2 0x2FC JUMP JUMPDEST SWAP4 PUSH1 0x60 PUSH2 0x33E DUP3 PUSH1 0x40 DUP8 ADD PUSH2 0x2FC JUMP JUMPDEST SWAP5 ADD PUSH2 0x2FC JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x237 JUMPI PUSH2 0x2EF PUSH2 0x2DF PUSH2 0x35E CALLDATASIZE PUSH1 0x4 PUSH2 0x309 JUMP JUMPDEST SWAP3 SWAP2 SWAP1 SWAP2 PUSH2 0x1B2E JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x237 JUMPI PUSH2 0x345 SWAP2 PUSH2 0x2FC JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x4 GT ISZERO PUSH2 0x39B JUMPI JUMP JUMPDEST PUSH2 0x37B JUMP JUMPDEST SWAP1 PUSH2 0x2BE DUP3 PUSH2 0x391 JUMP JUMPDEST PUSH2 0x345 SWAP1 PUSH2 0x3A0 JUMP JUMPDEST PUSH2 0x2BA SWAP1 PUSH2 0x3AA JUMP JUMPDEST DUP1 MLOAD DUP3 MSTORE PUSH2 0x2BE SWAP2 SWAP1 PUSH2 0x120 SWAP1 DUP2 SWAP1 PUSH2 0x3DA PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x20 DUP7 ADD MSTORE JUMP JUMPDEST PUSH2 0x3E9 PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x40 DUP7 ADD MSTORE JUMP JUMPDEST PUSH2 0x3F8 PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x60 DUP7 ADD MSTORE JUMP JUMPDEST PUSH1 0x80 DUP2 DUP2 ADD MLOAD ISZERO ISZERO SWAP1 DUP6 ADD MSTORE PUSH1 0xA0 DUP2 DUP2 ADD MLOAD ISZERO ISZERO SWAP1 DUP6 ADD MSTORE PUSH2 0x41F PUSH1 0xC0 DUP3 ADD MLOAD PUSH1 0xC0 DUP7 ADD MSTORE JUMP JUMPDEST PUSH2 0x42E PUSH1 0xE0 DUP3 ADD MLOAD PUSH1 0xE0 DUP7 ADD MSTORE JUMP JUMPDEST PUSH2 0x442 PUSH2 0x100 DUP3 ADD MLOAD PUSH2 0x100 DUP7 ADD SWAP1 PUSH2 0x3B3 JUMP JUMPDEST ADD MLOAD SWAP2 ADD MSTORE JUMP JUMPDEST PUSH2 0x140 DUP2 ADD SWAP3 SWAP2 PUSH2 0x2BE SWAP2 SWAP1 PUSH2 0x3BC JUMP JUMPDEST CALLVALUE PUSH2 0x237 JUMPI PUSH2 0x2EF PUSH2 0x475 PUSH2 0x470 CALLDATASIZE PUSH1 0x4 PUSH2 0x367 JUMP JUMPDEST PUSH2 0x1C95 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x449 JUMP JUMPDEST CALLVALUE PUSH2 0x237 JUMPI PUSH2 0x2EF PUSH2 0x2DF PUSH2 0x497 CALLDATASIZE PUSH1 0x4 PUSH2 0x309 JUMP JUMPDEST SWAP3 SWAP2 SWAP1 SWAP2 PUSH2 0x1FA4 JUMP JUMPDEST PUSH1 0x0 SWAP2 SUB SLT PUSH2 0x237 JUMPI JUMP JUMPDEST PUSH2 0x345 SWAP2 PUSH1 0x8 MUL SHR JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x345 SWAP2 SLOAD PUSH2 0x4AB JUMP JUMPDEST PUSH2 0x345 PUSH1 0x0 PUSH1 0xD PUSH2 0x4C0 JUMP JUMPDEST PUSH2 0x345 SWAP1 PUSH2 0x4B4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 JUMP JUMPDEST PUSH2 0x345 SWAP1 PUSH2 0x4D7 JUMP JUMPDEST PUSH2 0x345 SWAP1 PUSH2 0x4EB JUMP JUMPDEST PUSH2 0x2BA SWAP1 PUSH2 0x4F4 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD SWAP3 SWAP2 PUSH2 0x2BE SWAP2 SWAP1 PUSH2 0x4FD JUMP JUMPDEST CALLVALUE PUSH2 0x237 JUMPI PUSH2 0x526 CALLDATASIZE PUSH1 0x4 PUSH2 0x4A0 JUMP JUMPDEST PUSH2 0x2EF PUSH2 0x531 PUSH2 0x4CB JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x506 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x550 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x540 JUMP JUMPDEST PUSH2 0x581 PUSH2 0x58A PUSH1 0x20 SWAP4 PUSH2 0x594 SWAP4 PUSH2 0x575 DUP2 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP4 DUP5 SWAP3 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP6 DUP7 SWAP2 ADD PUSH2 0x53D JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP1 JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD DUP3 MSTORE SWAP1 PUSH2 0x345 SWAP1 PUSH1 0xC0 DUP1 PUSH2 0x5D2 PUSH2 0x5C0 PUSH1 0xE0 DUP6 ADD PUSH1 0x20 DUP9 ADD MLOAD DUP7 DUP3 SUB PUSH1 0x20 DUP9 ADD MSTORE PUSH2 0x560 JUMP JUMPDEST PUSH1 0x40 DUP8 ADD MLOAD DUP6 DUP3 SUB PUSH1 0x40 DUP8 ADD MSTORE PUSH2 0x560 JUMP JUMPDEST SWAP5 PUSH2 0x5E2 PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x60 DUP7 ADD MSTORE JUMP JUMPDEST PUSH2 0x5F1 PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0x80 DUP7 ADD MSTORE JUMP JUMPDEST PUSH1 0xA0 DUP2 DUP2 ADD MLOAD ISZERO ISZERO SWAP1 DUP6 ADD MSTORE PUSH2 0x442 JUMP JUMPDEST SWAP1 PUSH2 0x345 SWAP2 PUSH2 0x598 JUMP JUMPDEST SWAP1 PUSH2 0x622 PUSH2 0x618 DUP4 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 PUSH2 0x634 PUSH1 0x20 DUP4 MUL DUP5 ADD SWAP5 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x0 SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x648 JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 PUSH1 0x20 PUSH2 0x66B PUSH2 0x664 DUP4 DUP6 PUSH1 0x1 SWAP6 SUB DUP8 MSTORE DUP10 MLOAD PUSH2 0x602 JUMP JUMPDEST SWAP8 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP4 ADD SWAP4 ADD SWAP2 SWAP4 SWAP3 SWAP1 PUSH2 0x639 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH2 0x345 SWAP3 SWAP2 ADD SWAP1 PUSH2 0x60C JUMP JUMPDEST CALLVALUE PUSH2 0x237 JUMPI PUSH2 0x699 CALLDATASIZE PUSH1 0x4 PUSH2 0x4A0 JUMP JUMPDEST PUSH2 0x2EF PUSH2 0x6A4 PUSH2 0x2167 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x678 JUMP JUMPDEST DUP1 ISZERO ISZERO PUSH2 0x2F5 JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x2BE DUP3 PUSH2 0x6B0 JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x60 DUP3 DUP5 SUB SLT PUSH2 0x237 JUMPI PUSH2 0x345 PUSH2 0x6DE DUP5 DUP5 PUSH2 0x6B8 JUMP JUMPDEST SWAP4 PUSH1 0x40 PUSH2 0x6EE DUP3 PUSH1 0x20 DUP8 ADD PUSH2 0x6B8 JUMP JUMPDEST SWAP5 ADD PUSH2 0x6B8 JUMP JUMPDEST CALLVALUE PUSH2 0x237 JUMPI PUSH2 0x70E PUSH2 0x708 CALLDATASIZE PUSH1 0x4 PUSH2 0x6C5 JUMP JUMPDEST SWAP2 PUSH2 0x223C JUMP JUMPDEST PUSH1 0x40 MLOAD STOP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH2 0x345 SWAP3 SWAP2 ADD SWAP1 PUSH2 0x598 JUMP JUMPDEST CALLVALUE PUSH2 0x237 JUMPI PUSH2 0x2EF PUSH2 0x73F PUSH2 0x73A CALLDATASIZE PUSH1 0x4 PUSH2 0x367 JUMP JUMPDEST PUSH2 0x2247 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x713 JUMP JUMPDEST CALLVALUE PUSH2 0x237 JUMPI PUSH2 0x70E PUSH2 0x75E CALLDATASIZE PUSH1 0x4 PUSH2 0x367 JUMP JUMPDEST PUSH2 0x24C7 JUMP JUMPDEST PUSH2 0x345 SWAP2 PUSH1 0x8 MUL SHR DUP2 JUMP JUMPDEST SWAP1 PUSH2 0x345 SWAP2 SLOAD PUSH2 0x763 JUMP JUMPDEST PUSH2 0x345 PUSH1 0x0 PUSH1 0x10 PUSH2 0x76E JUMP JUMPDEST CALLVALUE PUSH2 0x237 JUMPI PUSH2 0x795 CALLDATASIZE PUSH1 0x4 PUSH2 0x4A0 JUMP JUMPDEST PUSH2 0x2EF PUSH2 0x2DF PUSH2 0x779 JUMP JUMPDEST CALLVALUE PUSH2 0x237 JUMPI PUSH2 0x7B0 CALLDATASIZE PUSH1 0x4 PUSH2 0x4A0 JUMP JUMPDEST PUSH2 0x70E PUSH2 0x24E3 JUMP JUMPDEST PUSH1 0x4 GT ISZERO PUSH2 0x237 JUMPI JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x2BE DUP3 PUSH2 0x7B8 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0x237 JUMPI PUSH2 0x345 SWAP1 PUSH1 0x20 PUSH2 0x7EB DUP3 DUP7 PUSH2 0x2FC JUMP JUMPDEST SWAP5 ADD PUSH2 0x7C2 JUMP JUMPDEST CALLVALUE PUSH2 0x237 JUMPI PUSH2 0x2EF PUSH2 0x2DF PUSH2 0x808 CALLDATASIZE PUSH1 0x4 PUSH2 0x7CF JUMP JUMPDEST SWAP1 PUSH2 0x27C2 JUMP JUMPDEST PUSH2 0x345 PUSH1 0x0 PUSH1 0xF PUSH2 0x4C0 JUMP JUMPDEST CALLVALUE PUSH2 0x237 JUMPI PUSH2 0x82A CALLDATASIZE PUSH1 0x4 PUSH2 0x4A0 JUMP JUMPDEST PUSH2 0x2EF PUSH2 0x531 PUSH2 0x80E JUMP JUMPDEST PUSH2 0x345 SWAP2 PUSH1 0x8 MUL SHR JUMPDEST PUSH1 0xFF AND SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x345 SWAP2 SLOAD PUSH2 0x835 JUMP JUMPDEST PUSH2 0x345 PUSH1 0x1 PUSH1 0x14 PUSH2 0x844 JUMP JUMPDEST CALLVALUE PUSH2 0x237 JUMPI PUSH2 0x86B CALLDATASIZE PUSH1 0x4 PUSH2 0x4A0 JUMP JUMPDEST PUSH2 0x2EF PUSH2 0x876 PUSH2 0x84F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH2 0x2BA SWAP1 PUSH2 0x4B4 JUMP JUMPDEST SWAP1 PUSH2 0x8B1 PUSH2 0x8AA PUSH2 0x8A0 DUP5 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP5 MSTORE SWAP3 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x8C2 JUMPI POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 PUSH2 0x8DF PUSH2 0x8D8 PUSH1 0x1 SWAP3 DUP7 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP5 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 ADD PUSH2 0x8B5 JUMP JUMPDEST SWAP1 PUSH2 0x345 SWAP1 PUSH2 0x120 DUP1 PUSH2 0x92B PUSH2 0x140 DUP5 ADD PUSH2 0x90A PUSH1 0x0 DUP9 ADD MLOAD PUSH1 0x0 DUP8 ADD SWAP1 PUSH2 0x888 JUMP JUMPDEST PUSH2 0x919 PUSH1 0x20 DUP9 ADD MLOAD PUSH1 0x20 DUP8 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 DUP8 ADD MLOAD DUP6 DUP3 SUB PUSH1 0x40 DUP8 ADD MSTORE PUSH2 0x891 JUMP JUMPDEST SWAP5 PUSH2 0x93B PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x60 DUP7 ADD MSTORE JUMP JUMPDEST PUSH2 0x94A PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0x80 DUP7 ADD MSTORE JUMP JUMPDEST PUSH2 0x959 PUSH1 0xA0 DUP3 ADD MLOAD PUSH1 0xA0 DUP7 ADD MSTORE JUMP JUMPDEST PUSH2 0x968 PUSH1 0xC0 DUP3 ADD MLOAD PUSH1 0xC0 DUP7 ADD MSTORE JUMP JUMPDEST PUSH2 0x977 PUSH1 0xE0 DUP3 ADD MLOAD PUSH1 0xE0 DUP7 ADD MSTORE JUMP JUMPDEST PUSH2 0x100 DUP2 DUP2 ADD MLOAD ISZERO ISZERO SWAP1 DUP6 ADD MSTORE ADD MLOAD SWAP2 ADD SWAP1 PUSH2 0x3B3 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH2 0x345 SWAP3 SWAP2 ADD SWAP1 PUSH2 0x8E7 JUMP JUMPDEST CALLVALUE PUSH2 0x237 JUMPI PUSH2 0x2EF PUSH2 0x9BA PUSH2 0x9B5 CALLDATASIZE PUSH1 0x4 PUSH2 0x367 JUMP JUMPDEST PUSH2 0x2931 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x98E JUMP JUMPDEST CALLVALUE PUSH2 0x237 JUMPI PUSH2 0x9D6 CALLDATASIZE PUSH1 0x4 PUSH2 0x4A0 JUMP JUMPDEST PUSH2 0x2EF PUSH2 0x876 PUSH2 0x294D JUMP JUMPDEST CALLVALUE PUSH2 0x237 JUMPI PUSH2 0x9F1 CALLDATASIZE PUSH1 0x4 PUSH2 0x4A0 JUMP JUMPDEST PUSH2 0x70E PUSH2 0x298F JUMP JUMPDEST SWAP1 PUSH2 0xA08 PUSH2 0x8AA PUSH2 0x8A0 DUP5 MLOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0xA19 JUMPI POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 PUSH2 0xA2F PUSH2 0x8D8 PUSH1 0x1 SWAP3 DUP7 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 ADD PUSH2 0xA0C JUMP JUMPDEST DUP1 MLOAD DUP3 MSTORE PUSH2 0x345 SWAP2 PUSH1 0x80 PUSH2 0xA6C PUSH1 0xA0 DUP4 ADD PUSH2 0xA5A PUSH1 0x20 DUP7 ADD MLOAD PUSH1 0x20 DUP7 ADD SWAP1 PUSH2 0x888 JUMP JUMPDEST PUSH1 0x40 DUP6 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x40 DUP7 ADD MSTORE PUSH2 0x560 JUMP JUMPDEST SWAP3 PUSH2 0xA7C PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x60 DUP6 ADD MSTORE JUMP JUMPDEST ADD MLOAD SWAP1 PUSH1 0x80 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x9F9 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH2 0x345 SWAP3 SWAP2 ADD SWAP1 PUSH2 0xA37 JUMP JUMPDEST CALLVALUE PUSH2 0x237 JUMPI PUSH2 0x2EF PUSH2 0xAB8 PUSH2 0xAB3 CALLDATASIZE PUSH1 0x4 PUSH2 0x367 JUMP JUMPDEST PUSH2 0x2AA5 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0xA8C JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP2 ADD SWAP3 SWAP2 PUSH2 0x2BE SWAP2 PUSH1 0x20 ADD MSTORE JUMP JUMPDEST ADD MSTORE JUMP JUMPDEST CALLVALUE PUSH2 0x237 JUMPI PUSH2 0xAF3 PUSH2 0xAEE CALLDATASIZE PUSH1 0x4 PUSH2 0x367 JUMP JUMPDEST PUSH2 0x2AC1 JUMP JUMPDEST SWAP1 PUSH2 0x2EF PUSH2 0xB00 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 SWAP3 DUP4 PUSH2 0xAC4 JUMP JUMPDEST PUSH2 0x345 PUSH1 0x0 PUSH1 0xE PUSH2 0x4C0 JUMP JUMPDEST CALLVALUE PUSH2 0x237 JUMPI PUSH2 0xB25 CALLDATASIZE PUSH1 0x4 PUSH2 0x4A0 JUMP JUMPDEST PUSH2 0x2EF PUSH2 0x531 PUSH2 0xB09 JUMP JUMPDEST CALLVALUE PUSH2 0x237 JUMPI PUSH2 0xB40 CALLDATASIZE PUSH1 0x4 PUSH2 0x4A0 JUMP JUMPDEST PUSH2 0x70E PUSH2 0x2AFA JUMP JUMPDEST PUSH2 0x345 PUSH1 0x0 PUSH1 0x12 PUSH2 0x76E JUMP JUMPDEST CALLVALUE PUSH2 0x237 JUMPI PUSH2 0xB64 CALLDATASIZE PUSH1 0x4 PUSH2 0x4A0 JUMP JUMPDEST PUSH2 0x2EF PUSH2 0x2DF PUSH2 0xB48 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD SWAP3 SWAP2 PUSH2 0x2BE SWAP2 SWAP1 PUSH2 0x888 JUMP JUMPDEST CALLVALUE PUSH2 0x237 JUMPI PUSH2 0xB8F CALLDATASIZE PUSH1 0x4 PUSH2 0x4A0 JUMP JUMPDEST PUSH2 0x2EF PUSH2 0xB9A PUSH2 0x2B02 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0xB6F JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x60 DUP3 DUP5 SUB SLT PUSH2 0x237 JUMPI PUSH2 0x345 PUSH2 0xBBF DUP5 DUP5 PUSH2 0x2FC JUMP JUMPDEST SWAP4 PUSH1 0x40 PUSH2 0x33E DUP3 PUSH1 0x20 DUP8 ADD PUSH2 0x2FC JUMP JUMPDEST CALLVALUE PUSH2 0x237 JUMPI PUSH2 0x70E PUSH2 0xBE2 CALLDATASIZE PUSH1 0x4 PUSH2 0xBA6 JUMP JUMPDEST SWAP2 PUSH2 0x2C38 JUMP JUMPDEST PUSH2 0x2F5 DUP2 PUSH2 0x4B4 JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x2BE DUP3 PUSH2 0xBE8 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0x237 JUMPI PUSH2 0x345 SWAP1 PUSH1 0x20 PUSH2 0x33E DUP3 DUP7 PUSH2 0xBF1 JUMP JUMPDEST CALLVALUE PUSH2 0x237 JUMPI PUSH2 0x2EF PUSH2 0x876 PUSH2 0xC30 CALLDATASIZE PUSH1 0x4 PUSH2 0xBFE JUMP JUMPDEST SWAP1 PUSH2 0x2D71 JUMP JUMPDEST PUSH2 0x345 PUSH1 0x0 PUSH1 0x11 PUSH2 0x76E JUMP JUMPDEST CALLVALUE PUSH2 0x237 JUMPI PUSH2 0xC52 CALLDATASIZE PUSH1 0x4 PUSH2 0x4A0 JUMP JUMPDEST PUSH2 0x2EF PUSH2 0x2DF PUSH2 0xC36 JUMP JUMPDEST CALLVALUE PUSH2 0x237 JUMPI PUSH2 0x2EF PUSH2 0x2DF PUSH2 0xC73 CALLDATASIZE PUSH1 0x4 PUSH2 0x367 JUMP JUMPDEST PUSH2 0x2D8C JUMP JUMPDEST CALLVALUE PUSH2 0x237 JUMPI PUSH2 0x2EF PUSH2 0x2DF PUSH2 0xC8E CALLDATASIZE PUSH1 0x4 PUSH2 0xBA6 JUMP JUMPDEST SWAP2 PUSH2 0x3250 JUMP JUMPDEST CALLVALUE PUSH2 0x237 JUMPI PUSH2 0x70E PUSH2 0xCA7 CALLDATASIZE PUSH1 0x4 PUSH2 0x309 JUMP JUMPDEST SWAP3 SWAP2 SWAP1 SWAP2 PUSH2 0x3298 JUMP JUMPDEST PUSH2 0x345 PUSH1 0x2 PUSH1 0x14 PUSH2 0x844 JUMP JUMPDEST CALLVALUE PUSH2 0x237 JUMPI PUSH2 0xCCC CALLDATASIZE PUSH1 0x4 PUSH2 0x4A0 JUMP JUMPDEST PUSH2 0x2EF PUSH2 0x876 PUSH2 0xCB0 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x237 JUMPI PUSH2 0x345 SWAP2 PUSH2 0xBF1 JUMP JUMPDEST SWAP1 PUSH2 0xCFA PUSH2 0x8AA PUSH2 0x8A0 DUP5 MLOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0xD0B JUMPI POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 PUSH2 0xD21 PUSH2 0x8D8 PUSH1 0x1 SWAP3 DUP7 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 ADD PUSH2 0xCFE JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH2 0x345 SWAP3 SWAP2 ADD SWAP1 PUSH2 0xCEB JUMP JUMPDEST CALLVALUE PUSH2 0x237 JUMPI PUSH2 0x2EF PUSH2 0xD55 PUSH2 0xD50 CALLDATASIZE PUSH1 0x4 PUSH2 0xCD7 JUMP JUMPDEST PUSH2 0x32AD JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0xD29 JUMP JUMPDEST PUSH2 0x345 PUSH1 0x0 PUSH1 0x14 PUSH2 0x844 JUMP JUMPDEST CALLVALUE PUSH2 0x237 JUMPI PUSH2 0xD7D CALLDATASIZE PUSH1 0x4 PUSH2 0x4A0 JUMP JUMPDEST PUSH2 0x2EF PUSH2 0x876 PUSH2 0xD61 JUMP JUMPDEST CALLVALUE PUSH2 0x237 JUMPI PUSH2 0x70E PUSH2 0xD9B CALLDATASIZE PUSH1 0x4 PUSH2 0xCD7 JUMP JUMPDEST PUSH2 0x331B JUMP JUMPDEST PUSH2 0x345 PUSH1 0x0 PUSH1 0x13 PUSH2 0x76E JUMP JUMPDEST CALLVALUE PUSH2 0x237 JUMPI PUSH2 0xDBC CALLDATASIZE PUSH1 0x4 PUSH2 0x4A0 JUMP JUMPDEST PUSH2 0x2EF PUSH2 0x2DF PUSH2 0xDA0 JUMP JUMPDEST SWAP1 PUSH2 0x345 SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0xDD7 PUSH2 0x3324 JUMP JUMPDEST PUSH2 0x1265 JUMP JUMPDEST PUSH2 0x345 SWAP1 DUP2 JUMP JUMPDEST PUSH2 0x345 SWAP1 SLOAD PUSH2 0xDDC JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0xE12 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH2 0xDED JUMP JUMPDEST SWAP1 PUSH1 0x0 NOT SWAP1 JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST PUSH2 0x345 PUSH2 0x345 PUSH2 0x345 SWAP3 SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0xE44 PUSH2 0x345 PUSH2 0xE4B SWAP3 PUSH2 0xE27 JUMP JUMPDEST DUP3 SLOAD PUSH2 0xE17 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xE87 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0xE4F JUMP JUMPDEST SWAP1 PUSH2 0x2BE PUSH2 0xE99 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 PUSH2 0xE65 JUMP JUMPDEST PUSH2 0x345 PUSH1 0xE0 PUSH2 0xE8C JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xE87 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD SWAP1 JUMP JUMPDEST SWAP1 DUP3 PUSH1 0x0 SWAP4 SWAP3 DUP3 CALLDATACOPY ADD MSTORE JUMP JUMPDEST SWAP1 SWAP3 SWAP2 SWAP3 PUSH2 0xEE8 PUSH2 0xEE3 DUP3 PUSH2 0xEAA JUMP JUMPDEST PUSH2 0xE8C JUMP JUMPDEST SWAP4 DUP2 DUP6 MSTORE DUP2 DUP4 ADD GT PUSH2 0x237 JUMPI PUSH2 0x2BE SWAP2 PUSH1 0x20 DUP6 ADD SWAP1 PUSH2 0xEC7 JUMP JUMPDEST PUSH2 0x345 SWAP2 CALLDATASIZE SWAP2 PUSH2 0xED3 JUMP JUMPDEST SWAP1 PUSH2 0xF17 SWAP1 PUSH2 0xE27 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x2 DUP4 DIV SWAP3 AND DUP1 ISZERO PUSH2 0xF5B JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0xF56 JUMPI JUMP JUMPDEST PUSH2 0xF25 JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0xF4B JUMP JUMPDEST SWAP2 PUSH1 0x0 NOT PUSH1 0x8 SWAP3 SWAP1 SWAP3 MUL SWAP2 DUP3 SHL SWAP2 SHL PUSH2 0xE1D JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0xF8A PUSH2 0x345 PUSH2 0xE4B SWAP4 PUSH2 0xE27 JUMP JUMPDEST SWAP1 DUP4 SLOAD PUSH2 0xF65 JUMP JUMPDEST PUSH2 0x2BE SWAP2 PUSH1 0x0 SWAP2 PUSH2 0xF79 JUMP JUMPDEST DUP2 DUP2 LT PUSH2 0xFA9 JUMPI POP POP JUMP JUMPDEST DUP1 PUSH2 0xFB7 PUSH1 0x0 PUSH1 0x1 SWAP4 PUSH2 0xF92 JUMP JUMPDEST ADD PUSH2 0xF9E JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x1F DUP2 GT PUSH2 0xFCC JUMPI POP POP POP JUMP JUMPDEST PUSH2 0xFDE PUSH2 0x2BE SWAP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x1F DUP5 ADD DUP2 SWAP1 DIV DUP4 ADD SWAP4 LT PUSH2 0x1000 JUMPI JUMPDEST PUSH1 0x20 PUSH1 0x1F SWAP1 SWAP2 ADD DIV ADD SWAP1 PUSH2 0xF9E JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0xFF1 JUMP JUMPDEST SWAP1 PUSH2 0x1013 DUP2 MLOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0xE87 JUMPI PUSH2 0x1037 DUP3 PUSH2 0x1031 DUP6 SLOAD PUSH2 0xF3B JUMP JUMPDEST DUP6 PUSH2 0xFBD JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x1072 JUMPI PUSH2 0xE4B SWAP3 SWAP2 PUSH1 0x0 SWAP2 DUP4 PUSH2 0x1067 JUMPI JUMPDEST POP POP PUSH1 0x0 NOT PUSH1 0x8 DUP4 MUL SHR NOT AND SWAP1 PUSH1 0x2 MUL OR SWAP1 JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x1053 JUMP JUMPDEST PUSH1 0x1F NOT DUP4 AND SWAP2 PUSH2 0x1087 DUP6 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x10C5 JUMPI POP SWAP2 PUSH1 0x2 SWAP4 SWAP2 DUP6 PUSH1 0x1 SWAP7 SWAP5 LT PUSH2 0x10AC JUMPI JUMPDEST POP POP POP MUL ADD SWAP1 SSTORE JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0x8 PUSH1 0x1F DUP6 AND MUL SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x10A3 JUMP JUMPDEST SWAP2 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP8 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP3 ADD PUSH2 0x108B JUMP JUMPDEST SWAP1 PUSH2 0x2BE SWAP2 PUSH2 0x100A JUMP JUMPDEST SWAP1 PUSH1 0xFF SWAP1 PUSH2 0xE1D JUMP JUMPDEST SWAP1 PUSH2 0x1100 PUSH2 0x345 PUSH2 0xE4B SWAP3 ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x10E7 JUMP JUMPDEST PUSH1 0x6 PUSH2 0x11A0 PUSH1 0xC0 PUSH2 0x2BE SWAP5 PUSH2 0x1126 PUSH2 0x1120 PUSH1 0x0 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST DUP7 PUSH2 0xE34 JUMP JUMPDEST PUSH2 0x113D PUSH2 0x1134 PUSH1 0x20 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP8 ADD PUSH2 0x10DD JUMP JUMPDEST PUSH2 0x1154 PUSH2 0x114B PUSH1 0x40 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP8 ADD PUSH2 0x10DD JUMP JUMPDEST PUSH2 0x116B PUSH2 0x1162 PUSH1 0x60 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x3 DUP8 ADD PUSH2 0xE34 JUMP JUMPDEST PUSH2 0x1182 PUSH2 0x1179 PUSH1 0x80 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x4 DUP8 ADD PUSH2 0xE34 JUMP JUMPDEST PUSH2 0x119B PUSH2 0x1192 PUSH1 0xA0 DUP4 ADD MLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x5 DUP8 ADD PUSH2 0x10F0 JUMP JUMPDEST ADD MLOAD SWAP1 JUMP JUMPDEST SWAP2 ADD PUSH2 0xE34 JUMP JUMPDEST SWAP1 PUSH2 0x2BE SWAP2 PUSH2 0x1107 JUMP JUMPDEST SWAP1 SWAP2 PUSH2 0x594 SWAP1 DUP4 SWAP1 DUP1 SWAP4 PUSH2 0xEC7 JUMP JUMPDEST ADD SWAP2 PUSH2 0x11B1 JUMP JUMPDEST SWAP2 PUSH2 0x11B1 JUMP JUMPDEST SWAP1 PUSH2 0x11DA PUSH2 0xEE3 DUP4 PUSH2 0xEAA JUMP JUMPDEST SWAP2 DUP3 MSTORE JUMP JUMPDEST PUSH2 0x11E9 PUSH1 0x14 PUSH2 0x11CD JUMP JUMPDEST PUSH20 0x10D05391125110551157D49151D254D511549151 PUSH1 0x62 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x345 PUSH2 0x11DF JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x58A DUP2 PUSH2 0x1228 DUP2 PUSH2 0x594 SWAP6 PUSH1 0x20 SWAP2 DUP2 MSTORE ADD SWAP1 JUMP JUMPDEST DUP1 SWAP6 PUSH2 0xEC7 JUMP JUMPDEST SWAP6 SWAP5 SWAP3 PUSH2 0x2BE SWAP5 PUSH2 0x1252 PUSH2 0x1260 SWAP4 PUSH1 0x40 SWAP6 PUSH1 0x60 DUP12 ADD SWAP2 DUP12 DUP4 SUB PUSH1 0x0 DUP14 ADD MSTORE PUSH2 0x1211 JUMP JUMPDEST SWAP2 DUP9 DUP4 SUB PUSH1 0x20 DUP11 ADD MSTORE PUSH2 0x1211 JUMP JUMPDEST SWAP5 ADD MSTORE JUMP JUMPDEST POP SWAP3 SWAP2 PUSH32 0xD97EAF93AD8386D19C4444905F34D814EFFA6ED87627BBBAA1E75E797F5B65D5 SWAP2 PUSH2 0x1391 PUSH2 0x1297 PUSH1 0x9 PUSH2 0xDE3 JUMP JUMPDEST SWAP6 PUSH2 0x12AB PUSH2 0x12A4 DUP9 PUSH2 0xE03 JUMP JUMPDEST PUSH1 0x9 PUSH2 0xE34 JUMP JUMPDEST PUSH2 0x1327 PUSH2 0x12B6 PUSH2 0xEA0 JUMP JUMPDEST PUSH2 0x12BE DUP10 DUP3 MSTORE JUMP JUMPDEST PUSH2 0x12D2 PUSH2 0x12CB DUP7 DUP6 PUSH2 0xF02 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH2 0x12E6 PUSH2 0x12DF DUP10 DUP9 PUSH2 0xF02 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE JUMP JUMPDEST PUSH2 0x1305 PUSH2 0x12F3 PUSH1 0x0 PUSH2 0xE27 JUMP JUMPDEST PUSH2 0x12FE DUP2 PUSH1 0x60 DUP6 ADD MSTORE JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 DUP3 ADD MSTORE PUSH2 0x1317 TIMESTAMP PUSH1 0xC0 DUP4 ADD MSTORE JUMP JUMPDEST PUSH2 0x1322 DUP10 PUSH1 0x3 PUSH2 0xF0D JUMP JUMPDEST PUSH2 0x11A7 JUMP JUMPDEST PUSH2 0x1373 PUSH2 0x1333 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1366 DUP2 DUP11 PUSH2 0x135A DUP12 DUP11 DUP11 DUP10 PUSH1 0x20 DUP8 ADD SWAP6 DUP7 SWAP3 PUSH1 0x20 DUP5 PUSH2 0x11C0 PUSH2 0x345 SWAP9 SWAP7 PUSH2 0x11C7 SWAP7 SWAP6 SWAP1 MSTORE JUMP JUMPDEST SWAP1 DUP2 SUB DUP3 MSTORE SUB DUP3 PUSH2 0xE65 JUMP JUMPDEST PUSH2 0x136E PUSH2 0x1209 JUMP JUMPDEST PUSH2 0x3502 JUMP JUMPDEST PUSH2 0x137C DUP8 PUSH2 0xE27 JUMP JUMPDEST SWAP6 PUSH2 0x1386 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP5 DUP6 SWAP5 TIMESTAMP SWAP4 DUP7 PUSH2 0x122F JUMP JUMPDEST SUB SWAP1 LOG2 SWAP1 JUMP JUMPDEST PUSH2 0x345 SWAP4 SWAP3 SWAP2 SWAP1 PUSH1 0x0 PUSH2 0xDC7 JUMP JUMPDEST PUSH2 0x345 SWAP1 PUSH2 0x83E JUMP JUMPDEST PUSH2 0x345 SWAP1 SLOAD PUSH2 0x13A5 JUMP JUMPDEST ISZERO PUSH2 0x13BF JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x53657373696F6E206E6F7420616374697665 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE DUP1 PUSH1 0x64 DUP2 ADD JUMPDEST SUB SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x345 SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0x1424 PUSH2 0x141F PUSH1 0x4 PUSH2 0x1419 DUP6 PUSH1 0x5 PUSH2 0xF0D JUMP JUMPDEST ADD PUSH2 0x13AE JUMP JUMPDEST PUSH2 0x13B8 JUMP JUMPDEST PUSH2 0x1469 JUMP JUMPDEST ISZERO PUSH2 0x1430 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x496E76616C69642063616E646964617465 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x345 SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0x1489 PUSH2 0x1484 PUSH1 0x5 PUSH2 0x1419 DUP7 PUSH1 0x3 PUSH2 0xF0D JUMP JUMPDEST PUSH2 0x1429 JUMP JUMPDEST PUSH2 0x14D1 JUMP JUMPDEST ISZERO PUSH2 0x1495 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x24B73B30B634B2103B37BA34B733903837BBB2B9 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x345 SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0x14E6 PUSH2 0x345 PUSH1 0x10 PUSH2 0xDE3 JUMP JUMPDEST DUP6 LT ISZERO DUP1 PUSH2 0x14FD JUMPI JUMPDEST PUSH2 0x14F8 SWAP1 PUSH2 0x148E JUMP JUMPDEST PUSH2 0x18F7 JUMP JUMPDEST POP PUSH2 0x14F8 PUSH2 0x150E PUSH2 0x345 PUSH1 0x11 PUSH2 0xDE3 JUMP JUMPDEST DUP7 GT ISZERO SWAP1 POP PUSH2 0x14EF JUMP JUMPDEST SWAP1 PUSH2 0xF17 SWAP1 PUSH2 0x4F4 JUMP JUMPDEST ISZERO PUSH2 0x1529 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416C726561647920766F74656420696E20746869732073657373696F6E000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1575 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x159BDD1A5B99C81C195C9A5BD908195B991959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xE87 JUMPI PUSH1 0x20 DUP1 SWAP2 MUL ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x11DA PUSH2 0xEE3 DUP4 PUSH2 0x15B0 JUMP JUMPDEST CALLDATASIZE SWAP1 CALLDATACOPY JUMP JUMPDEST SWAP1 PUSH2 0x2BE PUSH2 0x15F0 PUSH2 0x15EA DUP5 PUSH2 0x15C8 JUMP JUMPDEST SWAP4 PUSH2 0x15B0 JUMP JUMPDEST PUSH1 0x1F NOT ADD PUSH1 0x20 DUP5 ADD PUSH2 0x15D5 JUMP JUMPDEST PUSH2 0x345 PUSH2 0x140 PUSH2 0xE8C JUMP JUMPDEST SWAP1 PUSH2 0x2BA SWAP1 PUSH2 0x4B4 JUMP JUMPDEST SWAP1 PUSH2 0x2BA SWAP1 PUSH2 0x3A0 JUMP JUMPDEST PUSH2 0x345 SWAP1 MLOAD PUSH2 0x4B4 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH2 0xE1D JUMP JUMPDEST SWAP1 PUSH2 0x1645 PUSH2 0x345 PUSH2 0xE4B SWAP3 PUSH2 0x4F4 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x1626 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 DUP3 DUP3 LT PUSH2 0x165B JUMPI POP POP POP JUMP JUMPDEST PUSH2 0x2BE SWAP3 SWAP2 PUSH2 0x1671 SWAP1 JUMPDEST SWAP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0xF9E JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x40 SHL DUP2 GT PUSH2 0xE87 JUMPI DUP2 PUSH2 0x1693 PUSH2 0x2BE SWAP4 SLOAD SWAP1 JUMP JUMPDEST SWAP1 DUP3 DUP2 SSTORE PUSH2 0x164C JUMP JUMPDEST DUP2 MLOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0xE87 JUMPI PUSH2 0x16D3 PUSH2 0x16C7 PUSH1 0x1 SWAP3 PUSH2 0x16C1 DUP7 DUP7 PUSH2 0x167B JUMP JUMPDEST PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP3 DIV SWAP2 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x16E6 JUMPI POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SWAP1 PUSH1 0x20 PUSH2 0x16F6 PUSH2 0x345 DUP7 MLOAD SWAP1 JUMP JUMPDEST SWAP5 ADD SWAP4 DUP2 DUP5 ADD SSTORE ADD PUSH2 0x16D9 JUMP JUMPDEST SWAP1 PUSH2 0x2BE SWAP2 PUSH2 0x169C JUMP JUMPDEST SWAP1 PUSH2 0xE44 PUSH2 0x345 PUSH2 0xE4B SWAP3 SWAP1 JUMP JUMPDEST PUSH2 0x345 SWAP1 MLOAD PUSH2 0x3A0 JUMP JUMPDEST SWAP1 PUSH2 0xFF00 SWAP1 PUSH1 0x8 SHL PUSH2 0xE1D JUMP JUMPDEST SWAP1 PUSH2 0x1742 PUSH2 0x345 PUSH2 0xE4B SWAP3 PUSH2 0x3AA JUMP JUMPDEST DUP3 SLOAD PUSH2 0x1725 JUMP JUMPDEST SWAP1 PUSH2 0x182B PUSH2 0x120 PUSH1 0x8 PUSH2 0x2BE SWAP5 PUSH2 0x176B PUSH2 0x1765 PUSH1 0x0 DUP8 ADD PUSH2 0x161C JUMP JUMPDEST DUP3 PUSH2 0x1635 JUMP JUMPDEST PUSH2 0x1782 PUSH2 0x1779 PUSH1 0x20 DUP8 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP4 ADD PUSH2 0xE34 JUMP JUMPDEST PUSH2 0x1799 PUSH2 0x1790 PUSH1 0x40 DUP8 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP4 ADD PUSH2 0x1703 JUMP JUMPDEST PUSH2 0x17B0 PUSH2 0x17A7 PUSH1 0x60 DUP8 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x3 DUP4 ADD PUSH2 0x170D JUMP JUMPDEST PUSH2 0x17C7 PUSH2 0x17BE PUSH1 0x80 DUP8 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x4 DUP4 ADD PUSH2 0x170D JUMP JUMPDEST PUSH2 0x17DE PUSH2 0x17D5 PUSH1 0xA0 DUP8 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x5 DUP4 ADD PUSH2 0x170D JUMP JUMPDEST PUSH2 0x17F5 PUSH2 0x17EC PUSH1 0xC0 DUP8 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x6 DUP4 ADD PUSH2 0xE34 JUMP JUMPDEST PUSH2 0x180C PUSH2 0x1803 PUSH1 0xE0 DUP8 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x7 DUP4 ADD PUSH2 0xE34 JUMP JUMPDEST ADD SWAP3 PUSH2 0x1825 PUSH2 0x181F PUSH2 0x100 DUP4 ADD MLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP6 PUSH2 0x10F0 JUMP JUMPDEST ADD PUSH2 0x171B JUMP JUMPDEST SWAP1 PUSH2 0x1732 JUMP JUMPDEST SWAP1 PUSH2 0x2BE SWAP2 PUSH2 0x1749 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x1874 JUMPI PUSH2 0x186B PUSH1 0x1 SWAP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP2 MUL ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x183B JUMP JUMPDEST SWAP1 DUP2 SLOAD SWAP2 PUSH1 0x1 PUSH1 0x40 SHL DUP4 LT ISZERO PUSH2 0xE87 JUMPI DUP3 PUSH2 0x189C SWAP2 PUSH1 0x1 PUSH2 0x2BE SWAP6 ADD DUP2 SSTORE PUSH2 0x1851 JUMP JUMPDEST SWAP1 PUSH2 0xF79 JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0xE12 JUMPI JUMP JUMPDEST ADD SWAP2 DUP3 MSTORE JUMP JUMPDEST PUSH2 0x18BF PUSH1 0x9 PUSH2 0x11CD JUMP JUMPDEST PUSH9 0x1593D51157D0D054D5 PUSH1 0xBA SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x345 PUSH2 0x18B5 JUMP JUMPDEST SWAP2 PUSH1 0x20 PUSH2 0x2BE SWAP3 SWAP5 SWAP4 PUSH2 0xAD7 PUSH1 0x40 DUP3 ADD SWAP7 PUSH1 0x0 DUP4 ADD SWAP1 PUSH2 0x3B3 JUMP JUMPDEST POP PUSH1 0x6 SWAP4 DUP2 PUSH2 0x1906 CALLER DUP8 PUSH2 0x1518 JUMP JUMPDEST SWAP1 PUSH2 0x1910 SWAP2 PUSH2 0xF0D JUMP JUMPDEST PUSH2 0x1919 SWAP1 PUSH2 0x13AE JUMP JUMPDEST ISZERO PUSH2 0x1923 SWAP1 PUSH2 0x1522 JUMP JUMPDEST PUSH1 0x5 SWAP5 PUSH2 0x1930 DUP4 DUP8 PUSH2 0xF0D JUMP JUMPDEST PUSH1 0x2 ADD PUSH2 0x193C SWAP1 PUSH2 0xDE3 JUMP JUMPDEST TIMESTAMP GT ISZERO PUSH2 0x1948 SWAP1 PUSH2 0x156E JUMP JUMPDEST PUSH2 0x1952 PUSH1 0xA PUSH2 0xDE3 JUMP JUMPDEST SWAP6 PUSH2 0x195C DUP8 PUSH2 0xE03 JUMP JUMPDEST PUSH2 0x1967 SWAP1 PUSH1 0xA PUSH2 0xE34 JUMP JUMPDEST PUSH1 0x0 SWAP6 PUSH2 0x1973 DUP8 PUSH2 0xE27 JUMP JUMPDEST PUSH2 0x197C SWAP1 PUSH2 0x15DA JUMP JUMPDEST SWAP1 PUSH2 0x1986 DUP9 PUSH2 0xE27 JUMP JUMPDEST SWAP1 PUSH2 0x198F PUSH2 0x15FD JUMP JUMPDEST SWAP3 PUSH2 0x199C CALLER DUP12 DUP7 ADD PUSH2 0x1608 JUMP JUMPDEST PUSH2 0x19A7 DUP10 PUSH1 0x20 DUP7 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x19BC DUP2 PUSH1 0x80 DUP5 ADD MSTORE JUMP JUMPDEST PUSH1 0xA0 DUP3 ADD MSTORE PUSH2 0x19CC DUP5 PUSH1 0xC0 DUP4 ADD MSTORE JUMP JUMPDEST PUSH2 0x19D7 TIMESTAMP PUSH1 0xE0 DUP4 ADD MSTORE JUMP JUMPDEST DUP7 ISZERO ISZERO PUSH2 0x100 DUP3 ADD MSTORE PUSH2 0x19EE DUP8 PUSH2 0x120 DUP4 ADD PUSH2 0x1612 JUMP JUMPDEST PUSH2 0x19F9 DUP9 PUSH1 0x4 PUSH2 0xF0D JUMP JUMPDEST SWAP1 PUSH2 0x1A03 SWAP2 PUSH2 0x1831 JUMP JUMPDEST DUP4 PUSH2 0x1A0E CALLER DUP5 PUSH2 0x1518 JUMP JUMPDEST SWAP1 PUSH2 0x1A18 SWAP2 PUSH2 0xF0D JUMP JUMPDEST PUSH1 0x1 PUSH2 0x1A23 SWAP2 PUSH2 0x10F0 JUMP JUMPDEST DUP7 PUSH2 0x1A2F CALLER PUSH1 0x7 PUSH2 0x1518 JUMP JUMPDEST SWAP1 PUSH2 0x1A39 SWAP2 PUSH2 0x1879 JUMP JUMPDEST DUP4 DUP2 PUSH2 0x1A45 DUP3 DUP3 PUSH2 0xF0D JUMP JUMPDEST ADD PUSH2 0x1A4F DUP2 PUSH2 0xDE3 JUMP JUMPDEST PUSH2 0x1A58 SWAP1 PUSH2 0xE03 JUMP JUMPDEST PUSH2 0x1A61 SWAP2 PUSH2 0xE34 JUMP JUMPDEST PUSH2 0x1A6A SWAP2 PUSH2 0xF0D JUMP JUMPDEST ADD DUP2 PUSH2 0x1A75 DUP3 PUSH2 0xDE3 JUMP JUMPDEST SWAP1 PUSH2 0x1A7F SWAP2 PUSH2 0x18A2 JUMP JUMPDEST PUSH2 0x1A88 SWAP2 PUSH2 0xE34 JUMP JUMPDEST DUP3 PUSH2 0x1A92 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 SWAP3 PUSH1 0x20 DUP5 ADD SWAP3 PUSH2 0x1ABB SWAP3 DUP10 DUP6 SWAP3 PUSH2 0x18AF PUSH1 0x20 PUSH2 0x594 SWAP5 PUSH2 0x18AF DUP3 DUP9 PUSH2 0x18AF DUP3 SWAP12 SWAP11 DUP4 SWAP10 SWAP1 MSTORE JUMP JUMPDEST SWAP1 DUP2 SUB DUP3 MSTORE SUB PUSH2 0x1ACB SWAP1 DUP3 PUSH2 0xE65 JUMP JUMPDEST PUSH2 0x1AD3 PUSH2 0x18D4 JUMP JUMPDEST SWAP1 PUSH2 0x1ADD SWAP2 PUSH2 0x3502 JUMP JUMPDEST PUSH2 0x1AE6 CALLER PUSH2 0x4F4 JUMP JUMPDEST SWAP1 PUSH2 0x1AF0 SWAP1 PUSH2 0xE27 JUMP JUMPDEST SWAP2 PUSH2 0x1AFA PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST DUP1 SWAP2 TIMESTAMP PUSH2 0x1B07 SWAP2 DUP4 PUSH2 0x18DC JUMP JUMPDEST SUB PUSH32 0x2C9DEB38F462962EADBD85A9D3A4120503EE091F1582EAAA10AA8C6797651D29 SWAP2 LOG3 SWAP1 JUMP JUMPDEST PUSH2 0x345 SWAP4 SWAP3 SWAP2 SWAP1 PUSH1 0x0 PUSH2 0x13FE JUMP JUMPDEST PUSH2 0x1B44 PUSH2 0x15FD JUMP JUMPDEST SWAP1 PUSH1 0x0 DUP3 MSTORE PUSH1 0x20 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP12 ADD PUSH1 0x0 DUP2 MSTORE ADD PUSH1 0x0 JUMPDEST DUP2 MSTORE ADD PUSH1 0x0 DUP2 MSTORE ADD PUSH1 0x0 DUP2 MSTORE ADD PUSH1 0x0 JUMPDEST DUP2 MSTORE ADD PUSH1 0x0 DUP2 MSTORE ADD PUSH1 0x0 DUP2 MSTORE ADD PUSH1 0x0 DUP2 MSTORE ADD PUSH1 0x0 SWAP1 MSTORE POP JUMP JUMPDEST PUSH2 0x345 PUSH2 0x1B3C JUMP JUMPDEST PUSH2 0x345 SWAP1 PUSH1 0x8 SHR PUSH2 0x83E JUMP JUMPDEST PUSH2 0x345 SWAP1 SLOAD PUSH2 0x1B8F JUMP JUMPDEST SWAP1 PUSH2 0x2BE PUSH2 0x1C84 PUSH1 0x8 PUSH2 0x1BB6 PUSH2 0x15FD JUMP JUMPDEST SWAP5 PUSH2 0x1BC7 PUSH2 0x1BC3 DUP3 PUSH2 0xDE3 JUMP JUMPDEST DUP8 MSTORE JUMP JUMPDEST PUSH2 0x1BDD PUSH2 0x1BD6 PUSH1 0x1 DUP4 ADD PUSH2 0xDE3 JUMP JUMPDEST PUSH1 0x20 DUP9 ADD MSTORE JUMP JUMPDEST PUSH2 0x1BF3 PUSH2 0x1BEC PUSH1 0x2 DUP4 ADD PUSH2 0xDE3 JUMP JUMPDEST PUSH1 0x40 DUP9 ADD MSTORE JUMP JUMPDEST PUSH2 0x1C09 PUSH2 0x1C02 PUSH1 0x3 DUP4 ADD PUSH2 0xDE3 JUMP JUMPDEST PUSH1 0x60 DUP9 ADD MSTORE JUMP JUMPDEST PUSH2 0x1C21 PUSH2 0x1C18 PUSH1 0x4 DUP4 ADD PUSH2 0x13AE JUMP JUMPDEST ISZERO ISZERO PUSH1 0x80 DUP9 ADD MSTORE JUMP JUMPDEST PUSH2 0x1C39 PUSH2 0x1C30 PUSH1 0x4 DUP4 ADD PUSH2 0x1B9B JUMP JUMPDEST ISZERO ISZERO PUSH1 0xA0 DUP9 ADD MSTORE JUMP JUMPDEST PUSH2 0x1C4F PUSH2 0x1C48 PUSH1 0x5 DUP4 ADD PUSH2 0xDE3 JUMP JUMPDEST PUSH1 0xC0 DUP9 ADD MSTORE JUMP JUMPDEST PUSH2 0x1C65 PUSH2 0x1C5E PUSH1 0x6 DUP4 ADD PUSH2 0xDE3 JUMP JUMPDEST PUSH1 0xE0 DUP9 ADD MSTORE JUMP JUMPDEST PUSH2 0x1C7E PUSH2 0x1C74 PUSH1 0x7 DUP4 ADD PUSH2 0x13AE JUMP JUMPDEST PUSH2 0x100 DUP9 ADD PUSH2 0x1612 JUMP JUMPDEST ADD PUSH2 0xDE3 JUMP JUMPDEST PUSH2 0x120 DUP5 ADD MSTORE JUMP JUMPDEST PUSH2 0x345 SWAP1 PUSH2 0x1BA5 JUMP JUMPDEST PUSH2 0x1CAC PUSH2 0x345 SWAP2 PUSH2 0x1CA4 PUSH2 0x1B87 JUMP JUMPDEST POP PUSH1 0x5 PUSH2 0xF0D JUMP JUMPDEST PUSH2 0x1C8C JUMP JUMPDEST SWAP1 PUSH2 0x345 SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0x1CCC PUSH2 0x141F PUSH1 0x4 PUSH2 0x1419 DUP6 PUSH1 0x5 PUSH2 0xF0D JUMP JUMPDEST SWAP1 PUSH2 0x345 SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0x1CE7 PUSH2 0x1484 PUSH1 0x5 PUSH2 0x1419 DUP7 PUSH1 0x3 PUSH2 0xF0D JUMP JUMPDEST SWAP1 PUSH2 0x345 SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0x1CFC PUSH2 0x345 PUSH1 0x10 PUSH2 0xDE3 JUMP JUMPDEST DUP6 LT ISZERO DUP1 PUSH2 0x1D13 JUMPI JUMPDEST PUSH2 0x1D0E SWAP1 PUSH2 0x148E JUMP JUMPDEST PUSH2 0x1D99 JUMP JUMPDEST POP PUSH2 0x1D0E PUSH2 0x1D24 PUSH2 0x345 PUSH1 0x11 PUSH2 0xDE3 JUMP JUMPDEST DUP7 GT ISZERO SWAP1 POP PUSH2 0x1D05 JUMP JUMPDEST ISZERO PUSH2 0x1D35 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x1692CB5C1C9BDBD99CC8191A5CD8589B1959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x1D79 PUSH1 0xC PUSH2 0x11CD JUMP JUMPDEST PUSH12 0x1692D7D593D51157D0D054D5 PUSH1 0xA2 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x345 PUSH2 0x1D6F JUMP JUMPDEST PUSH2 0x1F54 SWAP3 SWAP4 PUSH2 0x135A SWAP3 PUSH2 0x1F23 PUSH2 0x1DD8 SWAP8 PUSH2 0x1F4C SWAP5 POP PUSH2 0x1DC0 PUSH2 0x1DBB PUSH1 0x14 PUSH2 0x13AE JUMP JUMPDEST PUSH2 0x1D2E JUMP JUMPDEST PUSH2 0x1DEB PUSH2 0x1DE6 PUSH2 0x1DE2 PUSH2 0x1DDD DUP7 PUSH1 0x6 SWAP14 DUP15 CALLER SWAP1 PUSH2 0x1518 JUMP JUMPDEST PUSH2 0xF0D JUMP JUMPDEST PUSH2 0x13AE JUMP JUMPDEST ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x1522 JUMP JUMPDEST PUSH2 0x1F0D PUSH2 0x1DF8 PUSH1 0xA PUSH2 0xDE3 JUMP JUMPDEST SWAP10 PUSH2 0x1E0C PUSH2 0x1E05 DUP13 PUSH2 0xE03 JUMP JUMPDEST PUSH1 0xA PUSH2 0xE34 JUMP JUMPDEST PUSH2 0x1EB8 DUP11 PUSH2 0x1E99 PUSH1 0x0 PUSH2 0x1E79 PUSH2 0x1E29 PUSH2 0x1E24 DUP4 PUSH2 0xE27 JUMP JUMPDEST PUSH2 0x15DA JUMP JUMPDEST PUSH2 0x1E5C PUSH2 0x1E35 DUP5 PUSH2 0xE27 JUMP JUMPDEST SWAP2 PUSH2 0x1E55 PUSH2 0x1E41 PUSH2 0x15FD JUMP JUMPDEST SWAP8 PUSH2 0x1E4E CALLER DUP9 DUP12 ADD PUSH2 0x1608 JUMP JUMPDEST PUSH1 0x20 DUP10 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 DUP8 ADD MSTORE JUMP JUMPDEST PUSH2 0x1E67 DUP2 PUSH1 0x60 DUP8 ADD MSTORE JUMP JUMPDEST PUSH2 0x1E72 DUP13 PUSH1 0x80 DUP8 ADD MSTORE JUMP JUMPDEST PUSH1 0xA0 DUP6 ADD MSTORE JUMP JUMPDEST PUSH2 0x1E84 DUP8 PUSH1 0xC0 DUP6 ADD MSTORE JUMP JUMPDEST PUSH2 0x1E8F TIMESTAMP PUSH1 0xE0 DUP6 ADD MSTORE JUMP JUMPDEST ISZERO ISZERO PUSH2 0x100 DUP4 ADD MSTORE JUMP JUMPDEST PUSH2 0x1EA8 PUSH1 0x3 PUSH2 0x120 DUP4 ADD PUSH2 0x1612 JUMP JUMPDEST PUSH2 0x1EB3 DUP14 PUSH1 0x4 PUSH2 0xF0D JUMP JUMPDEST PUSH2 0x1831 JUMP JUMPDEST PUSH2 0x1ED0 PUSH1 0x1 PUSH2 0x1ECB DUP8 PUSH2 0x1DD8 CALLER DUP7 PUSH2 0x1518 JUMP JUMPDEST PUSH2 0x10F0 JUMP JUMPDEST PUSH2 0x1EE7 DUP12 PUSH2 0x1EE2 PUSH2 0x345 CALLER PUSH1 0x7 PUSH2 0x1518 JUMP JUMPDEST PUSH2 0x1879 JUMP JUMPDEST PUSH2 0x1F13 DUP6 PUSH1 0x5 PUSH2 0x1DD8 DUP2 PUSH2 0x1EFB DUP5 DUP3 PUSH2 0xF0D JUMP JUMPDEST ADD PUSH2 0x1F0D PUSH2 0x1F08 DUP3 PUSH2 0xDE3 JUMP JUMPDEST PUSH2 0xE03 JUMP JUMPDEST SWAP1 PUSH2 0xE34 JUMP JUMPDEST ADD SWAP2 PUSH2 0x1F1E DUP4 PUSH2 0xDE3 JUMP JUMPDEST PUSH2 0x18A2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP3 DUP8 PUSH1 0x20 DUP6 ADD SWAP4 DUP11 DUP6 SWAP3 PUSH2 0x18AF PUSH1 0x20 PUSH2 0x594 SWAP5 PUSH2 0x18AF DUP3 DUP9 PUSH2 0x18AF DUP3 SWAP12 SWAP11 DUP4 SWAP10 SWAP1 MSTORE JUMP JUMPDEST PUSH2 0x136E PUSH2 0x1D91 JUMP JUMPDEST PUSH2 0x1F66 PUSH2 0x1F60 CALLER PUSH2 0x4F4 JUMP JUMPDEST SWAP2 PUSH2 0xE27 JUMP JUMPDEST SWAP1 PUSH32 0x2C9DEB38F462962EADBD85A9D3A4120503EE091F1582EAAA10AA8C6797651D29 PUSH2 0x1F91 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST DUP1 PUSH2 0x1F9E TIMESTAMP PUSH1 0x3 DUP4 PUSH2 0x18DC JUMP JUMPDEST SUB SWAP1 LOG3 SWAP1 JUMP JUMPDEST PUSH2 0x345 SWAP4 SWAP3 SWAP2 SWAP1 PUSH1 0x0 PUSH2 0x1CB1 JUMP JUMPDEST PUSH2 0x1FBA PUSH2 0xEA0 JUMP JUMPDEST SWAP1 PUSH1 0x0 DUP3 MSTORE PUSH1 0x20 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP9 ADD PUSH1 0x60 DUP2 MSTORE ADD PUSH1 0x60 PUSH2 0x1B6E JUMP JUMPDEST PUSH2 0x345 PUSH2 0x1FB2 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x1FEC JUMPI POP POP POP JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH2 0x1FF7 PUSH2 0x1FD5 JUMP JUMPDEST DUP2 DUP5 ADD MSTORE ADD PUSH2 0x1FE0 JUMP JUMPDEST SWAP1 PUSH2 0x2BE PUSH2 0x2011 PUSH2 0x15EA DUP5 PUSH2 0x15C8 JUMP JUMPDEST PUSH1 0x1F NOT ADD PUSH1 0x20 DUP5 ADD PUSH2 0x1FDD JUMP JUMPDEST SWAP1 PUSH2 0x2027 DUP3 MLOAD SWAP1 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x1874 JUMPI PUSH1 0x20 DUP1 SWAP2 MUL ADD ADD SWAP1 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x0 SWAP4 SWAP3 SWAP2 PUSH2 0x2055 PUSH2 0x204B DUP4 PUSH2 0xF3B JUMP JUMPDEST DUP1 DUP6 MSTORE SWAP4 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x20A7 JUMPI POP PUSH1 0x1 EQ PUSH2 0x206E JUMPI POP POP POP JUMP JUMPDEST PUSH2 0x2081 SWAP2 SWAP3 SWAP4 SWAP5 POP PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x0 SWAP3 JUMPDEST DUP2 DUP5 LT PUSH2 0x2093 JUMPI POP POP ADD SWAP1 JUMP JUMPDEST DUP1 SLOAD DUP5 DUP5 ADD MSTORE PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x2086 JUMP JUMPDEST SWAP3 SWAP5 SWAP6 POP POP POP PUSH1 0xFF NOT AND DUP3 MSTORE ISZERO ISZERO PUSH1 0x20 MUL ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x345 SWAP2 PUSH2 0x2038 JUMP JUMPDEST SWAP1 PUSH2 0x2BE PUSH2 0x20E0 SWAP3 PUSH2 0x20D7 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP4 DUP5 DUP1 SWAP3 PUSH2 0x20BC JUMP JUMPDEST SUB DUP4 PUSH2 0xE65 JUMP JUMPDEST SWAP1 PUSH2 0x2BE PUSH2 0x2157 PUSH1 0x6 PUSH2 0x20F8 PUSH2 0xEA0 JUMP JUMPDEST SWAP5 PUSH2 0x2105 PUSH2 0x1BC3 DUP3 PUSH2 0xDE3 JUMP JUMPDEST PUSH2 0x2114 PUSH2 0x1BD6 PUSH1 0x1 DUP4 ADD PUSH2 0x20C6 JUMP JUMPDEST PUSH2 0x2123 PUSH2 0x1BEC PUSH1 0x2 DUP4 ADD PUSH2 0x20C6 JUMP JUMPDEST PUSH2 0x2132 PUSH2 0x1C02 PUSH1 0x3 DUP4 ADD PUSH2 0xDE3 JUMP JUMPDEST PUSH2 0x2148 PUSH2 0x2141 PUSH1 0x4 DUP4 ADD PUSH2 0xDE3 JUMP JUMPDEST PUSH1 0x80 DUP9 ADD MSTORE JUMP JUMPDEST PUSH2 0x1C7E PUSH2 0x1C30 PUSH1 0x5 DUP4 ADD PUSH2 0x13AE JUMP JUMPDEST PUSH1 0xC0 DUP5 ADD MSTORE JUMP JUMPDEST PUSH2 0x345 SWAP1 PUSH2 0x20E7 JUMP JUMPDEST PUSH2 0x2179 PUSH2 0x2174 PUSH1 0x9 PUSH2 0xDE3 JUMP JUMPDEST PUSH2 0x2001 JUMP JUMPDEST PUSH2 0x2183 PUSH1 0x0 PUSH2 0xE27 JUMP JUMPDEST PUSH2 0x2190 PUSH2 0x345 PUSH1 0x9 PUSH2 0xDE3 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x21CF JUMPI DUP1 PUSH2 0x21AE PUSH2 0x21A9 PUSH2 0x21CA SWAP4 PUSH1 0x3 PUSH2 0xF0D JUMP JUMPDEST PUSH2 0x215E JUMP JUMPDEST PUSH2 0x21B8 DUP3 DUP6 PUSH2 0x201E JUMP JUMPDEST MSTORE PUSH2 0x21C3 DUP2 DUP5 PUSH2 0x201E JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH2 0x2183 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x2BE SWAP3 SWAP2 PUSH2 0x21E1 PUSH2 0x3324 JUMP JUMPDEST PUSH2 0x221B JUMP JUMPDEST SWAP1 PUSH2 0x1742 PUSH2 0x345 PUSH2 0xE4B SWAP3 ISZERO ISZERO SWAP1 JUMP JUMPDEST SWAP1 PUSH3 0xFF0000 SWAP1 PUSH1 0x10 SHL PUSH2 0xE1D JUMP JUMPDEST SWAP1 PUSH2 0x2214 PUSH2 0x345 PUSH2 0xE4B SWAP3 ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x21F6 JUMP JUMPDEST PUSH2 0x2BE SWAP3 SWAP2 PUSH2 0x222E PUSH2 0x2235 SWAP3 PUSH1 0x14 PUSH2 0x10F0 JUMP JUMPDEST PUSH1 0x14 PUSH2 0x21E6 JUMP JUMPDEST PUSH1 0x14 PUSH2 0x2204 JUMP JUMPDEST SWAP1 PUSH2 0x2BE SWAP3 SWAP2 PUSH2 0x21D3 JUMP JUMPDEST PUSH2 0x21A9 PUSH2 0x345 SWAP2 PUSH2 0x2256 PUSH2 0x1FD5 JUMP JUMPDEST POP PUSH1 0x3 PUSH2 0xF0D JUMP JUMPDEST PUSH2 0x2BE SWAP1 PUSH2 0x226A PUSH2 0x3324 JUMP JUMPDEST PUSH2 0x230E JUMP JUMPDEST ISZERO PUSH2 0x2276 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x14D95CDCDA5BDB881B9BDD08195B991959 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x345 SWAP1 PUSH2 0x4B4 JUMP JUMPDEST PUSH2 0x345 SWAP1 SLOAD PUSH2 0x22AF JUMP JUMPDEST PUSH2 0x22CE PUSH2 0x2BA SWAP2 PUSH2 0x4B4 JUMP JUMPDEST PUSH1 0x60 SHL SWAP1 JUMP JUMPDEST ADD DUP1 SWAP3 PUSH2 0x22C2 JUMP JUMPDEST PUSH2 0x22E6 PUSH1 0x14 PUSH2 0x11CD JUMP JUMPDEST PUSH20 0x1593D5125391D7D4D154D4D253D397D153911151 PUSH1 0x62 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x345 PUSH2 0x22DC JUMP JUMPDEST SWAP1 PUSH2 0x231D PUSH2 0x345 DUP4 PUSH1 0x5 PUSH2 0xF0D JUMP JUMPDEST SWAP1 PUSH1 0x4 DUP3 ADD SWAP1 PUSH2 0x232F PUSH2 0x141F DUP4 PUSH2 0x13AE JUMP JUMPDEST PUSH2 0x2349 PUSH2 0x2341 PUSH2 0x345 PUSH1 0x2 DUP7 ADD PUSH2 0xDE3 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x226F JUMP JUMPDEST PUSH2 0x2355 PUSH1 0x0 DUP1 SWAP4 PUSH2 0x10F0 JUMP JUMPDEST PUSH1 0x5 DUP4 ADD SWAP4 PUSH2 0x2366 PUSH2 0x1E24 DUP7 PUSH2 0xDE3 JUMP JUMPDEST SWAP5 PUSH2 0x2371 PUSH1 0x0 PUSH2 0xE27 JUMP JUMPDEST PUSH2 0x237D PUSH2 0x345 DUP4 PUSH2 0xDE3 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x240C JUMPI PUSH2 0x2407 SWAP1 PUSH2 0x2401 PUSH2 0x135A PUSH2 0x23E1 PUSH1 0x4 PUSH2 0x23B6 PUSH1 0x1 PUSH2 0x1C7E DUP8 PUSH2 0x23B0 DUP15 PUSH2 0x23AA DUP4 DUP9 PUSH2 0xF0D JUMP JUMPDEST ADD PUSH2 0x22B8 JUMP JUMPDEST SWAP5 PUSH2 0xF0D JUMP JUMPDEST SWAP1 PUSH2 0x23C0 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP4 DUP5 SWAP3 PUSH1 0x20 DUP5 ADD SWAP3 DUP9 DUP5 PUSH1 0x20 SWAP4 SWAP3 PUSH2 0x18AF DUP6 DUP4 PUSH2 0x22D4 PUSH1 0x14 SWAP6 PUSH2 0x594 SWAP8 SWAP1 MSTORE JUMP JUMPDEST PUSH2 0x23F3 PUSH2 0x23EC DUP3 MLOAD SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST KECCAK256 PUSH2 0x23FE DUP4 DUP12 PUSH2 0x201E JUMP JUMPDEST MSTORE JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH2 0x2371 JUMP JUMPDEST POP PUSH32 0x5EBF5BA0A9D6578537B09FB99EAC524839499181CE448F968B5C9CA6C1B82B47 SWAP4 POP PUSH2 0x24A7 SWAP1 PUSH2 0x24A2 PUSH2 0x135A PUSH2 0x249A PUSH2 0x24AD SWAP6 SWAP9 PUSH2 0x245B PUSH2 0x2452 PUSH2 0x24C2 SWAP10 SWAP13 PUSH2 0x3654 JUMP JUMPDEST PUSH1 0x8 DUP4 ADD PUSH2 0x170D JUMP JUMPDEST PUSH2 0x2470 PUSH1 0x6 PUSH2 0x2469 DUP8 PUSH2 0xDE3 JUMP JUMPDEST SWAP3 ADD PUSH2 0xDE3 JUMP JUMPDEST SWAP1 PUSH2 0x247A PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP4 DUP5 SWAP3 PUSH1 0x20 DUP5 ADD SWAP3 DUP14 DUP5 PUSH1 0x20 SWAP4 SWAP3 PUSH2 0x18AF DUP6 DUP4 PUSH2 0x18AF DUP3 SWAP6 PUSH2 0x594 SWAP8 SWAP1 MSTORE JUMP JUMPDEST PUSH2 0x136E PUSH2 0x2306 JUMP JUMPDEST PUSH2 0xDE3 JUMP JUMPDEST SWAP4 PUSH2 0xE27 JUMP JUMPDEST SWAP3 PUSH2 0x24B7 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP2 DUP3 SWAP2 TIMESTAMP SWAP1 DUP4 PUSH2 0xAC4 JUMP JUMPDEST SUB SWAP1 LOG2 JUMP JUMPDEST PUSH2 0x2BE SWAP1 PUSH2 0x225E JUMP JUMPDEST PUSH2 0x24D8 PUSH2 0x3324 JUMP JUMPDEST PUSH2 0x2BE PUSH2 0x2BE PUSH2 0x3812 JUMP JUMPDEST PUSH2 0x2BE PUSH2 0x24D0 JUMP JUMPDEST SWAP1 PUSH2 0x345 SWAP3 SWAP2 PUSH2 0x24F9 PUSH2 0x3324 JUMP JUMPDEST PUSH2 0x2654 JUMP JUMPDEST SWAP1 PUSH2 0x1100 PUSH2 0x345 PUSH2 0xE4B SWAP3 PUSH2 0x3AA JUMP JUMPDEST PUSH1 0x8 PUSH2 0x25D5 PUSH2 0x120 PUSH2 0x2BE SWAP5 PUSH2 0x2528 PUSH2 0x1120 PUSH1 0x0 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x253F PUSH2 0x2536 PUSH1 0x20 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP8 ADD PUSH2 0xE34 JUMP JUMPDEST PUSH2 0x2556 PUSH2 0x254D PUSH1 0x40 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP8 ADD PUSH2 0xE34 JUMP JUMPDEST PUSH2 0x2564 PUSH2 0x1162 PUSH1 0x60 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x258E PUSH1 0x4 DUP7 ADD PUSH2 0x2581 PUSH2 0x257B PUSH1 0x80 DUP6 ADD MLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP3 PUSH2 0x10F0 JUMP JUMPDEST PUSH1 0xA0 DUP4 ADD MLOAD ISZERO ISZERO SWAP1 PUSH2 0x21E6 JUMP JUMPDEST PUSH2 0x25A5 PUSH2 0x259C PUSH1 0xC0 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x5 DUP8 ADD PUSH2 0xE34 JUMP JUMPDEST PUSH2 0x25BC PUSH2 0x25B3 PUSH1 0xE0 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x6 DUP8 ADD PUSH2 0xE34 JUMP JUMPDEST PUSH2 0x119B PUSH2 0x25CC PUSH2 0x100 DUP4 ADD PUSH2 0x171B JUMP JUMPDEST PUSH1 0x7 DUP8 ADD PUSH2 0x24FE JUMP JUMPDEST SWAP2 ADD PUSH2 0x170D JUMP JUMPDEST SWAP1 PUSH2 0x2BE SWAP2 PUSH2 0x250E JUMP JUMPDEST PUSH2 0x25F2 PUSH2 0x2BA SWAP2 PUSH2 0x3AA JUMP JUMPDEST PUSH1 0xF8 SHL SWAP1 JUMP JUMPDEST ADD DUP1 SWAP3 PUSH2 0x25E6 JUMP JUMPDEST PUSH2 0x260A PUSH1 0x16 PUSH2 0x11CD JUMP JUMPDEST PUSH22 0x1593D5125391D7D4D154D4D253D397D0D49150551151 PUSH1 0x52 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x345 PUSH2 0x2600 JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH2 0xAD7 PUSH2 0x2BE SWAP5 SWAP7 SWAP6 SWAP4 SWAP7 PUSH2 0x12CB PUSH1 0x60 DUP5 ADD SWAP9 PUSH1 0x0 DUP6 ADD SWAP1 PUSH2 0x3B3 JUMP JUMPDEST POP SWAP1 PUSH31 0x914BB2A5E0AC4484C74B57EC82229700DA233D0EED407C4CFF3EB82AAC23BF PUSH2 0x2700 PUSH2 0x278C PUSH2 0x2686 PUSH1 0xB PUSH2 0xDE3 JUMP JUMPDEST SWAP5 PUSH2 0x269A PUSH2 0x2693 DUP8 PUSH2 0xE03 JUMP JUMPDEST PUSH1 0xB PUSH2 0xE34 JUMP JUMPDEST PUSH2 0x2743 DUP7 PUSH2 0x272D PUSH2 0x271B PUSH2 0x26AE DUP6 TIMESTAMP PUSH2 0x18A2 JUMP JUMPDEST PUSH2 0x2707 PUSH2 0x26CE PUSH2 0x26BE DUP9 TIMESTAMP PUSH2 0x18A2 JUMP JUMPDEST PUSH2 0x26C8 PUSH1 0x13 PUSH2 0xDE3 JUMP JUMPDEST SWAP1 PUSH2 0x18A2 JUMP JUMPDEST PUSH1 0x0 SWAP10 DUP11 SWAP4 PUSH2 0x26EE PUSH2 0x26DF DUP7 PUSH2 0xE27 JUMP JUMPDEST SWAP9 PUSH2 0x26E8 PUSH2 0x15FD JUMP JUMPDEST SWAP14 DUP15 ADD MSTORE JUMP JUMPDEST PUSH2 0x26F9 TIMESTAMP PUSH1 0x20 DUP15 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 DUP13 ADD MSTORE JUMP JUMPDEST PUSH1 0x60 DUP11 ADD MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x80 DUP10 ADD MSTORE DUP1 ISZERO ISZERO PUSH1 0xA0 DUP10 ADD MSTORE PUSH2 0xE27 JUMP JUMPDEST PUSH2 0x2726 DUP2 PUSH1 0xC0 DUP10 ADD MSTORE JUMP JUMPDEST PUSH1 0xE0 DUP8 ADD MSTORE JUMP JUMPDEST PUSH2 0x273B DUP8 PUSH2 0x100 DUP8 ADD PUSH2 0x1612 JUMP JUMPDEST PUSH2 0x120 DUP6 ADD MSTORE JUMP JUMPDEST PUSH2 0x2757 DUP4 PUSH2 0x2752 DUP9 PUSH1 0x5 PUSH2 0xF0D JUMP JUMPDEST PUSH2 0x25DC JUMP JUMPDEST PUSH2 0x2784 PUSH2 0x2763 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 ADD DUP10 DUP2 MSTORE SWAP2 SWAP4 DUP5 SWAP3 SWAP2 PUSH2 0x135A SWAP2 PUSH2 0x594 PUSH1 0x1 DUP13 PUSH2 0x18AF DUP6 DUP9 PUSH2 0x25F8 JUMP JUMPDEST PUSH2 0x136E PUSH2 0x262C JUMP JUMPDEST PUSH2 0x27A2 PUSH1 0x40 PUSH2 0x279C PUSH1 0x20 DUP5 ADD MLOAD SWAP1 JUMP JUMPDEST SWAP3 ADD MLOAD SWAP1 JUMP JUMPDEST SWAP3 PUSH2 0x1391 PUSH2 0x27AF DUP7 PUSH2 0xE27 JUMP JUMPDEST SWAP5 PUSH2 0x27B9 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP4 DUP5 SWAP4 DUP5 PUSH2 0x2634 JUMP JUMPDEST PUSH2 0x345 SWAP2 SWAP1 PUSH1 0x0 PUSH2 0x24EB JUMP JUMPDEST PUSH2 0x27D6 PUSH2 0x15FD JUMP JUMPDEST SWAP1 PUSH1 0x0 DUP3 MSTORE PUSH1 0x20 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP12 ADD PUSH1 0x0 DUP2 MSTORE ADD PUSH1 0x60 PUSH2 0x1B5E JUMP JUMPDEST PUSH2 0x345 PUSH2 0x27CE JUMP JUMPDEST SWAP1 PUSH2 0x280B PUSH2 0x16C7 PUSH2 0x8A0 DUP5 SLOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x281C JUMPI POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 PUSH2 0x2840 PUSH2 0x2839 PUSH1 0x1 SWAP3 PUSH2 0x2831 DUP8 PUSH2 0xDE3 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP5 PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 ADD PUSH2 0x280F JUMP JUMPDEST SWAP1 PUSH2 0x345 SWAP2 PUSH2 0x27FC JUMP JUMPDEST SWAP1 PUSH2 0x2BE PUSH2 0x20E0 SWAP3 PUSH2 0x2863 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP4 DUP5 DUP1 SWAP3 PUSH2 0x2848 JUMP JUMPDEST SWAP1 PUSH2 0x2BE PUSH2 0x291E PUSH1 0x8 PUSH2 0x287D PUSH2 0x15FD JUMP JUMPDEST SWAP5 PUSH2 0x2890 PUSH2 0x288A DUP3 PUSH2 0x22B8 JUMP JUMPDEST DUP8 PUSH2 0x1608 JUMP JUMPDEST PUSH2 0x289F PUSH2 0x1BD6 PUSH1 0x1 DUP4 ADD PUSH2 0xDE3 JUMP JUMPDEST PUSH2 0x28AE PUSH2 0x1BEC PUSH1 0x2 DUP4 ADD PUSH2 0x2852 JUMP JUMPDEST PUSH2 0x28BD PUSH2 0x1C02 PUSH1 0x3 DUP4 ADD PUSH2 0xDE3 JUMP JUMPDEST PUSH2 0x28CC PUSH2 0x2141 PUSH1 0x4 DUP4 ADD PUSH2 0xDE3 JUMP JUMPDEST PUSH2 0x28E2 PUSH2 0x28DB PUSH1 0x5 DUP4 ADD PUSH2 0xDE3 JUMP JUMPDEST PUSH1 0xA0 DUP9 ADD MSTORE JUMP JUMPDEST PUSH2 0x28F1 PUSH2 0x1C48 PUSH1 0x6 DUP4 ADD PUSH2 0xDE3 JUMP JUMPDEST PUSH2 0x2900 PUSH2 0x1C5E PUSH1 0x7 DUP4 ADD PUSH2 0xDE3 JUMP JUMPDEST PUSH2 0x2918 PUSH2 0x290E DUP4 DUP4 ADD PUSH2 0x13AE JUMP JUMPDEST ISZERO ISZERO PUSH2 0x100 DUP9 ADD MSTORE JUMP JUMPDEST ADD PUSH2 0x1B9B JUMP JUMPDEST PUSH2 0x120 DUP5 ADD PUSH2 0x1612 JUMP JUMPDEST PUSH2 0x345 SWAP1 PUSH2 0x286C JUMP JUMPDEST PUSH2 0x2948 PUSH2 0x345 SWAP2 PUSH2 0x2940 PUSH2 0x27F4 JUMP JUMPDEST POP PUSH1 0x4 PUSH2 0xF0D JUMP JUMPDEST PUSH2 0x2928 JUMP JUMPDEST PUSH2 0x345 PUSH1 0x2 PUSH2 0x13AE JUMP JUMPDEST PUSH2 0x295F PUSH2 0x3324 JUMP JUMPDEST PUSH2 0x2BE PUSH2 0x297D JUMP JUMPDEST PUSH2 0x4B4 PUSH2 0x345 PUSH2 0x345 SWAP3 SWAP1 JUMP JUMPDEST PUSH2 0x345 SWAP1 PUSH2 0x2967 JUMP JUMPDEST PUSH2 0x2BE PUSH2 0x298A PUSH1 0x0 PUSH2 0x2974 JUMP JUMPDEST PUSH2 0x381A JUMP JUMPDEST PUSH2 0x2BE PUSH2 0x2957 JUMP JUMPDEST PUSH2 0x345 PUSH1 0xA0 PUSH2 0xE8C JUMP JUMPDEST PUSH2 0x29A9 PUSH2 0x2997 JUMP JUMPDEST SWAP1 PUSH1 0x0 DUP3 MSTORE PUSH1 0x20 DUP1 DUP1 DUP1 DUP1 DUP7 ADD PUSH1 0x0 DUP2 MSTORE ADD PUSH1 0x60 DUP2 MSTORE ADD PUSH1 0x0 DUP2 MSTORE ADD PUSH1 0x60 SWAP1 MSTORE POP JUMP JUMPDEST PUSH2 0x345 PUSH2 0x29A1 JUMP JUMPDEST SWAP1 PUSH2 0xF17 JUMP JUMPDEST SWAP1 PUSH2 0x29E9 PUSH2 0x16C7 PUSH2 0x8A0 DUP5 SLOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x29FA JUMPI POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 PUSH2 0x2A0F PUSH2 0x2839 PUSH1 0x1 SWAP3 PUSH2 0x2831 DUP8 PUSH2 0xDE3 JUMP JUMPDEST SWAP3 SWAP2 ADD PUSH2 0x29ED JUMP JUMPDEST SWAP1 PUSH2 0x345 SWAP2 PUSH2 0x29DA JUMP JUMPDEST SWAP1 PUSH2 0x2BE PUSH2 0x20E0 SWAP3 PUSH2 0x2A32 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP4 DUP5 DUP1 SWAP3 PUSH2 0x2A17 JUMP JUMPDEST SWAP1 PUSH2 0x2BE PUSH2 0x2A95 PUSH1 0x4 PUSH2 0x2A4C PUSH2 0x2997 JUMP JUMPDEST SWAP5 PUSH2 0x2A59 PUSH2 0x1BC3 DUP3 PUSH2 0xDE3 JUMP JUMPDEST PUSH2 0x2A71 PUSH2 0x2A68 PUSH1 0x1 DUP4 ADD PUSH2 0x22B8 JUMP JUMPDEST PUSH1 0x20 DUP9 ADD PUSH2 0x1608 JUMP JUMPDEST PUSH2 0x2A80 PUSH2 0x1BEC PUSH1 0x2 DUP4 ADD PUSH2 0x20C6 JUMP JUMPDEST PUSH2 0x2A8F PUSH2 0x1C02 PUSH1 0x3 DUP4 ADD PUSH2 0xDE3 JUMP JUMPDEST ADD PUSH2 0x2A21 JUMP JUMPDEST PUSH1 0x80 DUP5 ADD MSTORE JUMP JUMPDEST PUSH2 0x345 SWAP1 PUSH2 0x2A3B JUMP JUMPDEST PUSH2 0x2ABC PUSH2 0x345 SWAP2 PUSH2 0x2AB4 PUSH2 0x29CC JUMP JUMPDEST POP PUSH1 0x8 PUSH2 0x29D4 JUMP JUMPDEST PUSH2 0x2A9C JUMP JUMPDEST PUSH2 0x1CAC PUSH2 0x2AD0 SWAP2 PUSH2 0x1CA4 PUSH1 0x0 SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x345 PUSH1 0xE0 PUSH2 0x2AE1 PUSH1 0xC0 DUP6 ADD MLOAD SWAP1 JUMP JUMPDEST SWAP4 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x2AEF PUSH2 0x3324 JUMP JUMPDEST PUSH2 0x2BE PUSH2 0x2BE PUSH2 0x38AE JUMP JUMPDEST PUSH2 0x2BE PUSH2 0x2AE7 JUMP JUMPDEST PUSH2 0x345 PUSH1 0x0 PUSH2 0x22B8 JUMP JUMPDEST ISZERO PUSH2 0x2B13 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x4E6F7420796F757220766F7465 PUSH1 0x98 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x2B4F JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x159BDD1948185B1C9958591E481C995D99585B1959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x2B93 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x4E6F7420612064697265637420766F7465 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x2BD3 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x125B9D985B1A590818DBDB5B5A5D1B595B9D PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x2C17 PUSH1 0xD PUSH2 0x11CD JUMP JUMPDEST PUSH13 0x1593D51157D491559150531151 PUSH1 0x9A SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x345 PUSH2 0x2C0D JUMP JUMPDEST PUSH2 0x135A PUSH2 0x2D24 PUSH2 0x2D2C SWAP5 SWAP4 PUSH2 0x24A2 SWAP4 PUSH2 0x2CDB PUSH1 0x1 PUSH2 0x2C5A PUSH2 0x345 DUP5 PUSH1 0x4 PUSH2 0xF0D JUMP JUMPDEST SWAP8 PUSH2 0x2C7F PUSH2 0x2C67 DUP11 PUSH2 0x22B8 JUMP JUMPDEST PUSH2 0x2C79 PUSH2 0x2C73 CALLER PUSH2 0x4B4 JUMP JUMPDEST SWAP2 PUSH2 0x4B4 JUMP JUMPDEST EQ PUSH2 0x2B0C JUMP JUMPDEST PUSH2 0x1ECB PUSH2 0x2CD6 PUSH1 0x8 DUP12 ADD SWAP3 PUSH2 0x2C9E PUSH2 0x2C99 PUSH2 0x1DE2 DUP7 PUSH2 0x13AE JUMP JUMPDEST PUSH2 0x2B48 JUMP JUMPDEST PUSH2 0x2CC3 PUSH2 0x2CAA DUP6 PUSH2 0x1B9B JUMP JUMPDEST PUSH2 0x2CBD PUSH2 0x2CB7 PUSH1 0x0 PUSH2 0x3A0 JUMP JUMPDEST SWAP2 PUSH2 0x3A0 JUMP JUMPDEST EQ PUSH2 0x2B8C JUMP JUMPDEST PUSH2 0x2CCF PUSH1 0x3 DUP14 ADD PUSH2 0xDE3 JUMP JUMPDEST SWAP1 DUP9 PUSH2 0x38B6 JUMP JUMPDEST PUSH2 0x2BCC JUMP JUMPDEST PUSH2 0x2D06 PUSH1 0x1 PUSH2 0x2CEC PUSH1 0x6 DUP10 ADD PUSH2 0xDE3 JUMP JUMPDEST SWAP8 ADD SWAP7 PUSH2 0x1F0D PUSH1 0x3 PUSH2 0x1F13 PUSH2 0x2D00 DUP12 PUSH2 0xDE3 JUMP JUMPDEST DUP3 PUSH2 0xF0D JUMP JUMPDEST PUSH1 0x40 MLOAD JUMPDEST SWAP4 DUP5 SWAP3 PUSH1 0x20 DUP5 ADD SWAP3 DUP4 PUSH1 0x20 DUP2 PUSH2 0x18AF PUSH2 0x594 SWAP4 DUP4 SWAP7 SWAP6 SWAP1 MSTORE JUMP JUMPDEST PUSH2 0x136E PUSH2 0x2C30 JUMP JUMPDEST PUSH2 0x2D38 PUSH2 0x1F60 CALLER PUSH2 0x4F4 JUMP JUMPDEST SWAP1 PUSH32 0xF65A04BE847D83385F9A7ABCF32CFB35055023A4AFFCC7EAA319160746F44528 PUSH2 0x2D63 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST TIMESTAMP DUP2 MSTORE DUP1 PUSH1 0x20 DUP2 ADD JUMPDEST SUB SWAP1 LOG3 JUMP JUMPDEST PUSH2 0x345 SWAP2 PUSH2 0x1DD8 PUSH2 0x1DDD SWAP3 PUSH2 0x2D84 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x6 PUSH2 0x1518 JUMP JUMPDEST PUSH2 0x345 SWAP1 PUSH2 0x26C8 PUSH1 0x4 PUSH2 0x1C7E PUSH1 0x3 SWAP4 PUSH2 0x23B0 DUP6 PUSH2 0x1C7E DUP4 DUP3 PUSH2 0xF0D JUMP JUMPDEST SWAP1 PUSH2 0x345 SWAP4 SWAP3 SWAP2 PUSH2 0x2DC3 PUSH2 0x141F PUSH1 0x4 PUSH2 0x1419 DUP6 PUSH1 0x5 PUSH2 0xF0D JUMP JUMPDEST SWAP1 PUSH2 0x345 SWAP4 SWAP3 SWAP2 PUSH2 0x2DDD PUSH2 0x1484 PUSH1 0x5 PUSH2 0x1419 DUP7 PUSH1 0x3 PUSH2 0xF0D JUMP JUMPDEST SWAP1 PUSH2 0x345 SWAP4 SWAP3 SWAP2 PUSH2 0x2DF1 PUSH2 0x345 PUSH1 0x10 PUSH2 0xDE3 JUMP JUMPDEST DUP5 LT ISZERO DUP1 PUSH2 0x2E08 JUMPI JUMPDEST PUSH2 0x2E03 SWAP1 PUSH2 0x148E JUMP JUMPDEST PUSH2 0x3078 JUMP JUMPDEST POP PUSH2 0x2E03 PUSH2 0x2E19 PUSH2 0x345 PUSH1 0x11 PUSH2 0xDE3 JUMP JUMPDEST DUP6 GT ISZERO SWAP1 POP PUSH2 0x2DFA JUMP JUMPDEST ISZERO PUSH2 0x2E2A JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C69717569642064656D6F63726163792064697361626C656400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0x2BE DUP3 PUSH2 0xBE8 JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0x2BE DUP3 PUSH2 0x2F3 JUMP JUMPDEST SWAP1 SWAP3 SWAP2 SWAP3 PUSH2 0x2E99 PUSH2 0xEE3 DUP3 PUSH2 0x15B0 JUMP JUMPDEST SWAP4 DUP2 DUP6 MSTORE PUSH1 0x20 DUP1 DUP7 ADD SWAP3 MUL DUP4 ADD SWAP3 DUP2 DUP5 GT PUSH2 0x237 JUMPI SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x2EBD JUMPI POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 SWAP2 PUSH2 0x2ECB DUP5 DUP7 PUSH2 0x2E6F JUMP JUMPDEST DUP2 MSTORE ADD SWAP3 ADD SWAP2 PUSH2 0x2EB0 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x237 JUMPI DUP2 MLOAD PUSH2 0x345 SWAP3 PUSH1 0x20 ADD PUSH2 0x2E89 JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0x2BE DUP3 PUSH2 0x6B0 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x120 DUP2 DUP5 SUB SLT PUSH2 0x237 JUMPI PUSH2 0x2F16 PUSH2 0x120 PUSH2 0xE8C JUMP JUMPDEST SWAP3 PUSH2 0x2F21 DUP2 DUP4 PUSH2 0x2E6F JUMP JUMPDEST DUP5 MSTORE PUSH2 0x2F30 DUP2 PUSH1 0x20 DUP5 ADD PUSH2 0x2E7C JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MSTORE PUSH2 0x2F42 DUP2 PUSH1 0x40 DUP5 ADD PUSH2 0x2E7C JUMP JUMPDEST PUSH1 0x40 DUP6 ADD MSTORE PUSH2 0x2F54 DUP2 PUSH1 0x60 DUP5 ADD PUSH2 0x2E7C JUMP JUMPDEST PUSH1 0x60 DUP6 ADD MSTORE PUSH2 0x2F66 DUP2 PUSH1 0x80 DUP5 ADD PUSH2 0x2E6F JUMP JUMPDEST PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP3 ADD MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x237 JUMPI PUSH2 0x2F8F DUP2 PUSH2 0x2FC3 SWAP4 DUP6 ADD PUSH2 0x2ED6 JUMP JUMPDEST PUSH1 0xA0 DUP7 ADD MSTORE PUSH2 0x2FA1 DUP2 PUSH1 0xC0 DUP6 ADD PUSH2 0x2EF0 JUMP JUMPDEST PUSH1 0xC0 DUP7 ADD MSTORE PUSH2 0x2FB3 DUP2 PUSH1 0xE0 DUP6 ADD PUSH2 0x2E7C JUMP JUMPDEST PUSH1 0xE0 DUP7 ADD MSTORE PUSH2 0x100 DUP1 SWAP4 ADD PUSH2 0x2E7C JUMP JUMPDEST SWAP1 DUP4 ADD MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x237 JUMPI DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x237 JUMPI PUSH2 0x345 SWAP3 ADD PUSH2 0x2EFD JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x3002 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E7420766F74696E6720706F77657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x3051 PUSH1 0x13 PUSH2 0x11CD JUMP JUMPDEST PUSH19 0x1111531151D055115117D593D51157D0D054D5 PUSH1 0x6A SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x345 PUSH2 0x3047 JUMP JUMPDEST POP PUSH2 0x308B PUSH2 0x3086 PUSH1 0x14 PUSH2 0x1B9B JUMP JUMPDEST PUSH2 0x2E23 JUMP JUMPDEST PUSH1 0x6 SWAP3 PUSH2 0x30A5 PUSH2 0x1DE6 PUSH2 0x1DE2 PUSH2 0x1DDD DUP6 PUSH2 0x1DD8 CALLER DUP11 PUSH2 0x1518 JUMP JUMPDEST PUSH2 0x30B7 PUSH2 0x30B2 PUSH1 0xE PUSH2 0x22B8 JUMP JUMPDEST PUSH2 0x4F4 JUMP JUMPDEST SWAP1 PUSH1 0x0 PUSH2 0x30C3 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 SWAP1 PUSH4 0x1A9EA1F3 PUSH1 0xE3 SHL DUP3 MSTORE DUP2 DUP1 PUSH2 0x30DF CALLER PUSH1 0x4 DUP4 ADD PUSH2 0xB6F JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x324B JUMPI PUSH2 0x31E6 SWAP4 PUSH2 0x311E PUSH2 0x310C PUSH1 0x60 PUSH2 0x31DE SWAP6 PUSH2 0x135A SWAP8 PUSH1 0x0 SWAP2 PUSH2 0x322A JUMPI JUMPDEST POP ADD MLOAD SWAP1 JUMP JUMPDEST DUP4 SWAP1 PUSH2 0x3117 JUMP JUMPDEST SWAP2 SWAP1 JUMP JUMPDEST LT ISZERO PUSH2 0x2FFB JUMP JUMPDEST PUSH2 0x1F23 PUSH2 0x312B PUSH1 0xA PUSH2 0xDE3 JUMP JUMPDEST SWAP8 PUSH2 0x3138 PUSH2 0x1E05 DUP11 PUSH2 0xE03 JUMP JUMPDEST PUSH2 0x3197 DUP9 PUSH2 0x317D PUSH1 0x0 PUSH2 0x3172 PUSH2 0x3150 PUSH2 0x1E24 DUP4 PUSH2 0xE27 JUMP JUMPDEST PUSH2 0x315C PUSH2 0x1E35 DUP5 PUSH2 0xE27 JUMP JUMPDEST PUSH2 0x3167 DUP2 PUSH1 0x60 DUP8 ADD MSTORE JUMP JUMPDEST PUSH2 0x1E72 DUP2 PUSH1 0x80 DUP8 ADD MSTORE JUMP JUMPDEST PUSH2 0x1E84 DUP9 PUSH1 0xC0 DUP6 ADD MSTORE JUMP JUMPDEST PUSH2 0x318C PUSH1 0x1 PUSH2 0x120 DUP4 ADD PUSH2 0x1612 JUMP JUMPDEST PUSH2 0x1EB3 DUP12 PUSH1 0x4 PUSH2 0xF0D JUMP JUMPDEST PUSH2 0x31AA PUSH1 0x1 PUSH2 0x1ECB DUP6 PUSH2 0x1DD8 CALLER DUP7 PUSH2 0x1518 JUMP JUMPDEST PUSH2 0x31BC DUP10 PUSH2 0x1EE2 PUSH2 0x345 CALLER PUSH1 0x7 PUSH2 0x1518 JUMP JUMPDEST PUSH2 0x31D0 DUP4 PUSH1 0x5 PUSH2 0x1DD8 DUP2 PUSH2 0x1EFB DUP5 DUP3 PUSH2 0xF0D JUMP JUMPDEST ADD PUSH2 0x1F0D DUP5 PUSH2 0x1F1E DUP4 PUSH2 0xDE3 JUMP JUMPDEST PUSH2 0x136E PUSH2 0x3070 JUMP JUMPDEST PUSH2 0x31F2 PUSH2 0x1F60 CALLER PUSH2 0x4F4 JUMP JUMPDEST SWAP1 PUSH32 0x2C9DEB38F462962EADBD85A9D3A4120503EE091F1582EAAA10AA8C6797651D29 PUSH2 0x321D PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST DUP1 PUSH2 0x1F9E TIMESTAMP PUSH1 0x1 DUP4 PUSH2 0x18DC JUMP JUMPDEST PUSH2 0x3245 SWAP2 RETURNDATASIZE DUP1 SWAP2 DUP4 RETURNDATACOPY PUSH2 0x323D DUP2 DUP4 PUSH2 0xE65 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x2FC9 JUMP JUMPDEST CODESIZE PUSH2 0x3106 JUMP JUMPDEST PUSH2 0x2FEF JUMP JUMPDEST PUSH2 0x345 SWAP3 SWAP2 SWAP1 PUSH1 0x0 PUSH2 0x2DA9 JUMP JUMPDEST SWAP1 PUSH2 0x2BE SWAP4 SWAP3 SWAP2 PUSH2 0x326C PUSH2 0x3324 JUMP JUMPDEST SWAP2 PUSH2 0x328A PUSH2 0x3291 SWAP3 PUSH2 0x3283 PUSH2 0x2BE SWAP7 SWAP6 PUSH1 0x10 PUSH2 0xE34 JUMP JUMPDEST PUSH1 0x11 PUSH2 0xE34 JUMP JUMPDEST PUSH1 0x12 PUSH2 0xE34 JUMP JUMPDEST PUSH1 0x13 PUSH2 0xE34 JUMP JUMPDEST SWAP1 PUSH2 0x2BE SWAP4 SWAP3 SWAP2 PUSH2 0x325D JUMP JUMPDEST PUSH2 0x345 SWAP1 PUSH2 0x2852 JUMP JUMPDEST PUSH2 0x32C4 PUSH2 0x345 SWAP2 PUSH2 0x32BC PUSH1 0x60 SWAP1 JUMP JUMPDEST POP PUSH1 0x7 PUSH2 0x1518 JUMP JUMPDEST PUSH2 0x32A4 JUMP JUMPDEST PUSH2 0x2BE SWAP1 PUSH2 0x32D5 PUSH2 0x3324 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x32E0 DUP2 PUSH2 0x2974 JUMP JUMPDEST PUSH2 0x32E9 DUP2 PUSH2 0x4B4 JUMP JUMPDEST PUSH2 0x32F2 DUP5 PUSH2 0x4B4 JUMP JUMPDEST EQ PUSH2 0x3302 JUMPI POP POP PUSH2 0x2BE SWAP1 PUSH2 0x381A JUMP JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP3 MSTORE DUP2 SWAP1 PUSH2 0x13FA SWAP1 PUSH1 0x4 DUP4 ADD PUSH2 0xB6F JUMP JUMPDEST PUSH2 0x2BE SWAP1 PUSH2 0x32C9 JUMP JUMPDEST PUSH2 0x332C PUSH2 0x2B02 JUMP JUMPDEST CALLER SWAP1 PUSH2 0x333A PUSH2 0x2C73 DUP4 PUSH2 0x4B4 JUMP JUMPDEST SUB PUSH2 0x3342 JUMPI POP JUMP JUMPDEST PUSH4 0x118CDAA7 PUSH1 0xE0 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP1 PUSH2 0x335B SWAP1 PUSH1 0x4 PUSH2 0xB6F JUMP JUMPDEST SUB PUSH1 0x0 REVERT JUMPDEST PUSH2 0x594 PUSH2 0x3378 SWAP3 PUSH1 0x20 SWAP3 PUSH2 0x3372 DUP2 MLOAD SWAP1 JUMP JUMPDEST SWAP5 DUP6 SWAP3 SWAP1 JUMP JUMPDEST SWAP4 DUP5 SWAP2 ADD PUSH2 0x53D JUMP JUMPDEST SWAP3 PUSH2 0x18AF PUSH2 0x11DA PUSH2 0x594 SWAP5 PUSH2 0x339A PUSH1 0x20 SWAP9 SWAP8 DUP10 SWAP7 PUSH2 0x3360 JUMP JUMPDEST SWAP1 PUSH2 0x3360 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0xF8A PUSH2 0x345 PUSH2 0xE4B SWAP4 SWAP1 JUMP JUMPDEST PUSH2 0x2BE SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x33A0 JUMP JUMPDEST DUP2 DUP2 LT PUSH2 0x33C6 JUMPI POP POP JUMP JUMPDEST DUP1 PUSH2 0x33D4 PUSH1 0x0 PUSH1 0x1 SWAP4 PUSH2 0x33AF JUMP JUMPDEST ADD PUSH2 0x33BB JUMP JUMPDEST SWAP2 SWAP1 SWAP2 DUP3 DUP3 LT PUSH2 0x33E9 JUMPI POP POP POP JUMP JUMPDEST PUSH2 0x2BE SWAP3 SWAP2 PUSH2 0x33F7 SWAP1 PUSH2 0x1665 JUMP JUMPDEST SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x33BB JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x40 SHL DUP2 GT PUSH2 0xE87 JUMPI DUP2 PUSH2 0x3419 PUSH2 0x2BE SWAP4 SLOAD SWAP1 JUMP JUMPDEST SWAP1 DUP3 DUP2 SSTORE PUSH2 0x33DA JUMP JUMPDEST DUP2 MLOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0xE87 JUMPI PUSH2 0x3447 PUSH2 0x16C7 PUSH1 0x1 SWAP3 PUSH2 0x16C1 DUP7 DUP7 PUSH2 0x3401 JUMP JUMPDEST SWAP3 DIV SWAP2 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x345A JUMPI POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SWAP1 PUSH1 0x20 PUSH2 0x346A PUSH2 0x345 DUP7 MLOAD SWAP1 JUMP JUMPDEST SWAP5 ADD SWAP4 DUP2 DUP5 ADD SSTORE ADD PUSH2 0x344D JUMP JUMPDEST SWAP1 PUSH2 0x2BE SWAP2 PUSH2 0x3422 JUMP JUMPDEST PUSH1 0x4 PUSH2 0x34D4 PUSH1 0x80 PUSH2 0x2BE SWAP5 PUSH2 0x34A0 PUSH2 0x349A PUSH1 0x0 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST DUP7 PUSH2 0x170D JUMP JUMPDEST PUSH2 0x34B8 PUSH2 0x34AF PUSH1 0x20 DUP4 ADD PUSH2 0x161C JUMP JUMPDEST PUSH1 0x1 DUP8 ADD PUSH2 0x1635 JUMP JUMPDEST PUSH2 0x34C6 PUSH2 0x114B PUSH1 0x40 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x119B PUSH2 0x1162 PUSH1 0x60 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST SWAP2 ADD PUSH2 0x3477 JUMP JUMPDEST SWAP1 PUSH2 0x2BE SWAP2 PUSH2 0x3481 JUMP JUMPDEST SWAP3 SWAP2 PUSH1 0x20 PUSH2 0x1260 PUSH2 0x2BE SWAP4 PUSH1 0x40 DUP8 ADD SWAP1 DUP8 DUP3 SUB PUSH1 0x0 DUP10 ADD MSTORE PUSH2 0x560 JUMP JUMPDEST SWAP1 PUSH2 0x135A PUSH2 0x3532 PUSH2 0x35AC SWAP3 PUSH2 0x3517 PUSH1 0xC PUSH2 0xDE3 JUMP JUMPDEST SWAP1 PUSH2 0x3521 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP4 DUP5 SWAP3 PUSH1 0x20 DUP5 ADD SWAP3 TIMESTAMP SWAP1 DUP10 DUP6 PUSH2 0x3381 JUMP JUMPDEST PUSH2 0x353D PUSH2 0x23EC DUP3 MLOAD SWAP1 JUMP JUMPDEST KECCAK256 PUSH2 0x3595 PUSH2 0x354E PUSH2 0x1E24 PUSH1 0x0 PUSH2 0xE27 JUMP JUMPDEST PUSH2 0x3585 PUSH2 0x3559 PUSH2 0x2997 JUMP JUMPDEST SWAP2 PUSH2 0x3562 DUP6 DUP5 MSTORE JUMP JUMPDEST PUSH2 0x356F CALLER PUSH1 0x20 DUP6 ADD PUSH2 0x1608 JUMP JUMPDEST PUSH2 0x357A DUP8 PUSH1 0x40 DUP6 ADD MSTORE JUMP JUMPDEST PUSH2 0x12FE TIMESTAMP PUSH1 0x60 DUP6 ADD MSTORE JUMP JUMPDEST PUSH2 0x3590 DUP4 PUSH1 0x8 PUSH2 0x29D4 JUMP JUMPDEST PUSH2 0x34DB JUMP JUMPDEST PUSH2 0x345 PUSH2 0x35A5 PUSH2 0x1F08 PUSH1 0xC PUSH2 0xDE3 JUMP JUMPDEST PUSH1 0xC PUSH2 0xE34 JUMP JUMPDEST PUSH32 0xF6D3F32241786CAD73E665A475DD59E4AFF37EE43093B5504C05D73D3806F9EF PUSH2 0x2D6C PUSH2 0x35D9 CALLER PUSH2 0x4F4 JUMP JUMPDEST SWAP4 PUSH2 0x35E3 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP2 DUP3 SWAP2 TIMESTAMP SWAP1 DUP4 PUSH2 0x34E5 JUMP JUMPDEST ISZERO PUSH2 0x35F5 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x456D707479206C6561766573206172726179 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x364F JUMPI DIV SWAP1 JUMP JUMPDEST PUSH2 0x362F JUMP JUMPDEST SWAP1 PUSH2 0x3673 PUSH2 0x3660 DUP4 MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x366D PUSH2 0x3113 PUSH1 0x0 PUSH2 0xE27 JUMP JUMPDEST GT PUSH2 0x35EE JUMP JUMPDEST DUP2 MLOAD SWAP2 PUSH1 0x1 SWAP3 PUSH2 0x3685 PUSH2 0x3113 DUP6 PUSH2 0xE27 JUMP JUMPDEST EQ PUSH2 0x37B2 JUMPI PUSH2 0x369E PUSH2 0x3695 DUP3 MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x26C8 DUP6 PUSH2 0xE27 JUMP JUMPDEST SWAP3 PUSH2 0x36B7 PUSH2 0x1E24 PUSH1 0x2 SWAP6 PUSH2 0x36B1 DUP8 PUSH2 0xE27 JUMP JUMPDEST SWAP1 PUSH2 0x3645 JUMP JUMPDEST SWAP2 DUP2 PUSH2 0x36C3 PUSH1 0x0 PUSH2 0xE27 JUMP JUMPDEST SWAP1 JUMPDEST PUSH2 0x36D8 JUMPI JUMPDEST POP POP POP PUSH2 0x345 SWAP2 SWAP3 POP PUSH2 0x38E9 JUMP JUMPDEST PUSH2 0x36E3 PUSH2 0x345 DUP4 MLOAD SWAP1 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x37AD JUMPI SWAP1 PUSH2 0x3782 DUP4 SWAP3 PUSH2 0x3702 PUSH2 0x36FC DUP6 PUSH2 0xE27 JUMP JUMPDEST DUP3 PUSH2 0x18A2 JUMP JUMPDEST PUSH2 0x3710 PUSH2 0x3113 PUSH2 0x345 DUP7 MLOAD SWAP1 JUMP JUMPDEST LT ISZERO PUSH2 0x3789 JUMPI PUSH2 0x3779 PUSH2 0x135A PUSH2 0x3758 PUSH2 0x3730 PUSH2 0x372C DUP6 DUP9 PUSH2 0x201E JUMP JUMPDEST MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x374E PUSH2 0x372C PUSH2 0x3748 PUSH2 0x3742 DUP12 PUSH2 0xE27 JUMP JUMPDEST DUP9 PUSH2 0x18A2 JUMP JUMPDEST DUP10 PUSH2 0x201E JUMP JUMPDEST SWAP1 PUSH2 0x2D0A PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x3763 PUSH2 0x23EC DUP3 MLOAD SWAP1 JUMP JUMPDEST KECCAK256 PUSH2 0x23FE PUSH2 0x3748 PUSH2 0x3773 DUP13 PUSH2 0xE27 JUMP JUMPDEST DUP6 PUSH2 0x3645 JUMP JUMPDEST PUSH2 0x26C8 DUP9 PUSH2 0xE27 JUMP JUMPDEST SWAP1 SWAP2 PUSH2 0x36C5 JUMP JUMPDEST PUSH2 0x37A8 PUSH2 0x3799 PUSH2 0x372C DUP4 DUP7 PUSH2 0x201E JUMP JUMPDEST PUSH2 0x23FE PUSH2 0x3748 PUSH2 0x3773 DUP13 PUSH2 0xE27 JUMP JUMPDEST PUSH2 0x3779 JUMP JUMPDEST PUSH2 0x36CA JUMP JUMPDEST PUSH2 0x345 SWAP2 SWAP3 POP PUSH2 0x372C SWAP1 PUSH2 0x37C6 PUSH1 0x0 PUSH2 0xE27 JUMP JUMPDEST SWAP1 PUSH2 0x201E JUMP JUMPDEST PUSH2 0x37D4 PUSH2 0x396A JUMP JUMPDEST PUSH2 0x2BE PUSH2 0x37E3 PUSH1 0x0 PUSH1 0x2 PUSH2 0x10F0 JUMP JUMPDEST PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x380D CALLER PUSH2 0xB9A JUMP JUMPDEST SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x2BE PUSH2 0x37CC JUMP JUMPDEST PUSH2 0x383B PUSH2 0x3835 PUSH2 0x382A PUSH1 0x0 PUSH2 0x22B8 JUMP JUMPDEST PUSH2 0x30B2 DUP5 PUSH1 0x0 PUSH2 0x1635 JUMP JUMPDEST SWAP2 PUSH2 0x4F4 JUMP JUMPDEST SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH2 0x3866 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x2D6C JUMP JUMPDEST PUSH2 0x3875 PUSH2 0x398D JUMP JUMPDEST PUSH2 0x2BE PUSH2 0x3884 PUSH1 0x1 PUSH1 0x2 PUSH2 0x10F0 JUMP JUMPDEST PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x380D CALLER PUSH2 0xB9A JUMP JUMPDEST PUSH2 0x2BE PUSH2 0x386D JUMP JUMPDEST PUSH2 0x135A PUSH2 0x38D5 PUSH2 0x38E5 SWAP4 PUSH2 0x3113 SWAP4 PUSH2 0x38CC PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x2D0A JUMP JUMPDEST PUSH2 0x38E0 PUSH2 0x23EC DUP3 MLOAD SWAP1 JUMP JUMPDEST KECCAK256 SWAP3 SWAP1 JUMP JUMPDEST EQ SWAP1 JUMP JUMPDEST SWAP1 DUP2 MLOAD SWAP2 PUSH1 0x1 SWAP3 PUSH2 0x38FC PUSH2 0x3113 DUP6 PUSH2 0xE27 JUMP JUMPDEST EQ PUSH2 0x37B2 JUMPI PUSH2 0x390C PUSH2 0x3695 DUP3 MLOAD SWAP1 JUMP JUMPDEST SWAP3 PUSH2 0x391F PUSH2 0x1E24 PUSH1 0x2 SWAP6 PUSH2 0x36B1 DUP8 PUSH2 0xE27 JUMP JUMPDEST SWAP2 DUP2 PUSH2 0x392B PUSH1 0x0 PUSH2 0xE27 JUMP JUMPDEST SWAP1 JUMPDEST PUSH2 0x393F JUMPI POP POP POP PUSH2 0x345 SWAP2 SWAP3 POP PUSH2 0x38E9 JUMP JUMPDEST PUSH2 0x394A PUSH2 0x345 DUP4 MLOAD SWAP1 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x37AD JUMPI SWAP1 PUSH2 0x3963 DUP4 SWAP3 PUSH2 0x3702 PUSH2 0x36FC DUP6 PUSH2 0xE27 JUMP JUMPDEST SWAP1 SWAP2 PUSH2 0x392D JUMP JUMPDEST PUSH2 0x3975 PUSH2 0x1DE2 PUSH2 0x294D JUMP JUMPDEST PUSH2 0x397B JUMPI JUMP JUMPDEST PUSH4 0x8DFC202B PUSH1 0xE0 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH2 0x3995 PUSH2 0x294D JUMP JUMPDEST PUSH2 0x399B JUMPI JUMP JUMPDEST PUSH4 0xD93C0665 PUSH1 0xE0 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATACOPY LOG3 0x25 TLOAD PUSH15 0x3C6CA3C3AE5ED666A3157D36341E81 SWAP14 0xCA BLOCKHASH INVALID DUP3 0xE6 0xAC 0xEA TSTORE SWAP10 0xB7 0x4F PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"594:20401:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;:::o;:::-;:::o;:::-;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;-1:-1:-1;594:20401:8;;;:::o;:::-;;:::i;:::-;;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;594:20401:8;;;;;;;;;:::i;2835:38::-;;;;;:::i;594:20401::-;;;;;-1:-1:-1;;;;;594:20401:8;;;;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;594:20401:8;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;594:20401:8;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;:::i;:::-;;;-1:-1:-1;594:20401:8;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;:::i;2988:29::-;;;;;:::i;594:20401::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;:::i;:::-;;;:::i;:::-;;-1:-1:-1;594:20401:8;;;:::o;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;:::i;2925:28::-;;;;;:::i;594:20401::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;3166:34::-;;;;;:::i;594:20401::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;:::i;2880:38::-;;;;;:::i;594:20401::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;:::i;:::-;;;:::i;3060:31::-;;;;;:::i;594:20401::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;:::i;3024:29::-;;;;;:::i;594:20401::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;:::i;3207:29::-;;;;;:::i;594:20401::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;3132:27::-;;;;;:::i;594:20401::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;:::i;:::-;;:::i;3098:27::-;;;;;:::i;594:20401::-;;;;;;;;:::i;:::-;;;;:::i;1500:62:0:-;;1554:1;1500:62;;;;;;:::i;:::-;1554:1;:::i;594:20401:8:-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;594:20401:8;;;;;;;:::o;:::-;;:::i;:::-;;-1:-1:-1;;594:20401:8;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;594:20401:8;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;594:20401:8;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;-1:-1:-1;;594:20401:8;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;594:20401:8;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;594:20401:8;;;;;;;;;;;;;;;;-1:-1:-1;594:20401:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;594:20401:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;:::o;:::-;;;;:::i;:::-;-1:-1:-1;;;594:20401:8;;;;;:::o;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;5856:732;-1:-1:-1;5856:732:8;;6476:65;;;6030:18;;;:::i;:::-;;;;;;:::i;:::-;;;:::i;:::-;6069:276;6095:250;;:::i;:::-;;;;594:20401;;6095:250;;;;;;:::i;:::-;;;;594:20401;;6095:250;;;;;;:::i;:::-;;;;594:20401;;6095:250;;;6219:1;6095:250;:::i;:::-;;;;;;594:20401;;6095:250;;;;594:20401;;6095:250;6281:4;6095:250;;;594:20401;6095:250;6318:15;6095:250;;;594:20401;;6095:250;6069:23;;:10;:23;:::i;:::-;:276;:::i;:::-;6366:84;6404:45;594:20401;;;;6404:45;;;;;;;;;;;;;;594:20401;;;;;;;;;;;;;6404:45;;;;;;;;;:::i;:::-;6366:84;;:::i;:::-;;:::i;:::-;6476:65;;;:::i;:::-;;;594:20401;;;;6476:65;6318:15;;;;6476:65;;;:::i;:::-;;;;5856:732;:::o;:::-;5984:19;;5856:732;;;594:20401;5984:19;:::i;594:20401::-;;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;-1:-1:-1;;;594:20401:8;;;;;;;;;;;;-1:-1:-1;;;594:20401:8;;;;;;;;;;;;4232:142;;4365:1;4232:142;;;;4289:65;4297:34;;:25;;:14;:25;:::i;:::-;:34;;:::i;:::-;4289:65;:::i;:::-;4365:1;:::i;594:20401::-;;;;:::o;:::-;;;-1:-1:-1;;;594:20401:8;;;;;;;;;;;;-1:-1:-1;;;594:20401:8;;;;;;;4382:142;;4515:1;4382:142;;;;4442:62;4450:32;;:23;;:10;:23;:::i;:32::-;4442:62;:::i;:::-;4515:1;:::i;594:20401::-;;;;:::o;:::-;;;-1:-1:-1;;;594:20401:8;;;;;;;;;;;;-1:-1:-1;;;594:20401:8;;;;;;;4532:159;;4682:1;4532:159;;;;4596:23;4605:14;;;:::i;4596:23::-;;;;:50;;;4532:159;4588:83;;;:::i;:::-;4682:1;:::i;4596:50::-;4632:14;4588:83;4623:23;4632:14;;;:::i;4623:23::-;;;;4596:50;;;;594:20401;;;;;:::i;:::-;;;;:::o;:::-;;;-1:-1:-1;;;594:20401:8;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;594:20401:8;;;;;;;;;;;;-1:-1:-1;;;594:20401:8;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;:::i;:::-;;;;:::o;:::-;;;;;;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;594:20401:8;;;;;:::i;:::-;;;;:::i;:::-;;;;;:::i;:::-;;;;;:::i;:::-;;;;;:::i;:::-;;-1:-1:-1;;;;;594:20401:8;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;-1:-1:-1;;;594:20401:8;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;-1:-1:-1;;;594:20401:8;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;:::o;:::-;;;;;:::o;:::-;;;;:::i;:::-;-1:-1:-1;;;594:20401:8;;;;;:::o;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;8121:1558::-;-1:-1:-1;8459:8:8;;8468:10;8459:20;8468:10;8459:8;:20;:::i;:::-;:31;;;;:::i;:::-;;;;:::i;:::-;8458:32;8450:74;;;:::i;:::-;8562:14;:25;;;;;:::i;:::-;:33;;;;;:::i;:::-;8543:15;:52;;8535:84;;;:::i;:::-;8649:13;;;:::i;:::-;;;;;:::i;:::-;;;;;:::i;:::-;8841:1;8827:16;;;;:::i;:::-;;;;:::i;:::-;8916:10;;;;:::i;:::-;8713:417;;;:::i;:::-;8468:10;8713:417;8468:10;8713:417;;;;:::i;:::-;;;;;;594:20401;;8713:417;;;;594:20401;8713:417;;;594:20401;8713:417;;;;;594:20401;;8713:417;;;;594:20401;8713:417;;;;;594:20401;;8713:417;;8543:15;8713:417;;;594:20401;;8713:417;594:20401;;;8713:417;;;594:20401;8713:417;;;;;;:::i;:::-;9151:13;;:5;:13;:::i;:::-;:23;;;;:::i;:::-;8468:10;9185:20;8468:10;9185:20;;:::i;:::-;:31;;;;:::i;:::-;9219:4;9185:38;;;:::i;:::-;8468:10;9234:22;8468:10;9234;:22;:::i;:::-;:35;;;;:::i;:::-;9328:25;;;;;;:::i;:::-;:36;:38;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;9377:25;;;:::i;:::-;:42;:57;;;;:::i;:::-;;;;;:::i;:::-;;;;:::i;:::-;9482:61;;594:20401;;;;9482:61;;;;;;;;;;;;594:20401;;;;;;;;;;;;;;;;;9482:61;;;;;;;;;;;:::i;:::-;9455:89;;:::i;:::-;;;;;:::i;:::-;9570:67;8468:10;9570:67;:::i;:::-;;;;;:::i;:::-;;;594:20401;;;;9570:67;8543:15;;;9570:67;;;;:::i;:::-;;;;;8121:1558;:::o;:::-;8417:14;;8121:1558;;;594:20401;8417:14;:::i;594:20401::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;594:20401:8:o;:::-;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;:::i;16847:141::-;16955:25;16948:32;16847:141;16915:20;;:::i;:::-;16955:25;:14;:25;:::i;:::-;16948:32;:::i;4232:142::-;;4365:1;4232:142;;;;4289:65;4297:34;;:25;;:14;:25;:::i;4289:65::-;4382:142;4515:1;4382:142;;;;4442:62;4450:32;;:23;;:10;:23;:::i;4442:62::-;4532:159;4682:1;4532:159;;;;4596:23;4605:14;;;:::i;4596:23::-;;;;:50;;;4532:159;4588:83;;;:::i;:::-;4682:1;:::i;4596:50::-;4632:14;4588:83;4623:23;4632:14;;;:::i;4623:23::-;;;;4596:50;;;;594:20401;;;;:::o;:::-;;;-1:-1:-1;;;594:20401:8;;;;;;;;;;;;-1:-1:-1;;;594:20401:8;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;594:20401:8;;;;;:::o;:::-;;;:::i;9997:1523::-;11291:92;9997:1523;;11321:61;9997:1523;11213:57;10391:20;9997:1523;11321:61;9997:1523;10333:15;10325:46;10333:15;;;:::i;:::-;10325:46;:::i;:::-;10382:74;10390:32;10391:31;;:8;;10400:10;;;10391:20;;:::i;:::-;:31;:::i;:::-;;:::i;:::-;10390:32;;594:20401;10390:32;10382:74;:::i;:::-;11213:57;10486:13;;;:::i;:::-;;;;;;:::i;:::-;;;:::i;:::-;10987:23;10678:1;10550:416;10678:1;10550:416;10664:16;;;;:::i;:::-;;:::i;:::-;10550:416;10711:10;;;:::i;:::-;10550:416;;;;:::i;:::-;10400:10;10550:416;10400:10;10550:416;;;;:::i;:::-;;;;594:20401;;10550:416;;;;594:20401;;10550:416;;;;;;594:20401;;10550:416;;;;;;594:20401;;10550:416;;;;594:20401;;10550:416;;;;;;594:20401;;10550:416;;10865:15;10550:416;;;594:20401;;10550:416;594:20401;;10550:416;;;594:20401;;10550:416;;10937:17;10550:416;;;;:::i;:::-;10987:13;;:5;:13;:::i;:::-;:23;:::i;:::-;11021:38;11055:4;11021:31;10400:10;11021:20;10400:10;11021:20;;:::i;:31::-;:38;:::i;:::-;11070:35;10400:10;11070:27;:22;10400:10;11070;:22;:::i;:27::-;:35;:::i;:::-;11213:25;11164:14;;:38;:25;;;;;:::i;:::-;:36;:38;;;;:::i;:::-;;:::i;:::-;;;:::i;11213:25::-;:42;:57;;;;:::i;:::-;;:::i;:::-;594:20401;;11321:61;;;;;;;;;;594:20401;;;;;;;;;;;;;;;;;11321:61;11291:92;;:::i;:::-;11409:69;;10400:10;11409:69;:::i;:::-;;;:::i;:::-;;;;594:20401;;;;11409:69;10865:15;11409:69;10865:15;10937:17;11409:69;;:::i;:::-;;;;9997:1523;:::o;:::-;10292:14;;9997:1523;;;594:20401;10292:14;:::i;594:20401::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;594:20401:8;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;16147:305::-;16264:33;16280:16;;;:::i;:::-;16264:33;:::i;:::-;16313:13;16325:1;16313:13;:::i;:::-;16328:20;16332:16;;;:::i;16328:20::-;;;;;;16389:10;16370:32;16389:13;16350:3;16389:10;;:13;:::i;:::-;16370:32;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;-1:-1:-1;594:20401:8;;;;16350:3;16313:13;;16328:20;;16147:305;:::o;1500:62:0:-;;1554:1;1500:62;;;;:::i;:::-;1554:1;:::i;594:20401:8:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;18833:313::-;19100:38;18833:313;;18996:34;19041:48;18833:313;18996:34;;:::i;:::-;19041:48;;:::i;:::-;19100:38;;:::i;18833:313::-;;;;;;:::i;15909:133::-;16011:23;16004:30;15909:133;15975:16;;:::i;:::-;16011:23;:10;:23;:::i;1500:62:0:-;1554:1;1500:62;;;:::i;:::-;1554:1;:::i;594:20401:8:-;;;;:::o;:::-;;;-1:-1:-1;;;594:20401:8;;;;;;;;;;;;-1:-1:-1;;;594:20401:8;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;:::i;:::-;-1:-1:-1;;;594:20401:8;;;;;:::o;:::-;;;:::i;14794:932::-;;14869:57;14901:25;;:14;:25;:::i;14869:57::-;14945:16;;;;;14937:47;14945:16;;;:::i;14937:47::-;14995:64;15003:34;15022:15;;;;;:::i;15003:34::-;:15;:34;;14995:64;:::i;:::-;15080:24;15099:5;;15080:24;;:::i;:::-;14901:14;15215:18;;;15201:33;15215:18;;;:::i;15201:33::-;15250:13;;15099:5;15250:13;:::i;:::-;15265:22;15269:18;;;:::i;15265:22::-;;;;;;15289:3;;15309:84;15335:57;;15355:5;15371:20;;:8;15355:5;:14;:5;:8;:5;;:8;:::i;:::-;:14;;:::i;:::-;15371:8;;:::i;:20::-;15335:57;;594:20401;;;;15335:57;;;;;;;;;;594:20401;;;;;;;;;;;;;;15335:57;15325:68;;;594:20401;;;15325:68;;594:20401;;;;15325:68;;15309:84;;;;:::i;:::-;594:20401;;15309:84;594:20401;;;;15289:3;15250:13;;15265:22;;15652:66;15265:22;;15682:18;15265:22;15514:112;15552:73;;15652:66;15265:22;;15415:78;15436:57;15652:66;15265:22;;15436:57;:::i;:::-;15415:18;;;:78;:::i;:::-;15600:24;;15580:18;;;:::i;:::-;15600:24;;;:::i;:::-;15552:73;;594:20401;;;;15552:73;;;;;;;;;;594:20401;;;;;;;;;;;;;;15552:73;15514:112;;:::i;:::-;15682:18;:::i;:::-;15652:66;;:::i;:::-;;;594:20401;;;;15652:66;15003:15;;;;15652:66;;;:::i;:::-;;;;14794:932::o;:::-;;;;:::i;1500:62:0:-;;;:::i;:::-;1554:1;19329:67:8;;:::i;:::-;;;:::i;1500:62:0:-;;1554:1;1500:62;;;;:::i;:::-;1554:1;:::i;594:20401:8:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;:::i;:::-;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;:::i;:::-;-1:-1:-1;;;594:20401:8;;;;;:::o;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::i;6813:977::-;-1:-1:-1;6813:977:8;7666:79;7050:419;7549:91;6979:16;;;:::i;:::-;;;;;;:::i;:::-;;;:::i;:::-;7050:419;7125:15;7050:419;;7164:33;7125:15;;7164:33;:::i;:::-;7050:419;7224:48;:33;7125:15;;7224:33;:::i;:::-;7260:12;;;:::i;:::-;7224:48;;:::i;:::-;7328:5;7447:10;;;7050:419;7447:10;;;:::i;:::-;7050:419;;;:::i;:::-;;;;594:20401;;7050:419;;7125:15;7050:419;;;594:20401;;7050:419;;;;594:20401;;7050:419;;;;594:20401;;7050:419;7297:4;7050:419;;;594:20401;;;;7050:419;;;594:20401;7050:419;:::i;:::-;;;;;;594:20401;;7050:419;;;;594:20401;;7050:419;;;;;;;:::i;:::-;;;;594:20401;;7050:419;7490:38;:25;;;:14;:25;:::i;:::-;:38;:::i;:::-;7589:50;;594:20401;;;;7589:50;;;;;594:20401;;;7589:50;;;;;;;594:20401;;7589:50;594:20401;7589:50;;594:20401;;7589:50;7549:91;;:::i;:::-;7726:18;;7704:20;;;;594:20401;;;7704:20;7726:18;;594:20401;;;7726:18;7666:79;;;;;:::i;:::-;;;594:20401;;;;7666:79;;;;;;:::i;6813:977::-;6937:17;;6813:977;594:20401;6937:17;:::i;594:20401::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;:::i;16582:116::-;16677:13;16670:20;16582:116;16638:19;;:::i;:::-;16677:13;:5;:13;:::i;:::-;16670:20;:::i;1726:84:2:-;1796:7;;;:::i;1500:62:0:-;;;:::i;:::-;1554:1;;:::i;594:20401:8:-;;;;;;;;;;;:::i;2293:101:0:-;2376:10;;2384:1;2376:10;:::i;:::-;;:::i;2293:101::-;;;:::i;594:20401:8:-;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;594:20401:8:o;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;:::i;17742:134::-;17845:23;17838:30;17742:134;17808:17;;:::i;:::-;17845:23;:11;:23;:::i;:::-;17838:30;:::i;20739:253::-;20895:25;20864:56;20739:253;20807:18;594:20401;;;20864:56;20939:18;20959:24;;20939:18;;;;594:20401;;;20939:18;20959:24;;594:20401;;;1500:62:0;;;:::i;:::-;1554:1;19205:63:8;;:::i;:::-;;;:::i;1638:85:0:-;1710:6;;;:::i;594:20401:8:-;;;;:::o;:::-;;;-1:-1:-1;;;594:20401:8;;;;;;;;;;;;-1:-1:-1;;;594:20401:8;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;594:20401:8;;;;;;;;;;;;-1:-1:-1;;;594:20401:8;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;594:20401:8;;;;;;;;;;;;-1:-1:-1;;;594:20401:8;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;594:20401:8;;;;;;;;;;;;-1:-1:-1;;;594:20401:8;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;594:20401:8;;;;;:::o;:::-;;;:::i;13785:878::-;14531:38;;14621:16;13785:878;;14500:70;13785:878;14338:22;14356:4;13917:41;13945:13;;:5;:13;:::i;13917:41::-;13977:10;13969:50;13977:10;;;:::i;:::-;:24;;13991:10;13977:24;:::i;:::-;;;:::i;:::-;;13969:50;:::i;:::-;14204:113;14212:82;14039:15;;;;14030:50;14038:16;14039:15;;;:::i;14038:16::-;14030:50;:::i;:::-;14091:62;14099:13;;;:::i;:::-;:32;;14116:15;14099:32;:::i;:::-;;;:::i;:::-;;14091:62;:::i;:::-;14274:19;;;;;:::i;:::-;14212:82;;;:::i;:::-;14204:113;:::i;14338:22::-;14421:58;14356:4;14463:16;;;;;:::i;:::-;14432;;;14421:58;:10;:28;14432:16;;;:::i;:::-;14421:28;;:::i;:58::-;594:20401;;14531:38;;;;;;;;;594:20401;;;;;;;;;;;14531:38;14500:70;;:::i;14621:16::-;14596:59;;13991:10;14596:59;:::i;:::-;;;;594:20401;;;;14596:59;14639:15;594:20401;;14639:15;594:20401;;;14596:59;;;;13785:878::o;17452:138::-;17556:26;17452:138;17556:15;:26;17452:138;17532:4;594:20401;;;17532:4;17556:15;:8;:15;:::i;20330:189::-;20433:78;;20469:42;;:23;20433:10;:23;:33;:23;;;;;:::i;4232:142::-;;4365:1;4232:142;;;4289:65;4297:34;;:25;;:14;:25;:::i;4289:65::-;4382:142;4515:1;4382:142;;;4442:62;4450:32;;:23;;:10;:23;:::i;4442:62::-;4532:159;4682:1;4532:159;;;4596:23;4605:14;;;:::i;4596:23::-;;;;:50;;;4532:159;4588:83;;;:::i;:::-;4682:1;:::i;4596:50::-;4632:14;4588:83;4623:23;4632:14;;;:::i;4623:23::-;;;;4596:50;;;;594:20401;;;;:::o;:::-;;;-1:-1:-1;;;594:20401:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;594:20401:8;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;594:20401:8;;;;;:::o;:::-;;;:::i;11803:1762::-;12116:22;12108:60;12116:22;;;:::i;:::-;12108:60;:::i;:::-;12188:8;12197:10;12179:74;12187:32;12188:31;;12197:10;12188:20;12197:10;12188:20;;:::i;12179:74::-;12377:24;:15;;;:::i;:::-;:24;:::i;:::-;:36;;;594:20401;;;;12377:36;;;;-1:-1:-1;;;12377:36:8;;12197:10;;12377:36;12197:10;12377:36;;;;:::i;:::-;;;;;;;;;;13328:99;12377:36;12424:69;12432:16;;13365:61;12377:36;13365:61;12377:36;-1:-1:-1;12377:36:8;;;11803:1762;12432:16;;594:20401;;;12432:16;:31;;;594:20401;12432:31;;594:20401;;12432:31;;;12424:69;:::i;:::-;13250:57;12523:13;;;:::i;:::-;;;;;;:::i;:::-;13024:23;12715:1;12587:416;12715:1;12587:416;12701:16;;;;:::i;:::-;12587:416;12748:10;;;:::i;12587:416::-;;;;;;594:20401;;12587:416;;;;;;594:20401;;12587:416;;;;;;594:20401;;12587:416;;12973:18;12587:416;;;;:::i;:::-;13024:13;;:5;:13;:::i;:23::-;13058:38;12973:18;13058:31;12197:10;13058:20;12197:10;13058:20;;:::i;:38::-;13107:35;12197:10;13107:27;:22;12197:10;13107;:22;:::i;:35::-;13250:25;13201:14;;:38;:25;;;;;:::i;13250:::-;:42;:57;;;;;:::i;13365:61::-;13328:99;;:::i;:::-;13453:70;;12197:10;13453:70;:::i;:::-;;;;594:20401;;;;13453:70;12901:15;13453:70;12901:15;12973:18;13453:70;;:::i;12377:36::-;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;11803:1762::-;12075:14;;11803:1762;;594:20401;12075:14;:::i;1500:62:0:-;;1554:1;1500:62;;;;;:::i;:::-;18189:374:8;18437:32;18480:36;18189:374;18394:32;18527:28;18189:374;;18394:32;;:::i;:::-;18437;;:::i;:::-;18480:36;;:::i;:::-;18527:28;;:::i;18189:374::-;;;;;;;:::i;594:20401::-;;;;:::i;17127:122::-;17224:17;17217:24;17127:122;17188:16;594:20401;;;17188:16;17224:17;:10;:17;:::i;:::-;17217:24;:::i;1500:62:0:-;1554:1;1500:62;;;:::i;:::-;2647:1;2639:10;;;:::i;:::-;2627:22;;;:::i;:::-;;;;:::i;:::-;;2623:91;;2742:8;;;;;:::i;2623:91::-;-1:-1:-1;;;2672:31:0;;;;;;;;;;:::i;2543:215::-;;;;:::i;1796:162::-;1855:7;;:::i;:::-;735:10:1;1855:23:0;;;;;:::i;:::-;;1851:101;;1796:162;:::o;1851:101::-;-1:-1:-1;;;1901:40:0;;;;;;;;;:::i;:::-;;;;594:20401:8;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;-1:-1:-1;;;594:20401:8;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;19577:599::-;;19692:61;;20104:64;19577:599;19740:12;;;:::i;:::-;19692:61;;594:20401;;;;19692:61;;;;;;;19723:15;;19692:61;;;;:::i;:::-;19682:72;;;594:20401;;;19682:72;;20022:31;19973:16;;19987:1;19973:16;:::i;:::-;19801:200;;;:::i;:::-;;;;;594:20401;;19801:200;;19871:10;19801:200;;;;:::i;:::-;;;;;;594:20401;;19801:200;;19723:15;19801:200;;;594:20401;;19801:200;20022:23;;:11;:23;:::i;:::-;:31;:::i;:::-;20064:14;;;;;:::i;:::-;;;:::i;20104:64::-;;;;19871:10;20104:64;:::i;:::-;;;594:20401;;;;20104:64;19723:15;;;;20104:64;;;:::i;594:20401::-;;;;:::o;:::-;;;-1:-1:-1;;;594:20401:8;;;;;;;;;;;;-1:-1:-1;;;594:20401:8;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;7514:748:13:-;;7659:48;7667:13;;594:20401:8;;;7667:13:13;:17;;7683:1;7667:17;:::i;:::-;;7659:48;:::i;:::-;594:20401:8;;7749:1:13;;7732:18;;;;;:::i;:::-;;7728:67;;7862:17;:13;;594:20401:8;;;7862:13:13;:17;;;:::i;:::-;7883:1;7847:38;7861:23;7883:1;7861:23;;;;:::i;:::-;;;:::i;7847:38::-;7911:13;;;7683:1;7911:13;:::i;:::-;7906:282;7911:13;;;7906:282;8215:39;;;;;;;;:::i;7945:6::-;7926:17;7930:13;;594:20401:8;;;7926:17:13;;;;;;7972:5;7945:6;7972:5;;;;;;:::i;:::-;;;:::i;:::-;:21;;7980:13;;594:20401:8;;;7972:21:13;;7968:209;;;8014:75;8046:42;;8063:9;;;;;:::i;:::-;594:20401:8;;;8063:9:13;8074:13;;8081:5;;;;:::i;:::-;;;:::i;:::-;8074:13;;:::i;:::-;8046:42;;594:20401:8;;;;8046:42:13;8036:53;;;594:20401:8;;;8036:53:13;;8014:75;8027:5;;;;:::i;:::-;;;:::i;8014:75::-;7945:6;;;:::i;:::-;7911:13;;;;7968:209;8130:31;8152:9;;;;;:::i;:::-;8130:31;8143:5;;;;:::i;8130:31::-;7968:209;;7926:17;;;7728:67;7774:9;;;;;;;7683:1;7774:9;:::i;:::-;;;:::i;1565:66:2:-;;;:::i;:::-;1623:1;2644:15;2654:5;2644:15;;:::i;:::-;2674:22;;735:10:1;2683:12:2;656:96:1;2674:22:2;;;;2586:117::o;:::-;;;:::i;2912:187:0:-;3052:40;;3004:6;;;:::i;:::-;3020:17;;;;:::i;3052:40::-;;;:::i;:::-;;;;594:20401:8;;;;3052:40:0;;;;594:20401:8;1315:72:2;;;:::i;:::-;1379:1;2398:14;2408:4;2398:14;;:::i;:::-;2427:20;;735:10:1;2434:12:2;656:96:1;2339:115:2;;;:::i;2143:292:13:-;2344:34;;2397:30;2143:292;2397:30;2143:292;2286:12;594:20401:8;;;2286:12:13;-1:-1:-1;594:20401:8;;2344:34:13;594:20401:8;2344:34:13;2334:45;;;594:20401:8;;;2334:45:13;;2397:30;594:20401:8;;2397:30:13;;2143:292;:::o;8425:656::-;;594:20401:8;;8587:1:13;;8571:17;;;;;:::i;:::-;;8567:65;;8696:16;:12;;594:20401:8;;;8696:16:13;8716:1;8681:37;8695:22;8716:1;8695:22;;;;:::i;8681:37::-;8744:13;;;8756:1;8744:13;:::i;:::-;8739:271;8744:13;;;9037:36;;;;;;;;:::i;8777:6::-;8759:16;8763:12;;594:20401:8;;;8759:16:13;;;;;;8804:5;8777:6;8804:5;;;;;;:::i;8777:6::-;8744:13;;;;2078:126:2;2140:9;2141:8;;:::i;2140:9::-;2136:62;;2078:126::o;2136:62::-;-1:-1:-1;;;2172:15:2;;;;;;1901:40:0;1878:128:2;1943:8;;:::i;:::-;1939:61;;1878:128::o;1939:61::-;-1:-1:-1;;;1974:15:2;;;;;;1901:40:0"},"methodIdentifiers":{"castDelegatedVote(uint256,uint256,uint256)":"b4483aa7","castVote(uint256,uint256,bytes32,uint256)":"1119501e","castZKVote(uint256,uint256,bytes32,uint256)":"2966d67a","commitmentPeriod()":"8a3c5f9b","createVotingSession(uint256,uint8)":"42ab9786","endVotingSession(uint256)":"35bb3d30","getAllCandidates()":"2e6997fe","getAuditTrail(bytes32)":"73a8ce8b","getCandidate(uint256)":"35b8e820","getCandidateTotalVotes(uint256)":"abdd80a3","getSessionTotals(uint256)":"7c25e889","getVote(uint256)":"5a55c1f0","getVoterVotes(address)":"cf042511","getVotingSession(uint256)":"1943c90b","hasVoterVoted(address,uint256)":"9b541f76","liquidDemocracy()":"7dabdd99","liquidDemocracyEnabled()":"5414e58e","maxVotingPower()":"9ef0fb85","minVotingPower()":"36fffde0","owner()":"8da5cb5b","pause()":"8456cb59","paused()":"5c975abb","registerCandidate(string,string)":"0dbce4dd","renounceOwnership()":"715018a6","revealPeriod()":"f9604681","revealVote(uint256,bytes32,bytes32)":"8ed1fde7","setFeatures(bool,bool,bool)":"33845e52","transferOwnership(address)":"f2fde38b","unpause()":"3f4ba83a","updateVotingParameters(uint256,uint256,uint256,uint256)":"bac7c890","voteMixing()":"4650baa1","voteMixingEnabled()":"c7a800af","zkProofVerifier()":"2beb449e","zkProofsEnabled()":"dd304e3e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_zkProofVerifier\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_liquidDemocracy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_voteMixing\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_minVotingPower\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxVotingPower\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_commitmentPeriod\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_revealPeriod\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"actionHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"actor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"action\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"AuditLogCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"candidateId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"ipfsHash\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"CandidateRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"power\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"DelegationCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"candidateId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum BlocPolAdvanced.VoteType\",\"name\":\"voteType\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"VoteCast\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"originalVote\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"mixedVote\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"VoteMixed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"candidateId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"VoteRevealed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"sessionId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum BlocPolAdvanced.VotingMode\",\"name\":\"mode\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"}],\"name\":\"VotingSessionCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"sessionId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalVotes\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"VotingSessionEnded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"proofHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isValid\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"ZKProofVerified\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"sessionId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"candidateId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"votingPower\",\"type\":\"uint256\"}],\"name\":\"castDelegatedVote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"voteId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"sessionId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"candidateId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"commitmentHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"votingPower\",\"type\":\"uint256\"}],\"name\":\"castVote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"voteId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"sessionId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"candidateId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"zkProofHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"votingPower\",\"type\":\"uint256\"}],\"name\":\"castZKVote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"voteId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"commitmentPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"durationSeconds\",\"type\":\"uint256\"},{\"internalType\":\"enum BlocPolAdvanced.VotingMode\",\"name\":\"mode\",\"type\":\"uint8\"}],\"name\":\"createVotingSession\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"sessionId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"sessionId\",\"type\":\"uint256\"}],\"name\":\"endVotingSession\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllCandidates\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"ipfsHash\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"voteCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"delegatedVoteCount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"registrationTime\",\"type\":\"uint256\"}],\"internalType\":\"struct BlocPolAdvanced.Candidate[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"actionHash\",\"type\":\"bytes32\"}],\"name\":\"getAuditTrail\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"actionHash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"actor\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"action\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"}],\"internalType\":\"struct BlocPolAdvanced.AuditTrail\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"candidateId\",\"type\":\"uint256\"}],\"name\":\"getCandidate\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"ipfsHash\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"voteCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"delegatedVoteCount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"registrationTime\",\"type\":\"uint256\"}],\"internalType\":\"struct BlocPolAdvanced.Candidate\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"candidateId\",\"type\":\"uint256\"}],\"name\":\"getCandidateTotalVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"sessionId\",\"type\":\"uint256\"}],\"name\":\"getSessionTotals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalVotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalVotingPower\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"voteId\",\"type\":\"uint256\"}],\"name\":\"getVote\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"candidateId\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"rankedChoices\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes32\",\"name\":\"commitmentHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"zkProofHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"mixedVoteHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"votingPower\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isRevealed\",\"type\":\"bool\"},{\"internalType\":\"enum BlocPolAdvanced.VoteType\",\"name\":\"voteType\",\"type\":\"uint8\"}],\"internalType\":\"struct BlocPolAdvanced.AdvancedVote\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"}],\"name\":\"getVoterVotes\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"sessionId\",\"type\":\"uint256\"}],\"name\":\"getVotingSession\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"sessionId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"revealTime\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isRevealed\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"totalVotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalVotingPower\",\"type\":\"uint256\"},{\"internalType\":\"enum BlocPolAdvanced.VotingMode\",\"name\":\"mode\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"}],\"internalType\":\"struct BlocPolAdvanced.VotingSession\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"sessionId\",\"type\":\"uint256\"}],\"name\":\"hasVoterVoted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidDemocracy\",\"outputs\":[{\"internalType\":\"contract LiquidDemocracy\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidDemocracyEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxVotingPower\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minVotingPower\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"ipfsHash\",\"type\":\"string\"}],\"name\":\"registerCandidate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"candidateId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"revealPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"voteId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"originalVote\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"randomness\",\"type\":\"bytes32\"}],\"name\":\"revealVote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_zkProofsEnabled\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"_liquidDemocracyEnabled\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"_voteMixingEnabled\",\"type\":\"bool\"}],\"name\":\"setFeatures\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_minVotingPower\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxVotingPower\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_commitmentPeriod\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_revealPeriod\",\"type\":\"uint256\"}],\"name\":\"updateVotingParameters\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"voteMixing\",\"outputs\":[{\"internalType\":\"contract VoteMixing\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"voteMixingEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"zkProofVerifier\",\"outputs\":[{\"internalType\":\"contract ZKProofVerifier\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"zkProofsEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Advanced blockchain voting system with ZK-proofs, liquid democracy, and vote mixing\",\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"castDelegatedVote(uint256,uint256,uint256)\":{\"details\":\"Casts a delegated vote using liquid democracy\",\"params\":{\"candidateId\":\"The candidate to vote for\",\"sessionId\":\"The voting session ID\",\"votingPower\":\"The voting power to use\"},\"returns\":{\"voteId\":\"The ID of the cast vote\"}},\"castVote(uint256,uint256,bytes32,uint256)\":{\"details\":\"Casts a vote with commitment scheme\",\"params\":{\"candidateId\":\"The candidate to vote for\",\"commitmentHash\":\"Commitment hash of the vote\",\"sessionId\":\"The voting session ID\",\"votingPower\":\"The voting power to use\"},\"returns\":{\"voteId\":\"The ID of the cast vote\"}},\"castZKVote(uint256,uint256,bytes32,uint256)\":{\"details\":\"Casts a vote with ZK-proof verification\",\"params\":{\"candidateId\":\"The candidate to vote for\",\"sessionId\":\"The voting session ID\",\"votingPower\":\"The voting power to use\",\"zkProofHash\":\"ZK-proof hash\"},\"returns\":{\"voteId\":\"The ID of the cast vote\"}},\"createVotingSession(uint256,uint8)\":{\"details\":\"Creates a new voting session\",\"params\":{\"durationSeconds\":\"Duration of the voting session\",\"mode\":\"Voting mode to use\"},\"returns\":{\"sessionId\":\"The ID of the created session\"}},\"endVotingSession(uint256)\":{\"details\":\"Ends a voting session and calculates results\",\"params\":{\"sessionId\":\"The session ID to end\"}},\"getAllCandidates()\":{\"details\":\"Gets all candidates\",\"returns\":{\"_0\":\"Array of candidate structures\"}},\"getAuditTrail(bytes32)\":{\"details\":\"Gets audit trail information\",\"params\":{\"actionHash\":\"The action hash\"},\"returns\":{\"_0\":\"The audit trail structure\"}},\"getCandidate(uint256)\":{\"details\":\"Gets candidate information\",\"params\":{\"candidateId\":\"The candidate ID\"},\"returns\":{\"_0\":\"The candidate structure\"}},\"getCandidateTotalVotes(uint256)\":{\"details\":\"Gets total vote count for a candidate\",\"params\":{\"candidateId\":\"The candidate ID\"},\"returns\":{\"_0\":\"Total vote count\"}},\"getSessionTotals(uint256)\":{\"details\":\"Gets total votes in a session\",\"params\":{\"sessionId\":\"The session ID\"},\"returns\":{\"totalVotes\":\"Total number of votes cast\",\"totalVotingPower\":\"Total voting power used\"}},\"getVote(uint256)\":{\"details\":\"Gets vote information\",\"params\":{\"voteId\":\"The vote ID\"},\"returns\":{\"_0\":\"The vote structure\"}},\"getVoterVotes(address)\":{\"details\":\"Gets all votes for a voter\",\"params\":{\"voter\":\"The voter address\"},\"returns\":{\"_0\":\"Array of vote IDs\"}},\"getVotingSession(uint256)\":{\"details\":\"Gets voting session information\",\"params\":{\"sessionId\":\"The session ID\"},\"returns\":{\"_0\":\"The session structure\"}},\"hasVoterVoted(address,uint256)\":{\"details\":\"Checks if a voter has voted in a session\",\"params\":{\"sessionId\":\"The session ID\",\"voter\":\"The voter address\"},\"returns\":{\"_0\":\"Whether the voter has voted\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pause()\":{\"details\":\"Pauses the contract\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"registerCandidate(string,string)\":{\"details\":\"Registers a new candidate\",\"params\":{\"ipfsHash\":\"IPFS hash for candidate profile\",\"name\":\"Candidate name\"},\"returns\":{\"candidateId\":\"The ID of the registered candidate\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"revealVote(uint256,bytes32,bytes32)\":{\"details\":\"Reveals a committed vote\",\"params\":{\"originalVote\":\"The original vote value\",\"randomness\":\"The randomness used in commitment\",\"voteId\":\"The vote ID to reveal\"}},\"setFeatures(bool,bool,bool)\":{\"details\":\"Enables or disables features\",\"params\":{\"_liquidDemocracyEnabled\":\"Whether liquid democracy is enabled\",\"_voteMixingEnabled\":\"Whether vote mixing is enabled\",\"_zkProofsEnabled\":\"Whether ZK-proofs are enabled\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"unpause()\":{\"details\":\"Unpauses the contract\"},\"updateVotingParameters(uint256,uint256,uint256,uint256)\":{\"details\":\"Updates voting parameters\",\"params\":{\"_commitmentPeriod\":\"New commitment period\",\"_maxVotingPower\":\"New maximum voting power\",\"_minVotingPower\":\"New minimum voting power\",\"_revealPeriod\":\"New reveal period\"}}},\"title\":\"BlocPolAdvanced\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Comprehensive voting system with privacy, scalability, and transparency features\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BlocPolAdvanced.sol\":\"BlocPolAdvanced\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xdb484371dfbb848cb6f5d70464e9ac9b2900e4164ead76bbce4fef0b44bcc68f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9d6f6f6600a2bec622f699081b58350873b5e63ce05464d17d674a290bb8a7c\",\"dweb:/ipfs/QmQKVzSQY1PM3Bid4QhgVVZyx6B4Jx7XgaQzLKHj38vJz8\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]},\"@openzeppelin/contracts/utils/cryptography/Hashes.sol\":{\"keccak256\":\"0x8cbd338f083224b4b6f0ff42cbda641a0a6c31ffcdca197452b97fe4d0918269\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f517dec5ba0c6491395acbf7f1d621f4e89e8f218bf5303c867b1c5ad70c6b11\",\"dweb:/ipfs/QmWmXHRLEw8W6ckth7NyYTU88YfvuS7xSsfae5ksL8qNUe\"]},\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":{\"keccak256\":\"0x36a0c409c437a753cac9b92b75f93b0fbe92803bf2c8ff1517e54b247f166134\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f91ba472de411aa557cdbf6560c40750d87bd11c9060bc04d2ba7119af9d5a6\",\"dweb:/ipfs/QmQjtYo2i7dDvzCEzZ67bDoNSG4RrwMoxPWuqFmX5Xzpuw\"]},\"contracts/BlocPolAdvanced.sol\":{\"keccak256\":\"0x17a5083e88bfe51be2ffa7b3632a88904504cb9fed3c68074cbdacc152415f97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://63522158f18db724d196e8b154fac8753b807b40385c2240e2e2d8eccad726e2\",\"dweb:/ipfs/QmcLXTtbySNcpZ4RrEtEatQf2kEE5euivJYxS1fyEC1gcq\"]},\"contracts/LiquidDemocracy.sol\":{\"keccak256\":\"0x817da06df3754cc4b8537ddb2991a35a490fed790ee397d9e4f5a5a4656dbf5b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5405c851eb6f843334b750ccbaf694ef58ebad45fa91d70c5586fa09bb06958a\",\"dweb:/ipfs/QmREYbkHqnxd46SdzqpNJWVy8t9p6xb4qmeTfh2XGZJAG5\"]},\"contracts/VoteMixing.sol\":{\"keccak256\":\"0x49bff1a807df016bcfd12b3909384e62eacce46553c99183aeb6620ac24af0cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://82f8cad382494cfb08a2cee7fd3a7d1899a3ee82182ebb2da05898eada5c5fef\",\"dweb:/ipfs/QmV4vs9s3DZnxsbNir1GRByNmoh3Jn1nskwgYmhZew8nVq\"]},\"contracts/ZKProofVerifier.sol\":{\"keccak256\":\"0x6160fd8945810fe1654fb889aa63a8dbf92b0884df70264d0c535ff4f066e706\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b5089786ae8e174af8819da01f0ccf1d66613715c25de27bbc580583c9fef264\",\"dweb:/ipfs/QmPgTDezG3LZ7HsYCK4r4cxNknPurrCjHp3wtYf5YZPXqi\"]},\"contracts/libraries/CryptographicUtils.sol\":{\"keccak256\":\"0x2e560c193276ecc57c28132eee00e6f4d47c44baf4914a66e106947b97799ca0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e5505a80a71dd6846807c2dcb931b7856b3a06374614314a656eff73c530e8a8\",\"dweb:/ipfs/QmfSEFaxFN7BFoV3e3zsVSRAZbUccFfobzbsZriZoKNNj7\"]}},\"version\":1}"}},"contracts/LiquidDemocracy.sol":{"LiquidDemocracy":{"abi":[{"inputs":[{"internalType":"uint256","name":"_maxDelegationDepth","type":"uint256"},{"internalType":"uint256","name":"_minDelegationPower","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"voter","type":"address"},{"indexed":false,"internalType":"uint256","name":"newTotalPower","type":"uint256"}],"name":"DelegationChainUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"power","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"delegationId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"DelegationCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"delegationId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"DelegationRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"voter","type":"address"},{"indexed":false,"internalType":"uint256","name":"candidateId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"powerUsed","type":"uint256"},{"indexed":false,"internalType":"bool","name":"isDelegated","type":"bool"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"VoteCast","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"voter","type":"address"},{"indexed":false,"internalType":"uint256","name":"power","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"VoterRegistered","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"endTime","type":"uint256"}],"name":"VotingSessionEnded","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"startTime","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"endTime","type":"uint256"}],"name":"VotingSessionStarted","type":"event"},{"inputs":[{"internalType":"address","name":"delegate","type":"address"},{"internalType":"uint256","name":"power","type":"uint256"}],"name":"createDelegation","outputs":[{"internalType":"uint256","name":"delegationId","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"endVotingSession","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getActiveDelegations","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"candidateId","type":"uint256"}],"name":"getCandidateTotalVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"candidateId","type":"uint256"}],"name":"getCandidateVotes","outputs":[{"components":[{"internalType":"address","name":"voter","type":"address"},{"internalType":"uint256","name":"candidateId","type":"uint256"},{"internalType":"uint256","name":"powerUsed","type":"uint256"},{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"bytes32","name":"voteHash","type":"bytes32"},{"internalType":"bool","name":"isDelegated","type":"bool"}],"internalType":"struct LiquidDemocracy.Vote[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"delegationId","type":"uint256"}],"name":"getDelegation","outputs":[{"components":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"power","type":"uint256"},{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"bool","name":"isActive","type":"bool"},{"internalType":"uint256","name":"delegationId","type":"uint256"}],"internalType":"struct LiquidDemocracy.Delegation","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getRegisteredVoters","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getTotalVotingPower","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"voter","type":"address"}],"name":"getVoter","outputs":[{"components":[{"internalType":"address","name":"voterAddress","type":"address"},{"internalType":"uint256","name":"votingPower","type":"uint256"},{"internalType":"uint256","name":"delegatedPower","type":"uint256"},{"internalType":"uint256","name":"totalPower","type":"uint256"},{"internalType":"address","name":"delegate","type":"address"},{"internalType":"address[]","name":"delegates","type":"address[]"},{"internalType":"bool","name":"isActive","type":"bool"},{"internalType":"uint256","name":"lastVoteTime","type":"uint256"},{"internalType":"uint256","name":"delegationCount","type":"uint256"}],"internalType":"struct LiquidDemocracy.Voter","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"voter","type":"address"}],"name":"getVoterDelegations","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"voter","type":"address"},{"internalType":"uint256","name":"candidateId","type":"uint256"}],"name":"hasVoterVoted","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"maxDelegationDepth","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"minDelegationPower","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"voter","type":"address"},{"internalType":"uint256","name":"power","type":"uint256"}],"name":"registerVoter","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"delegationId","type":"uint256"}],"name":"revokeDelegation","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"durationSeconds","type":"uint256"}],"name":"startVotingSession","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_maxDelegationDepth","type":"uint256"},{"internalType":"uint256","name":"_minDelegationPower","type":"uint256"}],"name":"updateDelegationParameters","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"candidateId","type":"uint256"},{"internalType":"uint256","name":"power","type":"uint256"}],"name":"vote","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"votingActive","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"votingEndTime","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"votingStartTime","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"abi_decode_uint256_fromMemory":{"entryPoint":130,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_uint256t_uint256_fromMemory":{"entryPoint":136,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_address":{"entryPoint":408,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_address":{"entryPoint":421,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":108,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"cleanup_address":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_uint160":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"constant_NOT_ENTERED":{"entryPoint":337,"id":null,"parameterSlots":0,"returnSlots":1},"constructor_LiquidDemocracy":{"entryPoint":264,"id":4060,"parameterSlots":2,"returnSlots":0},"constructor_Ownable":{"entryPoint":437,"id":50,"parameterSlots":1,"returnSlots":0},"constructor_ReentrancyGuard":{"entryPoint":347,"id":307,"parameterSlots":1,"returnSlots":0},"convert_address_to_address":{"entryPoint":574,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_by_to_address":{"entryPoint":399,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_by_to_uint160":{"entryPoint":374,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_by_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_rational_by_to_t_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint160_to_address":{"entryPoint":565,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint160_to_uint160":{"entryPoint":545,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint256_to_uint256":{"entryPoint":224,"id":null,"parameterSlots":1,"returnSlots":1},"copy_arguments_for_constructor_object_LiquidDemocracy":{"entryPoint":174,"id":null,"parameterSlots":0,"returnSlots":2},"extract_from_storage_value_offset_address":{"entryPoint":511,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":70,"id":null,"parameterSlots":2,"returnSlots":0},"fun_transferOwnership":{"entryPoint":606,"id":146,"parameterSlots":1,"returnSlots":0},"panic_error_0x41":{"entryPoint":48,"id":null,"parameterSlots":0,"returnSlots":0},"read_from_storage_split_offset_address":{"entryPoint":520,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_right_unsigned":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"update_byte_slice_shift":{"entryPoint":208,"id":null,"parameterSlots":2,"returnSlots":1},"update_byte_slice_shift_0":{"entryPoint":530,"id":null,"parameterSlots":2,"returnSlots":1},"update_storage_value_offset_address_to_address":{"entryPoint":583,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offset_uint256_to_uint256":{"entryPoint":237,"id":null,"parameterSlots":2,"returnSlots":0},"validator_revert_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[],"linkReferences":{},"object":"60806040523461002b5761001a6100146100ae565b90610108565b6040516126146102b6823961261490f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b90601f01601f191681019081106001600160401b0382111761006757604052565b610030565b9061008061007960405190565b9283610046565b565b90505190565b919060408382031261002b576100ab9060206100a48286610082565b9401610082565b90565b6100cc6128ca803803806100c18161006c565b928339810190610088565b9091565b90600019905b9181191691161790565b6100ab6100ab6100ab9290565b906100fd6100ab610104926100e0565b82546100d0565b9055565b90610120610127926101193361015b565b600e6100ed565b600f6100ed565b61008061013460006100e0565b61013f8160086100ed565b61014a81600a6100ed565b60096100ed565b6100ab60016100e0565b610164906101b5565b61008061016f610151565b60016100ed565b6101836100ab6100ab9290565b6001600160a01b031690565b6100ab90610176565b6101a190610183565b9052565b6020810192916100809190610198565b60006101c08161018f565b6101c981610183565b6101d284610183565b146101e25750506100809061025e565b631e4fbdf760e01b825281906101fb90600483016101a5565b0390fd5b6100ab90610183565b6100ab90546101ff565b906001600160a01b03906100d6565b6100ab90610183906001600160a01b031682565b6100ab90610221565b6100ab90610235565b906102576100ab6101049261023e565b8254610212565b61028461027e61026e6000610208565b610279846000610247565b61023e565b9161023e565b907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e06102af60405190565b600090a356fe6080604052600436101561001257600080fd5b60003560e01c80630dd357011461019257806311acc1a71461018d5780631ea736e0146101885780632019a608146101835780632bc4a6e71461017e57806336dab67814610179578063408e2727146101745780634f1b49721461016f57806365d082be1461016a578063715018a614610165578063866163c0146101605780638da5cb5b1461015b5780639980a55a146101565780639b541f7614610151578063a288210c1461014c578063a7bfab1614610147578063abdd80a314610142578063b384abef1461013d578063bd3d425d14610138578063cbea81ef14610133578063cd8e09031461012e578063ce52c4ef14610129578063d4f50f98146101245763f2fde38b0361019757610872565b61084b565b61074b565b610730565b61070b565b6106f3565b6106da565b6106bf565b6106a7565b61068e565b610656565b61061b565b6105dc565b6105b5565b6104e3565b6104c8565b6104a1565b6103f5565b6103b4565b610381565b6102f2565b6102cb565b61027d565b610247565b600080fd5b805b0361019757565b905035906101b28261019c565b565b90602082820312610197576101c8916101a5565b90565b6001600160a01b031690565b9052565b80516001600160a01b031682526101b2919060a09081906020818101516001600160a01b03169085015261021460408201516040860152565b61022360608201516060860152565b6080818101511515908501525b0151910152565b60c0810192916101b291906101db565b346101975761026e61026261025d3660046101b4565b610a1c565b60405191829182610237565b0390f35b600091031261019757565b346101975761028d366004610272565b61026e610298610a38565b6040515b9182918290815260200190565b6101c8916008021c81565b906101c891546102a9565b6101c86000600d6102b4565b34610197576102db366004610272565b61026e6102986102bf565b6101c86000600c6102b4565b3461019757610302366004610272565b61026e6102986102e6565b0190565b9061033161032a610320845190565b8084529260200190565b9260200190565b9060005b8181106103425750505090565b90919261036861036160019286516001600160a01b0316815260200190565b9460200190565b929101610335565b60208082526101c892910190610311565b3461019757610391366004610272565b61026e61039c610adf565b60405191829182610370565b6101c86000600f6102b4565b34610197576103c4366004610272565b61026e6102986103a8565b6101c8916008021c5b60ff1690565b906101c891546103cf565b6101c86000600b6103de565b3461019757610405366004610272565b61026e6104106103e9565b60405191829182901515815260200190565b6001600160a01b03811661019e565b905035906101b282610422565b90602082820312610197576101c891610431565b9061046161032a610320845190565b9060005b8181106104725750505090565b9091926104886103616001928651815260200190565b929101610465565b60208082526101c892910190610452565b346101975761026e6104bc6104b736600461043e565b610b8b565b60405191829182610490565b34610197576104d8366004610272565b61026e610298610ba7565b34610197576104f3366004610272565b6104fb610be9565b604051005b80516001600160a01b031682526101b2919060a090819061052660208201516020860152565b61053560408201516040860152565b61054460608201516060860152565b61055360808201516080860152565b01511515910152565b9061030d8160c093610500565b9061057861032a610320845190565b9060005b8181106105895750505090565b90919261059c610361600192865161055c565b92910161057c565b60208082526101c892910190610569565b346101975761026e6105d06105cb3660046101b4565b610d06565b604051918291826105a4565b34610197576105ec366004610272565b61026e6106016000546001600160a01b031690565b604051918291826001600160a01b03909116815260200190565b34610197576104fb61062e3660046101b4565b610e9a565b9190604083820312610197576101c890602061064f8286610431565b94016101a5565b346101975761026e61041061066c366004610633565b90610ea3565b9190604083820312610197576101c890602061064f82866101a5565b34610197576104fb6106a1366004610672565b90610eeb565b34610197576106b7366004610272565b6104fb610f9c565b346101975761026e6102986106d53660046101b4565b610fe2565b34610197576104fb6106ed366004610672565b906114cd565b34610197576104fb6107063660046101b4565b611756565b34610197576104fb61071e366004610633565b90611b82565b6101c86000600e6102b4565b3461019757610740366004610272565b61026e610298610724565b346101975761026e610298610761366004610633565b906120bc565b9061077661032a610320845190565b9060005b8181106107875750505090565b9091926107a661036160019286516001600160a01b0316815260200190565b92910161077a565b80516001600160a01b03168252906101c8906101008061081e61012084016107db60208801516020870152565b6107ea60408801516040870152565b6107f960608801516060870152565b6080878101516001600160a01b03169086015260a087015185820360a0870152610767565b60c0808701511515908501529461023060e082015160e0860152565b60208082526101c8929101906107ae565b346101975761026e61086661086136600461043e565b6121d3565b6040519182918261083a565b34610197576104fb61088536600461043e565b612247565b634e487b7160e01b600052604160045260246000fd5b90601f01601f1916810190811067ffffffffffffffff8211176108c257604052565b61088a565b906101b26108d460405190565b92836108a0565b6101c860c06108c7565b6108ed6108db565b9060008252602080808080808701600081520160005b815201600081520160008152016000905250565b6101c86108e5565b6101c86101c86101c89290565b906109369061091f565b600052602052604060002090565b6101c89081565b6101c89054610944565b6101c8906103d8565b6101c89054610955565b906101b2610a0c60056109796108db565b9461099b61098e82546001600160a01b031690565b6001600160a01b03168752565b6109c26109b260018301546001600160a01b031690565b6001600160a01b03166020880152565b6109d86109d16002830161094b565b6040880152565b6109ee6109e76003830161094b565b6060880152565b610a066109fd6004830161095e565b15156080880152565b0161094b565b60a0840152565b6101c890610968565b610a336101c891610a2b610917565b50600361092c565b610a13565b6101c8600961094b565b90610a5d610a51610320845490565b92600052602060002090565b9060005b818110610a6e5750505090565b909192610aa3610a9c600192610a8b87546001600160a01b031690565b6001600160a01b0316815260200190565b9460010190565b929101610a61565b906101c891610a42565b906101b2610acf92610ac660405190565b93848092610aab565b03836108a0565b6101c890610ab5565b6101c86007610ad6565b6101c8906101cb906001600160a01b031682565b6101c890610ae9565b6101c890610afd565b9061093690610b06565b90610b28610a51610320845490565b9060005b818110610b395750505090565b909192610b56610a9c600192610b4e8761094b565b815260200190565b929101610b2c565b906101c891610b19565b906101b2610acf92610b7960405190565b93848092610b5e565b6101c890610b68565b610ba26101c891610b9a606090565b506004610b0f565b610b82565b6101c8600a61094b565b610bb9612250565b6101b2610bd7565b6101cb6101c86101c89290565b6101c890610bc1565b6101b2610be46000610bce565b612291565b6101b2610bb1565b67ffffffffffffffff81116108c25760208091020190565b90610c1b610c1683610bf1565b6108c7565b918252565b906101b2610c966005610c316108db565b94610c4661098e82546001600160a01b031690565b610c5c610c556001830161094b565b6020880152565b610c6b6109d16002830161094b565b610c7a6109e76003830161094b565b610c90610c896004830161094b565b6080880152565b0161095e565b151560a0840152565b6101c890610c20565b90610cb1825490565b610cba81610c09565b92610cce6020850191600052602060002090565b6000915b838310610cdf5750505050565b60066020600192610cef85610c9f565b815201920192019190610cd2565b6101c890610ca8565b610d1d6101c891610d15606090565b50600561092c565b610cfd565b6101b290610d2e612250565b610e06565b15610d3a57565b60405162461bcd60e51b8152602060048201526015602482015274566f74696e6720616c72656164792061637469766560581b604482015280606481015b0390fd5b9060ff905b9181191691161790565b90610d9b6101c8610da292151590565b8254610d7c565b9055565b9060001990610d81565b90610dc06101c8610da29261091f565b8254610da6565b634e487b7160e01b600052601160045260246000fd5b91908201809211610dea57565b610dc7565b9081526040810192916101b29160200152565b0152565b610e43610e4a91610e26610e21610e1d600b61095e565b1590565b610d33565b610e326001600b610d8b565b610e3d42600c610db0565b42610ddd565b600d610db0565b7fe280a408633821740a429fb671e01cacf8d1d70d5c2735f4f94ec0edef4ea6de610e75600c61094b565b610e7f600d61094b565b90610e95610e8c60405190565b92839283610def565b0390a1565b6101b290610d22565b6101c891610ebe610ec392610eb6600090565b506006610b0f565b61092c565b61095e565b906101b291610ed5612250565b90610ee46101b292600e610db0565b600f610db0565b906101b291610ec8565b610efd612250565b6101b2610f45565b15610f0c57565b60405162461bcd60e51b8152602060048201526011602482015270566f74696e67206e6f742061637469766560781b6044820152606490fd5b610f57610f52600b61095e565b610f05565b610f636000600b610d8b565b610f6e42600d610db0565b7f9956bd7b1ae344fbb54dbd02a85e2283bec6bf75f7fccbaa9c2392a715e71e49610e95610298600d61094b565b6101b2610ef5565b634e487b7160e01b600052603260045260246000fd5b8054821015610fdd57610fd4600691600052602060002090565b91020190600090565b610fa4565b610fec600061091f565b90815b60056110056101c8611001858461092c565b5490565b8410156110455761103f91611032600261102b87611026886110389761092c565b610fba565b500161094b565b90610ddd565b9260010190565b91610fef565b5091505090565b1561105357565b60405162461bcd60e51b8152602060048201526014602482015273159bdd195c881b9bdd081c9959da5cdd195c995960621b6044820152606490fd5b906101b2916110ac6110a76006610c90336002610b0f565b61104c565b6110f5565b156110b857565b60405162461bcd60e51b815260206004820152601560248201527413dd5d1cda5919481d9bdd1a5b99c81c195c9a5bd9605a1b6044820152606490fd5b906101b291611107610f52600b61095e565b6111146101c8600c61094b565b4210158061112b575b611126906110b1565b611376565b5061112661113c6101c8600d61094b565b421115905061111d565b1561114d57565b60405162461bcd60e51b815280610d78600482016020808252818101527f416c726561647920766f74656420666f7220746869732063616e646964617465604082015260600190565b1561119d57565b60405162461bcd60e51b815260206004820152601c60248201527f506f776572206d7573742062652067726561746572207468616e2030000000006044820152606490fd5b156111e957565b60405162461bcd60e51b815260206004820152601960248201527f496e73756666696369656e7420766f74696e6720706f776572000000000000006044820152606490fd5b634e487b7160e01b600052600060045260246000fd5b906001600160a01b0390610d81565b906112636101c8610da292610b06565b8254611244565b90610dc06101c8610da29290565b600561130360a06101b2946112a061129a60008301516001600160a01b031690565b86611253565b6112b76112ae602083015190565b60018701610db0565b6112ce6112c5604083015190565b60028701610db0565b6112e56112dc606083015190565b60038701610db0565b6112fc6112f3608083015190565b6004870161126a565b0151151590565b9101610d8b565b9190611319576101b291611278565b61122e565b90815491600160401b8310156108c257826113419160016101b295018155610fba565b9061130a565b610e026101b29461136d606094989795611366608086019a6000870152565b6020850152565b15156040830152565b907fe89c99a0264d21c2ad18316d6e7b3aa31414c12f31b085afdeeacaa7e69f80b6906113b66113b1610e1d610ec386610ebe336006610b0f565b611146565b6113cb6113c3600061091f565b825b11611196565b6114a660a060026113ef6113e76101c86003610a063386610b0f565b8511156111e2565b6112fc61149c6114096114018961091f565b42903361231d565b9261146561141b82610a063382610b0f565b61142c611428600061091f565b9190565b1161145d6114386108db565b338152966114478d60208a0152565b6114528b60408a0152565b610c894260608a0152565b151585870152565b61147c846114776101c88c600561092c565b61131e565b61149560016114908b610ebe336006610b0f565b610d8b565b3390610b0f565b6007429101610db0565b906114c86114b333610b06565b946114bd60405190565b938493429285611347565b0390a2565b906101b29161108f565b6114e8906114e3612368565b61158e565b6101b26123a8565b156114f757565b60405162461bcd60e51b815260206004820152601560248201527444656c65676174696f6e206e6f742061637469766560581b6044820152606490fd5b1561153b57565b60405162461bcd60e51b81526020600482015260116024820152702737ba103a3432903232b632b3b0ba37b960791b6044820152606490fd5b91908203918211610dea57565b8015610dea576000190190565b61170661159f6101c883600361092c565b6115e76000600483016115b96115b48261095e565b6114f0565b6114906115cf838601546001600160a01b031690565b6115e1335b916001600160a01b031690565b14611534565b6116a560086116936115f96000610bce565b611611600291600461160b3385610b0f565b01611253565b611682600161165183880161164c6116288261094b565b61164685611636338a610b0f565b01916116418361094b565b610ddd565b90610db0565b61094b565b9601956116468361167261166c8a546001600160a01b031690565b82610b0f565b019161167d8361094b565b611574565b84546001600160a01b031690610b0f565b016116466116a08261094b565b611581565b6116c06116b982546001600160a01b031690565b339061240f565b6116c9336124b1565b6116e26116dd82546001600160a01b031690565b6124b1565b6116f96116f26116a0600a61094b565b600a610db0565b546001600160a01b031690565b7f657937cad9c3ce43c8ece19052e5f60b2db7d536fdb47405c20ecf1c3df56b7d61175161173c61173633610b06565b93610b06565b9361174660405190565b918291429083610def565b0390a3565b6101b2906114d7565b906101b29161176c612250565b611a51565b1561177857565b60405162461bcd60e51b815260206004820152601860248201527f566f74657220616c7265616479207265676973746572656400000000000000006044820152606490fd5b369037565b906101b26117d86117d284610c09565b93610bf1565b601f1901602084016117bd565b6101c86101206108c7565b9160001960089290920291821b911b610d81565b91906118156101c8610da29361091f565b9083546117f0565b6101b291600091611804565b818110611834575050565b80611842600060019361181d565b01611829565b91909182821061185757505050565b6101b2929161186c9091600052602060002090565b9182019101611829565b90600160401b81116108c2578161188e6101b2935490565b90828155611848565b6101c8916008021c6101cb565b916001600160a01b0360089290920291821b911b610d81565b81519167ffffffffffffffff83116108c2576118e8610a516001926118e28686611876565b60200190565b92049160005b8381106118fb5750505050565b60019060206119146101c886516001600160a01b031690565b94019381840155016118ee565b906101b2916118bd565b60086119e46101006101b29461194e61129a60008301516001600160a01b031690565b61195c6112ae602083015190565b61196a6112c5604083015190565b6119786112dc606083015190565b61199861198f60808301516001600160a01b031690565b60048701611253565b6119af6119a660a083015190565b60058701611921565b6119c86119bf60c0830151151590565b60068701610d8b565b6119df6119d660e083015190565b60078701610db0565b015190565b9101610db0565b906101b29161192b565b8054821015610fdd57610fd4600191600052602060002090565b9190611a206101c8610da293610b06565b9083546118a4565b90815491600160401b8310156108c25782611a4b9160016101b2950181556119f5565b90611a0f565b6114c8611b787f49a90692135172b11ff45007ef12b97c37df00bc650e48846f88da97b191b2d092611a94611a8f610e1d6006610c90856002610b0f565b611771565b611b506000611aab611aa58261091f565b886113c5565b611b40611ab782610bce565b611b26611ac38461091f565b91611b1f611ad0846117c2565b91611aee89611add6117e5565b988901906001600160a01b03169052565b611af98d6020890152565b611b04856040890152565b611b0f8d6060890152565b6001600160a01b03166080870152565b60a0850152565b600160c0840152611b388160e0850152565b610100830152565b611b4b836002610b0f565b6119eb565b611b5b816007611a28565b611b73611b6c86611641600961094b565b6009610db0565b610b06565b9261174660405190565b906101b29161175f565b906101c89291611ba56110a76006610c90336002610b0f565b611cd1565b15611bb157565b60405162461bcd60e51b815260206004820152601760248201527f43616e6e6f742064656c656761746520746f2073656c660000000000000000006044820152606490fd5b15611bfd57565b60405162461bcd60e51b815260206004820152601860248201527f44656c656761746f72206e6f74207265676973746572656400000000000000006044820152606490fd5b15611c4957565b60405162461bcd60e51b815260206004820152601760248201527f44656c6567617465206e6f7420726567697374657265640000000000000000006044820152606490fd5b15611c9557565b60405162461bcd60e51b8152602060048201526014602482015273416c7265616479206861732064656c656761746560601b6044820152606490fd5b6101c8929190611cec6001600160a01b038316331415611baa565b611d4b611d356004611d276002611d10611d0b6006610c903385610b0f565b611bf6565b611495611d226006610c908a85610b0f565b611c42565b01546001600160a01b031690565b611d456115d46101cb6000610bce565b14611c8e565b611ef5565b15611d5757565b60405162461bcd60e51b8152602060048201526013602482015272506f7765722062656c6f77206d696e696d756d60681b6044820152606490fd5b15611d9957565b60405162461bcd60e51b815260206004820152601260248201527124b739bab33334b1b4b2b73a103837bbb2b960711b6044820152606490fd5b15611dda57565b60405162461bcd60e51b815260206004820152601c60248201527f43697263756c61722064656c65676174696f6e206465746563746564000000006044820152606490fd5b6000198114610dea5760010190565b60056119e460a06101b294611e5061129a60008301516001600160a01b031690565b611e70611e6760208301516001600160a01b031690565b60018701611253565b611e7e6112c5604083015190565b611e8c6112dc606083015190565b6119df611e9c6080830151151590565b60048701610d8b565b906101b291611e2e565b90815491600160401b8310156108c25782611ed29160016101b2950181556119f5565b90611804565b9081526060810193926101b2929091604091610e02906020830152565b5090611f0f611f076101c8600f61094b565b821015611d50565b600291611f2f611f276101c86001610a063388610b0f565b831115611d92565b611f44611f3f610e1d8333612521565b611dd3565b61204e600861203c83611f568361094b565b96611f69611f6389611e1f565b85610db0565b611fbe611f746108db565b3381526001600160a01b0384166020820152611f91896040830152565b611f9c426060830152565b60016080820152611fae8a60a0830152565b611fb98a600361092c565b611ea5565b611fd588611fd06101c8336004610b0f565b611eaf565b611fe582600461160b3385610b0f565b6120026001611ff43384610b0f565b016116468961167d8361094b565b61201e816120108482610b0f565b01611646896116418361094b565b612037612030600561030d8585610b0f565b3390611a28565b610b0f565b016116466120498261094b565b611e1f565b612057336124b1565b612060816124b1565b6120706116f2612049600a61094b565b7ffe35c70e4980d7df0afccc73bb14c09d90b04287cd40b249a714d4033c2851856120b66120a061173633610b06565b936120aa60405190565b91829187429184611ed8565b0390a390565b6101c891906000611b8c565b6120d06117e5565b9060008252602080808080808080808a0160008152016000815201600081520160008152016060610903565b6101c86120c8565b906101b26121c260086121156117e5565b9461212a61098e82546001600160a01b031690565b612139610c556001830161094b565b6121486109d16002830161094b565b6121576109e76003830161094b565b61217e61216e60048301546001600160a01b031690565b6001600160a01b03166080880152565b61219461218d60058301610ab5565b60a0880152565b6121ac6121a36006830161095e565b151560c0880152565b610a066121bb6007830161094b565b60e0880152565b610100840152565b6101c890612104565b6121ea6101c8916121e26120fc565b506002610b0f565b6121ca565b6101b2906121fb612250565b600061220681610bce565b6001600160a01b0381166001600160a01b0384161461222a5750506101b290612291565b631e4fbdf760e01b82526001600160a01b03166004820152602490fd5b6101b2906121ef565b6000546001600160a01b03163390612267826115d4565b0361226f5750565b63118cdaa760e01b60009081526001600160a01b039091166004526024036000fd5b6122ba6122b46122a96000546001600160a01b031690565b611b73846000611253565b91610b06565b907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e06122e560405190565b8080611751565b6101d7906001600160a01b031660601b90565b60209392612317601483612317889561030d976122ec565b01918252565b612348919061233c61232e60405190565b9485936020850193846122ff565b908103825203826108a0565b61235a612353825190565b9160200190565b2090565b6101c8600261091f565b612372600161094b565b61237a61235e565b90811461238c576101b2906001610db0565b633ee5aeb560e01b6000908152600490fd5b6101c8600161091f565b6101b26123b361239e565b6001610db0565b906101c89154611897565b634e487b7160e01b600052603160045260246000fd5b6101b291600091611a0f565b8054801561240a57600019019061240761240183836119f5565b906123db565b55565b6123c5565b600561030d61241f926002610b0f565b612429600061091f565b6124346101c8835490565b8110156124ac5761244e61244882846119f5565b906123ba565b6124606001600160a01b0385166115d4565b1461246d57600101612429565b6101b292506124a790611a4b6124a061244861249a61248a875490565b612494600161091f565b90611574565b866119f5565b91846119f5565b6123e7565b505050565b7f255d9fd63837b26ddecf40374f32676fd529f58accd2f1673335f6e04d0fe1366114c86125176117366003610a068660026120376125066124f86001610a068686610b0f565b61103284610a068782610b0f565b856125118585610b0f565b01610db0565b9261029c60405190565b906001600160a01b0381166001600160a01b038316146125d757906000612548600061091f565b925b60029061255c6004611d278385610b0f565b61256b6115d46101cb86610bce565b1415806125c2575b156125b857611d2760049161258793610b0f565b928361259b6001600160a01b0385166115d4565b146125af576125a990611e1f565b9261254a565b50505050600190565b5050505050600090565b506125d06101c8600e61094b565b8510612573565b505060019056fea2646970667358221220e221caea8b2d5d86d67bd331fa077e08b9dd63055fb96b972fedd8fdafda8b2564736f6c634300081c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x2B JUMPI PUSH2 0x1A PUSH2 0x14 PUSH2 0xAE JUMP JUMPDEST SWAP1 PUSH2 0x108 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2614 PUSH2 0x2B6 DUP3 CODECOPY PUSH2 0x2614 SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x67 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x30 JUMP JUMPDEST SWAP1 PUSH2 0x80 PUSH2 0x79 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 PUSH2 0x46 JUMP JUMPDEST JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0x2B JUMPI PUSH2 0xAB SWAP1 PUSH1 0x20 PUSH2 0xA4 DUP3 DUP7 PUSH2 0x82 JUMP JUMPDEST SWAP5 ADD PUSH2 0x82 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xCC PUSH2 0x28CA DUP1 CODESIZE SUB DUP1 PUSH2 0xC1 DUP2 PUSH2 0x6C JUMP JUMPDEST SWAP3 DUP4 CODECOPY DUP2 ADD SWAP1 PUSH2 0x88 JUMP JUMPDEST SWAP1 SWAP2 JUMP JUMPDEST SWAP1 PUSH1 0x0 NOT SWAP1 JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST PUSH2 0xAB PUSH2 0xAB PUSH2 0xAB SWAP3 SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0xFD PUSH2 0xAB PUSH2 0x104 SWAP3 PUSH2 0xE0 JUMP JUMPDEST DUP3 SLOAD PUSH2 0xD0 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST SWAP1 PUSH2 0x120 PUSH2 0x127 SWAP3 PUSH2 0x119 CALLER PUSH2 0x15B JUMP JUMPDEST PUSH1 0xE PUSH2 0xED JUMP JUMPDEST PUSH1 0xF PUSH2 0xED JUMP JUMPDEST PUSH2 0x80 PUSH2 0x134 PUSH1 0x0 PUSH2 0xE0 JUMP JUMPDEST PUSH2 0x13F DUP2 PUSH1 0x8 PUSH2 0xED JUMP JUMPDEST PUSH2 0x14A DUP2 PUSH1 0xA PUSH2 0xED JUMP JUMPDEST PUSH1 0x9 PUSH2 0xED JUMP JUMPDEST PUSH2 0xAB PUSH1 0x1 PUSH2 0xE0 JUMP JUMPDEST PUSH2 0x164 SWAP1 PUSH2 0x1B5 JUMP JUMPDEST PUSH2 0x80 PUSH2 0x16F PUSH2 0x151 JUMP JUMPDEST PUSH1 0x1 PUSH2 0xED JUMP JUMPDEST PUSH2 0x183 PUSH2 0xAB PUSH2 0xAB SWAP3 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0xAB SWAP1 PUSH2 0x176 JUMP JUMPDEST PUSH2 0x1A1 SWAP1 PUSH2 0x183 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 ADD SWAP3 SWAP2 PUSH2 0x80 SWAP2 SWAP1 PUSH2 0x198 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C0 DUP2 PUSH2 0x18F JUMP JUMPDEST PUSH2 0x1C9 DUP2 PUSH2 0x183 JUMP JUMPDEST PUSH2 0x1D2 DUP5 PUSH2 0x183 JUMP JUMPDEST EQ PUSH2 0x1E2 JUMPI POP POP PUSH2 0x80 SWAP1 PUSH2 0x25E JUMP JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP3 MSTORE DUP2 SWAP1 PUSH2 0x1FB SWAP1 PUSH1 0x4 DUP4 ADD PUSH2 0x1A5 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0xAB SWAP1 PUSH2 0x183 JUMP JUMPDEST PUSH2 0xAB SWAP1 SLOAD PUSH2 0x1FF JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH2 0xD6 JUMP JUMPDEST PUSH2 0xAB SWAP1 PUSH2 0x183 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 JUMP JUMPDEST PUSH2 0xAB SWAP1 PUSH2 0x221 JUMP JUMPDEST PUSH2 0xAB SWAP1 PUSH2 0x235 JUMP JUMPDEST SWAP1 PUSH2 0x257 PUSH2 0xAB PUSH2 0x104 SWAP3 PUSH2 0x23E JUMP JUMPDEST DUP3 SLOAD PUSH2 0x212 JUMP JUMPDEST PUSH2 0x284 PUSH2 0x27E PUSH2 0x26E PUSH1 0x0 PUSH2 0x208 JUMP JUMPDEST PUSH2 0x279 DUP5 PUSH1 0x0 PUSH2 0x247 JUMP JUMPDEST PUSH2 0x23E JUMP JUMPDEST SWAP2 PUSH2 0x23E JUMP JUMPDEST SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH2 0x2AF PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 LOG3 JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xDD35701 EQ PUSH2 0x192 JUMPI DUP1 PUSH4 0x11ACC1A7 EQ PUSH2 0x18D JUMPI DUP1 PUSH4 0x1EA736E0 EQ PUSH2 0x188 JUMPI DUP1 PUSH4 0x2019A608 EQ PUSH2 0x183 JUMPI DUP1 PUSH4 0x2BC4A6E7 EQ PUSH2 0x17E JUMPI DUP1 PUSH4 0x36DAB678 EQ PUSH2 0x179 JUMPI DUP1 PUSH4 0x408E2727 EQ PUSH2 0x174 JUMPI DUP1 PUSH4 0x4F1B4972 EQ PUSH2 0x16F JUMPI DUP1 PUSH4 0x65D082BE EQ PUSH2 0x16A JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x165 JUMPI DUP1 PUSH4 0x866163C0 EQ PUSH2 0x160 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x15B JUMPI DUP1 PUSH4 0x9980A55A EQ PUSH2 0x156 JUMPI DUP1 PUSH4 0x9B541F76 EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0xA288210C EQ PUSH2 0x14C JUMPI DUP1 PUSH4 0xA7BFAB16 EQ PUSH2 0x147 JUMPI DUP1 PUSH4 0xABDD80A3 EQ PUSH2 0x142 JUMPI DUP1 PUSH4 0xB384ABEF EQ PUSH2 0x13D JUMPI DUP1 PUSH4 0xBD3D425D EQ PUSH2 0x138 JUMPI DUP1 PUSH4 0xCBEA81EF EQ PUSH2 0x133 JUMPI DUP1 PUSH4 0xCD8E0903 EQ PUSH2 0x12E JUMPI DUP1 PUSH4 0xCE52C4EF EQ PUSH2 0x129 JUMPI DUP1 PUSH4 0xD4F50F98 EQ PUSH2 0x124 JUMPI PUSH4 0xF2FDE38B SUB PUSH2 0x197 JUMPI PUSH2 0x872 JUMP JUMPDEST PUSH2 0x84B JUMP JUMPDEST PUSH2 0x74B JUMP JUMPDEST PUSH2 0x730 JUMP JUMPDEST PUSH2 0x70B JUMP JUMPDEST PUSH2 0x6F3 JUMP JUMPDEST PUSH2 0x6DA JUMP JUMPDEST PUSH2 0x6BF JUMP JUMPDEST PUSH2 0x6A7 JUMP JUMPDEST PUSH2 0x68E JUMP JUMPDEST PUSH2 0x656 JUMP JUMPDEST PUSH2 0x61B JUMP JUMPDEST PUSH2 0x5DC JUMP JUMPDEST PUSH2 0x5B5 JUMP JUMPDEST PUSH2 0x4E3 JUMP JUMPDEST PUSH2 0x4C8 JUMP JUMPDEST PUSH2 0x4A1 JUMP JUMPDEST PUSH2 0x3F5 JUMP JUMPDEST PUSH2 0x3B4 JUMP JUMPDEST PUSH2 0x381 JUMP JUMPDEST PUSH2 0x2F2 JUMP JUMPDEST PUSH2 0x2CB JUMP JUMPDEST PUSH2 0x27D JUMP JUMPDEST PUSH2 0x247 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 JUMPDEST SUB PUSH2 0x197 JUMPI JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x1B2 DUP3 PUSH2 0x19C JUMP JUMPDEST JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x197 JUMPI PUSH2 0x1C8 SWAP2 PUSH2 0x1A5 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH2 0x1B2 SWAP2 SWAP1 PUSH1 0xA0 SWAP1 DUP2 SWAP1 PUSH1 0x20 DUP2 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP6 ADD MSTORE PUSH2 0x214 PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x40 DUP7 ADD MSTORE JUMP JUMPDEST PUSH2 0x223 PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x60 DUP7 ADD MSTORE JUMP JUMPDEST PUSH1 0x80 DUP2 DUP2 ADD MLOAD ISZERO ISZERO SWAP1 DUP6 ADD MSTORE JUMPDEST ADD MLOAD SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0xC0 DUP2 ADD SWAP3 SWAP2 PUSH2 0x1B2 SWAP2 SWAP1 PUSH2 0x1DB JUMP JUMPDEST CALLVALUE PUSH2 0x197 JUMPI PUSH2 0x26E PUSH2 0x262 PUSH2 0x25D CALLDATASIZE PUSH1 0x4 PUSH2 0x1B4 JUMP JUMPDEST PUSH2 0xA1C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x237 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 SWAP2 SUB SLT PUSH2 0x197 JUMPI JUMP JUMPDEST CALLVALUE PUSH2 0x197 JUMPI PUSH2 0x28D CALLDATASIZE PUSH1 0x4 PUSH2 0x272 JUMP JUMPDEST PUSH2 0x26E PUSH2 0x298 PUSH2 0xA38 JUMP JUMPDEST PUSH1 0x40 MLOAD JUMPDEST SWAP2 DUP3 SWAP2 DUP3 SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH2 0x1C8 SWAP2 PUSH1 0x8 MUL SHR DUP2 JUMP JUMPDEST SWAP1 PUSH2 0x1C8 SWAP2 SLOAD PUSH2 0x2A9 JUMP JUMPDEST PUSH2 0x1C8 PUSH1 0x0 PUSH1 0xD PUSH2 0x2B4 JUMP JUMPDEST CALLVALUE PUSH2 0x197 JUMPI PUSH2 0x2DB CALLDATASIZE PUSH1 0x4 PUSH2 0x272 JUMP JUMPDEST PUSH2 0x26E PUSH2 0x298 PUSH2 0x2BF JUMP JUMPDEST PUSH2 0x1C8 PUSH1 0x0 PUSH1 0xC PUSH2 0x2B4 JUMP JUMPDEST CALLVALUE PUSH2 0x197 JUMPI PUSH2 0x302 CALLDATASIZE PUSH1 0x4 PUSH2 0x272 JUMP JUMPDEST PUSH2 0x26E PUSH2 0x298 PUSH2 0x2E6 JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x331 PUSH2 0x32A PUSH2 0x320 DUP5 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP5 MSTORE SWAP3 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x342 JUMPI POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 PUSH2 0x368 PUSH2 0x361 PUSH1 0x1 SWAP3 DUP7 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP5 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 ADD PUSH2 0x335 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH2 0x1C8 SWAP3 SWAP2 ADD SWAP1 PUSH2 0x311 JUMP JUMPDEST CALLVALUE PUSH2 0x197 JUMPI PUSH2 0x391 CALLDATASIZE PUSH1 0x4 PUSH2 0x272 JUMP JUMPDEST PUSH2 0x26E PUSH2 0x39C PUSH2 0xADF JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x370 JUMP JUMPDEST PUSH2 0x1C8 PUSH1 0x0 PUSH1 0xF PUSH2 0x2B4 JUMP JUMPDEST CALLVALUE PUSH2 0x197 JUMPI PUSH2 0x3C4 CALLDATASIZE PUSH1 0x4 PUSH2 0x272 JUMP JUMPDEST PUSH2 0x26E PUSH2 0x298 PUSH2 0x3A8 JUMP JUMPDEST PUSH2 0x1C8 SWAP2 PUSH1 0x8 MUL SHR JUMPDEST PUSH1 0xFF AND SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1C8 SWAP2 SLOAD PUSH2 0x3CF JUMP JUMPDEST PUSH2 0x1C8 PUSH1 0x0 PUSH1 0xB PUSH2 0x3DE JUMP JUMPDEST CALLVALUE PUSH2 0x197 JUMPI PUSH2 0x405 CALLDATASIZE PUSH1 0x4 PUSH2 0x272 JUMP JUMPDEST PUSH2 0x26E PUSH2 0x410 PUSH2 0x3E9 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x19E JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x1B2 DUP3 PUSH2 0x422 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x197 JUMPI PUSH2 0x1C8 SWAP2 PUSH2 0x431 JUMP JUMPDEST SWAP1 PUSH2 0x461 PUSH2 0x32A PUSH2 0x320 DUP5 MLOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x472 JUMPI POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 PUSH2 0x488 PUSH2 0x361 PUSH1 0x1 SWAP3 DUP7 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 ADD PUSH2 0x465 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH2 0x1C8 SWAP3 SWAP2 ADD SWAP1 PUSH2 0x452 JUMP JUMPDEST CALLVALUE PUSH2 0x197 JUMPI PUSH2 0x26E PUSH2 0x4BC PUSH2 0x4B7 CALLDATASIZE PUSH1 0x4 PUSH2 0x43E JUMP JUMPDEST PUSH2 0xB8B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x490 JUMP JUMPDEST CALLVALUE PUSH2 0x197 JUMPI PUSH2 0x4D8 CALLDATASIZE PUSH1 0x4 PUSH2 0x272 JUMP JUMPDEST PUSH2 0x26E PUSH2 0x298 PUSH2 0xBA7 JUMP JUMPDEST CALLVALUE PUSH2 0x197 JUMPI PUSH2 0x4F3 CALLDATASIZE PUSH1 0x4 PUSH2 0x272 JUMP JUMPDEST PUSH2 0x4FB PUSH2 0xBE9 JUMP JUMPDEST PUSH1 0x40 MLOAD STOP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH2 0x1B2 SWAP2 SWAP1 PUSH1 0xA0 SWAP1 DUP2 SWAP1 PUSH2 0x526 PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x20 DUP7 ADD MSTORE JUMP JUMPDEST PUSH2 0x535 PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x40 DUP7 ADD MSTORE JUMP JUMPDEST PUSH2 0x544 PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x60 DUP7 ADD MSTORE JUMP JUMPDEST PUSH2 0x553 PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0x80 DUP7 ADD MSTORE JUMP JUMPDEST ADD MLOAD ISZERO ISZERO SWAP2 ADD MSTORE JUMP JUMPDEST SWAP1 PUSH2 0x30D DUP2 PUSH1 0xC0 SWAP4 PUSH2 0x500 JUMP JUMPDEST SWAP1 PUSH2 0x578 PUSH2 0x32A PUSH2 0x320 DUP5 MLOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x589 JUMPI POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 PUSH2 0x59C PUSH2 0x361 PUSH1 0x1 SWAP3 DUP7 MLOAD PUSH2 0x55C JUMP JUMPDEST SWAP3 SWAP2 ADD PUSH2 0x57C JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH2 0x1C8 SWAP3 SWAP2 ADD SWAP1 PUSH2 0x569 JUMP JUMPDEST CALLVALUE PUSH2 0x197 JUMPI PUSH2 0x26E PUSH2 0x5D0 PUSH2 0x5CB CALLDATASIZE PUSH1 0x4 PUSH2 0x1B4 JUMP JUMPDEST PUSH2 0xD06 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x5A4 JUMP JUMPDEST CALLVALUE PUSH2 0x197 JUMPI PUSH2 0x5EC CALLDATASIZE PUSH1 0x4 PUSH2 0x272 JUMP JUMPDEST PUSH2 0x26E PUSH2 0x601 PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x197 JUMPI PUSH2 0x4FB PUSH2 0x62E CALLDATASIZE PUSH1 0x4 PUSH2 0x1B4 JUMP JUMPDEST PUSH2 0xE9A JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0x197 JUMPI PUSH2 0x1C8 SWAP1 PUSH1 0x20 PUSH2 0x64F DUP3 DUP7 PUSH2 0x431 JUMP JUMPDEST SWAP5 ADD PUSH2 0x1A5 JUMP JUMPDEST CALLVALUE PUSH2 0x197 JUMPI PUSH2 0x26E PUSH2 0x410 PUSH2 0x66C CALLDATASIZE PUSH1 0x4 PUSH2 0x633 JUMP JUMPDEST SWAP1 PUSH2 0xEA3 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0x197 JUMPI PUSH2 0x1C8 SWAP1 PUSH1 0x20 PUSH2 0x64F DUP3 DUP7 PUSH2 0x1A5 JUMP JUMPDEST CALLVALUE PUSH2 0x197 JUMPI PUSH2 0x4FB PUSH2 0x6A1 CALLDATASIZE PUSH1 0x4 PUSH2 0x672 JUMP JUMPDEST SWAP1 PUSH2 0xEEB JUMP JUMPDEST CALLVALUE PUSH2 0x197 JUMPI PUSH2 0x6B7 CALLDATASIZE PUSH1 0x4 PUSH2 0x272 JUMP JUMPDEST PUSH2 0x4FB PUSH2 0xF9C JUMP JUMPDEST CALLVALUE PUSH2 0x197 JUMPI PUSH2 0x26E PUSH2 0x298 PUSH2 0x6D5 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B4 JUMP JUMPDEST PUSH2 0xFE2 JUMP JUMPDEST CALLVALUE PUSH2 0x197 JUMPI PUSH2 0x4FB PUSH2 0x6ED CALLDATASIZE PUSH1 0x4 PUSH2 0x672 JUMP JUMPDEST SWAP1 PUSH2 0x14CD JUMP JUMPDEST CALLVALUE PUSH2 0x197 JUMPI PUSH2 0x4FB PUSH2 0x706 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B4 JUMP JUMPDEST PUSH2 0x1756 JUMP JUMPDEST CALLVALUE PUSH2 0x197 JUMPI PUSH2 0x4FB PUSH2 0x71E CALLDATASIZE PUSH1 0x4 PUSH2 0x633 JUMP JUMPDEST SWAP1 PUSH2 0x1B82 JUMP JUMPDEST PUSH2 0x1C8 PUSH1 0x0 PUSH1 0xE PUSH2 0x2B4 JUMP JUMPDEST CALLVALUE PUSH2 0x197 JUMPI PUSH2 0x740 CALLDATASIZE PUSH1 0x4 PUSH2 0x272 JUMP JUMPDEST PUSH2 0x26E PUSH2 0x298 PUSH2 0x724 JUMP JUMPDEST CALLVALUE PUSH2 0x197 JUMPI PUSH2 0x26E PUSH2 0x298 PUSH2 0x761 CALLDATASIZE PUSH1 0x4 PUSH2 0x633 JUMP JUMPDEST SWAP1 PUSH2 0x20BC JUMP JUMPDEST SWAP1 PUSH2 0x776 PUSH2 0x32A PUSH2 0x320 DUP5 MLOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x787 JUMPI POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 PUSH2 0x7A6 PUSH2 0x361 PUSH1 0x1 SWAP3 DUP7 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 ADD PUSH2 0x77A JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE SWAP1 PUSH2 0x1C8 SWAP1 PUSH2 0x100 DUP1 PUSH2 0x81E PUSH2 0x120 DUP5 ADD PUSH2 0x7DB PUSH1 0x20 DUP9 ADD MLOAD PUSH1 0x20 DUP8 ADD MSTORE JUMP JUMPDEST PUSH2 0x7EA PUSH1 0x40 DUP9 ADD MLOAD PUSH1 0x40 DUP8 ADD MSTORE JUMP JUMPDEST PUSH2 0x7F9 PUSH1 0x60 DUP9 ADD MLOAD PUSH1 0x60 DUP8 ADD MSTORE JUMP JUMPDEST PUSH1 0x80 DUP8 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP7 ADD MSTORE PUSH1 0xA0 DUP8 ADD MLOAD DUP6 DUP3 SUB PUSH1 0xA0 DUP8 ADD MSTORE PUSH2 0x767 JUMP JUMPDEST PUSH1 0xC0 DUP1 DUP8 ADD MLOAD ISZERO ISZERO SWAP1 DUP6 ADD MSTORE SWAP5 PUSH2 0x230 PUSH1 0xE0 DUP3 ADD MLOAD PUSH1 0xE0 DUP7 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH2 0x1C8 SWAP3 SWAP2 ADD SWAP1 PUSH2 0x7AE JUMP JUMPDEST CALLVALUE PUSH2 0x197 JUMPI PUSH2 0x26E PUSH2 0x866 PUSH2 0x861 CALLDATASIZE PUSH1 0x4 PUSH2 0x43E JUMP JUMPDEST PUSH2 0x21D3 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x83A JUMP JUMPDEST CALLVALUE PUSH2 0x197 JUMPI PUSH2 0x4FB PUSH2 0x885 CALLDATASIZE PUSH1 0x4 PUSH2 0x43E JUMP JUMPDEST PUSH2 0x2247 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x8C2 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x88A JUMP JUMPDEST SWAP1 PUSH2 0x1B2 PUSH2 0x8D4 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 PUSH2 0x8A0 JUMP JUMPDEST PUSH2 0x1C8 PUSH1 0xC0 PUSH2 0x8C7 JUMP JUMPDEST PUSH2 0x8ED PUSH2 0x8DB JUMP JUMPDEST SWAP1 PUSH1 0x0 DUP3 MSTORE PUSH1 0x20 DUP1 DUP1 DUP1 DUP1 DUP1 DUP8 ADD PUSH1 0x0 DUP2 MSTORE ADD PUSH1 0x0 JUMPDEST DUP2 MSTORE ADD PUSH1 0x0 DUP2 MSTORE ADD PUSH1 0x0 DUP2 MSTORE ADD PUSH1 0x0 SWAP1 MSTORE POP JUMP JUMPDEST PUSH2 0x1C8 PUSH2 0x8E5 JUMP JUMPDEST PUSH2 0x1C8 PUSH2 0x1C8 PUSH2 0x1C8 SWAP3 SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x936 SWAP1 PUSH2 0x91F JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x1C8 SWAP1 DUP2 JUMP JUMPDEST PUSH2 0x1C8 SWAP1 SLOAD PUSH2 0x944 JUMP JUMPDEST PUSH2 0x1C8 SWAP1 PUSH2 0x3D8 JUMP JUMPDEST PUSH2 0x1C8 SWAP1 SLOAD PUSH2 0x955 JUMP JUMPDEST SWAP1 PUSH2 0x1B2 PUSH2 0xA0C PUSH1 0x5 PUSH2 0x979 PUSH2 0x8DB JUMP JUMPDEST SWAP5 PUSH2 0x99B PUSH2 0x98E DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 MSTORE JUMP JUMPDEST PUSH2 0x9C2 PUSH2 0x9B2 PUSH1 0x1 DUP4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP9 ADD MSTORE JUMP JUMPDEST PUSH2 0x9D8 PUSH2 0x9D1 PUSH1 0x2 DUP4 ADD PUSH2 0x94B JUMP JUMPDEST PUSH1 0x40 DUP9 ADD MSTORE JUMP JUMPDEST PUSH2 0x9EE PUSH2 0x9E7 PUSH1 0x3 DUP4 ADD PUSH2 0x94B JUMP JUMPDEST PUSH1 0x60 DUP9 ADD MSTORE JUMP JUMPDEST PUSH2 0xA06 PUSH2 0x9FD PUSH1 0x4 DUP4 ADD PUSH2 0x95E JUMP JUMPDEST ISZERO ISZERO PUSH1 0x80 DUP9 ADD MSTORE JUMP JUMPDEST ADD PUSH2 0x94B JUMP JUMPDEST PUSH1 0xA0 DUP5 ADD MSTORE JUMP JUMPDEST PUSH2 0x1C8 SWAP1 PUSH2 0x968 JUMP JUMPDEST PUSH2 0xA33 PUSH2 0x1C8 SWAP2 PUSH2 0xA2B PUSH2 0x917 JUMP JUMPDEST POP PUSH1 0x3 PUSH2 0x92C JUMP JUMPDEST PUSH2 0xA13 JUMP JUMPDEST PUSH2 0x1C8 PUSH1 0x9 PUSH2 0x94B JUMP JUMPDEST SWAP1 PUSH2 0xA5D PUSH2 0xA51 PUSH2 0x320 DUP5 SLOAD SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0xA6E JUMPI POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 PUSH2 0xAA3 PUSH2 0xA9C PUSH1 0x1 SWAP3 PUSH2 0xA8B DUP8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP5 PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 ADD PUSH2 0xA61 JUMP JUMPDEST SWAP1 PUSH2 0x1C8 SWAP2 PUSH2 0xA42 JUMP JUMPDEST SWAP1 PUSH2 0x1B2 PUSH2 0xACF SWAP3 PUSH2 0xAC6 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP4 DUP5 DUP1 SWAP3 PUSH2 0xAAB JUMP JUMPDEST SUB DUP4 PUSH2 0x8A0 JUMP JUMPDEST PUSH2 0x1C8 SWAP1 PUSH2 0xAB5 JUMP JUMPDEST PUSH2 0x1C8 PUSH1 0x7 PUSH2 0xAD6 JUMP JUMPDEST PUSH2 0x1C8 SWAP1 PUSH2 0x1CB SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 JUMP JUMPDEST PUSH2 0x1C8 SWAP1 PUSH2 0xAE9 JUMP JUMPDEST PUSH2 0x1C8 SWAP1 PUSH2 0xAFD JUMP JUMPDEST SWAP1 PUSH2 0x936 SWAP1 PUSH2 0xB06 JUMP JUMPDEST SWAP1 PUSH2 0xB28 PUSH2 0xA51 PUSH2 0x320 DUP5 SLOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0xB39 JUMPI POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 PUSH2 0xB56 PUSH2 0xA9C PUSH1 0x1 SWAP3 PUSH2 0xB4E DUP8 PUSH2 0x94B JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 ADD PUSH2 0xB2C JUMP JUMPDEST SWAP1 PUSH2 0x1C8 SWAP2 PUSH2 0xB19 JUMP JUMPDEST SWAP1 PUSH2 0x1B2 PUSH2 0xACF SWAP3 PUSH2 0xB79 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP4 DUP5 DUP1 SWAP3 PUSH2 0xB5E JUMP JUMPDEST PUSH2 0x1C8 SWAP1 PUSH2 0xB68 JUMP JUMPDEST PUSH2 0xBA2 PUSH2 0x1C8 SWAP2 PUSH2 0xB9A PUSH1 0x60 SWAP1 JUMP JUMPDEST POP PUSH1 0x4 PUSH2 0xB0F JUMP JUMPDEST PUSH2 0xB82 JUMP JUMPDEST PUSH2 0x1C8 PUSH1 0xA PUSH2 0x94B JUMP JUMPDEST PUSH2 0xBB9 PUSH2 0x2250 JUMP JUMPDEST PUSH2 0x1B2 PUSH2 0xBD7 JUMP JUMPDEST PUSH2 0x1CB PUSH2 0x1C8 PUSH2 0x1C8 SWAP3 SWAP1 JUMP JUMPDEST PUSH2 0x1C8 SWAP1 PUSH2 0xBC1 JUMP JUMPDEST PUSH2 0x1B2 PUSH2 0xBE4 PUSH1 0x0 PUSH2 0xBCE JUMP JUMPDEST PUSH2 0x2291 JUMP JUMPDEST PUSH2 0x1B2 PUSH2 0xBB1 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x8C2 JUMPI PUSH1 0x20 DUP1 SWAP2 MUL ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0xC1B PUSH2 0xC16 DUP4 PUSH2 0xBF1 JUMP JUMPDEST PUSH2 0x8C7 JUMP JUMPDEST SWAP2 DUP3 MSTORE JUMP JUMPDEST SWAP1 PUSH2 0x1B2 PUSH2 0xC96 PUSH1 0x5 PUSH2 0xC31 PUSH2 0x8DB JUMP JUMPDEST SWAP5 PUSH2 0xC46 PUSH2 0x98E DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0xC5C PUSH2 0xC55 PUSH1 0x1 DUP4 ADD PUSH2 0x94B JUMP JUMPDEST PUSH1 0x20 DUP9 ADD MSTORE JUMP JUMPDEST PUSH2 0xC6B PUSH2 0x9D1 PUSH1 0x2 DUP4 ADD PUSH2 0x94B JUMP JUMPDEST PUSH2 0xC7A PUSH2 0x9E7 PUSH1 0x3 DUP4 ADD PUSH2 0x94B JUMP JUMPDEST PUSH2 0xC90 PUSH2 0xC89 PUSH1 0x4 DUP4 ADD PUSH2 0x94B JUMP JUMPDEST PUSH1 0x80 DUP9 ADD MSTORE JUMP JUMPDEST ADD PUSH2 0x95E JUMP JUMPDEST ISZERO ISZERO PUSH1 0xA0 DUP5 ADD MSTORE JUMP JUMPDEST PUSH2 0x1C8 SWAP1 PUSH2 0xC20 JUMP JUMPDEST SWAP1 PUSH2 0xCB1 DUP3 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xCBA DUP2 PUSH2 0xC09 JUMP JUMPDEST SWAP3 PUSH2 0xCCE PUSH1 0x20 DUP6 ADD SWAP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0xCDF JUMPI POP POP POP POP JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 PUSH1 0x1 SWAP3 PUSH2 0xCEF DUP6 PUSH2 0xC9F JUMP JUMPDEST DUP2 MSTORE ADD SWAP3 ADD SWAP3 ADD SWAP2 SWAP1 PUSH2 0xCD2 JUMP JUMPDEST PUSH2 0x1C8 SWAP1 PUSH2 0xCA8 JUMP JUMPDEST PUSH2 0xD1D PUSH2 0x1C8 SWAP2 PUSH2 0xD15 PUSH1 0x60 SWAP1 JUMP JUMPDEST POP PUSH1 0x5 PUSH2 0x92C JUMP JUMPDEST PUSH2 0xCFD JUMP JUMPDEST PUSH2 0x1B2 SWAP1 PUSH2 0xD2E PUSH2 0x2250 JUMP JUMPDEST PUSH2 0xE06 JUMP JUMPDEST ISZERO PUSH2 0xD3A JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x566F74696E6720616C726561647920616374697665 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE DUP1 PUSH1 0x64 DUP2 ADD JUMPDEST SUB SWAP1 REVERT JUMPDEST SWAP1 PUSH1 0xFF SWAP1 JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0xD9B PUSH2 0x1C8 PUSH2 0xDA2 SWAP3 ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP3 SLOAD PUSH2 0xD7C JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST SWAP1 PUSH1 0x0 NOT SWAP1 PUSH2 0xD81 JUMP JUMPDEST SWAP1 PUSH2 0xDC0 PUSH2 0x1C8 PUSH2 0xDA2 SWAP3 PUSH2 0x91F JUMP JUMPDEST DUP3 SLOAD PUSH2 0xDA6 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0xDEA JUMPI JUMP JUMPDEST PUSH2 0xDC7 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP2 ADD SWAP3 SWAP2 PUSH2 0x1B2 SWAP2 PUSH1 0x20 ADD MSTORE JUMP JUMPDEST ADD MSTORE JUMP JUMPDEST PUSH2 0xE43 PUSH2 0xE4A SWAP2 PUSH2 0xE26 PUSH2 0xE21 PUSH2 0xE1D PUSH1 0xB PUSH2 0x95E JUMP JUMPDEST ISZERO SWAP1 JUMP JUMPDEST PUSH2 0xD33 JUMP JUMPDEST PUSH2 0xE32 PUSH1 0x1 PUSH1 0xB PUSH2 0xD8B JUMP JUMPDEST PUSH2 0xE3D TIMESTAMP PUSH1 0xC PUSH2 0xDB0 JUMP JUMPDEST TIMESTAMP PUSH2 0xDDD JUMP JUMPDEST PUSH1 0xD PUSH2 0xDB0 JUMP JUMPDEST PUSH32 0xE280A408633821740A429FB671E01CACF8D1D70D5C2735F4F94EC0EDEF4EA6DE PUSH2 0xE75 PUSH1 0xC PUSH2 0x94B JUMP JUMPDEST PUSH2 0xE7F PUSH1 0xD PUSH2 0x94B JUMP JUMPDEST SWAP1 PUSH2 0xE95 PUSH2 0xE8C PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 SWAP3 DUP4 PUSH2 0xDEF JUMP JUMPDEST SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x1B2 SWAP1 PUSH2 0xD22 JUMP JUMPDEST PUSH2 0x1C8 SWAP2 PUSH2 0xEBE PUSH2 0xEC3 SWAP3 PUSH2 0xEB6 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x6 PUSH2 0xB0F JUMP JUMPDEST PUSH2 0x92C JUMP JUMPDEST PUSH2 0x95E JUMP JUMPDEST SWAP1 PUSH2 0x1B2 SWAP2 PUSH2 0xED5 PUSH2 0x2250 JUMP JUMPDEST SWAP1 PUSH2 0xEE4 PUSH2 0x1B2 SWAP3 PUSH1 0xE PUSH2 0xDB0 JUMP JUMPDEST PUSH1 0xF PUSH2 0xDB0 JUMP JUMPDEST SWAP1 PUSH2 0x1B2 SWAP2 PUSH2 0xEC8 JUMP JUMPDEST PUSH2 0xEFD PUSH2 0x2250 JUMP JUMPDEST PUSH2 0x1B2 PUSH2 0xF45 JUMP JUMPDEST ISZERO PUSH2 0xF0C JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x566F74696E67206E6F7420616374697665 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0xF57 PUSH2 0xF52 PUSH1 0xB PUSH2 0x95E JUMP JUMPDEST PUSH2 0xF05 JUMP JUMPDEST PUSH2 0xF63 PUSH1 0x0 PUSH1 0xB PUSH2 0xD8B JUMP JUMPDEST PUSH2 0xF6E TIMESTAMP PUSH1 0xD PUSH2 0xDB0 JUMP JUMPDEST PUSH32 0x9956BD7B1AE344FBB54DBD02A85E2283BEC6BF75F7FCCBAA9C2392A715E71E49 PUSH2 0xE95 PUSH2 0x298 PUSH1 0xD PUSH2 0x94B JUMP JUMPDEST PUSH2 0x1B2 PUSH2 0xEF5 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0xFDD JUMPI PUSH2 0xFD4 PUSH1 0x6 SWAP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP2 MUL ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0xFA4 JUMP JUMPDEST PUSH2 0xFEC PUSH1 0x0 PUSH2 0x91F JUMP JUMPDEST SWAP1 DUP2 JUMPDEST PUSH1 0x5 PUSH2 0x1005 PUSH2 0x1C8 PUSH2 0x1001 DUP6 DUP5 PUSH2 0x92C JUMP JUMPDEST SLOAD SWAP1 JUMP JUMPDEST DUP5 LT ISZERO PUSH2 0x1045 JUMPI PUSH2 0x103F SWAP2 PUSH2 0x1032 PUSH1 0x2 PUSH2 0x102B DUP8 PUSH2 0x1026 DUP9 PUSH2 0x1038 SWAP8 PUSH2 0x92C JUMP JUMPDEST PUSH2 0xFBA JUMP JUMPDEST POP ADD PUSH2 0x94B JUMP JUMPDEST SWAP1 PUSH2 0xDDD JUMP JUMPDEST SWAP3 PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST SWAP2 PUSH2 0xFEF JUMP JUMPDEST POP SWAP2 POP POP SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x1053 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x159BDD195C881B9BDD081C9959DA5CDD195C9959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x1B2 SWAP2 PUSH2 0x10AC PUSH2 0x10A7 PUSH1 0x6 PUSH2 0xC90 CALLER PUSH1 0x2 PUSH2 0xB0F JUMP JUMPDEST PUSH2 0x104C JUMP JUMPDEST PUSH2 0x10F5 JUMP JUMPDEST ISZERO PUSH2 0x10B8 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x13DD5D1CDA5919481D9BDD1A5B99C81C195C9A5BD9 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x1B2 SWAP2 PUSH2 0x1107 PUSH2 0xF52 PUSH1 0xB PUSH2 0x95E JUMP JUMPDEST PUSH2 0x1114 PUSH2 0x1C8 PUSH1 0xC PUSH2 0x94B JUMP JUMPDEST TIMESTAMP LT ISZERO DUP1 PUSH2 0x112B JUMPI JUMPDEST PUSH2 0x1126 SWAP1 PUSH2 0x10B1 JUMP JUMPDEST PUSH2 0x1376 JUMP JUMPDEST POP PUSH2 0x1126 PUSH2 0x113C PUSH2 0x1C8 PUSH1 0xD PUSH2 0x94B JUMP JUMPDEST TIMESTAMP GT ISZERO SWAP1 POP PUSH2 0x111D JUMP JUMPDEST ISZERO PUSH2 0x114D JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 PUSH2 0xD78 PUSH1 0x4 DUP3 ADD PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x416C726561647920766F74656420666F7220746869732063616E646964617465 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x119D JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x506F776572206D7573742062652067726561746572207468616E203000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x11E9 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E7420766F74696E6720706F77657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH2 0xD81 JUMP JUMPDEST SWAP1 PUSH2 0x1263 PUSH2 0x1C8 PUSH2 0xDA2 SWAP3 PUSH2 0xB06 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x1244 JUMP JUMPDEST SWAP1 PUSH2 0xDC0 PUSH2 0x1C8 PUSH2 0xDA2 SWAP3 SWAP1 JUMP JUMPDEST PUSH1 0x5 PUSH2 0x1303 PUSH1 0xA0 PUSH2 0x1B2 SWAP5 PUSH2 0x12A0 PUSH2 0x129A PUSH1 0x0 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST DUP7 PUSH2 0x1253 JUMP JUMPDEST PUSH2 0x12B7 PUSH2 0x12AE PUSH1 0x20 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP8 ADD PUSH2 0xDB0 JUMP JUMPDEST PUSH2 0x12CE PUSH2 0x12C5 PUSH1 0x40 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP8 ADD PUSH2 0xDB0 JUMP JUMPDEST PUSH2 0x12E5 PUSH2 0x12DC PUSH1 0x60 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x3 DUP8 ADD PUSH2 0xDB0 JUMP JUMPDEST PUSH2 0x12FC PUSH2 0x12F3 PUSH1 0x80 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x4 DUP8 ADD PUSH2 0x126A JUMP JUMPDEST ADD MLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST SWAP2 ADD PUSH2 0xD8B JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x1319 JUMPI PUSH2 0x1B2 SWAP2 PUSH2 0x1278 JUMP JUMPDEST PUSH2 0x122E JUMP JUMPDEST SWAP1 DUP2 SLOAD SWAP2 PUSH1 0x1 PUSH1 0x40 SHL DUP4 LT ISZERO PUSH2 0x8C2 JUMPI DUP3 PUSH2 0x1341 SWAP2 PUSH1 0x1 PUSH2 0x1B2 SWAP6 ADD DUP2 SSTORE PUSH2 0xFBA JUMP JUMPDEST SWAP1 PUSH2 0x130A JUMP JUMPDEST PUSH2 0xE02 PUSH2 0x1B2 SWAP5 PUSH2 0x136D PUSH1 0x60 SWAP5 SWAP9 SWAP8 SWAP6 PUSH2 0x1366 PUSH1 0x80 DUP7 ADD SWAP11 PUSH1 0x0 DUP8 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MSTORE JUMP JUMPDEST ISZERO ISZERO PUSH1 0x40 DUP4 ADD MSTORE JUMP JUMPDEST SWAP1 PUSH32 0xE89C99A0264D21C2AD18316D6E7B3AA31414C12F31B085AFDEEACAA7E69F80B6 SWAP1 PUSH2 0x13B6 PUSH2 0x13B1 PUSH2 0xE1D PUSH2 0xEC3 DUP7 PUSH2 0xEBE CALLER PUSH1 0x6 PUSH2 0xB0F JUMP JUMPDEST PUSH2 0x1146 JUMP JUMPDEST PUSH2 0x13CB PUSH2 0x13C3 PUSH1 0x0 PUSH2 0x91F JUMP JUMPDEST DUP3 JUMPDEST GT PUSH2 0x1196 JUMP JUMPDEST PUSH2 0x14A6 PUSH1 0xA0 PUSH1 0x2 PUSH2 0x13EF PUSH2 0x13E7 PUSH2 0x1C8 PUSH1 0x3 PUSH2 0xA06 CALLER DUP7 PUSH2 0xB0F JUMP JUMPDEST DUP6 GT ISZERO PUSH2 0x11E2 JUMP JUMPDEST PUSH2 0x12FC PUSH2 0x149C PUSH2 0x1409 PUSH2 0x1401 DUP10 PUSH2 0x91F JUMP JUMPDEST TIMESTAMP SWAP1 CALLER PUSH2 0x231D JUMP JUMPDEST SWAP3 PUSH2 0x1465 PUSH2 0x141B DUP3 PUSH2 0xA06 CALLER DUP3 PUSH2 0xB0F JUMP JUMPDEST PUSH2 0x142C PUSH2 0x1428 PUSH1 0x0 PUSH2 0x91F JUMP JUMPDEST SWAP2 SWAP1 JUMP JUMPDEST GT PUSH2 0x145D PUSH2 0x1438 PUSH2 0x8DB JUMP JUMPDEST CALLER DUP2 MSTORE SWAP7 PUSH2 0x1447 DUP14 PUSH1 0x20 DUP11 ADD MSTORE JUMP JUMPDEST PUSH2 0x1452 DUP12 PUSH1 0x40 DUP11 ADD MSTORE JUMP JUMPDEST PUSH2 0xC89 TIMESTAMP PUSH1 0x60 DUP11 ADD MSTORE JUMP JUMPDEST ISZERO ISZERO DUP6 DUP8 ADD MSTORE JUMP JUMPDEST PUSH2 0x147C DUP5 PUSH2 0x1477 PUSH2 0x1C8 DUP13 PUSH1 0x5 PUSH2 0x92C JUMP JUMPDEST PUSH2 0x131E JUMP JUMPDEST PUSH2 0x1495 PUSH1 0x1 PUSH2 0x1490 DUP12 PUSH2 0xEBE CALLER PUSH1 0x6 PUSH2 0xB0F JUMP JUMPDEST PUSH2 0xD8B JUMP JUMPDEST CALLER SWAP1 PUSH2 0xB0F JUMP JUMPDEST PUSH1 0x7 TIMESTAMP SWAP2 ADD PUSH2 0xDB0 JUMP JUMPDEST SWAP1 PUSH2 0x14C8 PUSH2 0x14B3 CALLER PUSH2 0xB06 JUMP JUMPDEST SWAP5 PUSH2 0x14BD PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP4 DUP5 SWAP4 TIMESTAMP SWAP3 DUP6 PUSH2 0x1347 JUMP JUMPDEST SUB SWAP1 LOG2 JUMP JUMPDEST SWAP1 PUSH2 0x1B2 SWAP2 PUSH2 0x108F JUMP JUMPDEST PUSH2 0x14E8 SWAP1 PUSH2 0x14E3 PUSH2 0x2368 JUMP JUMPDEST PUSH2 0x158E JUMP JUMPDEST PUSH2 0x1B2 PUSH2 0x23A8 JUMP JUMPDEST ISZERO PUSH2 0x14F7 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x44656C65676174696F6E206E6F7420616374697665 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x153B JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x2737BA103A3432903232B632B3B0BA37B9 PUSH1 0x79 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0xDEA JUMPI JUMP JUMPDEST DUP1 ISZERO PUSH2 0xDEA JUMPI PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST PUSH2 0x1706 PUSH2 0x159F PUSH2 0x1C8 DUP4 PUSH1 0x3 PUSH2 0x92C JUMP JUMPDEST PUSH2 0x15E7 PUSH1 0x0 PUSH1 0x4 DUP4 ADD PUSH2 0x15B9 PUSH2 0x15B4 DUP3 PUSH2 0x95E JUMP JUMPDEST PUSH2 0x14F0 JUMP JUMPDEST PUSH2 0x1490 PUSH2 0x15CF DUP4 DUP7 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x15E1 CALLER JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST EQ PUSH2 0x1534 JUMP JUMPDEST PUSH2 0x16A5 PUSH1 0x8 PUSH2 0x1693 PUSH2 0x15F9 PUSH1 0x0 PUSH2 0xBCE JUMP JUMPDEST PUSH2 0x1611 PUSH1 0x2 SWAP2 PUSH1 0x4 PUSH2 0x160B CALLER DUP6 PUSH2 0xB0F JUMP JUMPDEST ADD PUSH2 0x1253 JUMP JUMPDEST PUSH2 0x1682 PUSH1 0x1 PUSH2 0x1651 DUP4 DUP9 ADD PUSH2 0x164C PUSH2 0x1628 DUP3 PUSH2 0x94B JUMP JUMPDEST PUSH2 0x1646 DUP6 PUSH2 0x1636 CALLER DUP11 PUSH2 0xB0F JUMP JUMPDEST ADD SWAP2 PUSH2 0x1641 DUP4 PUSH2 0x94B JUMP JUMPDEST PUSH2 0xDDD JUMP JUMPDEST SWAP1 PUSH2 0xDB0 JUMP JUMPDEST PUSH2 0x94B JUMP JUMPDEST SWAP7 ADD SWAP6 PUSH2 0x1646 DUP4 PUSH2 0x1672 PUSH2 0x166C DUP11 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST DUP3 PUSH2 0xB0F JUMP JUMPDEST ADD SWAP2 PUSH2 0x167D DUP4 PUSH2 0x94B JUMP JUMPDEST PUSH2 0x1574 JUMP JUMPDEST DUP5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH2 0xB0F JUMP JUMPDEST ADD PUSH2 0x1646 PUSH2 0x16A0 DUP3 PUSH2 0x94B JUMP JUMPDEST PUSH2 0x1581 JUMP JUMPDEST PUSH2 0x16C0 PUSH2 0x16B9 DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST CALLER SWAP1 PUSH2 0x240F JUMP JUMPDEST PUSH2 0x16C9 CALLER PUSH2 0x24B1 JUMP JUMPDEST PUSH2 0x16E2 PUSH2 0x16DD DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x24B1 JUMP JUMPDEST PUSH2 0x16F9 PUSH2 0x16F2 PUSH2 0x16A0 PUSH1 0xA PUSH2 0x94B JUMP JUMPDEST PUSH1 0xA PUSH2 0xDB0 JUMP JUMPDEST SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH32 0x657937CAD9C3CE43C8ECE19052E5F60B2DB7D536FDB47405C20ECF1C3DF56B7D PUSH2 0x1751 PUSH2 0x173C PUSH2 0x1736 CALLER PUSH2 0xB06 JUMP JUMPDEST SWAP4 PUSH2 0xB06 JUMP JUMPDEST SWAP4 PUSH2 0x1746 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP2 DUP3 SWAP2 TIMESTAMP SWAP1 DUP4 PUSH2 0xDEF JUMP JUMPDEST SUB SWAP1 LOG3 JUMP JUMPDEST PUSH2 0x1B2 SWAP1 PUSH2 0x14D7 JUMP JUMPDEST SWAP1 PUSH2 0x1B2 SWAP2 PUSH2 0x176C PUSH2 0x2250 JUMP JUMPDEST PUSH2 0x1A51 JUMP JUMPDEST ISZERO PUSH2 0x1778 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x566F74657220616C726561647920726567697374657265640000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLDATASIZE SWAP1 CALLDATACOPY JUMP JUMPDEST SWAP1 PUSH2 0x1B2 PUSH2 0x17D8 PUSH2 0x17D2 DUP5 PUSH2 0xC09 JUMP JUMPDEST SWAP4 PUSH2 0xBF1 JUMP JUMPDEST PUSH1 0x1F NOT ADD PUSH1 0x20 DUP5 ADD PUSH2 0x17BD JUMP JUMPDEST PUSH2 0x1C8 PUSH2 0x120 PUSH2 0x8C7 JUMP JUMPDEST SWAP2 PUSH1 0x0 NOT PUSH1 0x8 SWAP3 SWAP1 SWAP3 MUL SWAP2 DUP3 SHL SWAP2 SHL PUSH2 0xD81 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x1815 PUSH2 0x1C8 PUSH2 0xDA2 SWAP4 PUSH2 0x91F JUMP JUMPDEST SWAP1 DUP4 SLOAD PUSH2 0x17F0 JUMP JUMPDEST PUSH2 0x1B2 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x1804 JUMP JUMPDEST DUP2 DUP2 LT PUSH2 0x1834 JUMPI POP POP JUMP JUMPDEST DUP1 PUSH2 0x1842 PUSH1 0x0 PUSH1 0x1 SWAP4 PUSH2 0x181D JUMP JUMPDEST ADD PUSH2 0x1829 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 DUP3 DUP3 LT PUSH2 0x1857 JUMPI POP POP POP JUMP JUMPDEST PUSH2 0x1B2 SWAP3 SWAP2 PUSH2 0x186C SWAP1 SWAP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x1829 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x40 SHL DUP2 GT PUSH2 0x8C2 JUMPI DUP2 PUSH2 0x188E PUSH2 0x1B2 SWAP4 SLOAD SWAP1 JUMP JUMPDEST SWAP1 DUP3 DUP2 SSTORE PUSH2 0x1848 JUMP JUMPDEST PUSH2 0x1C8 SWAP2 PUSH1 0x8 MUL SHR PUSH2 0x1CB JUMP JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x8 SWAP3 SWAP1 SWAP3 MUL SWAP2 DUP3 SHL SWAP2 SHL PUSH2 0xD81 JUMP JUMPDEST DUP2 MLOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x8C2 JUMPI PUSH2 0x18E8 PUSH2 0xA51 PUSH1 0x1 SWAP3 PUSH2 0x18E2 DUP7 DUP7 PUSH2 0x1876 JUMP JUMPDEST PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 DIV SWAP2 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x18FB JUMPI POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SWAP1 PUSH1 0x20 PUSH2 0x1914 PUSH2 0x1C8 DUP7 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP5 ADD SWAP4 DUP2 DUP5 ADD SSTORE ADD PUSH2 0x18EE JUMP JUMPDEST SWAP1 PUSH2 0x1B2 SWAP2 PUSH2 0x18BD JUMP JUMPDEST PUSH1 0x8 PUSH2 0x19E4 PUSH2 0x100 PUSH2 0x1B2 SWAP5 PUSH2 0x194E PUSH2 0x129A PUSH1 0x0 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x195C PUSH2 0x12AE PUSH1 0x20 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x196A PUSH2 0x12C5 PUSH1 0x40 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1978 PUSH2 0x12DC PUSH1 0x60 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1998 PUSH2 0x198F PUSH1 0x80 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x4 DUP8 ADD PUSH2 0x1253 JUMP JUMPDEST PUSH2 0x19AF PUSH2 0x19A6 PUSH1 0xA0 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x5 DUP8 ADD PUSH2 0x1921 JUMP JUMPDEST PUSH2 0x19C8 PUSH2 0x19BF PUSH1 0xC0 DUP4 ADD MLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x6 DUP8 ADD PUSH2 0xD8B JUMP JUMPDEST PUSH2 0x19DF PUSH2 0x19D6 PUSH1 0xE0 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x7 DUP8 ADD PUSH2 0xDB0 JUMP JUMPDEST ADD MLOAD SWAP1 JUMP JUMPDEST SWAP2 ADD PUSH2 0xDB0 JUMP JUMPDEST SWAP1 PUSH2 0x1B2 SWAP2 PUSH2 0x192B JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0xFDD JUMPI PUSH2 0xFD4 PUSH1 0x1 SWAP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x1A20 PUSH2 0x1C8 PUSH2 0xDA2 SWAP4 PUSH2 0xB06 JUMP JUMPDEST SWAP1 DUP4 SLOAD PUSH2 0x18A4 JUMP JUMPDEST SWAP1 DUP2 SLOAD SWAP2 PUSH1 0x1 PUSH1 0x40 SHL DUP4 LT ISZERO PUSH2 0x8C2 JUMPI DUP3 PUSH2 0x1A4B SWAP2 PUSH1 0x1 PUSH2 0x1B2 SWAP6 ADD DUP2 SSTORE PUSH2 0x19F5 JUMP JUMPDEST SWAP1 PUSH2 0x1A0F JUMP JUMPDEST PUSH2 0x14C8 PUSH2 0x1B78 PUSH32 0x49A90692135172B11FF45007EF12B97C37DF00BC650E48846F88DA97B191B2D0 SWAP3 PUSH2 0x1A94 PUSH2 0x1A8F PUSH2 0xE1D PUSH1 0x6 PUSH2 0xC90 DUP6 PUSH1 0x2 PUSH2 0xB0F JUMP JUMPDEST PUSH2 0x1771 JUMP JUMPDEST PUSH2 0x1B50 PUSH1 0x0 PUSH2 0x1AAB PUSH2 0x1AA5 DUP3 PUSH2 0x91F JUMP JUMPDEST DUP9 PUSH2 0x13C5 JUMP JUMPDEST PUSH2 0x1B40 PUSH2 0x1AB7 DUP3 PUSH2 0xBCE JUMP JUMPDEST PUSH2 0x1B26 PUSH2 0x1AC3 DUP5 PUSH2 0x91F JUMP JUMPDEST SWAP2 PUSH2 0x1B1F PUSH2 0x1AD0 DUP5 PUSH2 0x17C2 JUMP JUMPDEST SWAP2 PUSH2 0x1AEE DUP10 PUSH2 0x1ADD PUSH2 0x17E5 JUMP JUMPDEST SWAP9 DUP10 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST PUSH2 0x1AF9 DUP14 PUSH1 0x20 DUP10 ADD MSTORE JUMP JUMPDEST PUSH2 0x1B04 DUP6 PUSH1 0x40 DUP10 ADD MSTORE JUMP JUMPDEST PUSH2 0x1B0F DUP14 PUSH1 0x60 DUP10 ADD MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x80 DUP8 ADD MSTORE JUMP JUMPDEST PUSH1 0xA0 DUP6 ADD MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0xC0 DUP5 ADD MSTORE PUSH2 0x1B38 DUP2 PUSH1 0xE0 DUP6 ADD MSTORE JUMP JUMPDEST PUSH2 0x100 DUP4 ADD MSTORE JUMP JUMPDEST PUSH2 0x1B4B DUP4 PUSH1 0x2 PUSH2 0xB0F JUMP JUMPDEST PUSH2 0x19EB JUMP JUMPDEST PUSH2 0x1B5B DUP2 PUSH1 0x7 PUSH2 0x1A28 JUMP JUMPDEST PUSH2 0x1B73 PUSH2 0x1B6C DUP7 PUSH2 0x1641 PUSH1 0x9 PUSH2 0x94B JUMP JUMPDEST PUSH1 0x9 PUSH2 0xDB0 JUMP JUMPDEST PUSH2 0xB06 JUMP JUMPDEST SWAP3 PUSH2 0x1746 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1B2 SWAP2 PUSH2 0x175F JUMP JUMPDEST SWAP1 PUSH2 0x1C8 SWAP3 SWAP2 PUSH2 0x1BA5 PUSH2 0x10A7 PUSH1 0x6 PUSH2 0xC90 CALLER PUSH1 0x2 PUSH2 0xB0F JUMP JUMPDEST PUSH2 0x1CD1 JUMP JUMPDEST ISZERO PUSH2 0x1BB1 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F742064656C656761746520746F2073656C66000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1BFD JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x44656C656761746F72206E6F7420726567697374657265640000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1C49 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x44656C6567617465206E6F742072656769737465726564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1C95 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x416C7265616479206861732064656C6567617465 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x1C8 SWAP3 SWAP2 SWAP1 PUSH2 0x1CEC PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND CALLER EQ ISZERO PUSH2 0x1BAA JUMP JUMPDEST PUSH2 0x1D4B PUSH2 0x1D35 PUSH1 0x4 PUSH2 0x1D27 PUSH1 0x2 PUSH2 0x1D10 PUSH2 0x1D0B PUSH1 0x6 PUSH2 0xC90 CALLER DUP6 PUSH2 0xB0F JUMP JUMPDEST PUSH2 0x1BF6 JUMP JUMPDEST PUSH2 0x1495 PUSH2 0x1D22 PUSH1 0x6 PUSH2 0xC90 DUP11 DUP6 PUSH2 0xB0F JUMP JUMPDEST PUSH2 0x1C42 JUMP JUMPDEST ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x1D45 PUSH2 0x15D4 PUSH2 0x1CB PUSH1 0x0 PUSH2 0xBCE JUMP JUMPDEST EQ PUSH2 0x1C8E JUMP JUMPDEST PUSH2 0x1EF5 JUMP JUMPDEST ISZERO PUSH2 0x1D57 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x506F7765722062656C6F77206D696E696D756D PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1D99 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x24B739BAB33334B1B4B2B73A103837BBB2B9 PUSH1 0x71 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1DDA JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43697263756C61722064656C65676174696F6E20646574656374656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0xDEA JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x5 PUSH2 0x19E4 PUSH1 0xA0 PUSH2 0x1B2 SWAP5 PUSH2 0x1E50 PUSH2 0x129A PUSH1 0x0 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x1E70 PUSH2 0x1E67 PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP8 ADD PUSH2 0x1253 JUMP JUMPDEST PUSH2 0x1E7E PUSH2 0x12C5 PUSH1 0x40 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1E8C PUSH2 0x12DC PUSH1 0x60 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x19DF PUSH2 0x1E9C PUSH1 0x80 DUP4 ADD MLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x4 DUP8 ADD PUSH2 0xD8B JUMP JUMPDEST SWAP1 PUSH2 0x1B2 SWAP2 PUSH2 0x1E2E JUMP JUMPDEST SWAP1 DUP2 SLOAD SWAP2 PUSH1 0x1 PUSH1 0x40 SHL DUP4 LT ISZERO PUSH2 0x8C2 JUMPI DUP3 PUSH2 0x1ED2 SWAP2 PUSH1 0x1 PUSH2 0x1B2 SWAP6 ADD DUP2 SSTORE PUSH2 0x19F5 JUMP JUMPDEST SWAP1 PUSH2 0x1804 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x60 DUP2 ADD SWAP4 SWAP3 PUSH2 0x1B2 SWAP3 SWAP1 SWAP2 PUSH1 0x40 SWAP2 PUSH2 0xE02 SWAP1 PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST POP SWAP1 PUSH2 0x1F0F PUSH2 0x1F07 PUSH2 0x1C8 PUSH1 0xF PUSH2 0x94B JUMP JUMPDEST DUP3 LT ISZERO PUSH2 0x1D50 JUMP JUMPDEST PUSH1 0x2 SWAP2 PUSH2 0x1F2F PUSH2 0x1F27 PUSH2 0x1C8 PUSH1 0x1 PUSH2 0xA06 CALLER DUP9 PUSH2 0xB0F JUMP JUMPDEST DUP4 GT ISZERO PUSH2 0x1D92 JUMP JUMPDEST PUSH2 0x1F44 PUSH2 0x1F3F PUSH2 0xE1D DUP4 CALLER PUSH2 0x2521 JUMP JUMPDEST PUSH2 0x1DD3 JUMP JUMPDEST PUSH2 0x204E PUSH1 0x8 PUSH2 0x203C DUP4 PUSH2 0x1F56 DUP4 PUSH2 0x94B JUMP JUMPDEST SWAP7 PUSH2 0x1F69 PUSH2 0x1F63 DUP10 PUSH2 0x1E1F JUMP JUMPDEST DUP6 PUSH2 0xDB0 JUMP JUMPDEST PUSH2 0x1FBE PUSH2 0x1F74 PUSH2 0x8DB JUMP JUMPDEST CALLER DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x1F91 DUP10 PUSH1 0x40 DUP4 ADD MSTORE JUMP JUMPDEST PUSH2 0x1F9C TIMESTAMP PUSH1 0x60 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x80 DUP3 ADD MSTORE PUSH2 0x1FAE DUP11 PUSH1 0xA0 DUP4 ADD MSTORE JUMP JUMPDEST PUSH2 0x1FB9 DUP11 PUSH1 0x3 PUSH2 0x92C JUMP JUMPDEST PUSH2 0x1EA5 JUMP JUMPDEST PUSH2 0x1FD5 DUP9 PUSH2 0x1FD0 PUSH2 0x1C8 CALLER PUSH1 0x4 PUSH2 0xB0F JUMP JUMPDEST PUSH2 0x1EAF JUMP JUMPDEST PUSH2 0x1FE5 DUP3 PUSH1 0x4 PUSH2 0x160B CALLER DUP6 PUSH2 0xB0F JUMP JUMPDEST PUSH2 0x2002 PUSH1 0x1 PUSH2 0x1FF4 CALLER DUP5 PUSH2 0xB0F JUMP JUMPDEST ADD PUSH2 0x1646 DUP10 PUSH2 0x167D DUP4 PUSH2 0x94B JUMP JUMPDEST PUSH2 0x201E DUP2 PUSH2 0x2010 DUP5 DUP3 PUSH2 0xB0F JUMP JUMPDEST ADD PUSH2 0x1646 DUP10 PUSH2 0x1641 DUP4 PUSH2 0x94B JUMP JUMPDEST PUSH2 0x2037 PUSH2 0x2030 PUSH1 0x5 PUSH2 0x30D DUP6 DUP6 PUSH2 0xB0F JUMP JUMPDEST CALLER SWAP1 PUSH2 0x1A28 JUMP JUMPDEST PUSH2 0xB0F JUMP JUMPDEST ADD PUSH2 0x1646 PUSH2 0x2049 DUP3 PUSH2 0x94B JUMP JUMPDEST PUSH2 0x1E1F JUMP JUMPDEST PUSH2 0x2057 CALLER PUSH2 0x24B1 JUMP JUMPDEST PUSH2 0x2060 DUP2 PUSH2 0x24B1 JUMP JUMPDEST PUSH2 0x2070 PUSH2 0x16F2 PUSH2 0x2049 PUSH1 0xA PUSH2 0x94B JUMP JUMPDEST PUSH32 0xFE35C70E4980D7DF0AFCCC73BB14C09D90B04287CD40B249A714D4033C285185 PUSH2 0x20B6 PUSH2 0x20A0 PUSH2 0x1736 CALLER PUSH2 0xB06 JUMP JUMPDEST SWAP4 PUSH2 0x20AA PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP8 TIMESTAMP SWAP2 DUP5 PUSH2 0x1ED8 JUMP JUMPDEST SUB SWAP1 LOG3 SWAP1 JUMP JUMPDEST PUSH2 0x1C8 SWAP2 SWAP1 PUSH1 0x0 PUSH2 0x1B8C JUMP JUMPDEST PUSH2 0x20D0 PUSH2 0x17E5 JUMP JUMPDEST SWAP1 PUSH1 0x0 DUP3 MSTORE PUSH1 0x20 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP11 ADD PUSH1 0x0 DUP2 MSTORE ADD PUSH1 0x0 DUP2 MSTORE ADD PUSH1 0x0 DUP2 MSTORE ADD PUSH1 0x0 DUP2 MSTORE ADD PUSH1 0x60 PUSH2 0x903 JUMP JUMPDEST PUSH2 0x1C8 PUSH2 0x20C8 JUMP JUMPDEST SWAP1 PUSH2 0x1B2 PUSH2 0x21C2 PUSH1 0x8 PUSH2 0x2115 PUSH2 0x17E5 JUMP JUMPDEST SWAP5 PUSH2 0x212A PUSH2 0x98E DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x2139 PUSH2 0xC55 PUSH1 0x1 DUP4 ADD PUSH2 0x94B JUMP JUMPDEST PUSH2 0x2148 PUSH2 0x9D1 PUSH1 0x2 DUP4 ADD PUSH2 0x94B JUMP JUMPDEST PUSH2 0x2157 PUSH2 0x9E7 PUSH1 0x3 DUP4 ADD PUSH2 0x94B JUMP JUMPDEST PUSH2 0x217E PUSH2 0x216E PUSH1 0x4 DUP4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x80 DUP9 ADD MSTORE JUMP JUMPDEST PUSH2 0x2194 PUSH2 0x218D PUSH1 0x5 DUP4 ADD PUSH2 0xAB5 JUMP JUMPDEST PUSH1 0xA0 DUP9 ADD MSTORE JUMP JUMPDEST PUSH2 0x21AC PUSH2 0x21A3 PUSH1 0x6 DUP4 ADD PUSH2 0x95E JUMP JUMPDEST ISZERO ISZERO PUSH1 0xC0 DUP9 ADD MSTORE JUMP JUMPDEST PUSH2 0xA06 PUSH2 0x21BB PUSH1 0x7 DUP4 ADD PUSH2 0x94B JUMP JUMPDEST PUSH1 0xE0 DUP9 ADD MSTORE JUMP JUMPDEST PUSH2 0x100 DUP5 ADD MSTORE JUMP JUMPDEST PUSH2 0x1C8 SWAP1 PUSH2 0x2104 JUMP JUMPDEST PUSH2 0x21EA PUSH2 0x1C8 SWAP2 PUSH2 0x21E2 PUSH2 0x20FC JUMP JUMPDEST POP PUSH1 0x2 PUSH2 0xB0F JUMP JUMPDEST PUSH2 0x21CA JUMP JUMPDEST PUSH2 0x1B2 SWAP1 PUSH2 0x21FB PUSH2 0x2250 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2206 DUP2 PUSH2 0xBCE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EQ PUSH2 0x222A JUMPI POP POP PUSH2 0x1B2 SWAP1 PUSH2 0x2291 JUMP JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH2 0x1B2 SWAP1 PUSH2 0x21EF JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SWAP1 PUSH2 0x2267 DUP3 PUSH2 0x15D4 JUMP JUMPDEST SUB PUSH2 0x226F JUMPI POP JUMP JUMPDEST PUSH4 0x118CDAA7 PUSH1 0xE0 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 MSTORE PUSH1 0x24 SUB PUSH1 0x0 REVERT JUMPDEST PUSH2 0x22BA PUSH2 0x22B4 PUSH2 0x22A9 PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x1B73 DUP5 PUSH1 0x0 PUSH2 0x1253 JUMP JUMPDEST SWAP2 PUSH2 0xB06 JUMP JUMPDEST SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH2 0x22E5 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x1751 JUMP JUMPDEST PUSH2 0x1D7 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x60 SHL SWAP1 JUMP JUMPDEST PUSH1 0x20 SWAP4 SWAP3 PUSH2 0x2317 PUSH1 0x14 DUP4 PUSH2 0x2317 DUP9 SWAP6 PUSH2 0x30D SWAP8 PUSH2 0x22EC JUMP JUMPDEST ADD SWAP2 DUP3 MSTORE JUMP JUMPDEST PUSH2 0x2348 SWAP2 SWAP1 PUSH2 0x233C PUSH2 0x232E PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP5 DUP6 SWAP4 PUSH1 0x20 DUP6 ADD SWAP4 DUP5 PUSH2 0x22FF JUMP JUMPDEST SWAP1 DUP2 SUB DUP3 MSTORE SUB DUP3 PUSH2 0x8A0 JUMP JUMPDEST PUSH2 0x235A PUSH2 0x2353 DUP3 MLOAD SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x1C8 PUSH1 0x2 PUSH2 0x91F JUMP JUMPDEST PUSH2 0x2372 PUSH1 0x1 PUSH2 0x94B JUMP JUMPDEST PUSH2 0x237A PUSH2 0x235E JUMP JUMPDEST SWAP1 DUP2 EQ PUSH2 0x238C JUMPI PUSH2 0x1B2 SWAP1 PUSH1 0x1 PUSH2 0xDB0 JUMP JUMPDEST PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH2 0x1C8 PUSH1 0x1 PUSH2 0x91F JUMP JUMPDEST PUSH2 0x1B2 PUSH2 0x23B3 PUSH2 0x239E JUMP JUMPDEST PUSH1 0x1 PUSH2 0xDB0 JUMP JUMPDEST SWAP1 PUSH2 0x1C8 SWAP2 SLOAD PUSH2 0x1897 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1B2 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x1A0F JUMP JUMPDEST DUP1 SLOAD DUP1 ISZERO PUSH2 0x240A JUMPI PUSH1 0x0 NOT ADD SWAP1 PUSH2 0x2407 PUSH2 0x2401 DUP4 DUP4 PUSH2 0x19F5 JUMP JUMPDEST SWAP1 PUSH2 0x23DB JUMP JUMPDEST SSTORE JUMP JUMPDEST PUSH2 0x23C5 JUMP JUMPDEST PUSH1 0x5 PUSH2 0x30D PUSH2 0x241F SWAP3 PUSH1 0x2 PUSH2 0xB0F JUMP JUMPDEST PUSH2 0x2429 PUSH1 0x0 PUSH2 0x91F JUMP JUMPDEST PUSH2 0x2434 PUSH2 0x1C8 DUP4 SLOAD SWAP1 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x24AC JUMPI PUSH2 0x244E PUSH2 0x2448 DUP3 DUP5 PUSH2 0x19F5 JUMP JUMPDEST SWAP1 PUSH2 0x23BA JUMP JUMPDEST PUSH2 0x2460 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x15D4 JUMP JUMPDEST EQ PUSH2 0x246D JUMPI PUSH1 0x1 ADD PUSH2 0x2429 JUMP JUMPDEST PUSH2 0x1B2 SWAP3 POP PUSH2 0x24A7 SWAP1 PUSH2 0x1A4B PUSH2 0x24A0 PUSH2 0x2448 PUSH2 0x249A PUSH2 0x248A DUP8 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x2494 PUSH1 0x1 PUSH2 0x91F JUMP JUMPDEST SWAP1 PUSH2 0x1574 JUMP JUMPDEST DUP7 PUSH2 0x19F5 JUMP JUMPDEST SWAP2 DUP5 PUSH2 0x19F5 JUMP JUMPDEST PUSH2 0x23E7 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x255D9FD63837B26DDECF40374F32676FD529F58ACCD2F1673335F6E04D0FE136 PUSH2 0x14C8 PUSH2 0x2517 PUSH2 0x1736 PUSH1 0x3 PUSH2 0xA06 DUP7 PUSH1 0x2 PUSH2 0x2037 PUSH2 0x2506 PUSH2 0x24F8 PUSH1 0x1 PUSH2 0xA06 DUP7 DUP7 PUSH2 0xB0F JUMP JUMPDEST PUSH2 0x1032 DUP5 PUSH2 0xA06 DUP8 DUP3 PUSH2 0xB0F JUMP JUMPDEST DUP6 PUSH2 0x2511 DUP6 DUP6 PUSH2 0xB0F JUMP JUMPDEST ADD PUSH2 0xDB0 JUMP JUMPDEST SWAP3 PUSH2 0x29C PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EQ PUSH2 0x25D7 JUMPI SWAP1 PUSH1 0x0 PUSH2 0x2548 PUSH1 0x0 PUSH2 0x91F JUMP JUMPDEST SWAP3 JUMPDEST PUSH1 0x2 SWAP1 PUSH2 0x255C PUSH1 0x4 PUSH2 0x1D27 DUP4 DUP6 PUSH2 0xB0F JUMP JUMPDEST PUSH2 0x256B PUSH2 0x15D4 PUSH2 0x1CB DUP7 PUSH2 0xBCE JUMP JUMPDEST EQ ISZERO DUP1 PUSH2 0x25C2 JUMPI JUMPDEST ISZERO PUSH2 0x25B8 JUMPI PUSH2 0x1D27 PUSH1 0x4 SWAP2 PUSH2 0x2587 SWAP4 PUSH2 0xB0F JUMP JUMPDEST SWAP3 DUP4 PUSH2 0x259B PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x15D4 JUMP JUMPDEST EQ PUSH2 0x25AF JUMPI PUSH2 0x25A9 SWAP1 PUSH2 0x1E1F JUMP JUMPDEST SWAP3 PUSH2 0x254A JUMP JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP POP POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH2 0x25D0 PUSH2 0x1C8 PUSH1 0xE PUSH2 0x94B JUMP JUMPDEST DUP6 LT PUSH2 0x2573 JUMP JUMPDEST POP POP PUSH1 0x1 SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE2 0x21 0xCA 0xEA DUP12 0x2D TSTORE DUP7 0xD6 PUSH28 0xD331FA077E08B9DD63055FB96B972FEDD8FDAFDA8B2564736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"415:14242:9:-:0;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;415:14242:9;;;;;;-1:-1:-1;;;;;415:14242:9;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;:::o;:::-;;-1:-1:-1;;415:14242:9;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::o;3805:320::-;;3931:40;3982;3805:320;;3908:10;3805:320;:::i;:::-;3931:40;;:::i;:::-;3982;;:::i;:::-;4097:20;4033:21;4053:1;4033:21;:::i;:::-;;;;;:::i;:::-;4065;;;;:::i;:::-;4097:20;;:::i;1818:40:3:-;1857:1;;;:::i;2037:52::-;;;;:::i;:::-;2061:21;2071:11;;:::i;:::-;2061:21;;:::i;415:14242:9:-;;;;;;;;-1:-1:-1;;;;;415:14242:9;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;:::i;1225:187:0:-;1297:1;1289:10;;;:::i;:::-;1273:26;;;:::i;:::-;;;;:::i;:::-;;1269:95;;1392:12;;;;;:::i;1269:95::-;-1:-1:-1;;;1322:31:0;;;;;;;;;;:::i;:::-;;;;415:14242:9;;;;;;;;;;:::i;:::-;;-1:-1:-1;;;;;415:14242:9;;;;;;;;-1:-1:-1;;;;;415:14242:9;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;:::i;:::-;;;;:::i;2912:187:0:-;3052:40;;3004:6;;;:::i;:::-;3020:17;;;;:::i;:::-;3052:40;:::i;:::-;;;:::i;:::-;;;;415:14242:9;;;;3052:40:0;;;;2912:187::o"},"deployedBytecode":{"functionDebugData":{"abi_decode":{"entryPoint":626,"id":null,"parameterSlots":2,"returnSlots":0},"abi_decode_address":{"entryPoint":1073,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_addresst_uint256":{"entryPoint":1587,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_address":{"entryPoint":1086,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_uint256":{"entryPoint":436,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_uint256":{"entryPoint":421,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_uint256t_uint256":{"entryPoint":1650,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encodeUpdatedPos_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_array_address_dyn_storage":{"entryPoint":2731,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_array_uint256_dyn_storage":{"entryPoint":2910,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_struct_Vote":{"entryPoint":1372,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_address_to_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_address_to_address_nonPadded_inplace":{"entryPoint":8940,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_array_address_dyn":{"entryPoint":785,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_address_dyn_memory_ptr":{"entryPoint":1895,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_address_dyn_storage":{"entryPoint":2626,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_struct_Vote_dyn":{"entryPoint":1444,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_struct_Vote_memory_ptr_dyn_memory_ptr":{"entryPoint":1385,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_uint256_dyn":{"entryPoint":1168,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_uint256_dyn_memory_ptr":{"entryPoint":1106,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_uint256_dyn_storage":{"entryPoint":2841,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_bool":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_bytes32":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_bytes32_to_bytes32_nonPadded_inplace":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_packed_address_bytes32_uint256":{"entryPoint":8959,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_stringliteral":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_0a93":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_0a93db052647212ae38e0d563c2cea8c660bf991f4703d360324b6d52bcdfddd":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_0e2b":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_0e2ba9644f1685ef5cb5da7844c7b30968d6a201930df4a32b12b1940c2f4f4f":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_1c2f":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_4753b041641313f1ca2fbfa3890c4d0c79c5ac55aa0cd2bcb91e0eb948ae8f7c":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_58dd":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_61b2":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_61b2e168a358ed394dcf0242ed119c571b7a7528c2071ac26828805f58234671":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_663e":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_663e283d0ae6eef23650b26f2135143c58a603147d9e780ea8b73ec9aaf0d1fc":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_790d":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_a17f":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_a17fea1e547778a0b216cd3a746efa129b6d1d7262ea8de6a6d5992c7590dc7d":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_c7b1":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_cc03":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_cc030520df3aefef2c03c6e97ccc60431aa6bc0780bf1796a5706e22e40f5f0f":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_d5d6":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_d5d68e069148566e68ad466e873c2a9d44256b8662756f77d5d31c3ebb955fe1":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_d8e6":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_e7ba":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_e7ba12c60469871407bc8b4b932fe2fde360d8973aed7437542f698916fa6d4c":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_eb5c":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_eb5c25ec09aa342a63a80c7e1f30381cbe2531066a85e5b82cadd1faf70e2624":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_f4cb":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_f4cb3383e7055977993a5ee9691137f9c667c7e58f14bbddfa169b757da2cca4":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_fbff":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_struct_Delegation":{"entryPoint":567,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_struct_Delegation_memory_ptr":{"entryPoint":475,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_struct_Vote":{"entryPoint":1280,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_struct_Voter":{"entryPoint":2106,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_struct_Voter_memory_ptr":{"entryPoint":1966,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_array_address_dyn":{"entryPoint":880,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_bool":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_stringliteral_1c2f":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_stringliteral_58dd":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_stringliteral_790d":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_stringliteral_c7b1":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_stringliteral_d8e6":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_stringliteral_fbff":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_uint256_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_uint256_to_uint256_nonPadded_inplace":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_uint256_uint256":{"entryPoint":3567,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_uint256_uint256_bool_uint256":{"entryPoint":4935,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_uint256_uint256_uint256":{"entryPoint":7896,"id":null,"parameterSlots":4,"returnSlots":1},"allocate_and_zero_memory_array_array_address_dyn":{"entryPoint":6082,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_and_zero_memory_struct_struct_Delegation":{"entryPoint":2277,"id":null,"parameterSlots":0,"returnSlots":1},"allocate_and_zero_memory_struct_struct_Voter":{"entryPoint":8392,"id":null,"parameterSlots":0,"returnSlots":1},"allocate_memory":{"entryPoint":2247,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_memory_array_array_address_dyn":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_memory_array_array_struct_Vote_dyn":{"entryPoint":3081,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_memory_struct_struct_Delegation":{"entryPoint":2267,"id":null,"parameterSlots":0,"returnSlots":1},"allocate_memory_struct_struct_Voter_storage_ptr":{"entryPoint":6117,"id":null,"parameterSlots":0,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_array_struct_Vote_dyn":{"entryPoint":3057,"id":null,"parameterSlots":1,"returnSlots":1},"array_convert_length_to_size_array_address_dyn_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_array_address_dyn":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_array_address_dyn_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_array_address_dyn":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_array_address_dyn_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_array_address_dyn":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_array_address_dyn_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_pop_array_address_dyn_storage_ptr":{"entryPoint":9191,"id":null,"parameterSlots":1,"returnSlots":0},"array_push_from_address_to_array_address_dyn_storage_ptr":{"entryPoint":6696,"id":null,"parameterSlots":2,"returnSlots":0},"array_push_from_struct_Vote_to_array_struct_Vote_storage_dyn_ptr":{"entryPoint":4894,"id":null,"parameterSlots":2,"returnSlots":0},"array_push_from_uint256_to_array_uint256_dyn_storage_ptr":{"entryPoint":7855,"id":null,"parameterSlots":2,"returnSlots":0},"array_storeLengthForEncoding_array_address_dyn":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_uint256":{"entryPoint":3549,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_uint256":{"entryPoint":5492,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_address":{"entryPoint":459,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_from_storage_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_storage_array_end_array_address_dyn":{"entryPoint":6216,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_uint160":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_address":{"entryPoint":6185,"id":null,"parameterSlots":2,"returnSlots":0},"constant_ENTERED":{"entryPoint":9054,"id":null,"parameterSlots":0,"returnSlots":1},"constant_NOT_ENTERED":{"entryPoint":9118,"id":null,"parameterSlots":0,"returnSlots":1},"convert_address_to_address":{"entryPoint":2822,"id":null,"parameterSlots":1,"returnSlots":1},"convert_array_array_address_dyn_storage_to_array_address_dyn":{"entryPoint":2774,"id":null,"parameterSlots":1,"returnSlots":1},"convert_array_array_struct_Vote_storage_dyn_to_array_struct_Vote_dyn":{"entryPoint":3325,"id":null,"parameterSlots":1,"returnSlots":1},"convert_array_array_uint256_dyn_storage_to_array_uint256_dyn":{"entryPoint":2946,"id":null,"parameterSlots":1,"returnSlots":1},"convert_bool_to_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_bytes32_to_bytes32":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_2_by_1_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_by_to_address":{"entryPoint":3022,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_by_to_uint160":{"entryPoint":3009,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_by_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_struct_Delegation_storage_to_struct_Delegation":{"entryPoint":2579,"id":null,"parameterSlots":1,"returnSlots":1},"convert_struct_Vote_storage_to_struct_Vote":{"entryPoint":3231,"id":null,"parameterSlots":1,"returnSlots":1},"convert_struct_Voter_storage_to_struct_Voter":{"entryPoint":8650,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_rational_by_to_t_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint160_to_address":{"entryPoint":2813,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint160_to_uint160":{"entryPoint":2793,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint256_to_bytes32":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint256_to_uint256":{"entryPoint":2335,"id":null,"parameterSlots":1,"returnSlots":1},"copy_array_from_storage_to_memory_array_address_dyn":{"entryPoint":2741,"id":null,"parameterSlots":1,"returnSlots":1},"copy_array_from_storage_to_memory_array_struct_Vote__dyn":{"entryPoint":3240,"id":null,"parameterSlots":1,"returnSlots":1},"copy_array_from_storage_to_memory_array_uint256_dyn":{"entryPoint":2920,"id":null,"parameterSlots":1,"returnSlots":1},"copy_array_to_storage_from_array_address_dyn_to_array_address_dyn":{"entryPoint":6333,"id":null,"parameterSlots":2,"returnSlots":0},"copy_struct_to_storage_from_struct_Delegation_to_struct_Delegation":{"entryPoint":7726,"id":null,"parameterSlots":2,"returnSlots":0},"copy_struct_to_storage_from_struct_Vote_to_struct_Vote":{"entryPoint":4728,"id":null,"parameterSlots":2,"returnSlots":0},"copy_struct_to_storage_from_struct_Voter_to_struct_Voter":{"entryPoint":6443,"id":null,"parameterSlots":2,"returnSlots":0},"decrement_uint256":{"entryPoint":5505,"id":null,"parameterSlots":1,"returnSlots":1},"external_fun_createDelegation":{"entryPoint":1867,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_endVotingSession":{"entryPoint":1703,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getActiveDelegations":{"entryPoint":1224,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getCandidateTotalVotes":{"entryPoint":1727,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getCandidateVotes":{"entryPoint":1461,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getDelegation":{"entryPoint":583,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getRegisteredVoters":{"entryPoint":897,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getTotalVotingPower":{"entryPoint":637,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getVoter":{"entryPoint":2123,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getVoterDelegations":{"entryPoint":1185,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_hasVoterVoted":{"entryPoint":1622,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_maxDelegationDepth":{"entryPoint":1840,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_minDelegationPower":{"entryPoint":948,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_owner":{"entryPoint":1500,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_registerVoter":{"entryPoint":1803,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_renounceOwnership":{"entryPoint":1251,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_revokeDelegation":{"entryPoint":1779,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_startVotingSession":{"entryPoint":1563,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_transferOwnership":{"entryPoint":2162,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_updateDelegationParameters":{"entryPoint":1678,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_vote":{"entryPoint":1754,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_votingActive":{"entryPoint":1013,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_votingEndTime":{"entryPoint":715,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_votingStartTime":{"entryPoint":754,"id":null,"parameterSlots":0,"returnSlots":0},"extract_from_storage_value_dynamict_address":{"entryPoint":6295,"id":null,"parameterSlots":2,"returnSlots":1},"extract_from_storage_value_dynamict_bool":{"entryPoint":975,"id":null,"parameterSlots":2,"returnSlots":1},"extract_from_storage_value_dynamict_uint256":{"entryPoint":681,"id":null,"parameterSlots":2,"returnSlots":1},"extract_from_storage_value_offset_address":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"extract_from_storage_value_offset_bool":{"entryPoint":2389,"id":null,"parameterSlots":1,"returnSlots":1},"extract_from_storage_value_offset_bytes32":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"extract_from_storage_value_offset_uint256":{"entryPoint":2372,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":2208,"id":null,"parameterSlots":2,"returnSlots":0},"fun__transferOwnership":{"entryPoint":8849,"id":146,"parameterSlots":1,"returnSlots":0},"fun_checkOwner":{"entryPoint":8784,"id":84,"parameterSlots":0,"returnSlots":0},"fun_createDelegation":{"entryPoint":8380,"id":4275,"parameterSlots":2,"returnSlots":1},"fun_createDelegation_inner":{"entryPoint":7925,"id":null,"parameterSlots":3,"returnSlots":1},"fun_createVoteHash":{"entryPoint":8989,"id":7218,"parameterSlots":3,"returnSlots":1},"fun_endVotingSession":{"entryPoint":3996,"id":4549,"parameterSlots":0,"returnSlots":0},"fun_endVotingSession_inner":{"entryPoint":3909,"id":null,"parameterSlots":0,"returnSlots":0},"fun_getActiveDelegations":{"entryPoint":2983,"id":4709,"parameterSlots":0,"returnSlots":1},"fun_getCandidateTotalVotes":{"entryPoint":4066,"id":4650,"parameterSlots":1,"returnSlots":1},"fun_getCandidateVotes":{"entryPoint":3334,"id":4611,"parameterSlots":1,"returnSlots":1},"fun_getDelegation":{"entryPoint":2588,"id":4596,"parameterSlots":1,"returnSlots":1},"fun_getRegisteredVoters":{"entryPoint":2783,"id":4660,"parameterSlots":0,"returnSlots":1},"fun_getTotalVotingPower":{"entryPoint":2616,"id":4700,"parameterSlots":0,"returnSlots":1},"fun_getVoter":{"entryPoint":8659,"id":4582,"parameterSlots":1,"returnSlots":1},"fun_getVoterDelegations":{"entryPoint":2955,"id":4674,"parameterSlots":1,"returnSlots":1},"fun_hasDelegationChain":{"entryPoint":9505,"id":4797,"parameterSlots":2,"returnSlots":1},"fun_hasVoterVoted":{"entryPoint":3747,"id":4691,"parameterSlots":2,"returnSlots":1},"fun_msgSender":{"entryPoint":null,"id":159,"parameterSlots":0,"returnSlots":1},"fun_nonReentrantAfter":{"entryPoint":9128,"id":342,"parameterSlots":0,"returnSlots":0},"fun_nonReentrantBefore":{"entryPoint":9064,"id":334,"parameterSlots":0,"returnSlots":0},"fun_owner":{"entryPoint":null,"id":67,"parameterSlots":0,"returnSlots":1},"fun_registerVoter":{"entryPoint":7042,"id":4132,"parameterSlots":2,"returnSlots":0},"fun_registerVoter_inner":{"entryPoint":6737,"id":null,"parameterSlots":2,"returnSlots":0},"fun_removeFromDelegates":{"entryPoint":9231,"id":4853,"parameterSlots":2,"returnSlots":0},"fun_renounceOwnership":{"entryPoint":3049,"id":98,"parameterSlots":0,"returnSlots":0},"fun_renounceOwnership_inner":{"entryPoint":3031,"id":null,"parameterSlots":0,"returnSlots":0},"fun_revokeDelegation":{"entryPoint":5974,"id":4378,"parameterSlots":1,"returnSlots":0},"fun_revokeDelegation_inner":{"entryPoint":5518,"id":null,"parameterSlots":1,"returnSlots":0},"fun_startVotingSession":{"entryPoint":3738,"id":4524,"parameterSlots":1,"returnSlots":0},"fun_startVotingSession_inner":{"entryPoint":3590,"id":null,"parameterSlots":1,"returnSlots":0},"fun_transferOwnership":{"entryPoint":8775,"id":126,"parameterSlots":1,"returnSlots":0},"fun_transferOwnership_inner":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"fun_updateDelegationParameters":{"entryPoint":3819,"id":4568,"parameterSlots":2,"returnSlots":0},"fun_updateDelegationParameters_inner":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"fun_updateTotalPower":{"entryPoint":9393,"id":4739,"parameterSlots":1,"returnSlots":0},"fun_vote":{"entryPoint":5325,"id":4488,"parameterSlots":2,"returnSlots":0},"fun_vote_inner":{"entryPoint":4982,"id":null,"parameterSlots":2,"returnSlots":0},"getter_fun_maxDelegationDepth":{"entryPoint":1828,"id":3888,"parameterSlots":0,"returnSlots":1},"getter_fun_minDelegationPower":{"entryPoint":936,"id":3890,"parameterSlots":0,"returnSlots":1},"getter_fun_votingActive":{"entryPoint":1001,"id":3882,"parameterSlots":0,"returnSlots":1},"getter_fun_votingEndTime":{"entryPoint":703,"id":3886,"parameterSlots":0,"returnSlots":1},"getter_fun_votingStartTime":{"entryPoint":742,"id":3884,"parameterSlots":0,"returnSlots":1},"increment_uint256":{"entryPoint":7711,"id":null,"parameterSlots":1,"returnSlots":1},"increment_wrapping_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_address":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_uint160":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"mapping_index_access_mapping_address_array_uint256_dyn_storage_of_address":{"entryPoint":2831,"id":null,"parameterSlots":2,"returnSlots":1},"mapping_index_access_mapping_uint256_struct_Delegation_storage_of_uint256":{"entryPoint":2348,"id":null,"parameterSlots":2,"returnSlots":1},"modifier_nonReentrant":{"entryPoint":5335,"id":318,"parameterSlots":1,"returnSlots":0},"modifier_onlyDuringVoting":{"entryPoint":4341,"id":3984,"parameterSlots":2,"returnSlots":0},"modifier_onlyOwner":{"entryPoint":2993,"id":58,"parameterSlots":0,"returnSlots":0},"modifier_onlyOwner_104":{"entryPoint":8687,"id":58,"parameterSlots":1,"returnSlots":0},"modifier_onlyOwner_4068":{"entryPoint":5983,"id":58,"parameterSlots":2,"returnSlots":0},"modifier_onlyOwner_4494":{"entryPoint":3362,"id":58,"parameterSlots":1,"returnSlots":0},"modifier_onlyOwner_4528":{"entryPoint":3829,"id":58,"parameterSlots":0,"returnSlots":0},"modifier_onlyOwner_4557":{"entryPoint":3784,"id":58,"parameterSlots":2,"returnSlots":0},"modifier_onlyRegisteredVoter":{"entryPoint":4239,"id":3962,"parameterSlots":2,"returnSlots":0},"modifier_onlyRegisteredVoter_4142":{"entryPoint":7052,"id":3962,"parameterSlots":3,"returnSlots":1},"modifier_onlyValidDelegation":{"entryPoint":7377,"id":4028,"parameterSlots":3,"returnSlots":1},"panic_error_0x00":{"entryPoint":4654,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x11":{"entryPoint":3527,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x31":{"entryPoint":9157,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":4004,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":2186,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_bytes32":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_memoryt_address":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_memoryt_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_memoryt_bytes32":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_memoryt_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_reference_type_struct_Delegation":{"entryPoint":2408,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_reference_type_struct_Vote":{"entryPoint":3104,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_reference_type_struct_Voter":{"entryPoint":8452,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_split_dynamic_address":{"entryPoint":9146,"id":null,"parameterSlots":2,"returnSlots":1},"read_from_storage_split_dynamic_bool":{"entryPoint":990,"id":null,"parameterSlots":2,"returnSlots":1},"read_from_storage_split_dynamic_uint256":{"entryPoint":692,"id":null,"parameterSlots":2,"returnSlots":1},"read_from_storage_split_offset_address":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_split_offset_bool":{"entryPoint":2398,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_split_offset_bytes32":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_split_offset_uint256":{"entryPoint":2379,"id":null,"parameterSlots":1,"returnSlots":1},"require_helper_stringliteral":{"entryPoint":3845,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_0a93":{"entryPoint":7158,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_0e2b":{"entryPoint":7570,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_1c2f":{"entryPoint":4422,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_58dd":{"entryPoint":7504,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_61b2":{"entryPoint":6001,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_663e":{"entryPoint":4172,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_790d":{"entryPoint":7310,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_a17f":{"entryPoint":5428,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_c7b1":{"entryPoint":4502,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_cc03":{"entryPoint":3379,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_d5d6":{"entryPoint":5360,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_d8e6":{"entryPoint":7082,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_e7ba":{"entryPoint":4578,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_eb5c":{"entryPoint":4273,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_f4cb":{"entryPoint":7234,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_fbff":{"entryPoint":7635,"id":null,"parameterSlots":1,"returnSlots":0},"resize_array_array_address_dyn_storage":{"entryPoint":6262,"id":null,"parameterSlots":2,"returnSlots":0},"revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb":{"entryPoint":407,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_96":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_0_unsigned":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_right_unsigned":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"storage_array_index_access_address_dyn_ptr":{"entryPoint":6645,"id":null,"parameterSlots":2,"returnSlots":2},"storage_array_index_access_struct_Vote__dyn":{"entryPoint":4026,"id":null,"parameterSlots":2,"returnSlots":2},"storage_array_index_access_struct_Vote__dyn_ptr":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":2},"storage_array_index_access_uint256_dyn_ptr":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":2},"storage_set_to_zero_address":{"entryPoint":9179,"id":null,"parameterSlots":2,"returnSlots":0},"storage_set_to_zero_uint256":{"entryPoint":6173,"id":null,"parameterSlots":2,"returnSlots":0},"store_literal_in_memory_0a93db052647212ae38e0d563c2cea8c660bf991f4703d360324b6d52bcdfddd":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_0e2ba9644f1685ef5cb5da7844c7b30968d6a201930df4a32b12b1940c2f4f4f":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_1c2faf6f8a7091f5760335d8b7745c010d7f87237dd13a800460664a8f79e57b":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_4753b041641313f1ca2fbfa3890c4d0c79c5ac55aa0cd2bcb91e0eb948ae8f7c":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_58ddd91e4c0e9678da947dbe7f4eef154878d102f47318ff042cd1bdb7511517":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_61b2e168a358ed394dcf0242ed119c571b7a7528c2071ac26828805f58234671":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_663e283d0ae6eef23650b26f2135143c58a603147d9e780ea8b73ec9aaf0d1fc":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_790d6bfc276ba541ca9f49bd465fe6c01fc6fb8578e1c0a566cb33b9704303d8":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_a17fea1e547778a0b216cd3a746efa129b6d1d7262ea8de6a6d5992c7590dc7d":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c7b1eec7fece10b29185c186f8325ba0ce985256ccff2f5884a0d837360c96f3":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_cc030520df3aefef2c03c6e97ccc60431aa6bc0780bf1796a5706e22e40f5f0f":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_d5d68e069148566e68ad466e873c2a9d44256b8662756f77d5d31c3ebb955fe1":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_d8e61df636f602281f54f02f49ee0cca5f49004f2eac166030746eaf6ebb73f0":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_e7ba12c60469871407bc8b4b932fe2fde360d8973aed7437542f698916fa6d4c":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_eb5c25ec09aa342a63a80c7e1f30381cbe2531066a85e5b82cadd1faf70e2624":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_f4cb3383e7055977993a5ee9691137f9c667c7e58f14bbddfa169b757da2cca4":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_fbff28cd471bb2c1078c51e514df95c09910ec34c660f61563ffee79d7f1519d":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"update_byte_slice_20_shift":{"entryPoint":4676,"id":null,"parameterSlots":2,"returnSlots":1},"update_byte_slice_dynamic20":{"entryPoint":6308,"id":null,"parameterSlots":3,"returnSlots":1},"update_byte_slice_dynamic32":{"entryPoint":6128,"id":null,"parameterSlots":3,"returnSlots":1},"update_byte_slice_shift":{"entryPoint":3494,"id":null,"parameterSlots":2,"returnSlots":1},"update_byte_slice_shift_0":{"entryPoint":3452,"id":null,"parameterSlots":2,"returnSlots":1},"update_storage_value_address_to_address":{"entryPoint":6671,"id":null,"parameterSlots":3,"returnSlots":0},"update_storage_value_offset_address_to_address":{"entryPoint":4691,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offset_array_address_dyn_to_array_address_dyn":{"entryPoint":6433,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offset_bool_to_bool":{"entryPoint":3467,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offset_bytes32_to_bytes32":{"entryPoint":4714,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offset_struct_Delegation_to_struct_Delegation":{"entryPoint":7845,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offset_struct_Voter_to_struct_Voter":{"entryPoint":6635,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offset_uint256_to_uint256":{"entryPoint":3504,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_struct_Vote_to_struct_Vote":{"entryPoint":4874,"id":null,"parameterSlots":3,"returnSlots":0},"update_storage_value_uint256_to_uint256":{"entryPoint":6148,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_address":{"entryPoint":1058,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_uint256":{"entryPoint":412,"id":null,"parameterSlots":1,"returnSlots":0},"write_to_memory_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"write_to_memory_array_address_dyn":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"write_to_memory_bool":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"write_to_memory_bytes32":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"write_to_memory_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"zero_memory_chunk_address":{"entryPoint":6077,"id":null,"parameterSlots":2,"returnSlots":0},"zero_value_for_address":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"zero_value_for_split_array_address_dyn":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"zero_value_for_split_struct_Delegation":{"entryPoint":2327,"id":null,"parameterSlots":0,"returnSlots":1},"zero_value_for_split_struct_Voter":{"entryPoint":8444,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080604052600436101561001257600080fd5b60003560e01c80630dd357011461019257806311acc1a71461018d5780631ea736e0146101885780632019a608146101835780632bc4a6e71461017e57806336dab67814610179578063408e2727146101745780634f1b49721461016f57806365d082be1461016a578063715018a614610165578063866163c0146101605780638da5cb5b1461015b5780639980a55a146101565780639b541f7614610151578063a288210c1461014c578063a7bfab1614610147578063abdd80a314610142578063b384abef1461013d578063bd3d425d14610138578063cbea81ef14610133578063cd8e09031461012e578063ce52c4ef14610129578063d4f50f98146101245763f2fde38b0361019757610872565b61084b565b61074b565b610730565b61070b565b6106f3565b6106da565b6106bf565b6106a7565b61068e565b610656565b61061b565b6105dc565b6105b5565b6104e3565b6104c8565b6104a1565b6103f5565b6103b4565b610381565b6102f2565b6102cb565b61027d565b610247565b600080fd5b805b0361019757565b905035906101b28261019c565b565b90602082820312610197576101c8916101a5565b90565b6001600160a01b031690565b9052565b80516001600160a01b031682526101b2919060a09081906020818101516001600160a01b03169085015261021460408201516040860152565b61022360608201516060860152565b6080818101511515908501525b0151910152565b60c0810192916101b291906101db565b346101975761026e61026261025d3660046101b4565b610a1c565b60405191829182610237565b0390f35b600091031261019757565b346101975761028d366004610272565b61026e610298610a38565b6040515b9182918290815260200190565b6101c8916008021c81565b906101c891546102a9565b6101c86000600d6102b4565b34610197576102db366004610272565b61026e6102986102bf565b6101c86000600c6102b4565b3461019757610302366004610272565b61026e6102986102e6565b0190565b9061033161032a610320845190565b8084529260200190565b9260200190565b9060005b8181106103425750505090565b90919261036861036160019286516001600160a01b0316815260200190565b9460200190565b929101610335565b60208082526101c892910190610311565b3461019757610391366004610272565b61026e61039c610adf565b60405191829182610370565b6101c86000600f6102b4565b34610197576103c4366004610272565b61026e6102986103a8565b6101c8916008021c5b60ff1690565b906101c891546103cf565b6101c86000600b6103de565b3461019757610405366004610272565b61026e6104106103e9565b60405191829182901515815260200190565b6001600160a01b03811661019e565b905035906101b282610422565b90602082820312610197576101c891610431565b9061046161032a610320845190565b9060005b8181106104725750505090565b9091926104886103616001928651815260200190565b929101610465565b60208082526101c892910190610452565b346101975761026e6104bc6104b736600461043e565b610b8b565b60405191829182610490565b34610197576104d8366004610272565b61026e610298610ba7565b34610197576104f3366004610272565b6104fb610be9565b604051005b80516001600160a01b031682526101b2919060a090819061052660208201516020860152565b61053560408201516040860152565b61054460608201516060860152565b61055360808201516080860152565b01511515910152565b9061030d8160c093610500565b9061057861032a610320845190565b9060005b8181106105895750505090565b90919261059c610361600192865161055c565b92910161057c565b60208082526101c892910190610569565b346101975761026e6105d06105cb3660046101b4565b610d06565b604051918291826105a4565b34610197576105ec366004610272565b61026e6106016000546001600160a01b031690565b604051918291826001600160a01b03909116815260200190565b34610197576104fb61062e3660046101b4565b610e9a565b9190604083820312610197576101c890602061064f8286610431565b94016101a5565b346101975761026e61041061066c366004610633565b90610ea3565b9190604083820312610197576101c890602061064f82866101a5565b34610197576104fb6106a1366004610672565b90610eeb565b34610197576106b7366004610272565b6104fb610f9c565b346101975761026e6102986106d53660046101b4565b610fe2565b34610197576104fb6106ed366004610672565b906114cd565b34610197576104fb6107063660046101b4565b611756565b34610197576104fb61071e366004610633565b90611b82565b6101c86000600e6102b4565b3461019757610740366004610272565b61026e610298610724565b346101975761026e610298610761366004610633565b906120bc565b9061077661032a610320845190565b9060005b8181106107875750505090565b9091926107a661036160019286516001600160a01b0316815260200190565b92910161077a565b80516001600160a01b03168252906101c8906101008061081e61012084016107db60208801516020870152565b6107ea60408801516040870152565b6107f960608801516060870152565b6080878101516001600160a01b03169086015260a087015185820360a0870152610767565b60c0808701511515908501529461023060e082015160e0860152565b60208082526101c8929101906107ae565b346101975761026e61086661086136600461043e565b6121d3565b6040519182918261083a565b34610197576104fb61088536600461043e565b612247565b634e487b7160e01b600052604160045260246000fd5b90601f01601f1916810190811067ffffffffffffffff8211176108c257604052565b61088a565b906101b26108d460405190565b92836108a0565b6101c860c06108c7565b6108ed6108db565b9060008252602080808080808701600081520160005b815201600081520160008152016000905250565b6101c86108e5565b6101c86101c86101c89290565b906109369061091f565b600052602052604060002090565b6101c89081565b6101c89054610944565b6101c8906103d8565b6101c89054610955565b906101b2610a0c60056109796108db565b9461099b61098e82546001600160a01b031690565b6001600160a01b03168752565b6109c26109b260018301546001600160a01b031690565b6001600160a01b03166020880152565b6109d86109d16002830161094b565b6040880152565b6109ee6109e76003830161094b565b6060880152565b610a066109fd6004830161095e565b15156080880152565b0161094b565b60a0840152565b6101c890610968565b610a336101c891610a2b610917565b50600361092c565b610a13565b6101c8600961094b565b90610a5d610a51610320845490565b92600052602060002090565b9060005b818110610a6e5750505090565b909192610aa3610a9c600192610a8b87546001600160a01b031690565b6001600160a01b0316815260200190565b9460010190565b929101610a61565b906101c891610a42565b906101b2610acf92610ac660405190565b93848092610aab565b03836108a0565b6101c890610ab5565b6101c86007610ad6565b6101c8906101cb906001600160a01b031682565b6101c890610ae9565b6101c890610afd565b9061093690610b06565b90610b28610a51610320845490565b9060005b818110610b395750505090565b909192610b56610a9c600192610b4e8761094b565b815260200190565b929101610b2c565b906101c891610b19565b906101b2610acf92610b7960405190565b93848092610b5e565b6101c890610b68565b610ba26101c891610b9a606090565b506004610b0f565b610b82565b6101c8600a61094b565b610bb9612250565b6101b2610bd7565b6101cb6101c86101c89290565b6101c890610bc1565b6101b2610be46000610bce565b612291565b6101b2610bb1565b67ffffffffffffffff81116108c25760208091020190565b90610c1b610c1683610bf1565b6108c7565b918252565b906101b2610c966005610c316108db565b94610c4661098e82546001600160a01b031690565b610c5c610c556001830161094b565b6020880152565b610c6b6109d16002830161094b565b610c7a6109e76003830161094b565b610c90610c896004830161094b565b6080880152565b0161095e565b151560a0840152565b6101c890610c20565b90610cb1825490565b610cba81610c09565b92610cce6020850191600052602060002090565b6000915b838310610cdf5750505050565b60066020600192610cef85610c9f565b815201920192019190610cd2565b6101c890610ca8565b610d1d6101c891610d15606090565b50600561092c565b610cfd565b6101b290610d2e612250565b610e06565b15610d3a57565b60405162461bcd60e51b8152602060048201526015602482015274566f74696e6720616c72656164792061637469766560581b604482015280606481015b0390fd5b9060ff905b9181191691161790565b90610d9b6101c8610da292151590565b8254610d7c565b9055565b9060001990610d81565b90610dc06101c8610da29261091f565b8254610da6565b634e487b7160e01b600052601160045260246000fd5b91908201809211610dea57565b610dc7565b9081526040810192916101b29160200152565b0152565b610e43610e4a91610e26610e21610e1d600b61095e565b1590565b610d33565b610e326001600b610d8b565b610e3d42600c610db0565b42610ddd565b600d610db0565b7fe280a408633821740a429fb671e01cacf8d1d70d5c2735f4f94ec0edef4ea6de610e75600c61094b565b610e7f600d61094b565b90610e95610e8c60405190565b92839283610def565b0390a1565b6101b290610d22565b6101c891610ebe610ec392610eb6600090565b506006610b0f565b61092c565b61095e565b906101b291610ed5612250565b90610ee46101b292600e610db0565b600f610db0565b906101b291610ec8565b610efd612250565b6101b2610f45565b15610f0c57565b60405162461bcd60e51b8152602060048201526011602482015270566f74696e67206e6f742061637469766560781b6044820152606490fd5b610f57610f52600b61095e565b610f05565b610f636000600b610d8b565b610f6e42600d610db0565b7f9956bd7b1ae344fbb54dbd02a85e2283bec6bf75f7fccbaa9c2392a715e71e49610e95610298600d61094b565b6101b2610ef5565b634e487b7160e01b600052603260045260246000fd5b8054821015610fdd57610fd4600691600052602060002090565b91020190600090565b610fa4565b610fec600061091f565b90815b60056110056101c8611001858461092c565b5490565b8410156110455761103f91611032600261102b87611026886110389761092c565b610fba565b500161094b565b90610ddd565b9260010190565b91610fef565b5091505090565b1561105357565b60405162461bcd60e51b8152602060048201526014602482015273159bdd195c881b9bdd081c9959da5cdd195c995960621b6044820152606490fd5b906101b2916110ac6110a76006610c90336002610b0f565b61104c565b6110f5565b156110b857565b60405162461bcd60e51b815260206004820152601560248201527413dd5d1cda5919481d9bdd1a5b99c81c195c9a5bd9605a1b6044820152606490fd5b906101b291611107610f52600b61095e565b6111146101c8600c61094b565b4210158061112b575b611126906110b1565b611376565b5061112661113c6101c8600d61094b565b421115905061111d565b1561114d57565b60405162461bcd60e51b815280610d78600482016020808252818101527f416c726561647920766f74656420666f7220746869732063616e646964617465604082015260600190565b1561119d57565b60405162461bcd60e51b815260206004820152601c60248201527f506f776572206d7573742062652067726561746572207468616e2030000000006044820152606490fd5b156111e957565b60405162461bcd60e51b815260206004820152601960248201527f496e73756666696369656e7420766f74696e6720706f776572000000000000006044820152606490fd5b634e487b7160e01b600052600060045260246000fd5b906001600160a01b0390610d81565b906112636101c8610da292610b06565b8254611244565b90610dc06101c8610da29290565b600561130360a06101b2946112a061129a60008301516001600160a01b031690565b86611253565b6112b76112ae602083015190565b60018701610db0565b6112ce6112c5604083015190565b60028701610db0565b6112e56112dc606083015190565b60038701610db0565b6112fc6112f3608083015190565b6004870161126a565b0151151590565b9101610d8b565b9190611319576101b291611278565b61122e565b90815491600160401b8310156108c257826113419160016101b295018155610fba565b9061130a565b610e026101b29461136d606094989795611366608086019a6000870152565b6020850152565b15156040830152565b907fe89c99a0264d21c2ad18316d6e7b3aa31414c12f31b085afdeeacaa7e69f80b6906113b66113b1610e1d610ec386610ebe336006610b0f565b611146565b6113cb6113c3600061091f565b825b11611196565b6114a660a060026113ef6113e76101c86003610a063386610b0f565b8511156111e2565b6112fc61149c6114096114018961091f565b42903361231d565b9261146561141b82610a063382610b0f565b61142c611428600061091f565b9190565b1161145d6114386108db565b338152966114478d60208a0152565b6114528b60408a0152565b610c894260608a0152565b151585870152565b61147c846114776101c88c600561092c565b61131e565b61149560016114908b610ebe336006610b0f565b610d8b565b3390610b0f565b6007429101610db0565b906114c86114b333610b06565b946114bd60405190565b938493429285611347565b0390a2565b906101b29161108f565b6114e8906114e3612368565b61158e565b6101b26123a8565b156114f757565b60405162461bcd60e51b815260206004820152601560248201527444656c65676174696f6e206e6f742061637469766560581b6044820152606490fd5b1561153b57565b60405162461bcd60e51b81526020600482015260116024820152702737ba103a3432903232b632b3b0ba37b960791b6044820152606490fd5b91908203918211610dea57565b8015610dea576000190190565b61170661159f6101c883600361092c565b6115e76000600483016115b96115b48261095e565b6114f0565b6114906115cf838601546001600160a01b031690565b6115e1335b916001600160a01b031690565b14611534565b6116a560086116936115f96000610bce565b611611600291600461160b3385610b0f565b01611253565b611682600161165183880161164c6116288261094b565b61164685611636338a610b0f565b01916116418361094b565b610ddd565b90610db0565b61094b565b9601956116468361167261166c8a546001600160a01b031690565b82610b0f565b019161167d8361094b565b611574565b84546001600160a01b031690610b0f565b016116466116a08261094b565b611581565b6116c06116b982546001600160a01b031690565b339061240f565b6116c9336124b1565b6116e26116dd82546001600160a01b031690565b6124b1565b6116f96116f26116a0600a61094b565b600a610db0565b546001600160a01b031690565b7f657937cad9c3ce43c8ece19052e5f60b2db7d536fdb47405c20ecf1c3df56b7d61175161173c61173633610b06565b93610b06565b9361174660405190565b918291429083610def565b0390a3565b6101b2906114d7565b906101b29161176c612250565b611a51565b1561177857565b60405162461bcd60e51b815260206004820152601860248201527f566f74657220616c7265616479207265676973746572656400000000000000006044820152606490fd5b369037565b906101b26117d86117d284610c09565b93610bf1565b601f1901602084016117bd565b6101c86101206108c7565b9160001960089290920291821b911b610d81565b91906118156101c8610da29361091f565b9083546117f0565b6101b291600091611804565b818110611834575050565b80611842600060019361181d565b01611829565b91909182821061185757505050565b6101b2929161186c9091600052602060002090565b9182019101611829565b90600160401b81116108c2578161188e6101b2935490565b90828155611848565b6101c8916008021c6101cb565b916001600160a01b0360089290920291821b911b610d81565b81519167ffffffffffffffff83116108c2576118e8610a516001926118e28686611876565b60200190565b92049160005b8381106118fb5750505050565b60019060206119146101c886516001600160a01b031690565b94019381840155016118ee565b906101b2916118bd565b60086119e46101006101b29461194e61129a60008301516001600160a01b031690565b61195c6112ae602083015190565b61196a6112c5604083015190565b6119786112dc606083015190565b61199861198f60808301516001600160a01b031690565b60048701611253565b6119af6119a660a083015190565b60058701611921565b6119c86119bf60c0830151151590565b60068701610d8b565b6119df6119d660e083015190565b60078701610db0565b015190565b9101610db0565b906101b29161192b565b8054821015610fdd57610fd4600191600052602060002090565b9190611a206101c8610da293610b06565b9083546118a4565b90815491600160401b8310156108c25782611a4b9160016101b2950181556119f5565b90611a0f565b6114c8611b787f49a90692135172b11ff45007ef12b97c37df00bc650e48846f88da97b191b2d092611a94611a8f610e1d6006610c90856002610b0f565b611771565b611b506000611aab611aa58261091f565b886113c5565b611b40611ab782610bce565b611b26611ac38461091f565b91611b1f611ad0846117c2565b91611aee89611add6117e5565b988901906001600160a01b03169052565b611af98d6020890152565b611b04856040890152565b611b0f8d6060890152565b6001600160a01b03166080870152565b60a0850152565b600160c0840152611b388160e0850152565b610100830152565b611b4b836002610b0f565b6119eb565b611b5b816007611a28565b611b73611b6c86611641600961094b565b6009610db0565b610b06565b9261174660405190565b906101b29161175f565b906101c89291611ba56110a76006610c90336002610b0f565b611cd1565b15611bb157565b60405162461bcd60e51b815260206004820152601760248201527f43616e6e6f742064656c656761746520746f2073656c660000000000000000006044820152606490fd5b15611bfd57565b60405162461bcd60e51b815260206004820152601860248201527f44656c656761746f72206e6f74207265676973746572656400000000000000006044820152606490fd5b15611c4957565b60405162461bcd60e51b815260206004820152601760248201527f44656c6567617465206e6f7420726567697374657265640000000000000000006044820152606490fd5b15611c9557565b60405162461bcd60e51b8152602060048201526014602482015273416c7265616479206861732064656c656761746560601b6044820152606490fd5b6101c8929190611cec6001600160a01b038316331415611baa565b611d4b611d356004611d276002611d10611d0b6006610c903385610b0f565b611bf6565b611495611d226006610c908a85610b0f565b611c42565b01546001600160a01b031690565b611d456115d46101cb6000610bce565b14611c8e565b611ef5565b15611d5757565b60405162461bcd60e51b8152602060048201526013602482015272506f7765722062656c6f77206d696e696d756d60681b6044820152606490fd5b15611d9957565b60405162461bcd60e51b815260206004820152601260248201527124b739bab33334b1b4b2b73a103837bbb2b960711b6044820152606490fd5b15611dda57565b60405162461bcd60e51b815260206004820152601c60248201527f43697263756c61722064656c65676174696f6e206465746563746564000000006044820152606490fd5b6000198114610dea5760010190565b60056119e460a06101b294611e5061129a60008301516001600160a01b031690565b611e70611e6760208301516001600160a01b031690565b60018701611253565b611e7e6112c5604083015190565b611e8c6112dc606083015190565b6119df611e9c6080830151151590565b60048701610d8b565b906101b291611e2e565b90815491600160401b8310156108c25782611ed29160016101b2950181556119f5565b90611804565b9081526060810193926101b2929091604091610e02906020830152565b5090611f0f611f076101c8600f61094b565b821015611d50565b600291611f2f611f276101c86001610a063388610b0f565b831115611d92565b611f44611f3f610e1d8333612521565b611dd3565b61204e600861203c83611f568361094b565b96611f69611f6389611e1f565b85610db0565b611fbe611f746108db565b3381526001600160a01b0384166020820152611f91896040830152565b611f9c426060830152565b60016080820152611fae8a60a0830152565b611fb98a600361092c565b611ea5565b611fd588611fd06101c8336004610b0f565b611eaf565b611fe582600461160b3385610b0f565b6120026001611ff43384610b0f565b016116468961167d8361094b565b61201e816120108482610b0f565b01611646896116418361094b565b612037612030600561030d8585610b0f565b3390611a28565b610b0f565b016116466120498261094b565b611e1f565b612057336124b1565b612060816124b1565b6120706116f2612049600a61094b565b7ffe35c70e4980d7df0afccc73bb14c09d90b04287cd40b249a714d4033c2851856120b66120a061173633610b06565b936120aa60405190565b91829187429184611ed8565b0390a390565b6101c891906000611b8c565b6120d06117e5565b9060008252602080808080808080808a0160008152016000815201600081520160008152016060610903565b6101c86120c8565b906101b26121c260086121156117e5565b9461212a61098e82546001600160a01b031690565b612139610c556001830161094b565b6121486109d16002830161094b565b6121576109e76003830161094b565b61217e61216e60048301546001600160a01b031690565b6001600160a01b03166080880152565b61219461218d60058301610ab5565b60a0880152565b6121ac6121a36006830161095e565b151560c0880152565b610a066121bb6007830161094b565b60e0880152565b610100840152565b6101c890612104565b6121ea6101c8916121e26120fc565b506002610b0f565b6121ca565b6101b2906121fb612250565b600061220681610bce565b6001600160a01b0381166001600160a01b0384161461222a5750506101b290612291565b631e4fbdf760e01b82526001600160a01b03166004820152602490fd5b6101b2906121ef565b6000546001600160a01b03163390612267826115d4565b0361226f5750565b63118cdaa760e01b60009081526001600160a01b039091166004526024036000fd5b6122ba6122b46122a96000546001600160a01b031690565b611b73846000611253565b91610b06565b907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e06122e560405190565b8080611751565b6101d7906001600160a01b031660601b90565b60209392612317601483612317889561030d976122ec565b01918252565b612348919061233c61232e60405190565b9485936020850193846122ff565b908103825203826108a0565b61235a612353825190565b9160200190565b2090565b6101c8600261091f565b612372600161094b565b61237a61235e565b90811461238c576101b2906001610db0565b633ee5aeb560e01b6000908152600490fd5b6101c8600161091f565b6101b26123b361239e565b6001610db0565b906101c89154611897565b634e487b7160e01b600052603160045260246000fd5b6101b291600091611a0f565b8054801561240a57600019019061240761240183836119f5565b906123db565b55565b6123c5565b600561030d61241f926002610b0f565b612429600061091f565b6124346101c8835490565b8110156124ac5761244e61244882846119f5565b906123ba565b6124606001600160a01b0385166115d4565b1461246d57600101612429565b6101b292506124a790611a4b6124a061244861249a61248a875490565b612494600161091f565b90611574565b866119f5565b91846119f5565b6123e7565b505050565b7f255d9fd63837b26ddecf40374f32676fd529f58accd2f1673335f6e04d0fe1366114c86125176117366003610a068660026120376125066124f86001610a068686610b0f565b61103284610a068782610b0f565b856125118585610b0f565b01610db0565b9261029c60405190565b906001600160a01b0381166001600160a01b038316146125d757906000612548600061091f565b925b60029061255c6004611d278385610b0f565b61256b6115d46101cb86610bce565b1415806125c2575b156125b857611d2760049161258793610b0f565b928361259b6001600160a01b0385166115d4565b146125af576125a990611e1f565b9261254a565b50505050600190565b5050505050600090565b506125d06101c8600e61094b565b8510612573565b505060019056fea2646970667358221220e221caea8b2d5d86d67bd331fa077e08b9dd63055fb96b972fedd8fdafda8b2564736f6c634300081c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xDD35701 EQ PUSH2 0x192 JUMPI DUP1 PUSH4 0x11ACC1A7 EQ PUSH2 0x18D JUMPI DUP1 PUSH4 0x1EA736E0 EQ PUSH2 0x188 JUMPI DUP1 PUSH4 0x2019A608 EQ PUSH2 0x183 JUMPI DUP1 PUSH4 0x2BC4A6E7 EQ PUSH2 0x17E JUMPI DUP1 PUSH4 0x36DAB678 EQ PUSH2 0x179 JUMPI DUP1 PUSH4 0x408E2727 EQ PUSH2 0x174 JUMPI DUP1 PUSH4 0x4F1B4972 EQ PUSH2 0x16F JUMPI DUP1 PUSH4 0x65D082BE EQ PUSH2 0x16A JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x165 JUMPI DUP1 PUSH4 0x866163C0 EQ PUSH2 0x160 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x15B JUMPI DUP1 PUSH4 0x9980A55A EQ PUSH2 0x156 JUMPI DUP1 PUSH4 0x9B541F76 EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0xA288210C EQ PUSH2 0x14C JUMPI DUP1 PUSH4 0xA7BFAB16 EQ PUSH2 0x147 JUMPI DUP1 PUSH4 0xABDD80A3 EQ PUSH2 0x142 JUMPI DUP1 PUSH4 0xB384ABEF EQ PUSH2 0x13D JUMPI DUP1 PUSH4 0xBD3D425D EQ PUSH2 0x138 JUMPI DUP1 PUSH4 0xCBEA81EF EQ PUSH2 0x133 JUMPI DUP1 PUSH4 0xCD8E0903 EQ PUSH2 0x12E JUMPI DUP1 PUSH4 0xCE52C4EF EQ PUSH2 0x129 JUMPI DUP1 PUSH4 0xD4F50F98 EQ PUSH2 0x124 JUMPI PUSH4 0xF2FDE38B SUB PUSH2 0x197 JUMPI PUSH2 0x872 JUMP JUMPDEST PUSH2 0x84B JUMP JUMPDEST PUSH2 0x74B JUMP JUMPDEST PUSH2 0x730 JUMP JUMPDEST PUSH2 0x70B JUMP JUMPDEST PUSH2 0x6F3 JUMP JUMPDEST PUSH2 0x6DA JUMP JUMPDEST PUSH2 0x6BF JUMP JUMPDEST PUSH2 0x6A7 JUMP JUMPDEST PUSH2 0x68E JUMP JUMPDEST PUSH2 0x656 JUMP JUMPDEST PUSH2 0x61B JUMP JUMPDEST PUSH2 0x5DC JUMP JUMPDEST PUSH2 0x5B5 JUMP JUMPDEST PUSH2 0x4E3 JUMP JUMPDEST PUSH2 0x4C8 JUMP JUMPDEST PUSH2 0x4A1 JUMP JUMPDEST PUSH2 0x3F5 JUMP JUMPDEST PUSH2 0x3B4 JUMP JUMPDEST PUSH2 0x381 JUMP JUMPDEST PUSH2 0x2F2 JUMP JUMPDEST PUSH2 0x2CB JUMP JUMPDEST PUSH2 0x27D JUMP JUMPDEST PUSH2 0x247 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 JUMPDEST SUB PUSH2 0x197 JUMPI JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x1B2 DUP3 PUSH2 0x19C JUMP JUMPDEST JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x197 JUMPI PUSH2 0x1C8 SWAP2 PUSH2 0x1A5 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH2 0x1B2 SWAP2 SWAP1 PUSH1 0xA0 SWAP1 DUP2 SWAP1 PUSH1 0x20 DUP2 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP6 ADD MSTORE PUSH2 0x214 PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x40 DUP7 ADD MSTORE JUMP JUMPDEST PUSH2 0x223 PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x60 DUP7 ADD MSTORE JUMP JUMPDEST PUSH1 0x80 DUP2 DUP2 ADD MLOAD ISZERO ISZERO SWAP1 DUP6 ADD MSTORE JUMPDEST ADD MLOAD SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0xC0 DUP2 ADD SWAP3 SWAP2 PUSH2 0x1B2 SWAP2 SWAP1 PUSH2 0x1DB JUMP JUMPDEST CALLVALUE PUSH2 0x197 JUMPI PUSH2 0x26E PUSH2 0x262 PUSH2 0x25D CALLDATASIZE PUSH1 0x4 PUSH2 0x1B4 JUMP JUMPDEST PUSH2 0xA1C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x237 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 SWAP2 SUB SLT PUSH2 0x197 JUMPI JUMP JUMPDEST CALLVALUE PUSH2 0x197 JUMPI PUSH2 0x28D CALLDATASIZE PUSH1 0x4 PUSH2 0x272 JUMP JUMPDEST PUSH2 0x26E PUSH2 0x298 PUSH2 0xA38 JUMP JUMPDEST PUSH1 0x40 MLOAD JUMPDEST SWAP2 DUP3 SWAP2 DUP3 SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH2 0x1C8 SWAP2 PUSH1 0x8 MUL SHR DUP2 JUMP JUMPDEST SWAP1 PUSH2 0x1C8 SWAP2 SLOAD PUSH2 0x2A9 JUMP JUMPDEST PUSH2 0x1C8 PUSH1 0x0 PUSH1 0xD PUSH2 0x2B4 JUMP JUMPDEST CALLVALUE PUSH2 0x197 JUMPI PUSH2 0x2DB CALLDATASIZE PUSH1 0x4 PUSH2 0x272 JUMP JUMPDEST PUSH2 0x26E PUSH2 0x298 PUSH2 0x2BF JUMP JUMPDEST PUSH2 0x1C8 PUSH1 0x0 PUSH1 0xC PUSH2 0x2B4 JUMP JUMPDEST CALLVALUE PUSH2 0x197 JUMPI PUSH2 0x302 CALLDATASIZE PUSH1 0x4 PUSH2 0x272 JUMP JUMPDEST PUSH2 0x26E PUSH2 0x298 PUSH2 0x2E6 JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x331 PUSH2 0x32A PUSH2 0x320 DUP5 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP5 MSTORE SWAP3 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x342 JUMPI POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 PUSH2 0x368 PUSH2 0x361 PUSH1 0x1 SWAP3 DUP7 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP5 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 ADD PUSH2 0x335 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH2 0x1C8 SWAP3 SWAP2 ADD SWAP1 PUSH2 0x311 JUMP JUMPDEST CALLVALUE PUSH2 0x197 JUMPI PUSH2 0x391 CALLDATASIZE PUSH1 0x4 PUSH2 0x272 JUMP JUMPDEST PUSH2 0x26E PUSH2 0x39C PUSH2 0xADF JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x370 JUMP JUMPDEST PUSH2 0x1C8 PUSH1 0x0 PUSH1 0xF PUSH2 0x2B4 JUMP JUMPDEST CALLVALUE PUSH2 0x197 JUMPI PUSH2 0x3C4 CALLDATASIZE PUSH1 0x4 PUSH2 0x272 JUMP JUMPDEST PUSH2 0x26E PUSH2 0x298 PUSH2 0x3A8 JUMP JUMPDEST PUSH2 0x1C8 SWAP2 PUSH1 0x8 MUL SHR JUMPDEST PUSH1 0xFF AND SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1C8 SWAP2 SLOAD PUSH2 0x3CF JUMP JUMPDEST PUSH2 0x1C8 PUSH1 0x0 PUSH1 0xB PUSH2 0x3DE JUMP JUMPDEST CALLVALUE PUSH2 0x197 JUMPI PUSH2 0x405 CALLDATASIZE PUSH1 0x4 PUSH2 0x272 JUMP JUMPDEST PUSH2 0x26E PUSH2 0x410 PUSH2 0x3E9 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x19E JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x1B2 DUP3 PUSH2 0x422 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x197 JUMPI PUSH2 0x1C8 SWAP2 PUSH2 0x431 JUMP JUMPDEST SWAP1 PUSH2 0x461 PUSH2 0x32A PUSH2 0x320 DUP5 MLOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x472 JUMPI POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 PUSH2 0x488 PUSH2 0x361 PUSH1 0x1 SWAP3 DUP7 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 ADD PUSH2 0x465 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH2 0x1C8 SWAP3 SWAP2 ADD SWAP1 PUSH2 0x452 JUMP JUMPDEST CALLVALUE PUSH2 0x197 JUMPI PUSH2 0x26E PUSH2 0x4BC PUSH2 0x4B7 CALLDATASIZE PUSH1 0x4 PUSH2 0x43E JUMP JUMPDEST PUSH2 0xB8B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x490 JUMP JUMPDEST CALLVALUE PUSH2 0x197 JUMPI PUSH2 0x4D8 CALLDATASIZE PUSH1 0x4 PUSH2 0x272 JUMP JUMPDEST PUSH2 0x26E PUSH2 0x298 PUSH2 0xBA7 JUMP JUMPDEST CALLVALUE PUSH2 0x197 JUMPI PUSH2 0x4F3 CALLDATASIZE PUSH1 0x4 PUSH2 0x272 JUMP JUMPDEST PUSH2 0x4FB PUSH2 0xBE9 JUMP JUMPDEST PUSH1 0x40 MLOAD STOP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH2 0x1B2 SWAP2 SWAP1 PUSH1 0xA0 SWAP1 DUP2 SWAP1 PUSH2 0x526 PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x20 DUP7 ADD MSTORE JUMP JUMPDEST PUSH2 0x535 PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x40 DUP7 ADD MSTORE JUMP JUMPDEST PUSH2 0x544 PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x60 DUP7 ADD MSTORE JUMP JUMPDEST PUSH2 0x553 PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0x80 DUP7 ADD MSTORE JUMP JUMPDEST ADD MLOAD ISZERO ISZERO SWAP2 ADD MSTORE JUMP JUMPDEST SWAP1 PUSH2 0x30D DUP2 PUSH1 0xC0 SWAP4 PUSH2 0x500 JUMP JUMPDEST SWAP1 PUSH2 0x578 PUSH2 0x32A PUSH2 0x320 DUP5 MLOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x589 JUMPI POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 PUSH2 0x59C PUSH2 0x361 PUSH1 0x1 SWAP3 DUP7 MLOAD PUSH2 0x55C JUMP JUMPDEST SWAP3 SWAP2 ADD PUSH2 0x57C JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH2 0x1C8 SWAP3 SWAP2 ADD SWAP1 PUSH2 0x569 JUMP JUMPDEST CALLVALUE PUSH2 0x197 JUMPI PUSH2 0x26E PUSH2 0x5D0 PUSH2 0x5CB CALLDATASIZE PUSH1 0x4 PUSH2 0x1B4 JUMP JUMPDEST PUSH2 0xD06 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x5A4 JUMP JUMPDEST CALLVALUE PUSH2 0x197 JUMPI PUSH2 0x5EC CALLDATASIZE PUSH1 0x4 PUSH2 0x272 JUMP JUMPDEST PUSH2 0x26E PUSH2 0x601 PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x197 JUMPI PUSH2 0x4FB PUSH2 0x62E CALLDATASIZE PUSH1 0x4 PUSH2 0x1B4 JUMP JUMPDEST PUSH2 0xE9A JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0x197 JUMPI PUSH2 0x1C8 SWAP1 PUSH1 0x20 PUSH2 0x64F DUP3 DUP7 PUSH2 0x431 JUMP JUMPDEST SWAP5 ADD PUSH2 0x1A5 JUMP JUMPDEST CALLVALUE PUSH2 0x197 JUMPI PUSH2 0x26E PUSH2 0x410 PUSH2 0x66C CALLDATASIZE PUSH1 0x4 PUSH2 0x633 JUMP JUMPDEST SWAP1 PUSH2 0xEA3 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0x197 JUMPI PUSH2 0x1C8 SWAP1 PUSH1 0x20 PUSH2 0x64F DUP3 DUP7 PUSH2 0x1A5 JUMP JUMPDEST CALLVALUE PUSH2 0x197 JUMPI PUSH2 0x4FB PUSH2 0x6A1 CALLDATASIZE PUSH1 0x4 PUSH2 0x672 JUMP JUMPDEST SWAP1 PUSH2 0xEEB JUMP JUMPDEST CALLVALUE PUSH2 0x197 JUMPI PUSH2 0x6B7 CALLDATASIZE PUSH1 0x4 PUSH2 0x272 JUMP JUMPDEST PUSH2 0x4FB PUSH2 0xF9C JUMP JUMPDEST CALLVALUE PUSH2 0x197 JUMPI PUSH2 0x26E PUSH2 0x298 PUSH2 0x6D5 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B4 JUMP JUMPDEST PUSH2 0xFE2 JUMP JUMPDEST CALLVALUE PUSH2 0x197 JUMPI PUSH2 0x4FB PUSH2 0x6ED CALLDATASIZE PUSH1 0x4 PUSH2 0x672 JUMP JUMPDEST SWAP1 PUSH2 0x14CD JUMP JUMPDEST CALLVALUE PUSH2 0x197 JUMPI PUSH2 0x4FB PUSH2 0x706 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B4 JUMP JUMPDEST PUSH2 0x1756 JUMP JUMPDEST CALLVALUE PUSH2 0x197 JUMPI PUSH2 0x4FB PUSH2 0x71E CALLDATASIZE PUSH1 0x4 PUSH2 0x633 JUMP JUMPDEST SWAP1 PUSH2 0x1B82 JUMP JUMPDEST PUSH2 0x1C8 PUSH1 0x0 PUSH1 0xE PUSH2 0x2B4 JUMP JUMPDEST CALLVALUE PUSH2 0x197 JUMPI PUSH2 0x740 CALLDATASIZE PUSH1 0x4 PUSH2 0x272 JUMP JUMPDEST PUSH2 0x26E PUSH2 0x298 PUSH2 0x724 JUMP JUMPDEST CALLVALUE PUSH2 0x197 JUMPI PUSH2 0x26E PUSH2 0x298 PUSH2 0x761 CALLDATASIZE PUSH1 0x4 PUSH2 0x633 JUMP JUMPDEST SWAP1 PUSH2 0x20BC JUMP JUMPDEST SWAP1 PUSH2 0x776 PUSH2 0x32A PUSH2 0x320 DUP5 MLOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x787 JUMPI POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 PUSH2 0x7A6 PUSH2 0x361 PUSH1 0x1 SWAP3 DUP7 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 ADD PUSH2 0x77A JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE SWAP1 PUSH2 0x1C8 SWAP1 PUSH2 0x100 DUP1 PUSH2 0x81E PUSH2 0x120 DUP5 ADD PUSH2 0x7DB PUSH1 0x20 DUP9 ADD MLOAD PUSH1 0x20 DUP8 ADD MSTORE JUMP JUMPDEST PUSH2 0x7EA PUSH1 0x40 DUP9 ADD MLOAD PUSH1 0x40 DUP8 ADD MSTORE JUMP JUMPDEST PUSH2 0x7F9 PUSH1 0x60 DUP9 ADD MLOAD PUSH1 0x60 DUP8 ADD MSTORE JUMP JUMPDEST PUSH1 0x80 DUP8 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP7 ADD MSTORE PUSH1 0xA0 DUP8 ADD MLOAD DUP6 DUP3 SUB PUSH1 0xA0 DUP8 ADD MSTORE PUSH2 0x767 JUMP JUMPDEST PUSH1 0xC0 DUP1 DUP8 ADD MLOAD ISZERO ISZERO SWAP1 DUP6 ADD MSTORE SWAP5 PUSH2 0x230 PUSH1 0xE0 DUP3 ADD MLOAD PUSH1 0xE0 DUP7 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH2 0x1C8 SWAP3 SWAP2 ADD SWAP1 PUSH2 0x7AE JUMP JUMPDEST CALLVALUE PUSH2 0x197 JUMPI PUSH2 0x26E PUSH2 0x866 PUSH2 0x861 CALLDATASIZE PUSH1 0x4 PUSH2 0x43E JUMP JUMPDEST PUSH2 0x21D3 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x83A JUMP JUMPDEST CALLVALUE PUSH2 0x197 JUMPI PUSH2 0x4FB PUSH2 0x885 CALLDATASIZE PUSH1 0x4 PUSH2 0x43E JUMP JUMPDEST PUSH2 0x2247 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x8C2 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x88A JUMP JUMPDEST SWAP1 PUSH2 0x1B2 PUSH2 0x8D4 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 PUSH2 0x8A0 JUMP JUMPDEST PUSH2 0x1C8 PUSH1 0xC0 PUSH2 0x8C7 JUMP JUMPDEST PUSH2 0x8ED PUSH2 0x8DB JUMP JUMPDEST SWAP1 PUSH1 0x0 DUP3 MSTORE PUSH1 0x20 DUP1 DUP1 DUP1 DUP1 DUP1 DUP8 ADD PUSH1 0x0 DUP2 MSTORE ADD PUSH1 0x0 JUMPDEST DUP2 MSTORE ADD PUSH1 0x0 DUP2 MSTORE ADD PUSH1 0x0 DUP2 MSTORE ADD PUSH1 0x0 SWAP1 MSTORE POP JUMP JUMPDEST PUSH2 0x1C8 PUSH2 0x8E5 JUMP JUMPDEST PUSH2 0x1C8 PUSH2 0x1C8 PUSH2 0x1C8 SWAP3 SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x936 SWAP1 PUSH2 0x91F JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x1C8 SWAP1 DUP2 JUMP JUMPDEST PUSH2 0x1C8 SWAP1 SLOAD PUSH2 0x944 JUMP JUMPDEST PUSH2 0x1C8 SWAP1 PUSH2 0x3D8 JUMP JUMPDEST PUSH2 0x1C8 SWAP1 SLOAD PUSH2 0x955 JUMP JUMPDEST SWAP1 PUSH2 0x1B2 PUSH2 0xA0C PUSH1 0x5 PUSH2 0x979 PUSH2 0x8DB JUMP JUMPDEST SWAP5 PUSH2 0x99B PUSH2 0x98E DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 MSTORE JUMP JUMPDEST PUSH2 0x9C2 PUSH2 0x9B2 PUSH1 0x1 DUP4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP9 ADD MSTORE JUMP JUMPDEST PUSH2 0x9D8 PUSH2 0x9D1 PUSH1 0x2 DUP4 ADD PUSH2 0x94B JUMP JUMPDEST PUSH1 0x40 DUP9 ADD MSTORE JUMP JUMPDEST PUSH2 0x9EE PUSH2 0x9E7 PUSH1 0x3 DUP4 ADD PUSH2 0x94B JUMP JUMPDEST PUSH1 0x60 DUP9 ADD MSTORE JUMP JUMPDEST PUSH2 0xA06 PUSH2 0x9FD PUSH1 0x4 DUP4 ADD PUSH2 0x95E JUMP JUMPDEST ISZERO ISZERO PUSH1 0x80 DUP9 ADD MSTORE JUMP JUMPDEST ADD PUSH2 0x94B JUMP JUMPDEST PUSH1 0xA0 DUP5 ADD MSTORE JUMP JUMPDEST PUSH2 0x1C8 SWAP1 PUSH2 0x968 JUMP JUMPDEST PUSH2 0xA33 PUSH2 0x1C8 SWAP2 PUSH2 0xA2B PUSH2 0x917 JUMP JUMPDEST POP PUSH1 0x3 PUSH2 0x92C JUMP JUMPDEST PUSH2 0xA13 JUMP JUMPDEST PUSH2 0x1C8 PUSH1 0x9 PUSH2 0x94B JUMP JUMPDEST SWAP1 PUSH2 0xA5D PUSH2 0xA51 PUSH2 0x320 DUP5 SLOAD SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0xA6E JUMPI POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 PUSH2 0xAA3 PUSH2 0xA9C PUSH1 0x1 SWAP3 PUSH2 0xA8B DUP8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP5 PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 ADD PUSH2 0xA61 JUMP JUMPDEST SWAP1 PUSH2 0x1C8 SWAP2 PUSH2 0xA42 JUMP JUMPDEST SWAP1 PUSH2 0x1B2 PUSH2 0xACF SWAP3 PUSH2 0xAC6 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP4 DUP5 DUP1 SWAP3 PUSH2 0xAAB JUMP JUMPDEST SUB DUP4 PUSH2 0x8A0 JUMP JUMPDEST PUSH2 0x1C8 SWAP1 PUSH2 0xAB5 JUMP JUMPDEST PUSH2 0x1C8 PUSH1 0x7 PUSH2 0xAD6 JUMP JUMPDEST PUSH2 0x1C8 SWAP1 PUSH2 0x1CB SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 JUMP JUMPDEST PUSH2 0x1C8 SWAP1 PUSH2 0xAE9 JUMP JUMPDEST PUSH2 0x1C8 SWAP1 PUSH2 0xAFD JUMP JUMPDEST SWAP1 PUSH2 0x936 SWAP1 PUSH2 0xB06 JUMP JUMPDEST SWAP1 PUSH2 0xB28 PUSH2 0xA51 PUSH2 0x320 DUP5 SLOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0xB39 JUMPI POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 PUSH2 0xB56 PUSH2 0xA9C PUSH1 0x1 SWAP3 PUSH2 0xB4E DUP8 PUSH2 0x94B JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 ADD PUSH2 0xB2C JUMP JUMPDEST SWAP1 PUSH2 0x1C8 SWAP2 PUSH2 0xB19 JUMP JUMPDEST SWAP1 PUSH2 0x1B2 PUSH2 0xACF SWAP3 PUSH2 0xB79 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP4 DUP5 DUP1 SWAP3 PUSH2 0xB5E JUMP JUMPDEST PUSH2 0x1C8 SWAP1 PUSH2 0xB68 JUMP JUMPDEST PUSH2 0xBA2 PUSH2 0x1C8 SWAP2 PUSH2 0xB9A PUSH1 0x60 SWAP1 JUMP JUMPDEST POP PUSH1 0x4 PUSH2 0xB0F JUMP JUMPDEST PUSH2 0xB82 JUMP JUMPDEST PUSH2 0x1C8 PUSH1 0xA PUSH2 0x94B JUMP JUMPDEST PUSH2 0xBB9 PUSH2 0x2250 JUMP JUMPDEST PUSH2 0x1B2 PUSH2 0xBD7 JUMP JUMPDEST PUSH2 0x1CB PUSH2 0x1C8 PUSH2 0x1C8 SWAP3 SWAP1 JUMP JUMPDEST PUSH2 0x1C8 SWAP1 PUSH2 0xBC1 JUMP JUMPDEST PUSH2 0x1B2 PUSH2 0xBE4 PUSH1 0x0 PUSH2 0xBCE JUMP JUMPDEST PUSH2 0x2291 JUMP JUMPDEST PUSH2 0x1B2 PUSH2 0xBB1 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x8C2 JUMPI PUSH1 0x20 DUP1 SWAP2 MUL ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0xC1B PUSH2 0xC16 DUP4 PUSH2 0xBF1 JUMP JUMPDEST PUSH2 0x8C7 JUMP JUMPDEST SWAP2 DUP3 MSTORE JUMP JUMPDEST SWAP1 PUSH2 0x1B2 PUSH2 0xC96 PUSH1 0x5 PUSH2 0xC31 PUSH2 0x8DB JUMP JUMPDEST SWAP5 PUSH2 0xC46 PUSH2 0x98E DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0xC5C PUSH2 0xC55 PUSH1 0x1 DUP4 ADD PUSH2 0x94B JUMP JUMPDEST PUSH1 0x20 DUP9 ADD MSTORE JUMP JUMPDEST PUSH2 0xC6B PUSH2 0x9D1 PUSH1 0x2 DUP4 ADD PUSH2 0x94B JUMP JUMPDEST PUSH2 0xC7A PUSH2 0x9E7 PUSH1 0x3 DUP4 ADD PUSH2 0x94B JUMP JUMPDEST PUSH2 0xC90 PUSH2 0xC89 PUSH1 0x4 DUP4 ADD PUSH2 0x94B JUMP JUMPDEST PUSH1 0x80 DUP9 ADD MSTORE JUMP JUMPDEST ADD PUSH2 0x95E JUMP JUMPDEST ISZERO ISZERO PUSH1 0xA0 DUP5 ADD MSTORE JUMP JUMPDEST PUSH2 0x1C8 SWAP1 PUSH2 0xC20 JUMP JUMPDEST SWAP1 PUSH2 0xCB1 DUP3 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xCBA DUP2 PUSH2 0xC09 JUMP JUMPDEST SWAP3 PUSH2 0xCCE PUSH1 0x20 DUP6 ADD SWAP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0xCDF JUMPI POP POP POP POP JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 PUSH1 0x1 SWAP3 PUSH2 0xCEF DUP6 PUSH2 0xC9F JUMP JUMPDEST DUP2 MSTORE ADD SWAP3 ADD SWAP3 ADD SWAP2 SWAP1 PUSH2 0xCD2 JUMP JUMPDEST PUSH2 0x1C8 SWAP1 PUSH2 0xCA8 JUMP JUMPDEST PUSH2 0xD1D PUSH2 0x1C8 SWAP2 PUSH2 0xD15 PUSH1 0x60 SWAP1 JUMP JUMPDEST POP PUSH1 0x5 PUSH2 0x92C JUMP JUMPDEST PUSH2 0xCFD JUMP JUMPDEST PUSH2 0x1B2 SWAP1 PUSH2 0xD2E PUSH2 0x2250 JUMP JUMPDEST PUSH2 0xE06 JUMP JUMPDEST ISZERO PUSH2 0xD3A JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x566F74696E6720616C726561647920616374697665 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE DUP1 PUSH1 0x64 DUP2 ADD JUMPDEST SUB SWAP1 REVERT JUMPDEST SWAP1 PUSH1 0xFF SWAP1 JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0xD9B PUSH2 0x1C8 PUSH2 0xDA2 SWAP3 ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP3 SLOAD PUSH2 0xD7C JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST SWAP1 PUSH1 0x0 NOT SWAP1 PUSH2 0xD81 JUMP JUMPDEST SWAP1 PUSH2 0xDC0 PUSH2 0x1C8 PUSH2 0xDA2 SWAP3 PUSH2 0x91F JUMP JUMPDEST DUP3 SLOAD PUSH2 0xDA6 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0xDEA JUMPI JUMP JUMPDEST PUSH2 0xDC7 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP2 ADD SWAP3 SWAP2 PUSH2 0x1B2 SWAP2 PUSH1 0x20 ADD MSTORE JUMP JUMPDEST ADD MSTORE JUMP JUMPDEST PUSH2 0xE43 PUSH2 0xE4A SWAP2 PUSH2 0xE26 PUSH2 0xE21 PUSH2 0xE1D PUSH1 0xB PUSH2 0x95E JUMP JUMPDEST ISZERO SWAP1 JUMP JUMPDEST PUSH2 0xD33 JUMP JUMPDEST PUSH2 0xE32 PUSH1 0x1 PUSH1 0xB PUSH2 0xD8B JUMP JUMPDEST PUSH2 0xE3D TIMESTAMP PUSH1 0xC PUSH2 0xDB0 JUMP JUMPDEST TIMESTAMP PUSH2 0xDDD JUMP JUMPDEST PUSH1 0xD PUSH2 0xDB0 JUMP JUMPDEST PUSH32 0xE280A408633821740A429FB671E01CACF8D1D70D5C2735F4F94EC0EDEF4EA6DE PUSH2 0xE75 PUSH1 0xC PUSH2 0x94B JUMP JUMPDEST PUSH2 0xE7F PUSH1 0xD PUSH2 0x94B JUMP JUMPDEST SWAP1 PUSH2 0xE95 PUSH2 0xE8C PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 SWAP3 DUP4 PUSH2 0xDEF JUMP JUMPDEST SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x1B2 SWAP1 PUSH2 0xD22 JUMP JUMPDEST PUSH2 0x1C8 SWAP2 PUSH2 0xEBE PUSH2 0xEC3 SWAP3 PUSH2 0xEB6 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x6 PUSH2 0xB0F JUMP JUMPDEST PUSH2 0x92C JUMP JUMPDEST PUSH2 0x95E JUMP JUMPDEST SWAP1 PUSH2 0x1B2 SWAP2 PUSH2 0xED5 PUSH2 0x2250 JUMP JUMPDEST SWAP1 PUSH2 0xEE4 PUSH2 0x1B2 SWAP3 PUSH1 0xE PUSH2 0xDB0 JUMP JUMPDEST PUSH1 0xF PUSH2 0xDB0 JUMP JUMPDEST SWAP1 PUSH2 0x1B2 SWAP2 PUSH2 0xEC8 JUMP JUMPDEST PUSH2 0xEFD PUSH2 0x2250 JUMP JUMPDEST PUSH2 0x1B2 PUSH2 0xF45 JUMP JUMPDEST ISZERO PUSH2 0xF0C JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x566F74696E67206E6F7420616374697665 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0xF57 PUSH2 0xF52 PUSH1 0xB PUSH2 0x95E JUMP JUMPDEST PUSH2 0xF05 JUMP JUMPDEST PUSH2 0xF63 PUSH1 0x0 PUSH1 0xB PUSH2 0xD8B JUMP JUMPDEST PUSH2 0xF6E TIMESTAMP PUSH1 0xD PUSH2 0xDB0 JUMP JUMPDEST PUSH32 0x9956BD7B1AE344FBB54DBD02A85E2283BEC6BF75F7FCCBAA9C2392A715E71E49 PUSH2 0xE95 PUSH2 0x298 PUSH1 0xD PUSH2 0x94B JUMP JUMPDEST PUSH2 0x1B2 PUSH2 0xEF5 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0xFDD JUMPI PUSH2 0xFD4 PUSH1 0x6 SWAP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP2 MUL ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0xFA4 JUMP JUMPDEST PUSH2 0xFEC PUSH1 0x0 PUSH2 0x91F JUMP JUMPDEST SWAP1 DUP2 JUMPDEST PUSH1 0x5 PUSH2 0x1005 PUSH2 0x1C8 PUSH2 0x1001 DUP6 DUP5 PUSH2 0x92C JUMP JUMPDEST SLOAD SWAP1 JUMP JUMPDEST DUP5 LT ISZERO PUSH2 0x1045 JUMPI PUSH2 0x103F SWAP2 PUSH2 0x1032 PUSH1 0x2 PUSH2 0x102B DUP8 PUSH2 0x1026 DUP9 PUSH2 0x1038 SWAP8 PUSH2 0x92C JUMP JUMPDEST PUSH2 0xFBA JUMP JUMPDEST POP ADD PUSH2 0x94B JUMP JUMPDEST SWAP1 PUSH2 0xDDD JUMP JUMPDEST SWAP3 PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST SWAP2 PUSH2 0xFEF JUMP JUMPDEST POP SWAP2 POP POP SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x1053 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x159BDD195C881B9BDD081C9959DA5CDD195C9959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x1B2 SWAP2 PUSH2 0x10AC PUSH2 0x10A7 PUSH1 0x6 PUSH2 0xC90 CALLER PUSH1 0x2 PUSH2 0xB0F JUMP JUMPDEST PUSH2 0x104C JUMP JUMPDEST PUSH2 0x10F5 JUMP JUMPDEST ISZERO PUSH2 0x10B8 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x13DD5D1CDA5919481D9BDD1A5B99C81C195C9A5BD9 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x1B2 SWAP2 PUSH2 0x1107 PUSH2 0xF52 PUSH1 0xB PUSH2 0x95E JUMP JUMPDEST PUSH2 0x1114 PUSH2 0x1C8 PUSH1 0xC PUSH2 0x94B JUMP JUMPDEST TIMESTAMP LT ISZERO DUP1 PUSH2 0x112B JUMPI JUMPDEST PUSH2 0x1126 SWAP1 PUSH2 0x10B1 JUMP JUMPDEST PUSH2 0x1376 JUMP JUMPDEST POP PUSH2 0x1126 PUSH2 0x113C PUSH2 0x1C8 PUSH1 0xD PUSH2 0x94B JUMP JUMPDEST TIMESTAMP GT ISZERO SWAP1 POP PUSH2 0x111D JUMP JUMPDEST ISZERO PUSH2 0x114D JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 PUSH2 0xD78 PUSH1 0x4 DUP3 ADD PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x416C726561647920766F74656420666F7220746869732063616E646964617465 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x119D JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x506F776572206D7573742062652067726561746572207468616E203000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x11E9 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E7420766F74696E6720706F77657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH2 0xD81 JUMP JUMPDEST SWAP1 PUSH2 0x1263 PUSH2 0x1C8 PUSH2 0xDA2 SWAP3 PUSH2 0xB06 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x1244 JUMP JUMPDEST SWAP1 PUSH2 0xDC0 PUSH2 0x1C8 PUSH2 0xDA2 SWAP3 SWAP1 JUMP JUMPDEST PUSH1 0x5 PUSH2 0x1303 PUSH1 0xA0 PUSH2 0x1B2 SWAP5 PUSH2 0x12A0 PUSH2 0x129A PUSH1 0x0 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST DUP7 PUSH2 0x1253 JUMP JUMPDEST PUSH2 0x12B7 PUSH2 0x12AE PUSH1 0x20 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP8 ADD PUSH2 0xDB0 JUMP JUMPDEST PUSH2 0x12CE PUSH2 0x12C5 PUSH1 0x40 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP8 ADD PUSH2 0xDB0 JUMP JUMPDEST PUSH2 0x12E5 PUSH2 0x12DC PUSH1 0x60 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x3 DUP8 ADD PUSH2 0xDB0 JUMP JUMPDEST PUSH2 0x12FC PUSH2 0x12F3 PUSH1 0x80 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x4 DUP8 ADD PUSH2 0x126A JUMP JUMPDEST ADD MLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST SWAP2 ADD PUSH2 0xD8B JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x1319 JUMPI PUSH2 0x1B2 SWAP2 PUSH2 0x1278 JUMP JUMPDEST PUSH2 0x122E JUMP JUMPDEST SWAP1 DUP2 SLOAD SWAP2 PUSH1 0x1 PUSH1 0x40 SHL DUP4 LT ISZERO PUSH2 0x8C2 JUMPI DUP3 PUSH2 0x1341 SWAP2 PUSH1 0x1 PUSH2 0x1B2 SWAP6 ADD DUP2 SSTORE PUSH2 0xFBA JUMP JUMPDEST SWAP1 PUSH2 0x130A JUMP JUMPDEST PUSH2 0xE02 PUSH2 0x1B2 SWAP5 PUSH2 0x136D PUSH1 0x60 SWAP5 SWAP9 SWAP8 SWAP6 PUSH2 0x1366 PUSH1 0x80 DUP7 ADD SWAP11 PUSH1 0x0 DUP8 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MSTORE JUMP JUMPDEST ISZERO ISZERO PUSH1 0x40 DUP4 ADD MSTORE JUMP JUMPDEST SWAP1 PUSH32 0xE89C99A0264D21C2AD18316D6E7B3AA31414C12F31B085AFDEEACAA7E69F80B6 SWAP1 PUSH2 0x13B6 PUSH2 0x13B1 PUSH2 0xE1D PUSH2 0xEC3 DUP7 PUSH2 0xEBE CALLER PUSH1 0x6 PUSH2 0xB0F JUMP JUMPDEST PUSH2 0x1146 JUMP JUMPDEST PUSH2 0x13CB PUSH2 0x13C3 PUSH1 0x0 PUSH2 0x91F JUMP JUMPDEST DUP3 JUMPDEST GT PUSH2 0x1196 JUMP JUMPDEST PUSH2 0x14A6 PUSH1 0xA0 PUSH1 0x2 PUSH2 0x13EF PUSH2 0x13E7 PUSH2 0x1C8 PUSH1 0x3 PUSH2 0xA06 CALLER DUP7 PUSH2 0xB0F JUMP JUMPDEST DUP6 GT ISZERO PUSH2 0x11E2 JUMP JUMPDEST PUSH2 0x12FC PUSH2 0x149C PUSH2 0x1409 PUSH2 0x1401 DUP10 PUSH2 0x91F JUMP JUMPDEST TIMESTAMP SWAP1 CALLER PUSH2 0x231D JUMP JUMPDEST SWAP3 PUSH2 0x1465 PUSH2 0x141B DUP3 PUSH2 0xA06 CALLER DUP3 PUSH2 0xB0F JUMP JUMPDEST PUSH2 0x142C PUSH2 0x1428 PUSH1 0x0 PUSH2 0x91F JUMP JUMPDEST SWAP2 SWAP1 JUMP JUMPDEST GT PUSH2 0x145D PUSH2 0x1438 PUSH2 0x8DB JUMP JUMPDEST CALLER DUP2 MSTORE SWAP7 PUSH2 0x1447 DUP14 PUSH1 0x20 DUP11 ADD MSTORE JUMP JUMPDEST PUSH2 0x1452 DUP12 PUSH1 0x40 DUP11 ADD MSTORE JUMP JUMPDEST PUSH2 0xC89 TIMESTAMP PUSH1 0x60 DUP11 ADD MSTORE JUMP JUMPDEST ISZERO ISZERO DUP6 DUP8 ADD MSTORE JUMP JUMPDEST PUSH2 0x147C DUP5 PUSH2 0x1477 PUSH2 0x1C8 DUP13 PUSH1 0x5 PUSH2 0x92C JUMP JUMPDEST PUSH2 0x131E JUMP JUMPDEST PUSH2 0x1495 PUSH1 0x1 PUSH2 0x1490 DUP12 PUSH2 0xEBE CALLER PUSH1 0x6 PUSH2 0xB0F JUMP JUMPDEST PUSH2 0xD8B JUMP JUMPDEST CALLER SWAP1 PUSH2 0xB0F JUMP JUMPDEST PUSH1 0x7 TIMESTAMP SWAP2 ADD PUSH2 0xDB0 JUMP JUMPDEST SWAP1 PUSH2 0x14C8 PUSH2 0x14B3 CALLER PUSH2 0xB06 JUMP JUMPDEST SWAP5 PUSH2 0x14BD PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP4 DUP5 SWAP4 TIMESTAMP SWAP3 DUP6 PUSH2 0x1347 JUMP JUMPDEST SUB SWAP1 LOG2 JUMP JUMPDEST SWAP1 PUSH2 0x1B2 SWAP2 PUSH2 0x108F JUMP JUMPDEST PUSH2 0x14E8 SWAP1 PUSH2 0x14E3 PUSH2 0x2368 JUMP JUMPDEST PUSH2 0x158E JUMP JUMPDEST PUSH2 0x1B2 PUSH2 0x23A8 JUMP JUMPDEST ISZERO PUSH2 0x14F7 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x44656C65676174696F6E206E6F7420616374697665 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x153B JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x2737BA103A3432903232B632B3B0BA37B9 PUSH1 0x79 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0xDEA JUMPI JUMP JUMPDEST DUP1 ISZERO PUSH2 0xDEA JUMPI PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST PUSH2 0x1706 PUSH2 0x159F PUSH2 0x1C8 DUP4 PUSH1 0x3 PUSH2 0x92C JUMP JUMPDEST PUSH2 0x15E7 PUSH1 0x0 PUSH1 0x4 DUP4 ADD PUSH2 0x15B9 PUSH2 0x15B4 DUP3 PUSH2 0x95E JUMP JUMPDEST PUSH2 0x14F0 JUMP JUMPDEST PUSH2 0x1490 PUSH2 0x15CF DUP4 DUP7 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x15E1 CALLER JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST EQ PUSH2 0x1534 JUMP JUMPDEST PUSH2 0x16A5 PUSH1 0x8 PUSH2 0x1693 PUSH2 0x15F9 PUSH1 0x0 PUSH2 0xBCE JUMP JUMPDEST PUSH2 0x1611 PUSH1 0x2 SWAP2 PUSH1 0x4 PUSH2 0x160B CALLER DUP6 PUSH2 0xB0F JUMP JUMPDEST ADD PUSH2 0x1253 JUMP JUMPDEST PUSH2 0x1682 PUSH1 0x1 PUSH2 0x1651 DUP4 DUP9 ADD PUSH2 0x164C PUSH2 0x1628 DUP3 PUSH2 0x94B JUMP JUMPDEST PUSH2 0x1646 DUP6 PUSH2 0x1636 CALLER DUP11 PUSH2 0xB0F JUMP JUMPDEST ADD SWAP2 PUSH2 0x1641 DUP4 PUSH2 0x94B JUMP JUMPDEST PUSH2 0xDDD JUMP JUMPDEST SWAP1 PUSH2 0xDB0 JUMP JUMPDEST PUSH2 0x94B JUMP JUMPDEST SWAP7 ADD SWAP6 PUSH2 0x1646 DUP4 PUSH2 0x1672 PUSH2 0x166C DUP11 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST DUP3 PUSH2 0xB0F JUMP JUMPDEST ADD SWAP2 PUSH2 0x167D DUP4 PUSH2 0x94B JUMP JUMPDEST PUSH2 0x1574 JUMP JUMPDEST DUP5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH2 0xB0F JUMP JUMPDEST ADD PUSH2 0x1646 PUSH2 0x16A0 DUP3 PUSH2 0x94B JUMP JUMPDEST PUSH2 0x1581 JUMP JUMPDEST PUSH2 0x16C0 PUSH2 0x16B9 DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST CALLER SWAP1 PUSH2 0x240F JUMP JUMPDEST PUSH2 0x16C9 CALLER PUSH2 0x24B1 JUMP JUMPDEST PUSH2 0x16E2 PUSH2 0x16DD DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x24B1 JUMP JUMPDEST PUSH2 0x16F9 PUSH2 0x16F2 PUSH2 0x16A0 PUSH1 0xA PUSH2 0x94B JUMP JUMPDEST PUSH1 0xA PUSH2 0xDB0 JUMP JUMPDEST SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH32 0x657937CAD9C3CE43C8ECE19052E5F60B2DB7D536FDB47405C20ECF1C3DF56B7D PUSH2 0x1751 PUSH2 0x173C PUSH2 0x1736 CALLER PUSH2 0xB06 JUMP JUMPDEST SWAP4 PUSH2 0xB06 JUMP JUMPDEST SWAP4 PUSH2 0x1746 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP2 DUP3 SWAP2 TIMESTAMP SWAP1 DUP4 PUSH2 0xDEF JUMP JUMPDEST SUB SWAP1 LOG3 JUMP JUMPDEST PUSH2 0x1B2 SWAP1 PUSH2 0x14D7 JUMP JUMPDEST SWAP1 PUSH2 0x1B2 SWAP2 PUSH2 0x176C PUSH2 0x2250 JUMP JUMPDEST PUSH2 0x1A51 JUMP JUMPDEST ISZERO PUSH2 0x1778 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x566F74657220616C726561647920726567697374657265640000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLDATASIZE SWAP1 CALLDATACOPY JUMP JUMPDEST SWAP1 PUSH2 0x1B2 PUSH2 0x17D8 PUSH2 0x17D2 DUP5 PUSH2 0xC09 JUMP JUMPDEST SWAP4 PUSH2 0xBF1 JUMP JUMPDEST PUSH1 0x1F NOT ADD PUSH1 0x20 DUP5 ADD PUSH2 0x17BD JUMP JUMPDEST PUSH2 0x1C8 PUSH2 0x120 PUSH2 0x8C7 JUMP JUMPDEST SWAP2 PUSH1 0x0 NOT PUSH1 0x8 SWAP3 SWAP1 SWAP3 MUL SWAP2 DUP3 SHL SWAP2 SHL PUSH2 0xD81 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x1815 PUSH2 0x1C8 PUSH2 0xDA2 SWAP4 PUSH2 0x91F JUMP JUMPDEST SWAP1 DUP4 SLOAD PUSH2 0x17F0 JUMP JUMPDEST PUSH2 0x1B2 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x1804 JUMP JUMPDEST DUP2 DUP2 LT PUSH2 0x1834 JUMPI POP POP JUMP JUMPDEST DUP1 PUSH2 0x1842 PUSH1 0x0 PUSH1 0x1 SWAP4 PUSH2 0x181D JUMP JUMPDEST ADD PUSH2 0x1829 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 DUP3 DUP3 LT PUSH2 0x1857 JUMPI POP POP POP JUMP JUMPDEST PUSH2 0x1B2 SWAP3 SWAP2 PUSH2 0x186C SWAP1 SWAP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x1829 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x40 SHL DUP2 GT PUSH2 0x8C2 JUMPI DUP2 PUSH2 0x188E PUSH2 0x1B2 SWAP4 SLOAD SWAP1 JUMP JUMPDEST SWAP1 DUP3 DUP2 SSTORE PUSH2 0x1848 JUMP JUMPDEST PUSH2 0x1C8 SWAP2 PUSH1 0x8 MUL SHR PUSH2 0x1CB JUMP JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x8 SWAP3 SWAP1 SWAP3 MUL SWAP2 DUP3 SHL SWAP2 SHL PUSH2 0xD81 JUMP JUMPDEST DUP2 MLOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x8C2 JUMPI PUSH2 0x18E8 PUSH2 0xA51 PUSH1 0x1 SWAP3 PUSH2 0x18E2 DUP7 DUP7 PUSH2 0x1876 JUMP JUMPDEST PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 DIV SWAP2 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x18FB JUMPI POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SWAP1 PUSH1 0x20 PUSH2 0x1914 PUSH2 0x1C8 DUP7 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP5 ADD SWAP4 DUP2 DUP5 ADD SSTORE ADD PUSH2 0x18EE JUMP JUMPDEST SWAP1 PUSH2 0x1B2 SWAP2 PUSH2 0x18BD JUMP JUMPDEST PUSH1 0x8 PUSH2 0x19E4 PUSH2 0x100 PUSH2 0x1B2 SWAP5 PUSH2 0x194E PUSH2 0x129A PUSH1 0x0 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x195C PUSH2 0x12AE PUSH1 0x20 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x196A PUSH2 0x12C5 PUSH1 0x40 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1978 PUSH2 0x12DC PUSH1 0x60 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1998 PUSH2 0x198F PUSH1 0x80 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x4 DUP8 ADD PUSH2 0x1253 JUMP JUMPDEST PUSH2 0x19AF PUSH2 0x19A6 PUSH1 0xA0 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x5 DUP8 ADD PUSH2 0x1921 JUMP JUMPDEST PUSH2 0x19C8 PUSH2 0x19BF PUSH1 0xC0 DUP4 ADD MLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x6 DUP8 ADD PUSH2 0xD8B JUMP JUMPDEST PUSH2 0x19DF PUSH2 0x19D6 PUSH1 0xE0 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x7 DUP8 ADD PUSH2 0xDB0 JUMP JUMPDEST ADD MLOAD SWAP1 JUMP JUMPDEST SWAP2 ADD PUSH2 0xDB0 JUMP JUMPDEST SWAP1 PUSH2 0x1B2 SWAP2 PUSH2 0x192B JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0xFDD JUMPI PUSH2 0xFD4 PUSH1 0x1 SWAP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x1A20 PUSH2 0x1C8 PUSH2 0xDA2 SWAP4 PUSH2 0xB06 JUMP JUMPDEST SWAP1 DUP4 SLOAD PUSH2 0x18A4 JUMP JUMPDEST SWAP1 DUP2 SLOAD SWAP2 PUSH1 0x1 PUSH1 0x40 SHL DUP4 LT ISZERO PUSH2 0x8C2 JUMPI DUP3 PUSH2 0x1A4B SWAP2 PUSH1 0x1 PUSH2 0x1B2 SWAP6 ADD DUP2 SSTORE PUSH2 0x19F5 JUMP JUMPDEST SWAP1 PUSH2 0x1A0F JUMP JUMPDEST PUSH2 0x14C8 PUSH2 0x1B78 PUSH32 0x49A90692135172B11FF45007EF12B97C37DF00BC650E48846F88DA97B191B2D0 SWAP3 PUSH2 0x1A94 PUSH2 0x1A8F PUSH2 0xE1D PUSH1 0x6 PUSH2 0xC90 DUP6 PUSH1 0x2 PUSH2 0xB0F JUMP JUMPDEST PUSH2 0x1771 JUMP JUMPDEST PUSH2 0x1B50 PUSH1 0x0 PUSH2 0x1AAB PUSH2 0x1AA5 DUP3 PUSH2 0x91F JUMP JUMPDEST DUP9 PUSH2 0x13C5 JUMP JUMPDEST PUSH2 0x1B40 PUSH2 0x1AB7 DUP3 PUSH2 0xBCE JUMP JUMPDEST PUSH2 0x1B26 PUSH2 0x1AC3 DUP5 PUSH2 0x91F JUMP JUMPDEST SWAP2 PUSH2 0x1B1F PUSH2 0x1AD0 DUP5 PUSH2 0x17C2 JUMP JUMPDEST SWAP2 PUSH2 0x1AEE DUP10 PUSH2 0x1ADD PUSH2 0x17E5 JUMP JUMPDEST SWAP9 DUP10 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST PUSH2 0x1AF9 DUP14 PUSH1 0x20 DUP10 ADD MSTORE JUMP JUMPDEST PUSH2 0x1B04 DUP6 PUSH1 0x40 DUP10 ADD MSTORE JUMP JUMPDEST PUSH2 0x1B0F DUP14 PUSH1 0x60 DUP10 ADD MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x80 DUP8 ADD MSTORE JUMP JUMPDEST PUSH1 0xA0 DUP6 ADD MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0xC0 DUP5 ADD MSTORE PUSH2 0x1B38 DUP2 PUSH1 0xE0 DUP6 ADD MSTORE JUMP JUMPDEST PUSH2 0x100 DUP4 ADD MSTORE JUMP JUMPDEST PUSH2 0x1B4B DUP4 PUSH1 0x2 PUSH2 0xB0F JUMP JUMPDEST PUSH2 0x19EB JUMP JUMPDEST PUSH2 0x1B5B DUP2 PUSH1 0x7 PUSH2 0x1A28 JUMP JUMPDEST PUSH2 0x1B73 PUSH2 0x1B6C DUP7 PUSH2 0x1641 PUSH1 0x9 PUSH2 0x94B JUMP JUMPDEST PUSH1 0x9 PUSH2 0xDB0 JUMP JUMPDEST PUSH2 0xB06 JUMP JUMPDEST SWAP3 PUSH2 0x1746 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1B2 SWAP2 PUSH2 0x175F JUMP JUMPDEST SWAP1 PUSH2 0x1C8 SWAP3 SWAP2 PUSH2 0x1BA5 PUSH2 0x10A7 PUSH1 0x6 PUSH2 0xC90 CALLER PUSH1 0x2 PUSH2 0xB0F JUMP JUMPDEST PUSH2 0x1CD1 JUMP JUMPDEST ISZERO PUSH2 0x1BB1 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F742064656C656761746520746F2073656C66000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1BFD JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x44656C656761746F72206E6F7420726567697374657265640000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1C49 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x44656C6567617465206E6F742072656769737465726564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1C95 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x416C7265616479206861732064656C6567617465 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x1C8 SWAP3 SWAP2 SWAP1 PUSH2 0x1CEC PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND CALLER EQ ISZERO PUSH2 0x1BAA JUMP JUMPDEST PUSH2 0x1D4B PUSH2 0x1D35 PUSH1 0x4 PUSH2 0x1D27 PUSH1 0x2 PUSH2 0x1D10 PUSH2 0x1D0B PUSH1 0x6 PUSH2 0xC90 CALLER DUP6 PUSH2 0xB0F JUMP JUMPDEST PUSH2 0x1BF6 JUMP JUMPDEST PUSH2 0x1495 PUSH2 0x1D22 PUSH1 0x6 PUSH2 0xC90 DUP11 DUP6 PUSH2 0xB0F JUMP JUMPDEST PUSH2 0x1C42 JUMP JUMPDEST ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x1D45 PUSH2 0x15D4 PUSH2 0x1CB PUSH1 0x0 PUSH2 0xBCE JUMP JUMPDEST EQ PUSH2 0x1C8E JUMP JUMPDEST PUSH2 0x1EF5 JUMP JUMPDEST ISZERO PUSH2 0x1D57 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x506F7765722062656C6F77206D696E696D756D PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1D99 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x24B739BAB33334B1B4B2B73A103837BBB2B9 PUSH1 0x71 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1DDA JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43697263756C61722064656C65676174696F6E20646574656374656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0xDEA JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x5 PUSH2 0x19E4 PUSH1 0xA0 PUSH2 0x1B2 SWAP5 PUSH2 0x1E50 PUSH2 0x129A PUSH1 0x0 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x1E70 PUSH2 0x1E67 PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP8 ADD PUSH2 0x1253 JUMP JUMPDEST PUSH2 0x1E7E PUSH2 0x12C5 PUSH1 0x40 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1E8C PUSH2 0x12DC PUSH1 0x60 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x19DF PUSH2 0x1E9C PUSH1 0x80 DUP4 ADD MLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x4 DUP8 ADD PUSH2 0xD8B JUMP JUMPDEST SWAP1 PUSH2 0x1B2 SWAP2 PUSH2 0x1E2E JUMP JUMPDEST SWAP1 DUP2 SLOAD SWAP2 PUSH1 0x1 PUSH1 0x40 SHL DUP4 LT ISZERO PUSH2 0x8C2 JUMPI DUP3 PUSH2 0x1ED2 SWAP2 PUSH1 0x1 PUSH2 0x1B2 SWAP6 ADD DUP2 SSTORE PUSH2 0x19F5 JUMP JUMPDEST SWAP1 PUSH2 0x1804 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x60 DUP2 ADD SWAP4 SWAP3 PUSH2 0x1B2 SWAP3 SWAP1 SWAP2 PUSH1 0x40 SWAP2 PUSH2 0xE02 SWAP1 PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST POP SWAP1 PUSH2 0x1F0F PUSH2 0x1F07 PUSH2 0x1C8 PUSH1 0xF PUSH2 0x94B JUMP JUMPDEST DUP3 LT ISZERO PUSH2 0x1D50 JUMP JUMPDEST PUSH1 0x2 SWAP2 PUSH2 0x1F2F PUSH2 0x1F27 PUSH2 0x1C8 PUSH1 0x1 PUSH2 0xA06 CALLER DUP9 PUSH2 0xB0F JUMP JUMPDEST DUP4 GT ISZERO PUSH2 0x1D92 JUMP JUMPDEST PUSH2 0x1F44 PUSH2 0x1F3F PUSH2 0xE1D DUP4 CALLER PUSH2 0x2521 JUMP JUMPDEST PUSH2 0x1DD3 JUMP JUMPDEST PUSH2 0x204E PUSH1 0x8 PUSH2 0x203C DUP4 PUSH2 0x1F56 DUP4 PUSH2 0x94B JUMP JUMPDEST SWAP7 PUSH2 0x1F69 PUSH2 0x1F63 DUP10 PUSH2 0x1E1F JUMP JUMPDEST DUP6 PUSH2 0xDB0 JUMP JUMPDEST PUSH2 0x1FBE PUSH2 0x1F74 PUSH2 0x8DB JUMP JUMPDEST CALLER DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x1F91 DUP10 PUSH1 0x40 DUP4 ADD MSTORE JUMP JUMPDEST PUSH2 0x1F9C TIMESTAMP PUSH1 0x60 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x80 DUP3 ADD MSTORE PUSH2 0x1FAE DUP11 PUSH1 0xA0 DUP4 ADD MSTORE JUMP JUMPDEST PUSH2 0x1FB9 DUP11 PUSH1 0x3 PUSH2 0x92C JUMP JUMPDEST PUSH2 0x1EA5 JUMP JUMPDEST PUSH2 0x1FD5 DUP9 PUSH2 0x1FD0 PUSH2 0x1C8 CALLER PUSH1 0x4 PUSH2 0xB0F JUMP JUMPDEST PUSH2 0x1EAF JUMP JUMPDEST PUSH2 0x1FE5 DUP3 PUSH1 0x4 PUSH2 0x160B CALLER DUP6 PUSH2 0xB0F JUMP JUMPDEST PUSH2 0x2002 PUSH1 0x1 PUSH2 0x1FF4 CALLER DUP5 PUSH2 0xB0F JUMP JUMPDEST ADD PUSH2 0x1646 DUP10 PUSH2 0x167D DUP4 PUSH2 0x94B JUMP JUMPDEST PUSH2 0x201E DUP2 PUSH2 0x2010 DUP5 DUP3 PUSH2 0xB0F JUMP JUMPDEST ADD PUSH2 0x1646 DUP10 PUSH2 0x1641 DUP4 PUSH2 0x94B JUMP JUMPDEST PUSH2 0x2037 PUSH2 0x2030 PUSH1 0x5 PUSH2 0x30D DUP6 DUP6 PUSH2 0xB0F JUMP JUMPDEST CALLER SWAP1 PUSH2 0x1A28 JUMP JUMPDEST PUSH2 0xB0F JUMP JUMPDEST ADD PUSH2 0x1646 PUSH2 0x2049 DUP3 PUSH2 0x94B JUMP JUMPDEST PUSH2 0x1E1F JUMP JUMPDEST PUSH2 0x2057 CALLER PUSH2 0x24B1 JUMP JUMPDEST PUSH2 0x2060 DUP2 PUSH2 0x24B1 JUMP JUMPDEST PUSH2 0x2070 PUSH2 0x16F2 PUSH2 0x2049 PUSH1 0xA PUSH2 0x94B JUMP JUMPDEST PUSH32 0xFE35C70E4980D7DF0AFCCC73BB14C09D90B04287CD40B249A714D4033C285185 PUSH2 0x20B6 PUSH2 0x20A0 PUSH2 0x1736 CALLER PUSH2 0xB06 JUMP JUMPDEST SWAP4 PUSH2 0x20AA PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP8 TIMESTAMP SWAP2 DUP5 PUSH2 0x1ED8 JUMP JUMPDEST SUB SWAP1 LOG3 SWAP1 JUMP JUMPDEST PUSH2 0x1C8 SWAP2 SWAP1 PUSH1 0x0 PUSH2 0x1B8C JUMP JUMPDEST PUSH2 0x20D0 PUSH2 0x17E5 JUMP JUMPDEST SWAP1 PUSH1 0x0 DUP3 MSTORE PUSH1 0x20 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP11 ADD PUSH1 0x0 DUP2 MSTORE ADD PUSH1 0x0 DUP2 MSTORE ADD PUSH1 0x0 DUP2 MSTORE ADD PUSH1 0x0 DUP2 MSTORE ADD PUSH1 0x60 PUSH2 0x903 JUMP JUMPDEST PUSH2 0x1C8 PUSH2 0x20C8 JUMP JUMPDEST SWAP1 PUSH2 0x1B2 PUSH2 0x21C2 PUSH1 0x8 PUSH2 0x2115 PUSH2 0x17E5 JUMP JUMPDEST SWAP5 PUSH2 0x212A PUSH2 0x98E DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x2139 PUSH2 0xC55 PUSH1 0x1 DUP4 ADD PUSH2 0x94B JUMP JUMPDEST PUSH2 0x2148 PUSH2 0x9D1 PUSH1 0x2 DUP4 ADD PUSH2 0x94B JUMP JUMPDEST PUSH2 0x2157 PUSH2 0x9E7 PUSH1 0x3 DUP4 ADD PUSH2 0x94B JUMP JUMPDEST PUSH2 0x217E PUSH2 0x216E PUSH1 0x4 DUP4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x80 DUP9 ADD MSTORE JUMP JUMPDEST PUSH2 0x2194 PUSH2 0x218D PUSH1 0x5 DUP4 ADD PUSH2 0xAB5 JUMP JUMPDEST PUSH1 0xA0 DUP9 ADD MSTORE JUMP JUMPDEST PUSH2 0x21AC PUSH2 0x21A3 PUSH1 0x6 DUP4 ADD PUSH2 0x95E JUMP JUMPDEST ISZERO ISZERO PUSH1 0xC0 DUP9 ADD MSTORE JUMP JUMPDEST PUSH2 0xA06 PUSH2 0x21BB PUSH1 0x7 DUP4 ADD PUSH2 0x94B JUMP JUMPDEST PUSH1 0xE0 DUP9 ADD MSTORE JUMP JUMPDEST PUSH2 0x100 DUP5 ADD MSTORE JUMP JUMPDEST PUSH2 0x1C8 SWAP1 PUSH2 0x2104 JUMP JUMPDEST PUSH2 0x21EA PUSH2 0x1C8 SWAP2 PUSH2 0x21E2 PUSH2 0x20FC JUMP JUMPDEST POP PUSH1 0x2 PUSH2 0xB0F JUMP JUMPDEST PUSH2 0x21CA JUMP JUMPDEST PUSH2 0x1B2 SWAP1 PUSH2 0x21FB PUSH2 0x2250 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2206 DUP2 PUSH2 0xBCE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EQ PUSH2 0x222A JUMPI POP POP PUSH2 0x1B2 SWAP1 PUSH2 0x2291 JUMP JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH2 0x1B2 SWAP1 PUSH2 0x21EF JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SWAP1 PUSH2 0x2267 DUP3 PUSH2 0x15D4 JUMP JUMPDEST SUB PUSH2 0x226F JUMPI POP JUMP JUMPDEST PUSH4 0x118CDAA7 PUSH1 0xE0 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 MSTORE PUSH1 0x24 SUB PUSH1 0x0 REVERT JUMPDEST PUSH2 0x22BA PUSH2 0x22B4 PUSH2 0x22A9 PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x1B73 DUP5 PUSH1 0x0 PUSH2 0x1253 JUMP JUMPDEST SWAP2 PUSH2 0xB06 JUMP JUMPDEST SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH2 0x22E5 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x1751 JUMP JUMPDEST PUSH2 0x1D7 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x60 SHL SWAP1 JUMP JUMPDEST PUSH1 0x20 SWAP4 SWAP3 PUSH2 0x2317 PUSH1 0x14 DUP4 PUSH2 0x2317 DUP9 SWAP6 PUSH2 0x30D SWAP8 PUSH2 0x22EC JUMP JUMPDEST ADD SWAP2 DUP3 MSTORE JUMP JUMPDEST PUSH2 0x2348 SWAP2 SWAP1 PUSH2 0x233C PUSH2 0x232E PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP5 DUP6 SWAP4 PUSH1 0x20 DUP6 ADD SWAP4 DUP5 PUSH2 0x22FF JUMP JUMPDEST SWAP1 DUP2 SUB DUP3 MSTORE SUB DUP3 PUSH2 0x8A0 JUMP JUMPDEST PUSH2 0x235A PUSH2 0x2353 DUP3 MLOAD SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x1C8 PUSH1 0x2 PUSH2 0x91F JUMP JUMPDEST PUSH2 0x2372 PUSH1 0x1 PUSH2 0x94B JUMP JUMPDEST PUSH2 0x237A PUSH2 0x235E JUMP JUMPDEST SWAP1 DUP2 EQ PUSH2 0x238C JUMPI PUSH2 0x1B2 SWAP1 PUSH1 0x1 PUSH2 0xDB0 JUMP JUMPDEST PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH2 0x1C8 PUSH1 0x1 PUSH2 0x91F JUMP JUMPDEST PUSH2 0x1B2 PUSH2 0x23B3 PUSH2 0x239E JUMP JUMPDEST PUSH1 0x1 PUSH2 0xDB0 JUMP JUMPDEST SWAP1 PUSH2 0x1C8 SWAP2 SLOAD PUSH2 0x1897 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1B2 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x1A0F JUMP JUMPDEST DUP1 SLOAD DUP1 ISZERO PUSH2 0x240A JUMPI PUSH1 0x0 NOT ADD SWAP1 PUSH2 0x2407 PUSH2 0x2401 DUP4 DUP4 PUSH2 0x19F5 JUMP JUMPDEST SWAP1 PUSH2 0x23DB JUMP JUMPDEST SSTORE JUMP JUMPDEST PUSH2 0x23C5 JUMP JUMPDEST PUSH1 0x5 PUSH2 0x30D PUSH2 0x241F SWAP3 PUSH1 0x2 PUSH2 0xB0F JUMP JUMPDEST PUSH2 0x2429 PUSH1 0x0 PUSH2 0x91F JUMP JUMPDEST PUSH2 0x2434 PUSH2 0x1C8 DUP4 SLOAD SWAP1 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x24AC JUMPI PUSH2 0x244E PUSH2 0x2448 DUP3 DUP5 PUSH2 0x19F5 JUMP JUMPDEST SWAP1 PUSH2 0x23BA JUMP JUMPDEST PUSH2 0x2460 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x15D4 JUMP JUMPDEST EQ PUSH2 0x246D JUMPI PUSH1 0x1 ADD PUSH2 0x2429 JUMP JUMPDEST PUSH2 0x1B2 SWAP3 POP PUSH2 0x24A7 SWAP1 PUSH2 0x1A4B PUSH2 0x24A0 PUSH2 0x2448 PUSH2 0x249A PUSH2 0x248A DUP8 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x2494 PUSH1 0x1 PUSH2 0x91F JUMP JUMPDEST SWAP1 PUSH2 0x1574 JUMP JUMPDEST DUP7 PUSH2 0x19F5 JUMP JUMPDEST SWAP2 DUP5 PUSH2 0x19F5 JUMP JUMPDEST PUSH2 0x23E7 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x255D9FD63837B26DDECF40374F32676FD529F58ACCD2F1673335F6E04D0FE136 PUSH2 0x14C8 PUSH2 0x2517 PUSH2 0x1736 PUSH1 0x3 PUSH2 0xA06 DUP7 PUSH1 0x2 PUSH2 0x2037 PUSH2 0x2506 PUSH2 0x24F8 PUSH1 0x1 PUSH2 0xA06 DUP7 DUP7 PUSH2 0xB0F JUMP JUMPDEST PUSH2 0x1032 DUP5 PUSH2 0xA06 DUP8 DUP3 PUSH2 0xB0F JUMP JUMPDEST DUP6 PUSH2 0x2511 DUP6 DUP6 PUSH2 0xB0F JUMP JUMPDEST ADD PUSH2 0xDB0 JUMP JUMPDEST SWAP3 PUSH2 0x29C PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EQ PUSH2 0x25D7 JUMPI SWAP1 PUSH1 0x0 PUSH2 0x2548 PUSH1 0x0 PUSH2 0x91F JUMP JUMPDEST SWAP3 JUMPDEST PUSH1 0x2 SWAP1 PUSH2 0x255C PUSH1 0x4 PUSH2 0x1D27 DUP4 DUP6 PUSH2 0xB0F JUMP JUMPDEST PUSH2 0x256B PUSH2 0x15D4 PUSH2 0x1CB DUP7 PUSH2 0xBCE JUMP JUMPDEST EQ ISZERO DUP1 PUSH2 0x25C2 JUMPI JUMPDEST ISZERO PUSH2 0x25B8 JUMPI PUSH2 0x1D27 PUSH1 0x4 SWAP2 PUSH2 0x2587 SWAP4 PUSH2 0xB0F JUMP JUMPDEST SWAP3 DUP4 PUSH2 0x259B PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x15D4 JUMP JUMPDEST EQ PUSH2 0x25AF JUMPI PUSH2 0x25A9 SWAP1 PUSH2 0x1E1F JUMP JUMPDEST SWAP3 PUSH2 0x254A JUMP JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP POP POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH2 0x25D0 PUSH2 0x1C8 PUSH1 0xE PUSH2 0x94B JUMP JUMPDEST DUP6 LT PUSH2 0x2573 JUMP JUMPDEST POP POP PUSH1 0x1 SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE2 0x21 0xCA 0xEA DUP12 0x2D TSTORE DUP7 0xD6 PUSH28 0xD331FA077E08B9DD63055FB96B972FEDD8FDAFDA8B2564736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"415:14242:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::o;:::-;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;;;:::i;:::-;;:::o;:::-;-1:-1:-1;;;;;415:14242:9;;:::o;:::-;;;:::o;:::-;;;-1:-1:-1;;;;;415:14242:9;;;;;;;;;;;;;;;-1:-1:-1;;;;;415:14242:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;2089:28::-;;;;;:::i;415:14242::-;;;;;;;;:::i;:::-;;;;:::i;2052:30::-;;;;;:::i;415:14242::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;-1:-1:-1;;;;;415:14242:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;:::i;2164:33::-;;;;;:::i;415:14242::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;2021:24::-;;;;;:::i;415:14242::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;415:14242:9;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;:::i;:::-;;;:::i;:::-;;;-1:-1:-1;415:14242:9;;;-1:-1:-1;;;;;415:14242:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;1710:6:0;415:14242:9;-1:-1:-1;;;;;415:14242:9;;;;;;;;;;-1:-1:-1;;;;;415:14242:9;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;:::i;2124:33::-;;;;;:::i;415:14242::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;-1:-1:-1;;;;;415:14242:9;;;;;;;;;;;;;;;;-1:-1:-1;;;;;415:14242:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;415:14242:9;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;415:14242:9;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;415:14242:9:o;:::-;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;;;;415:14242:9;;;;-1:-1:-1;;;;;415:14242:9;;;;;;;;;;;-1:-1:-1;;;;;415:14242:9;;;;-1:-1:-1;;;;;415:14242:9;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;10897:138::-;11002:25;10995:32;10897:138;10965:17;;:::i;:::-;11002:25;:11;:25;:::i;:::-;10995:32;:::i;12736:105::-;12817:16;;;:::i;415:14242::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;-1:-1:-1;;;;;415:14242:9;;;;-1:-1:-1;;;;;415:14242:9;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;11877:114::-;11960:23;11967:16;11960:23;:::i;415:14242::-;;;;;-1:-1:-1;;;;;415:14242:9;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;12138:134::-;12241:23;12234:30;12138:134;12205:16;415:14242;;;12205:16;12241:23;:16;:23;:::i;:::-;12234:30;:::i;12955:107::-;13037:17;;;:::i;1500:62:0:-;;;:::i;:::-;1554:1;;:::i;415:14242:9:-;;;;;;;;;;;:::i;2293:101:0:-;2376:10;;2384:1;2376:10;:::i;:::-;;:::i;2293:101::-;;;:::i;415:14242:9:-;;;;;;;;;;;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;;;;415:14242:9;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;11180:139::-;11284:27;11277:34;11180:139;11251:13;415:14242;;;11251:13;11284:27;:14;:27;:::i;:::-;11277:34;:::i;1500:62:0:-;1554:1;1500:62;;;:::i;:::-;1554:1;:::i;415:14242:9:-;;;;:::o;:::-;;;-1:-1:-1;;;415:14242:9;;;;;;;;;;;;-1:-1:-1;;;415:14242:9;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;-1:-1:-1;;415:14242:9;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;9378:340;9609:33;9593:49;9378:340;9461:47;9469:13;9470:12;;;:::i;:::-;9469:13;;415:14242;9469:13;9461:47;:::i;:::-;9519:19;9534:4;9519:19;;:::i;:::-;9549:33;9567:15;9549:33;;:::i;:::-;9567:15;9609:33;:::i;:::-;9593:49;;:::i;:::-;9658:52;9679:15;;;:::i;:::-;9696:13;;;:::i;:::-;9658:52;;;415:14242;;;;9658:52;;;;;;:::i;:::-;;;;9378:340::o;:::-;;;;:::i;12482:142::-;12588:28;12482:142;12588:15;:28;12482:142;12564:4;415:14242;;;12564:4;12588:15;:8;:15;:::i;:::-;:28;:::i;:::-;;:::i;1500:62:0:-;;1554:1;1500:62;;;:::i;:::-;10216:248:9;10365:40;10416;10216:248;10365:40;;:::i;:::-;10416;;:::i;10216:248::-;;;;;:::i;1500:62:0:-;;;:::i;:::-;1554:1;;:::i;415:14242:9:-;;;;:::o;:::-;;;-1:-1:-1;;;415:14242:9;;;;;;;;;;;;-1:-1:-1;;;415:14242:9;;;;;;;9789:230;9847:42;9855:12;;;:::i;:::-;9847:42;:::i;:::-;9900:20;9915:5;9900:20;;:::i;:::-;9931:31;9947:15;9931:31;;:::i;:::-;9978:33;;9997:13;;;:::i;9789:230::-;;;:::i;415:14242::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;11475:295::-;11571:17;11587:1;11571:17;:::i;:::-;11604:13;;11659:3;11623:14;11619:38;11623:34;:27;;;;:::i;:::-;415:14242;;;11619:38;;;;;;11659:3;11688:27;:40;;:30;:27;;;11679:49;11688:27;;:::i;:::-;:30;:::i;:::-;:40;;;:::i;:::-;11679:49;;:::i;:::-;11659:3;415:14242;;;;11659:3;11604:13;;;11619:38;;;;;11475:295;:::o;415:14242::-;;;;:::o;:::-;;;-1:-1:-1;;;415:14242:9;;;;;;;;;;;;-1:-1:-1;;;415:14242:9;;;;;;;3061:130;;3182:1;3061:130;3116:55;3124:22;;:13;8251:10;3124:6;:13;:::i;:22::-;3116:55;:::i;:::-;3182:1;:::i;415:14242::-;;;;:::o;:::-;;;-1:-1:-1;;;415:14242:9;;;;;;;;;;;;-1:-1:-1;;;415:14242:9;;;;;;;3199:216;;3406:1;3199:216;3238:42;3246:12;;;:::i;3238:42::-;3299:34;3318:15;;;:::i;3299:34::-;:15;:34;;:70;;;3199:216;3291:104;;;:::i;:::-;3406:1;:::i;3299:70::-;3356:13;3291:104;3337:32;3356:13;;;:::i;3337:32::-;3299:15;3337:32;;3299:70;;;;415:14242;;;;:::o;:::-;;;-1:-1:-1;;;415:14242:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;415:14242:9;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;415:14242:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;415:14242:9;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;415:14242:9;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;:::i;:::-;;;;;-1:-1:-1;;;415:14242:9;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8152:1067;;9133:78;8152:1067;8306:79;8314:34;8315:33;;8324:10;8315:20;8324:10;8315:8;:20;:::i;8314:34::-;8306:79;:::i;:::-;8396:50;8404:9;8412:1;8404:9;:::i;:::-;;;;8396:50;:::i;:::-;9174:19;;8474:6;8457:76;8465:38;8474:29;;:18;8324:10;8474:18;;:::i;8465:38::-;;;;8457:76;:::i;:::-;9058:49;:18;8773:84;8819:20;;;:::i;:::-;8733:15;8324:10;;8773:84;:::i;:::-;8324:10;8600:334;8885:33;8324:10;8885:18;8324:10;8885:18;;:::i;:33::-;:37;;8412:1;8885:37;:::i;:::-;;415:14242;;8885:37;;8600:334;;;:::i;:::-;8324:10;415:14242;;8324:10;8600:334;;;;;415:14242;;8600:334;;;;;;415:14242;;8600:334;;8733:15;8600:334;;;415:14242;;8600:334;415:14242;;8600:334;;;415:14242;;8600:334;8955:41;:27;:32;:27;;:14;:27;:::i;:32::-;:41;:::i;:::-;9007:40;9043:4;9007:33;8324:10;9007:20;8324:10;8315:8;9007:20;:::i;:33::-;:40;:::i;:::-;8324:10;9058:18;;:::i;:::-;:31;8733:15;9058:31;;:49;:::i;9174:19::-;8324:10;9133:78;;8324:10;9133:78;:::i;:::-;;;415:14242;;;;9133:78;8733:15;;;;9133:78;;;:::i;:::-;;;;8152:1067::o;:::-;;;;;:::i;2466:103:3:-;2531:1;2466:103;;;:::i;:::-;2531:1;:::i;:::-;;;:::i;415:14242:9:-;;;;:::o;:::-;;;-1:-1:-1;;;415:14242:9;;;;;;;;;;;;-1:-1:-1;;;415:14242:9;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;415:14242:9;;;;;;;;;;;;-1:-1:-1;;;415:14242:9;;;;;;;;;;;;;;;;;:::o;:::-;;;;;-1:-1:-1;;415:14242:9;;:::o;7000:970::-;7917:13;7081:57;7113:25;;:11;:25;:::i;7081:57::-;7293:27;7315:5;7157:19;;;7149:53;7157:19;;;:::i;:::-;7149:53;:::i;:::-;7213:59;7221:15;;;;415:14242;-1:-1:-1;;;;;415:14242:9;;;7221:15;:29;7240:10;7221:29;;-1:-1:-1;;;;;415:14242:9;;;7221:29;;7213:59;:::i;7293:27::-;7552:39;:37;:21;7403:10;7315:5;7403:10;:::i;:::-;7373:40;:6;7240:10;7373:27;:18;7240:10;7373:18;;:::i;:::-;:27;:40;:::i;:::-;7485:56;7492:13;7525:16;7458;;;7424:50;7458:16;;;:::i;:::-;7424:50;7240:10;7424:18;7240:10;7424:18;;:::i;:::-;:30;:50;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;7525:16;:::i;:::-;7492:13;;;7485:56;7492:13;7485:21;7492:13;;415:14242;-1:-1:-1;;;;;415:14242:9;;;7492:13;7485:21;;:::i;:::-;:36;:56;;;;:::i;:::-;;:::i;:::-;415:14242;;-1:-1:-1;;;;;415:14242:9;7552:21;;:::i;:::-;:37;:39;;;;:::i;:::-;;:::i;:::-;7687:10;7672:13;;415:14242;-1:-1:-1;;;;;415:14242:9;;;7672:13;7240:10;7687;;:::i;:::-;7768;7240;7768;:::i;:::-;7807:13;;;415:14242;-1:-1:-1;;;;;415:14242:9;;;7807:13;;:::i;:::-;7842:19;;;;;:::i;:::-;;;:::i;:::-;415:14242;-1:-1:-1;;;;;415:14242:9;;;7917:13;7887:75;;;;7240:10;7887:75;:::i;:::-;;;:::i;:::-;;;415:14242;;;;7887:75;7946:15;;;;7887:75;;;:::i;:::-;;;;7000:970::o;:::-;;;;:::i;1500:62:0:-;;1554:1;1500:62;;;:::i;:::-;1554:1;:::i;415:14242:9:-;;;;:::o;:::-;;;-1:-1:-1;;;415:14242:9;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;415:14242:9;;;;;:::i;:::-;;;;:::i;:::-;;-1:-1:-1;;415:14242:9;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;-1:-1:-1;;;415:14242:9;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;;;;415:14242:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;;;;415:14242:9;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;415:14242:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;415:14242:9;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;-1:-1:-1;;;415:14242:9;;;;;;;;;;;;;;;:::i;:::-;;;:::i;4324:767::-;5037:46;;;4324:767;4407:60;4415:23;4416:22;;:13;;:6;:13;:::i;4415:23::-;4407:60;:::i;:::-;4912:24;4494:1;4478:50;4486:9;;;:::i;:::-;;;415:14242;4478:50;4573:318;4735:10;;;:::i;:::-;4573:318;4771:16;;;:::i;:::-;;4573:318;4771:16;;;:::i;:::-;4573:318;;;;;:::i;:::-;;;;415:14242;-1:-1:-1;;;;;415:14242:9;;;;4573:318;;;;;;415:14242;;4573:318;;;;;;415:14242;;4573:318;;;;;;415:14242;;4573:318;-1:-1:-1;;;;;415:14242:9;4573:318;;;415:14242;;4573:318;;;;415:14242;;4573:318;4812:4;4573:318;;;415:14242;4573:318;;;;;415:14242;;4573:318;;;;415:14242;;4573:318;4912:13;;4416:6;4912:13;:::i;:::-;:24;:::i;:::-;4947:28;:21;:16;:28;:::i;:::-;4986:25;;;;;;:::i;:::-;;;:::i;:::-;5037:46;:::i;:::-;;;415:14242;;;;4324:767;;;;;:::i;3061:130::-;;3182:1;3061:130;;3116:55;3124:22;;:13;5467:10;3124:6;:13;:::i;3116:55::-;3182:1;:::i;415:14242::-;;;;:::o;:::-;;;-1:-1:-1;;;415:14242:9;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;415:14242:9;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;415:14242:9;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;415:14242:9;;;;;;;;;;;;-1:-1:-1;;;415:14242:9;;;;;;;3423:346;3760:1;;3423:346;;3489:46;-1:-1:-1;;;;;415:14242:9;;5508:10;3497;;3489:46;:::i;:::-;3681:68;3689:21;;:12;3554:6;3546:58;3554:21;;:12;5508:10;3554:12;;:::i;:21::-;3546:58;:::i;:::-;3615:55;3623:19;;:10;;;;:::i;:19::-;3615:55;:::i;3689:12::-;:21;415:14242;-1:-1:-1;;;;;415:14242:9;;;3689:21;:35;;3714:10;3722:1;3714:10;:::i;3689:35::-;;3681:68;:::i;:::-;3760:1;:::i;415:14242::-;;;;:::o;:::-;;;-1:-1:-1;;;415:14242:9;;;;;;;;;;;;-1:-1:-1;;;415:14242:9;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;415:14242:9;;;;;;;;;;;;-1:-1:-1;;;415:14242:9;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;415:14242:9;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;415:14242:9;;;;;;;:::o;:::-;;;;;;;;;;;;-1:-1:-1;;;;;415:14242:9;;;;;;;;;;-1:-1:-1;;;;;415:14242:9;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;-1:-1:-1;;;415:14242:9;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;5343:1526;-1:-1:-1;5343:1526:9;5587:59;5595:27;5604:18;;;:::i;5595:27::-;;;;5587:59;:::i;:::-;5674:6;5681:10;5657:70;5665:39;5674:30;;:18;5681:10;5674:18;;:::i;5665:39::-;;;;5657:70;:::i;:::-;5738:82;5746:41;5747:40;5681:10;;5747:40;:::i;5746:41::-;5738:82;:::i;:::-;6526:34;:32;:16;5856:19;;;;:::i;:::-;;;;;;:::i;:::-;;;:::i;:::-;6170:41;5930:219;;:::i;:::-;5681:10;415:14242;;-1:-1:-1;;;;;415:14242:9;;5930:219;;;415:14242;5930:219;;;;;415:14242;;5930:219;;6052:15;5930:219;;;415:14242;;5930:219;6092:4;5930:219;;;415:14242;5930:219;;;;;415:14242;;5930:219;6170:25;;:11;:25;:::i;:::-;:41;:::i;:::-;6222:47;5681:10;6222:33;:28;5681:10;6222:16;:28;:::i;:33::-;:47;:::i;:::-;6322:38;5681:10;6222:16;6322:18;5681:10;6322:18;;:::i;:38::-;6371:39;6092:4;6371:18;5681:10;6371:18;;:::i;:::-;:30;:39;;;;;:::i;:::-;6421:40;:16;;;;;:::i;:::-;:31;:40;;;;;:::i;:::-;6472:43;:31;:26;:16;;;;:::i;:31::-;5681:10;6472:43;;:::i;:::-;6526:16;:::i;:::-;:32;:34;;;;:::i;:::-;;:::i;:::-;6630:10;5681;6630;:::i;:::-;6669:8;;;:::i;:::-;6699:19;;;;;:::i;:::-;6744:77;;;;5681:10;6744:77;:::i;:::-;;;415:14242;;;;6744:77;6052:15;;;;;6744:77;;;:::i;:::-;;;;5343:1526;:::o;:::-;5548:20;;5343:1526;415:14242;5548:20;:::i;415:14242::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;;;;415:14242:9;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;415:14242:9;;;;-1:-1:-1;;;;;415:14242:9;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;10634:109::-;10722:13;10715:20;10634:109;10690:12;;:::i;:::-;10722:13;:6;:13;:::i;:::-;10715:20;:::i;1500:62:0:-;1554:1;1500:62;;;:::i;:::-;2647:1;2639:10;;;:::i;:::-;-1:-1:-1;;;;;415:14242:9;;-1:-1:-1;;;;;415:14242:9;;2627:22:0;2623:91;;2742:8;;;;;:::i;2623:91::-;-1:-1:-1;;;2672:31:0;;-1:-1:-1;;;;;415:14242:9;2672:31:0;;;415:14242:9;;;;2543:215:0;;;;:::i;1796:162::-;1710:6;415:14242:9;-1:-1:-1;;;;;415:14242:9;735:10:1;;1855:23:0;735:10:1;1855:23:0;415:14242:9;1855:23:0;;1851:101;;1796:162;:::o;1851:101::-;-1:-1:-1;;;1901:40:0;;;;-1:-1:-1;;;;;415:14242:9;;;1901:40:0;415:14242:9;;1901:40:0;;;2912:187;3052:40;;3004:6;;415:14242:9;-1:-1:-1;;;;;415:14242:9;;;3004:6:0;3020:17;;;;:::i;3052:40::-;;;:::i;:::-;;;;415:14242:9;;;;3052:40:0;;;;415:14242:9;;;;-1:-1:-1;;;;;415:14242:9;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;9891:246:13:-;10066:36;;9891:246;10066:36;;415:14242:9;;;;10066:36:13;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;10056:47;;;415:14242:9;;;10056:47:13;;415:14242:9;;;;10056:47:13;;9891:246;:::o;1864:36:3:-;1899:1;;;:::i;2575:307::-;2702:7;;;:::i;:::-;2713;;:::i;:::-;2702:18;;;2698:86;;2858:17;;;;:::i;2698:86::-;-1:-1:-1;;;2743:30:3;;;;;;1901:40:0;1818::3;1857:1;;;:::i;2888:208::-;3068:21;3078:11;;:::i;:::-;3068:21;;:::i;415:14242:9:-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;415:14242:9;;;;;;;:::i;:::-;;;:::i;:::-;;:::o;:::-;;:::i;14259:395::-;14371:23;:13;14341:53;14259:395;14371:6;:13;:::i;14341:53::-;14410:13;14422:1;14410:13;:::i;:::-;14425:20;14429:16;;415:14242;;;14425:20;;;;;;14471:12;;;;;:::i;:::-;;;:::i;:::-;:24;-1:-1:-1;;;;;415:14242:9;;14471:24;415:14242;14471:24;;14467:169;;415:14242;;14410:13;;14467:169;14581:13;14541:16;;14516:46;14541:16;14516:12;14531:31;;14541:20;:16;;415:14242;;;14541:16;:20;14560:1;14541:20;:::i;:::-;;;:::i;:::-;14531:31;;:::i;:::-;14516:12;;;:::i;:46::-;14581:13;:::i;14425:20::-;;;;14259:395::o;13209:223::-;13369:55;;;13399:24;;:13;13297:6;;13270:83;13297:56;:25;;:13;;;;:::i;:25::-;13325:28;:13;;;;;:::i;13297:56::-;13270:13;;;;;:::i;:::-;:24;:83;:::i;13369:55::-;;;415:14242;;;;13632:458;;-1:-1:-1;;;;;415:14242:9;;-1:-1:-1;;;;;415:14242:9;;13730:10;13726:27;;13821:1;;13805:17;13821:1;13805:17;:::i;:::-;13843:207;;13850:6;:15;:24;;:15;;;;:::i;:24::-;:38;;13878:10;;;:::i;13850:38::-;;;:68;;;13843:207;13850:68;;;13945:15;:24;:15;:24;:15;;:::i;:24::-;13935:34;;13988:15;-1:-1:-1;;;;;415:14242:9;;13988:15;415:14242;13988:15;;13984:32;;14031:7;;;:::i;:::-;13843:207;;;13984:32;14005:11;;;;14012:4;14005:11;:::o;13850:68::-;;;;;;13821:1;13632:458;:::o;13850:68::-;13900:18;13892:26;13900:18;;;:::i;13892:26::-;;;13850:68;;13726:27;13742:11;;13749:4;13742:11;:::o"},"methodIdentifiers":{"createDelegation(address,uint256)":"ce52c4ef","endVotingSession()":"a7bfab16","getActiveDelegations()":"65d082be","getCandidateTotalVotes(uint256)":"abdd80a3","getCandidateVotes(uint256)":"866163c0","getDelegation(uint256)":"0dd35701","getRegisteredVoters()":"2bc4a6e7","getTotalVotingPower()":"11acc1a7","getVoter(address)":"d4f50f98","getVoterDelegations(address)":"4f1b4972","hasVoterVoted(address,uint256)":"9b541f76","maxDelegationDepth()":"cd8e0903","minDelegationPower()":"36dab678","owner()":"8da5cb5b","registerVoter(address,uint256)":"cbea81ef","renounceOwnership()":"715018a6","revokeDelegation(uint256)":"bd3d425d","startVotingSession(uint256)":"9980a55a","transferOwnership(address)":"f2fde38b","updateDelegationParameters(uint256,uint256)":"a288210c","vote(uint256,uint256)":"b384abef","votingActive()":"408e2727","votingEndTime()":"1ea736e0","votingStartTime()":"2019a608"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_maxDelegationDepth\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minDelegationPower\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newTotalPower\",\"type\":\"uint256\"}],\"name\":\"DelegationChainUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"power\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"delegationId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"DelegationCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"delegationId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"DelegationRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"candidateId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"powerUsed\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isDelegated\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"VoteCast\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"power\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"VoterRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"}],\"name\":\"VotingSessionEnded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"}],\"name\":\"VotingSessionStarted\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"power\",\"type\":\"uint256\"}],\"name\":\"createDelegation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"delegationId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"endVotingSession\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getActiveDelegations\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"candidateId\",\"type\":\"uint256\"}],\"name\":\"getCandidateTotalVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"candidateId\",\"type\":\"uint256\"}],\"name\":\"getCandidateVotes\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"candidateId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"powerUsed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"voteHash\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"isDelegated\",\"type\":\"bool\"}],\"internalType\":\"struct LiquidDemocracy.Vote[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"delegationId\",\"type\":\"uint256\"}],\"name\":\"getDelegation\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"power\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"delegationId\",\"type\":\"uint256\"}],\"internalType\":\"struct LiquidDemocracy.Delegation\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRegisteredVoters\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalVotingPower\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"}],\"name\":\"getVoter\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"voterAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"votingPower\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"delegatedPower\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalPower\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"delegates\",\"type\":\"address[]\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"lastVoteTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"delegationCount\",\"type\":\"uint256\"}],\"internalType\":\"struct LiquidDemocracy.Voter\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"}],\"name\":\"getVoterDelegations\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"candidateId\",\"type\":\"uint256\"}],\"name\":\"hasVoterVoted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxDelegationDepth\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minDelegationPower\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"power\",\"type\":\"uint256\"}],\"name\":\"registerVoter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"delegationId\",\"type\":\"uint256\"}],\"name\":\"revokeDelegation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"durationSeconds\",\"type\":\"uint256\"}],\"name\":\"startVotingSession\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_maxDelegationDepth\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minDelegationPower\",\"type\":\"uint256\"}],\"name\":\"updateDelegationParameters\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"candidateId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"power\",\"type\":\"uint256\"}],\"name\":\"vote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"votingActive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"votingEndTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"votingStartTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implements liquid democracy with vote delegation capabilities\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{\"createDelegation(address,uint256)\":{\"details\":\"Creates a delegation from one voter to another\",\"params\":{\"delegate\":\"The address to delegate to\",\"power\":\"The amount of power to delegate\"},\"returns\":{\"delegationId\":\"The ID of the created delegation\"}},\"endVotingSession()\":{\"details\":\"Ends the current voting session\"},\"getActiveDelegations()\":{\"details\":\"Gets active delegations count\",\"returns\":{\"_0\":\"Number of active delegations\"}},\"getCandidateTotalVotes(uint256)\":{\"details\":\"Gets total votes for a candidate\",\"params\":{\"candidateId\":\"The candidate ID\"},\"returns\":{\"_0\":\"Total voting power used\"}},\"getCandidateVotes(uint256)\":{\"details\":\"Gets all votes for a candidate\",\"params\":{\"candidateId\":\"The candidate ID\"},\"returns\":{\"_0\":\"Array of votes\"}},\"getDelegation(uint256)\":{\"details\":\"Gets delegation information\",\"params\":{\"delegationId\":\"The delegation ID\"},\"returns\":{\"_0\":\"The delegation structure\"}},\"getRegisteredVoters()\":{\"details\":\"Gets all registered voters\",\"returns\":{\"_0\":\"Array of voter addresses\"}},\"getTotalVotingPower()\":{\"details\":\"Gets total voting power in the system\",\"returns\":{\"_0\":\"Total voting power\"}},\"getVoter(address)\":{\"details\":\"Gets voter information\",\"params\":{\"voter\":\"The voter address\"},\"returns\":{\"_0\":\"The voter structure\"}},\"getVoterDelegations(address)\":{\"details\":\"Gets delegations for a voter\",\"params\":{\"voter\":\"The voter address\"},\"returns\":{\"_0\":\"Array of delegation IDs\"}},\"hasVoterVoted(address,uint256)\":{\"details\":\"Checks if a voter has voted for a candidate\",\"params\":{\"candidateId\":\"The candidate ID\",\"voter\":\"The voter address\"},\"returns\":{\"_0\":\"Whether the voter has voted\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"registerVoter(address,uint256)\":{\"details\":\"Registers a new voter with base voting power\",\"params\":{\"power\":\"The base voting power\",\"voter\":\"The voter address\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"revokeDelegation(uint256)\":{\"details\":\"Revokes an active delegation\",\"params\":{\"delegationId\":\"The ID of the delegation to revoke\"}},\"startVotingSession(uint256)\":{\"details\":\"Starts a voting session\",\"params\":{\"durationSeconds\":\"Duration of the voting session\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"updateDelegationParameters(uint256,uint256)\":{\"details\":\"Updates delegation parameters\",\"params\":{\"_maxDelegationDepth\":\"New maximum delegation depth\",\"_minDelegationPower\":\"New minimum delegation power\"}},\"vote(uint256,uint256)\":{\"details\":\"Casts a vote using available voting power\",\"params\":{\"candidateId\":\"The candidate to vote for\",\"power\":\"The amount of power to use\"}}},\"title\":\"LiquidDemocracy\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Allows voters to delegate their voting power to trusted representatives\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LiquidDemocracy.sol\":\"LiquidDemocracy\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]},\"@openzeppelin/contracts/utils/cryptography/Hashes.sol\":{\"keccak256\":\"0x8cbd338f083224b4b6f0ff42cbda641a0a6c31ffcdca197452b97fe4d0918269\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f517dec5ba0c6491395acbf7f1d621f4e89e8f218bf5303c867b1c5ad70c6b11\",\"dweb:/ipfs/QmWmXHRLEw8W6ckth7NyYTU88YfvuS7xSsfae5ksL8qNUe\"]},\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":{\"keccak256\":\"0x36a0c409c437a753cac9b92b75f93b0fbe92803bf2c8ff1517e54b247f166134\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f91ba472de411aa557cdbf6560c40750d87bd11c9060bc04d2ba7119af9d5a6\",\"dweb:/ipfs/QmQjtYo2i7dDvzCEzZ67bDoNSG4RrwMoxPWuqFmX5Xzpuw\"]},\"contracts/LiquidDemocracy.sol\":{\"keccak256\":\"0x817da06df3754cc4b8537ddb2991a35a490fed790ee397d9e4f5a5a4656dbf5b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5405c851eb6f843334b750ccbaf694ef58ebad45fa91d70c5586fa09bb06958a\",\"dweb:/ipfs/QmREYbkHqnxd46SdzqpNJWVy8t9p6xb4qmeTfh2XGZJAG5\"]},\"contracts/libraries/CryptographicUtils.sol\":{\"keccak256\":\"0x2e560c193276ecc57c28132eee00e6f4d47c44baf4914a66e106947b97799ca0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e5505a80a71dd6846807c2dcb931b7856b3a06374614314a656eff73c530e8a8\",\"dweb:/ipfs/QmfSEFaxFN7BFoV3e3zsVSRAZbUccFfobzbsZriZoKNNj7\"]}},\"version\":1}"}},"contracts/Lock.sol":{"Lock":{"abi":[{"inputs":[{"internalType":"uint256","name":"_unlockTime","type":"uint256"}],"stateMutability":"payable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"when","type":"uint256"}],"name":"Withdrawal","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address payable","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"unlockTime","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"abi_decode_t_uint256_fromMemory":{"entryPoint":124,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_uint256_fromMemory":{"entryPoint":130,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_stringliteral_f6fa":{"entryPoint":183,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_f6fa9918d4578fba07be58c41841a4c6937c19725f7f4601884cd186799a8413":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_memory":{"entryPoint":97,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_storeLengthForEncoding_string":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_uint160":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"constructor_Lock":{"entryPoint":430,"id":4892,"parameterSlots":1,"returnSlots":0},"convert_address_to_address_payable":{"entryPoint":383,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint160_to_address_payable":{"entryPoint":374,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint160_to_uint160":{"entryPoint":342,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint256_to_uint256":{"entryPoint":302,"id":null,"parameterSlots":1,"returnSlots":1},"copy_arguments_for_constructor_object_Lock":{"entryPoint":153,"id":null,"parameterSlots":0,"returnSlots":1},"finalize_allocation":{"entryPoint":59,"id":null,"parameterSlots":2,"returnSlots":0},"panic_error_0x41":{"entryPoint":37,"id":null,"parameterSlots":0,"returnSlots":0},"require_helper_stringliteral_f6fa":{"entryPoint":250,"id":null,"parameterSlots":1,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_f6fa9918d4578fba07be58c41841a4c6937c19725f7f4601884cd186799a8413":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"update_byte_slice_shift":{"entryPoint":286,"id":null,"parameterSlots":2,"returnSlots":1},"update_byte_slice_shift_0":{"entryPoint":392,"id":null,"parameterSlots":2,"returnSlots":1},"update_storage_value_offset_address_payable_to_address_payable":{"entryPoint":407,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offset_uint256_to_uint256":{"entryPoint":315,"id":null,"parameterSlots":2,"returnSlots":0},"validator_revert_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[],"linkReferences":{},"object":"608060405261001461000f610099565b6101ae565b60405161032f6101d8823961032f90f35b634e487b7160e01b600052604160045260246000fd5b90601f01601f191681019081106001600160401b0382111761005c57604052565b610025565b9061007561006e60405190565b928361003b565b565b600080fd5b90505190565b90602082820312610077576100969161007c565b90565b610096610507803803806100ac81610061565b928339810190610082565b60208082526023908201527f556e6c6f636b2074696d652073686f756c6420626520696e207468652066757460408201526275726560e81b606082015260800190565b1561010157565b60405162461bcd60e51b81528061011a600482016100b7565b0390fd5b90600019905b9181191691161790565b6100966100966100969290565b9061014b6100966101529261012e565b825461011e565b9055565b6100969061016a906001600160a01b031682565b6001600160a01b031690565b61009690610156565b61009690610176565b906001600160a01b0390610124565b906101a76100966101529261017f565b8254610188565b6101c4906101bd8142106100fa565b600061013b565b6100756101d03361017f565b600161019756fe6080604052600436101561001257600080fd5b60003560e01c8063251c1aa3146100425780633ccfd60b1461003d57638da5cb5b0361004757610112565b6100b0565b610081565b600080fd5b600091031261004757565b610062916008021c81565b90565b906100629154610057565b610062600080610065565b9052565b565b346100475761009136600461004c565b6100ac61009c610070565b6040519182918290815260200190565b0390f35b34610047576100c036600461004c565b6100c8610244565b604051005b610062916008021c5b6001600160a01b031690565b9061006291546100cd565b610062600060016100e2565b61007b906100d6565b60208101929161007f91906100f9565b346100475761012236600461004c565b6100ac61012d6100ed565b60405191829182610102565b6100629081565b6100629054610139565b602080825260169082015275165bdd4818d85b89dd081dda5d1a191c985dc81e595d60521b604082015260600190565b1561018157565b60405162461bcd60e51b81528061019a6004820161014a565b0390fd5b610062906100d6565b610062905461019e565b610062906100d6906001600160a01b031682565b610062906101b1565b610062906101c5565b6020808252601490820152732cb7ba9030b932b713ba103a34329037bbb732b960611b604082015260600190565b1561020c57565b60405162461bcd60e51b81528061019a600482016101d7565b90815260408101929161007f9160200152565b6040513d6000823e3d90fd5b61025c6102546100626000610140565b42101561017a565b61028061027161026c60016101a7565b6101ce565b61027a336100d6565b14610205565b600080808061028e306101ce565b7fbf2ed60bd5b5965d685680c01195c9514e4382e28e3a5a2d2d5244bf59411b936102c882316102bd60405190565b918291429083610225565b0390a16102d861026c60016101a7565b9031908282156102f0575bf1156102eb57565b610238565b506108fc6102e356fea264697066735822122027f92652939f88551fe25c51b98a307089373eace2091af21088ee2bf55c63f064736f6c634300081c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH2 0x14 PUSH2 0xF PUSH2 0x99 JUMP JUMPDEST PUSH2 0x1AE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x32F PUSH2 0x1D8 DUP3 CODECOPY PUSH2 0x32F SWAP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x5C JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x25 JUMP JUMPDEST SWAP1 PUSH2 0x75 PUSH2 0x6E PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 PUSH2 0x3B JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 POP MLOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x77 JUMPI PUSH2 0x96 SWAP2 PUSH2 0x7C JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x96 PUSH2 0x507 DUP1 CODESIZE SUB DUP1 PUSH2 0xAC DUP2 PUSH2 0x61 JUMP JUMPDEST SWAP3 DUP4 CODECOPY DUP2 ADD SWAP1 PUSH2 0x82 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x23 SWAP1 DUP3 ADD MSTORE PUSH32 0x556E6C6F636B2074696D652073686F756C6420626520696E2074686520667574 PUSH1 0x40 DUP3 ADD MSTORE PUSH3 0x757265 PUSH1 0xE8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x101 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 PUSH2 0x11A PUSH1 0x4 DUP3 ADD PUSH2 0xB7 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 NOT SWAP1 JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST PUSH2 0x96 PUSH2 0x96 PUSH2 0x96 SWAP3 SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x14B PUSH2 0x96 PUSH2 0x152 SWAP3 PUSH2 0x12E JUMP JUMPDEST DUP3 SLOAD PUSH2 0x11E JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x96 SWAP1 PUSH2 0x16A SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x96 SWAP1 PUSH2 0x156 JUMP JUMPDEST PUSH2 0x96 SWAP1 PUSH2 0x176 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH2 0x124 JUMP JUMPDEST SWAP1 PUSH2 0x1A7 PUSH2 0x96 PUSH2 0x152 SWAP3 PUSH2 0x17F JUMP JUMPDEST DUP3 SLOAD PUSH2 0x188 JUMP JUMPDEST PUSH2 0x1C4 SWAP1 PUSH2 0x1BD DUP2 TIMESTAMP LT PUSH2 0xFA JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13B JUMP JUMPDEST PUSH2 0x75 PUSH2 0x1D0 CALLER PUSH2 0x17F JUMP JUMPDEST PUSH1 0x1 PUSH2 0x197 JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x251C1AA3 EQ PUSH2 0x42 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x3D JUMPI PUSH4 0x8DA5CB5B SUB PUSH2 0x47 JUMPI PUSH2 0x112 JUMP JUMPDEST PUSH2 0xB0 JUMP JUMPDEST PUSH2 0x81 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 SUB SLT PUSH2 0x47 JUMPI JUMP JUMPDEST PUSH2 0x62 SWAP2 PUSH1 0x8 MUL SHR DUP2 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x62 SWAP2 SLOAD PUSH2 0x57 JUMP JUMPDEST PUSH2 0x62 PUSH1 0x0 DUP1 PUSH2 0x65 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST JUMP JUMPDEST CALLVALUE PUSH2 0x47 JUMPI PUSH2 0x91 CALLDATASIZE PUSH1 0x4 PUSH2 0x4C JUMP JUMPDEST PUSH2 0xAC PUSH2 0x9C PUSH2 0x70 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x47 JUMPI PUSH2 0xC0 CALLDATASIZE PUSH1 0x4 PUSH2 0x4C JUMP JUMPDEST PUSH2 0xC8 PUSH2 0x244 JUMP JUMPDEST PUSH1 0x40 MLOAD STOP JUMPDEST PUSH2 0x62 SWAP2 PUSH1 0x8 MUL SHR JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x62 SWAP2 SLOAD PUSH2 0xCD JUMP JUMPDEST PUSH2 0x62 PUSH1 0x0 PUSH1 0x1 PUSH2 0xE2 JUMP JUMPDEST PUSH2 0x7B SWAP1 PUSH2 0xD6 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD SWAP3 SWAP2 PUSH2 0x7F SWAP2 SWAP1 PUSH2 0xF9 JUMP JUMPDEST CALLVALUE PUSH2 0x47 JUMPI PUSH2 0x122 CALLDATASIZE PUSH1 0x4 PUSH2 0x4C JUMP JUMPDEST PUSH2 0xAC PUSH2 0x12D PUSH2 0xED JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x102 JUMP JUMPDEST PUSH2 0x62 SWAP1 DUP2 JUMP JUMPDEST PUSH2 0x62 SWAP1 SLOAD PUSH2 0x139 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x16 SWAP1 DUP3 ADD MSTORE PUSH22 0x165BDD4818D85B89DD081DDA5D1A191C985DC81E595D PUSH1 0x52 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x181 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 PUSH2 0x19A PUSH1 0x4 DUP3 ADD PUSH2 0x14A JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x62 SWAP1 PUSH2 0xD6 JUMP JUMPDEST PUSH2 0x62 SWAP1 SLOAD PUSH2 0x19E JUMP JUMPDEST PUSH2 0x62 SWAP1 PUSH2 0xD6 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 JUMP JUMPDEST PUSH2 0x62 SWAP1 PUSH2 0x1B1 JUMP JUMPDEST PUSH2 0x62 SWAP1 PUSH2 0x1C5 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x14 SWAP1 DUP3 ADD MSTORE PUSH20 0x2CB7BA9030B932B713BA103A34329037BBB732B9 PUSH1 0x61 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x20C JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 PUSH2 0x19A PUSH1 0x4 DUP3 ADD PUSH2 0x1D7 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP2 ADD SWAP3 SWAP2 PUSH2 0x7F SWAP2 PUSH1 0x20 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x25C PUSH2 0x254 PUSH2 0x62 PUSH1 0x0 PUSH2 0x140 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x17A JUMP JUMPDEST PUSH2 0x280 PUSH2 0x271 PUSH2 0x26C PUSH1 0x1 PUSH2 0x1A7 JUMP JUMPDEST PUSH2 0x1CE JUMP JUMPDEST PUSH2 0x27A CALLER PUSH2 0xD6 JUMP JUMPDEST EQ PUSH2 0x205 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 PUSH2 0x28E ADDRESS PUSH2 0x1CE JUMP JUMPDEST PUSH32 0xBF2ED60BD5B5965D685680C01195C9514E4382E28E3A5A2D2D5244BF59411B93 PUSH2 0x2C8 DUP3 BALANCE PUSH2 0x2BD PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP2 DUP3 SWAP2 TIMESTAMP SWAP1 DUP4 PUSH2 0x225 JUMP JUMPDEST SUB SWAP1 LOG1 PUSH2 0x2D8 PUSH2 0x26C PUSH1 0x1 PUSH2 0x1A7 JUMP JUMPDEST SWAP1 BALANCE SWAP1 DUP3 DUP3 ISZERO PUSH2 0x2F0 JUMPI JUMPDEST CALL ISZERO PUSH2 0x2EB JUMPI JUMP JUMPDEST PUSH2 0x238 JUMP JUMPDEST POP PUSH2 0x8FC PUSH2 0x2E3 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x27 0xF9 0x26 MSTORE SWAP4 SWAP16 DUP9 SSTORE 0x1F 0xE2 TLOAD MLOAD 0xB9 DUP11 ADDRESS PUSH17 0x89373EACE2091AF21088EE2BF55C63F064 PUSH20 0x6F6C634300081C00330000000000000000000000 ","sourceMap":"141:866:10:-:0;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;141:866:10;;;;;;-1:-1:-1;;;;;141:866:10;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;;141:866:10;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;141:866:10;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;141:866:10;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;-1:-1:-1;;;;;141:866:10;;;;-1:-1:-1;;;;;141:866:10;;;;;;;:::i;:::-;;;;:::i;:::-;;-1:-1:-1;;;;;141:866:10;;;;;;;;;;:::i;:::-;;;;:::i;271:238::-;441:24;;319:111;271:238;340:15;:29;319:111;:::i;:::-;441:24;;:::i;:::-;475:27;483:19;491:10;483:19;:::i;:::-;475:27;;:::i"},"deployedBytecode":{"functionDebugData":{"abi_decode":{"entryPoint":76,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_address_payable":{"entryPoint":258,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_address_payable_to_address_payable":{"entryPoint":249,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_stringliteral_09be":{"entryPoint":330,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_09be2a1d7c98765b8c1bd9ab3700b54ab19d501eebe572af39b71382f17d12e8":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_345d":{"entryPoint":471,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_345d93c1110e55177ee5f687f392a2e775da2aa3d491c8308e925f0505e3530a":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_uint256_to_uint256":{"entryPoint":123,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_uint256_uint256":{"entryPoint":549,"id":null,"parameterSlots":3,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_storeLengthForEncoding_string":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_address_payable":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_from_storage_address_payable":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_from_storage_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_address_payable_to_address":{"entryPoint":462,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint160_to_address":{"entryPoint":453,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint160_to_uint160":{"entryPoint":433,"id":null,"parameterSlots":1,"returnSlots":1},"external_fun_owner":{"entryPoint":274,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_unlockTime":{"entryPoint":129,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_withdraw":{"entryPoint":176,"id":null,"parameterSlots":0,"returnSlots":0},"extract_from_storage_value_dynamict_address_payable":{"entryPoint":205,"id":null,"parameterSlots":2,"returnSlots":1},"extract_from_storage_value_dynamict_uint256":{"entryPoint":87,"id":null,"parameterSlots":2,"returnSlots":1},"extract_from_storage_value_offset_address_payable":{"entryPoint":414,"id":null,"parameterSlots":1,"returnSlots":1},"extract_from_storage_value_offset_uint256":{"entryPoint":313,"id":null,"parameterSlots":1,"returnSlots":1},"fun_withdraw":{"entryPoint":580,"id":4932,"parameterSlots":0,"returnSlots":0},"getter_fun_owner":{"entryPoint":237,"id":4860,"parameterSlots":0,"returnSlots":1},"getter_fun_unlockTime":{"entryPoint":112,"id":4858,"parameterSlots":0,"returnSlots":1},"read_from_storage_split_dynamic_address_payable":{"entryPoint":226,"id":null,"parameterSlots":2,"returnSlots":1},"read_from_storage_split_dynamic_uint256":{"entryPoint":101,"id":null,"parameterSlots":2,"returnSlots":1},"read_from_storage_split_offset_address_payable":{"entryPoint":423,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_split_offset_uint256":{"entryPoint":320,"id":null,"parameterSlots":1,"returnSlots":1},"require_helper_stringliteral_09be":{"entryPoint":378,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_345d":{"entryPoint":517,"id":null,"parameterSlots":1,"returnSlots":0},"revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb":{"entryPoint":71,"id":null,"parameterSlots":0,"returnSlots":0},"revert_forward":{"entryPoint":568,"id":null,"parameterSlots":0,"returnSlots":0},"shift_right_0_unsigned":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_right_unsigned":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"store_literal_in_memory_09be2a1d7c98765b8c1bd9ab3700b54ab19d501eebe572af39b71382f17d12e8":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_345d93c1110e55177ee5f687f392a2e775da2aa3d491c8308e925f0505e3530a":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080604052600436101561001257600080fd5b60003560e01c8063251c1aa3146100425780633ccfd60b1461003d57638da5cb5b0361004757610112565b6100b0565b610081565b600080fd5b600091031261004757565b610062916008021c81565b90565b906100629154610057565b610062600080610065565b9052565b565b346100475761009136600461004c565b6100ac61009c610070565b6040519182918290815260200190565b0390f35b34610047576100c036600461004c565b6100c8610244565b604051005b610062916008021c5b6001600160a01b031690565b9061006291546100cd565b610062600060016100e2565b61007b906100d6565b60208101929161007f91906100f9565b346100475761012236600461004c565b6100ac61012d6100ed565b60405191829182610102565b6100629081565b6100629054610139565b602080825260169082015275165bdd4818d85b89dd081dda5d1a191c985dc81e595d60521b604082015260600190565b1561018157565b60405162461bcd60e51b81528061019a6004820161014a565b0390fd5b610062906100d6565b610062905461019e565b610062906100d6906001600160a01b031682565b610062906101b1565b610062906101c5565b6020808252601490820152732cb7ba9030b932b713ba103a34329037bbb732b960611b604082015260600190565b1561020c57565b60405162461bcd60e51b81528061019a600482016101d7565b90815260408101929161007f9160200152565b6040513d6000823e3d90fd5b61025c6102546100626000610140565b42101561017a565b61028061027161026c60016101a7565b6101ce565b61027a336100d6565b14610205565b600080808061028e306101ce565b7fbf2ed60bd5b5965d685680c01195c9514e4382e28e3a5a2d2d5244bf59411b936102c882316102bd60405190565b918291429083610225565b0390a16102d861026c60016101a7565b9031908282156102f0575bf1156102eb57565b610238565b506108fc6102e356fea264697066735822122027f92652939f88551fe25c51b98a307089373eace2091af21088ee2bf55c63f064736f6c634300081c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x251C1AA3 EQ PUSH2 0x42 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x3D JUMPI PUSH4 0x8DA5CB5B SUB PUSH2 0x47 JUMPI PUSH2 0x112 JUMP JUMPDEST PUSH2 0xB0 JUMP JUMPDEST PUSH2 0x81 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 SUB SLT PUSH2 0x47 JUMPI JUMP JUMPDEST PUSH2 0x62 SWAP2 PUSH1 0x8 MUL SHR DUP2 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x62 SWAP2 SLOAD PUSH2 0x57 JUMP JUMPDEST PUSH2 0x62 PUSH1 0x0 DUP1 PUSH2 0x65 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST JUMP JUMPDEST CALLVALUE PUSH2 0x47 JUMPI PUSH2 0x91 CALLDATASIZE PUSH1 0x4 PUSH2 0x4C JUMP JUMPDEST PUSH2 0xAC PUSH2 0x9C PUSH2 0x70 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x47 JUMPI PUSH2 0xC0 CALLDATASIZE PUSH1 0x4 PUSH2 0x4C JUMP JUMPDEST PUSH2 0xC8 PUSH2 0x244 JUMP JUMPDEST PUSH1 0x40 MLOAD STOP JUMPDEST PUSH2 0x62 SWAP2 PUSH1 0x8 MUL SHR JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x62 SWAP2 SLOAD PUSH2 0xCD JUMP JUMPDEST PUSH2 0x62 PUSH1 0x0 PUSH1 0x1 PUSH2 0xE2 JUMP JUMPDEST PUSH2 0x7B SWAP1 PUSH2 0xD6 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD SWAP3 SWAP2 PUSH2 0x7F SWAP2 SWAP1 PUSH2 0xF9 JUMP JUMPDEST CALLVALUE PUSH2 0x47 JUMPI PUSH2 0x122 CALLDATASIZE PUSH1 0x4 PUSH2 0x4C JUMP JUMPDEST PUSH2 0xAC PUSH2 0x12D PUSH2 0xED JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x102 JUMP JUMPDEST PUSH2 0x62 SWAP1 DUP2 JUMP JUMPDEST PUSH2 0x62 SWAP1 SLOAD PUSH2 0x139 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x16 SWAP1 DUP3 ADD MSTORE PUSH22 0x165BDD4818D85B89DD081DDA5D1A191C985DC81E595D PUSH1 0x52 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x181 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 PUSH2 0x19A PUSH1 0x4 DUP3 ADD PUSH2 0x14A JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x62 SWAP1 PUSH2 0xD6 JUMP JUMPDEST PUSH2 0x62 SWAP1 SLOAD PUSH2 0x19E JUMP JUMPDEST PUSH2 0x62 SWAP1 PUSH2 0xD6 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 JUMP JUMPDEST PUSH2 0x62 SWAP1 PUSH2 0x1B1 JUMP JUMPDEST PUSH2 0x62 SWAP1 PUSH2 0x1C5 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x14 SWAP1 DUP3 ADD MSTORE PUSH20 0x2CB7BA9030B932B713BA103A34329037BBB732B9 PUSH1 0x61 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x20C JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 PUSH2 0x19A PUSH1 0x4 DUP3 ADD PUSH2 0x1D7 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP2 ADD SWAP3 SWAP2 PUSH2 0x7F SWAP2 PUSH1 0x20 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x25C PUSH2 0x254 PUSH2 0x62 PUSH1 0x0 PUSH2 0x140 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x17A JUMP JUMPDEST PUSH2 0x280 PUSH2 0x271 PUSH2 0x26C PUSH1 0x1 PUSH2 0x1A7 JUMP JUMPDEST PUSH2 0x1CE JUMP JUMPDEST PUSH2 0x27A CALLER PUSH2 0xD6 JUMP JUMPDEST EQ PUSH2 0x205 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 PUSH2 0x28E ADDRESS PUSH2 0x1CE JUMP JUMPDEST PUSH32 0xBF2ED60BD5B5965D685680C01195C9514E4382E28E3A5A2D2D5244BF59411B93 PUSH2 0x2C8 DUP3 BALANCE PUSH2 0x2BD PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP2 DUP3 SWAP2 TIMESTAMP SWAP1 DUP4 PUSH2 0x225 JUMP JUMPDEST SUB SWAP1 LOG1 PUSH2 0x2D8 PUSH2 0x26C PUSH1 0x1 PUSH2 0x1A7 JUMP JUMPDEST SWAP1 BALANCE SWAP1 DUP3 DUP3 ISZERO PUSH2 0x2F0 JUMPI JUMPDEST CALL ISZERO PUSH2 0x2EB JUMPI JUMP JUMPDEST PUSH2 0x238 JUMP JUMPDEST POP PUSH2 0x8FC PUSH2 0x2E3 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x27 0xF9 0x26 MSTORE SWAP4 SWAP16 DUP9 SSTORE 0x1F 0xE2 TLOAD MLOAD 0xB9 DUP11 ADDRESS PUSH17 0x89373EACE2091AF21088EE2BF55C63F064 PUSH20 0x6F6C634300081C00330000000000000000000000 ","sourceMap":"141:866:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;:::i;161:22::-;;;;;:::i;141:866::-;;;:::o;:::-;:::o;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;-1:-1:-1;141:866:10;;;;;;;-1:-1:-1;;;;;141:866:10;;;;;;;;;:::i;189:28::-;;;;;:::i;141:866::-;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;;141:866:10;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;141:866:10;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;141:866:10;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;;141:866:10;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;141:866:10;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;515:490;758:64;766:29;785:10;;;:::i;766:29::-;:15;:29;;758:64;:::i;:::-;832:52;840:19;854:5;;;:::i;:::-;840:19;:::i;:::-;;:10;:19;:::i;:::-;;832:52;:::i;:::-;961:37;919:4;;;911:13;919:4;911:13;:::i;:::-;900:50;;911:21;;900:50;141:866;;;;900:50;766:15;;;;900:50;;;:::i;:::-;;;;961:14;:5;;;:::i;:14::-;976:21;;961:37;;;;;;515:490;961:37;;;;515:490::o;961:37::-;;:::i;:::-;;;;"},"methodIdentifiers":{"owner()":"8da5cb5b","unlockTime()":"251c1aa3","withdraw()":"3ccfd60b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_unlockTime\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"when\",\"type\":\"uint256\"}],\"name\":\"Withdrawal\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlockTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Lock.sol\":\"Lock\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/Lock.sol\":{\"keccak256\":\"0x3c36b5a83d533c3f095ac358675e9356c1761cd7f1e955ae23200203060419a9\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://864fae3ab9a941599f30667d484d94a34a0779f6e606110d2acdcf51c56c47e4\",\"dweb:/ipfs/QmXYat9EQBuwXsp4EcczzGTfML2ugVaYqiviiGoiZ9cgXr\"]}},\"version\":1}"}},"contracts/VoteMixing.sol":{"VoteMixing":{"abi":[{"inputs":[{"internalType":"uint256","name":"_minParticipants","type":"uint256"},{"internalType":"uint256","name":"_maxParticipants","type":"uint256"},{"internalType":"uint256","name":"_mixingDuration","type":"uint256"},{"internalType":"uint256","name":"_revealDelay","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"roundId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"participantCount","type":"uint256"},{"indexed":false,"internalType":"bytes32","name":"merkleRoot","type":"bytes32"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"MixingRoundCompleted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"roundId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"startTime","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"endTime","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"minParticipants","type":"uint256"}],"name":"MixingRoundCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"roundId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"totalVotes","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"MixingRoundRevealed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"roundId","type":"uint256"},{"indexed":true,"internalType":"address","name":"voter","type":"address"},{"indexed":false,"internalType":"bytes32","name":"originalVote","type":"bytes32"},{"indexed":false,"internalType":"bytes32","name":"mixedVote","type":"bytes32"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"VoteRevealed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"roundId","type":"uint256"},{"indexed":true,"internalType":"address","name":"voter","type":"address"},{"indexed":false,"internalType":"bytes32","name":"mixedVote","type":"bytes32"},{"indexed":false,"internalType":"uint256","name":"mixIndex","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"VoteSubmitted","type":"event"},{"inputs":[{"internalType":"uint256","name":"roundId","type":"uint256"}],"name":"completeMixingRound","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"originalVote","type":"bytes32"},{"internalType":"bytes32","name":"mixedVote","type":"bytes32"},{"internalType":"bytes32","name":"randomness","type":"bytes32"},{"internalType":"uint256","name":"mixIndex","type":"uint256"}],"name":"createMixingProof","outputs":[{"components":[{"internalType":"bytes32","name":"originalVote","type":"bytes32"},{"internalType":"bytes32","name":"mixedVote","type":"bytes32"},{"internalType":"bytes32","name":"randomness","type":"bytes32"},{"internalType":"uint256","name":"mixIndex","type":"uint256"},{"internalType":"bytes32[]","name":"merkleProof","type":"bytes32[]"}],"internalType":"struct VoteMixing.MixingProof","name":"proof","type":"tuple"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"createMixingRound","outputs":[{"internalType":"uint256","name":"roundId","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"roundId","type":"uint256"}],"name":"emergencyInvalidateRound","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"seed","type":"bytes32"}],"name":"generateMixIndex","outputs":[{"internalType":"uint256","name":"mixIndex","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"mixedVote","type":"bytes32"}],"name":"getMixedVote","outputs":[{"components":[{"internalType":"bytes32","name":"originalVote","type":"bytes32"},{"internalType":"bytes32","name":"mixedVote","type":"bytes32"},{"internalType":"bytes32","name":"randomness","type":"bytes32"},{"internalType":"uint256","name":"mixIndex","type":"uint256"},{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"bool","name":"isRevealed","type":"bool"},{"internalType":"address","name":"voter","type":"address"}],"internalType":"struct VoteMixing.MixedVote","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getMixingParameters","outputs":[{"internalType":"uint256","name":"minParticipants","type":"uint256"},{"internalType":"uint256","name":"maxParticipants","type":"uint256"},{"internalType":"uint256","name":"mixingDuration","type":"uint256"},{"internalType":"uint256","name":"revealDelay","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"roundId","type":"uint256"}],"name":"getMixingRound","outputs":[{"components":[{"internalType":"uint256","name":"roundId","type":"uint256"},{"internalType":"bytes32[]","name":"mixedVotes","type":"bytes32[]"},{"internalType":"bytes32[]","name":"randomness","type":"bytes32[]"},{"internalType":"uint256[]","name":"mixIndices","type":"uint256[]"},{"internalType":"uint256","name":"startTime","type":"uint256"},{"internalType":"uint256","name":"endTime","type":"uint256"},{"internalType":"uint256","name":"revealTime","type":"uint256"},{"internalType":"bool","name":"isActive","type":"bool"},{"internalType":"bool","name":"isRevealed","type":"bool"},{"internalType":"uint256","name":"participantCount","type":"uint256"},{"internalType":"bytes32","name":"merkleRoot","type":"bytes32"}],"internalType":"struct VoteMixing.MixingRound","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"roundId","type":"uint256"}],"name":"getRoundMixedVotes","outputs":[{"internalType":"bytes32[]","name":"","type":"bytes32[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"roundId","type":"uint256"}],"name":"getRoundParticipants","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getTotalRounds","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"voter","type":"address"}],"name":"getVoterRounds","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"roundId","type":"uint256"},{"internalType":"address","name":"voter","type":"address"}],"name":"hasVoterParticipated","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"mixingEnabled","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"roundId","type":"uint256"}],"name":"revealMixingRound","outputs":[{"internalType":"uint256","name":"revealedCount","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"roundId","type":"uint256"},{"internalType":"bytes32","name":"mixedVote","type":"bytes32"},{"internalType":"bytes32","name":"originalVote","type":"bytes32"},{"internalType":"bytes32","name":"randomness","type":"bytes32"},{"internalType":"uint256","name":"mixIndex","type":"uint256"}],"name":"revealVote","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bool","name":"enabled","type":"bool"}],"name":"setMixingEnabled","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"roundId","type":"uint256"},{"internalType":"bytes32","name":"originalVote","type":"bytes32"},{"internalType":"bytes32","name":"randomness","type":"bytes32"},{"internalType":"uint256","name":"mixIndex","type":"uint256"}],"name":"submitVote","outputs":[{"internalType":"bytes32","name":"mixedVote","type":"bytes32"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_minParticipants","type":"uint256"},{"internalType":"uint256","name":"_maxParticipants","type":"uint256"},{"internalType":"uint256","name":"_mixingDuration","type":"uint256"},{"internalType":"uint256","name":"_revealDelay","type":"uint256"}],"name":"updateMixingParameters","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"roundId","type":"uint256"},{"internalType":"bytes32","name":"mixedVote","type":"bytes32"},{"internalType":"bytes32[]","name":"proof","type":"bytes32[]"}],"name":"verifyVoteInclusion","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"abi_decode_uint256_fromMemory":{"entryPoint":133,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_uint256t_uint256t_uint256t_uint256_fromMemory":{"entryPoint":139,"id":null,"parameterSlots":2,"returnSlots":4},"abi_encode_address":{"entryPoint":482,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_address":{"entryPoint":495,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":111,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"cleanup_address":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_uint160":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"constant_NOT_ENTERED":{"entryPoint":411,"id":null,"parameterSlots":0,"returnSlots":1},"constructor_Ownable":{"entryPoint":511,"id":50,"parameterSlots":1,"returnSlots":0},"constructor_ReentrancyGuard":{"entryPoint":421,"id":307,"parameterSlots":1,"returnSlots":0},"constructor_VoteMixing":{"entryPoint":326,"id":5171,"parameterSlots":4,"returnSlots":0},"convert_address_to_address":{"entryPoint":648,"id":null,"parameterSlots":1,"returnSlots":1},"convert_bool_to_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_by_to_address":{"entryPoint":473,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_by_to_uint160":{"entryPoint":448,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_by_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_rational_by_to_t_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint160_to_address":{"entryPoint":639,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint160_to_uint160":{"entryPoint":619,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint256_to_uint256":{"entryPoint":254,"id":null,"parameterSlots":1,"returnSlots":1},"copy_arguments_for_constructor_object_VoteMixing":{"entryPoint":202,"id":null,"parameterSlots":0,"returnSlots":4},"extract_from_storage_value_offset_address":{"entryPoint":585,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":73,"id":null,"parameterSlots":2,"returnSlots":0},"fun_transferOwnership":{"entryPoint":680,"id":146,"parameterSlots":1,"returnSlots":0},"panic_error_0x41":{"entryPoint":51,"id":null,"parameterSlots":0,"returnSlots":0},"read_from_storage_split_offset_address":{"entryPoint":594,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_right_unsigned":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"update_byte_slice_20_shift":{"entryPoint":604,"id":null,"parameterSlots":2,"returnSlots":1},"update_byte_slice_shift":{"entryPoint":238,"id":null,"parameterSlots":2,"returnSlots":1},"update_byte_slice_shift_0":{"entryPoint":294,"id":null,"parameterSlots":2,"returnSlots":1},"update_storage_value_offset_address_to_address":{"entryPoint":657,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offset_bool_to_bool":{"entryPoint":303,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offset_uint256_to_uint256":{"entryPoint":267,"id":null,"parameterSlots":2,"returnSlots":0},"validator_revert_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[],"linkReferences":{},"object":"60806040523461002e5761001d6100146100ca565b92919091610146565b6040516126da61030082396126da90f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b90601f01601f191681019081106001600160401b0382111761006a57604052565b610033565b9061008361007c60405190565b9283610049565b565b90505190565b60808183031261002e5761009f8282610085565b926100c76100b08460208501610085565b9360606100c08260408701610085565b9401610085565b90565b6100e86129da803803806100dd8161006f565b92833981019061008b565b90919293565b90600019905b9181191691161790565b6100c76100c76100c79290565b9061011b6100c7610122926100fe565b82546100ee565b9055565b9060ff906100f4565b9061013f6100c761012292151590565b8254610126565b9161016d6101749261016661017b969561015f336101a5565b600861010b565b600961010b565b600a61010b565b600b61010b565b61018f61018860006100fe565b600761010b565b6100836001600c61012f565b6100c760016100fe565b6101ae906101ff565b6100836101b961019b565b600161010b565b6101cd6100c76100c79290565b6001600160a01b031690565b6100c7906101c0565b6101eb906101cd565b9052565b60208101929161008391906101e2565b600061020a816101d9565b610213816101cd565b61021c846101cd565b1461022c575050610083906102a8565b631e4fbdf760e01b8252819061024590600483016101ef565b0390fd5b6100c7906101cd565b6100c79054610249565b906001600160a01b03906100f4565b6100c7906101cd906001600160a01b031682565b6100c79061026b565b6100c79061027f565b906102a16100c761012292610288565b825461025c565b6102ce6102c86102b86000610252565b6102c3846000610291565b610288565b91610288565b907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e06102f960405190565b600090a356fe6080604052600436101561001257600080fd5b60003560e01c806304dca6fa146101825780630a232e671461017d57806310956f271461017857806316a7b4fa1461017357806318ce408f1461016e5780631ad1ec22146101695780632e1ddd081461016457806337305df51461015f57806345cba1141461015a57806347ebc739146101555780635b7f1e5d14610150578063715018a61461014b57806384b3f4cc146101465780638cf723b8146101415780638da5cb5b1461013c57806393bfe13e14610137578063b120a58a14610132578063cb5a974a1461012d578063cc5dd32614610128578063cfe1622314610123578063d73705e51461011e578063e514ef2e146101195763f2fde38b03610187576109b4565b610989565b6108fe565b6108ae565b61081c565b6107dd565b610779565b610752565b6106a7565b61068b565b610622565b6105e4565b6105cc565b61057c565b610515565b6104ee565b61047b565b610460565b610439565b610393565b61035d565b610336565b6101bb565b600080fd5b805b0361018757565b905035906101a28261018c565b565b90602082820312610187576101b891610195565b90565b34610187576101d36101ce3660046101a4565b610db9565b60405180805b0390f35b0190565b906102016101fa6101f0845190565b8084529260200190565b9260200190565b9060005b8181106102125750505090565b90919261022f6102286001928651815260200190565b9460200190565b929101610205565b906102466101fa6101f0845190565b9060005b8181106102575750505090565b90919261026d6102286001928651815260200190565b92910161024a565b80518252906101b890610140806102c66102b46102a26101608601602089015187820360208901526101e1565b604088015186820360408801526101e1565b60608701518582036060870152610237565b946102d660808201516080860152565b6102e560a082015160a0860152565b6102f460c082015160c0860152565b60e0818101511515908501526101008181015115159085015261031e610120820151610120860152565b0151910152565b60208082526101b892910190610275565b34610187576101d961035161034c3660046101a4565b611024565b60405191829182610325565b34610187576101d96103786103733660046101a4565b611073565b6040519182918290815260200190565b600091031261018757565b34610187576103a3366004610388565b6101d96103786115ba565b6001600160a01b031690565b6001600160a01b03811661018e565b905035906101a2826103ba565b90602082820312610187576101b8916103c9565b906103f96101fa6101f0845190565b9060005b81811061040a5750505090565b9091926104206102286001928651815260200190565b9291016103fd565b60208082526101b8929101906103ea565b34610187576101d961045461044f3660046103d6565b6115fd565b60405191829182610428565b3461018757610470366004610388565b6101d9610378611619565b34610187576101d96103786104913660046101a4565b611780565b906104a56101fa6101f0845190565b9060005b8181106104b65750505090565b9091926104d561022860019286516001600160a01b0316815260200190565b9291016104a9565b60208082526101b892910190610496565b34610187576101d96105096105043660046101a4565b611819565b604051918291826104dd565b34610187576101d36105283660046101a4565b611871565b9061053c6101fa6101f0845190565b9060005b81811061054d5750505090565b9091926105636102286001928651815260200190565b929101610540565b60208082526101b89291019061052d565b34610187576101d96105976105923660046101a4565b611883565b6040519182918261056b565b80151561018e565b905035906101a2826105a3565b90602082820312610187576101b8916105ab565b34610187576101d36105df3660046105b8565b6118b1565b34610187576105f4366004610388565b6101d36118f2565b6101b8916008021c5b60ff1690565b906101b891546105fc565b6101b86000600c61060b565b3461018757610632366004610388565b6101d961063d610616565b60405191829182901515815260200190565b608081830312610187576106638282610195565b926101b86106748460208501610195565b9360606106848260408701610195565b9401610195565b34610187576101d361069e36600461064f565b92919091611935565b34610187576106b7366004610388565b6101d96106c2611941565b604051918291826001600160a01b03909116815260200190565b805182526101a2919060c09081906106f960208201516020860152565b61070860408201516040860152565b61071760608201516060860152565b61072660808201516080860152565b60a08181015115159085015201516001600160a01b0316910152565b60e0810192916101a291906106dc565b34610187576101d961076d6107683660046101a4565b611a27565b60405191829182610742565b34610187576101d961037861078f36600461064f565b92919091611eb0565b919060a083820312610187576107ae8184610195565b926107bc8260208301610195565b926101b86107cd8460408501610195565b9360806106848260608701610195565b34610187576101d36107f0366004610798565b93929092612044565b9190604083820312610187576101b89060206108158286610195565b94016103c9565b34610187576101d961063d6108323660046107f9565b90612051565b909182601f830112156101875781359167ffffffffffffffff831161018757602001926020830284011161018757565b916060838303126101875761087d8284610195565b9261088b8360208301610195565b92604082013567ffffffffffffffff8111610187576108aa9201610838565b9091565b34610187576101d961063d6108c4366004610868565b929190916120c6565b6108fa6101a2946108f36060949897956108ec608086019a6000870152565b6020850152565b6040830152565b0152565b346101875761090e366004610388565b6101d9600080808061092294929460405190565b948594856108cd565b805182526101b89160a081019160809061094a60208201516020850152565b61095960408201516040850152565b61096860608201516060850152565b01519060808184039101526101e1565b60208082526101b89291019061092b565b34610187576101d96109a861099f36600461064f565b92919091612120565b60405191829182610978565b34610187576101d36109c73660046103d6565b6121ca565b6101a2906109d86121d3565b610c6b565b6101b86101b86101b89290565b906109f4906109dd565b600052602052604060002090565b6101b890610605565b6101b89054610a02565b15610a1c57565b60405162461bcd60e51b815260206004820152601060248201526f526f756e64206e6f742061637469766560801b6044820152606490fd5b6101b89081565b6101b89054610a54565b15610a6c57565b60405162461bcd60e51b815260206004820152600f60248201526e149bdd5b99081b9bdd08195b991959608a1b6044820152606490fd5b15610aaa57565b60405162461bcd60e51b815260206004820152601960248201527f496e73756666696369656e74207061727469636970616e7473000000000000006044820152606490fd5b9060ff905b9181191691161790565b90610b0e6101b8610b1592151590565b8254610aef565b9055565b634e487b7160e01b600052604160045260246000fd5b90601f01601f1916810190811067ffffffffffffffff821117610b5157604052565b610b19565b906101a2610b6360405190565b9283610b2f565b67ffffffffffffffff8111610b515760208091020190565b90610b94610b8f83610b6a565b610b56565b918252565b369037565b906101a2610bb4610bae84610b82565b93610b6a565b601f190160208401610b99565b634e487b7160e01b600052603260045260246000fd5b8054821015610bfa57610bf1600191600052602060002090565b91020190600090565b610bc1565b6101b8916008021c81565b906101b89154610bff565b90610c1e825190565b811015610bfa576020809102010190565b9060001990610af4565b90610c476101b8610b159290565b8254610c2f565b9081526060810193926101a29290916040916108fa906020830152565b610c796101b88260026109ea565b906007820192610c90610c8b85610a0b565b610a15565b610caa610ca26101b860058601610a5b565b421015610a65565b610ce060006008850195610cdb610cc088610a5b565b610cd4610cd06101b86008610a5b565b9190565b1015610aa3565b610afe565b6001830190610cf5610cf0835490565b610b9e565b92610d0060006109dd565b610d0b6101b8855490565b811015610d445780610d39610d2c610d26610d3f9488610bd7565b90610c0a565b610d368389610c15565b52565b60010190565b610d00565b5093915093610d96610d90610d9c92610d8b6009610d827f702ca2b43eb700bf6c35cd0fd463096f3f976f36abf9a0640b9111d2774e909598612261565b96019586610c39565b610a5b565b92610a5b565b936109dd565b92610db4610da960405190565b928392429184610c4e565b0390a2565b6101a2906109cc565b6101b8610160610b56565b610dd5610dc2565b90600082526020808080808080808080808c01606081520160608152016060815201600081520160005b81520160008152016000815201600081520160008152016000905250565b6101b8610dcd565b90610e40610e346101f0845490565b92600052602060002090565b9060005b818110610e515750505090565b909192610e75610e6e600192610e6687610a5b565b815260200190565b9460010190565b929101610e44565b906101b891610e25565b906101a2610ea192610e9860405190565b93848092610e7d565b0383610b2f565b90610eb7610e346101f0845490565b9060005b818110610ec85750505090565b909192610edd610e6e600192610e6687610a5b565b929101610ebb565b906101b891610ea8565b906101a2610ea192610f0060405190565b93848092610ee5565b6101b89060081c610605565b6101b89054610f09565b906101a26110136009610f30610dc2565b94610f41610f3d82610a5b565b8752565b610f57610f5060018301610e87565b6020880152565b610f6d610f6660028301610e87565b6040880152565b610f83610f7c60038301610eef565b6060880152565b610f99610f9260048301610a5b565b6080880152565b610faf610fa860058301610a5b565b60a0880152565b610fc5610fbe60068301610a5b565b60c0880152565b610fdd610fd460078301610a0b565b151560e0880152565b610ff6610fec60078301610f15565b1515610100880152565b61100d61100560088301610a5b565b610120880152565b01610a5b565b610140840152565b6101b890610f1f565b61103b6101b891611033610e1d565b5060026109ea565b61101b565b6101b8906109dd565b6109dd565b634e487b7160e01b600052601260045260246000fd5b811561106e570690565b61104e565b61109061108b6101b892611085600090565b50612419565b611040565b61109a6009610a5b565b90611064565b6101b8906110ac6121d3565b611454565b156110b857565b60405162461bcd60e51b815260206004820152600f60248201526e135a5e1a5b99c8191a5cd8589b1959608a1b6044820152606490fd5b634e487b7160e01b600052601160045260246000fd5b60001981146111145760010190565b6110ef565b90610c476101b8610b15926109dd565b9190611134565b9290565b820180921161111457565b9160001960089290920291821b911b610af4565b91906111626101b8610b159390565b90835461113f565b6101a291600091611153565b818110611181575050565b8061118f600060019361116a565b01611176565b9190918282106111a457505050565b6101a292916111ba905b91600052602060002090565b9182019101611176565b90600160401b8111610b5157816111dc6101a2935490565b90828155611195565b81519167ffffffffffffffff8311610b5157611210610e3460019261120a86866111c4565b60200190565b92049160005b8381106112235750505050565b60019060206112336101b8865190565b9401938184015501611216565b906101a2916111e5565b91906111626101b8610b15936109dd565b6101a29160009161124a565b818110611272575050565b80611280600060019361125b565b01611267565b91909182821061129557505050565b6101a292916112a3906111ae565b9182019101611267565b90600160401b8111610b5157816112c56101a2935490565b90828155611286565b81519167ffffffffffffffff8311610b51576112f3610e3460019261120a86866112ad565b92049160005b8381106113065750505050565b60019060206113166101b8865190565b94019381840155016112f9565b906101a2916112ce565b9061ff009060081b610af4565b9061134a6101b8610b1592151590565b825461132d565b60096114436101406101a29461137161136b600083015190565b86611119565b61138861137f602083015190565b60018701611240565b61139f611396604083015190565b60028701611240565b6113b66113ad606083015190565b60038701611323565b6113cd6113c4608083015190565b60048701611119565b6113e46113db60a083015190565b60058701611119565b6113fb6113f260c083015190565b60068701611119565b6114266007860161141861141260e0850151151590565b82610afe565b61010083015115159061133a565b61143e61143561012083015190565b60088701611119565b015190565b9101610c39565b906101a291611351565b5061145f600c610a0b565b611468906110b1565b6114726007610a5b565b61147b81611105565b611486906007611119565b6000611491816109dd565b9061149b82610b9e565b916114a581610b9e565b916114af82610b9e565b6114b9600a610a5b565b6114c39042611129565b6114cd600a610a5b565b6114d79042611129565b6114e1600b610a5b565b6114ea91611129565b916114f4846109dd565b956114fd610dc2565b976115088a878b0152565b602089015260408801526060870152611522426080880152565b60a086015260c0850152600160e08501521515610100840152610120830152610140820152806115538360026109ea565b9061155d9161144a565b608081015160a0909101516115726008610a5b565b9061157c846109dd565b9261158660405190565b9283926115939284610c4e565b037f87a3241a0380a7685f0cfd2544c5d771c51dc926dd74d20d81ee1aea62fbfb5591a290565b6101b860006110a0565b6101b8906103ae906001600160a01b031682565b6101b8906115c4565b6101b8906115d8565b906109f4906115e1565b6101b890610eef565b6116146101b89161160c606090565b5060046115ea565b6115f4565b6101b86007610a5b565b906101b8916116306121d3565b611681565b1561163c57565b60405162461bcd60e51b815260206004820152601760248201527f52657665616c2074696d65206e6f7420726561636865640000000000000000006044820152606490fd5b906101b8916116a461169c6101b8600661100d8660026109ea565b421015611635565b611701565b156116b057565b60405162461bcd60e51b8152602060048201526016602482015275149bdd5b9908185b1c9958591e481c995d99585b195960521b6044820152606490fd5b9081526040810192916101a29160200152565b5061174461173e60086117186101b88560026109ea565b61100d60016007830161173961173461173083610f15565b1590565b6116a9565b61133a565b916109dd565b7fd48fe253bdb396c73bc32f7b556a42456788b817d0254dd2469873141ca91c2461176e60405190565b8061177a4286836116ee565b0390a290565b6101b8906000611623565b6101b8906103ae565b6101b8905461178b565b906117ad610e346101f0845490565b9060005b8181106117be5750505090565b9091926117e4610e6e6001926117d387611794565b6001600160a01b0316815260200190565b9291016117b1565b906101b89161179e565b906101a2610ea19261180760405190565b938480926117ec565b6101b8906117f6565b6118306101b891611828606090565b5060056109ea565b611810565b6101a2906118416121d3565b6000600761186b6101a293611864610c8b8461185e8460026109ea565b01610a0b565b60026109ea565b01610afe565b6101a290611835565b6101b890610e87565b60016118946101b892611033606090565b0161187a565b6101a2906118a66121d3565b6101a290600c610afe565b6101a29061189a565b6118c26121d3565b6101a26118e0565b6103ae6101b86101b89290565b6101b8906118ca565b6101a26118ed60006118d7565b612496565b6101a26118ba565b906101a29392916119096121d3565b9161192761192e926119206101a296956008611119565b6009611119565b600a611119565b600b611119565b906101a29392916118fa565b6101b86000611794565b6101b860e0610b56565b61195d61194b565b9060008252602080808080808088016000610dff565b6101b8611955565b906109f4565b6101b89060081c6103ae565b6101b89054611981565b906101a2611a0e60056119a861194b565b946119b5610f3d82610a5b565b6119c4610f5060018301610a5b565b6119d3610f6660028301610a5b565b6119e2610f7c60038301610a5b565b6119f1610f9260048301610a5b565b611a086119ff838301610a0b565b151560a0880152565b0161198d565b6001600160a01b031660c0840152565b6101b890611997565b611a3e6101b891611a36611973565b50600361197b565b611a1e565b906101b894939291611a5e610c8b600761185e8560026109ea565b611aaf565b15611a6a57565b60405162461bcd60e51b815260206004820152601760248201527f52616e646f6d6e65737320616c726561647920757365640000000000000000006044820152606490fd5b906101b894939291611ad5611ad0611730611acb87600661197b565b610a0b565b611a63565b611d19565b15611ae157565b60405162461bcd60e51b815260206004820152600b60248201526a149bdd5b9908195b99195960aa1b6044820152606490fd5b15611b1b57565b60405162461bcd60e51b815260206004820152600a602482015269149bdd5b9908199d5b1b60b21b6044820152606490fd5b15611b5457565b60405162461bcd60e51b8152602060048201526014602482015273105b1c9958591e481c185c9d1a58da5c185d195960621b6044820152606490fd5b90610100600160a81b039060081b610af4565b90611bb36101b8610b15926115e1565b8254611b90565b90611c5c60c060056101a294611bda611bd4600087015190565b82610c39565b611bf1611be8602087015190565b60018301610c39565b611c08611bff604087015190565b60028301610c39565b611c1f611c16606087015190565b60038301611119565b611c36611c2d608087015190565b60048301611119565b0192611c4e611c4860a0830151151590565b85610afe565b01516001600160a01b031690565b90611ba3565b906101a291611bba565b90815491600160401b831015610b515782611c8f9160016101a295018155610bd7565b90611153565b90815491600160401b831015610b515782611cb89160016101a295018155610bd7565b9061124a565b916001600160a01b0360089290920291821b911b610af4565b9190611ce86101b8610b15936115e1565b908354611cbe565b90815491600160401b831015610b515782611d139160016101a295018155610bd7565b90611cd7565b50909291611d288260026109ea565b611d3460058201610a5b565b421115611d4090611ada565b836008820191611d4f83610a5b565b611d596009610a5b565b11611d6390611b14565b611d6d3386612051565b15611d7790611b4d565b611d828285896124ee565b96611d8b61194b565b908152611d99886020830152565b611da4856040830152565b611daf836060830152565b611dba426080830152565b600060a08201523360c0820152611dd288600361197b565b90611ddc91611c62565b611de98760018301611c6c565b611df68460028301611c6c565b60030190611e0391611c95565b611e0c81610a5b565b611e1590611105565b611e1e91611119565b611e298260056109ea565b33611e3391611cf0565b81611e3f3360046115ea565b90611e4991611c95565b611e5490600661197b565b6001611e5f91610afe565b611e68906109dd565b611e71336115e1565b91611e7b60405190565b809142611e89918784610c4e565b037f57ad1338c773df8ab4b3a0b286cae4e4f6d36473d7e7a1f0b3f1b4de474cd37b91a390565b6101b8939291906000611a43565b906101a294939291611edc61169c6101b8600661100d8560026109ea565b611f9e565b15611ee857565b60405162461bcd60e51b815260206004820152600d60248201526c4e6f7420796f757220766f746560981b6044820152606490fd5b15611f2457565b60405162461bcd60e51b8152602060048201526015602482015274159bdd1948185b1c9958591e481c995d99585b1959605a1b6044820152606490fd5b15611f6857565b60405162461bcd60e51b815260206004820152600e60248201526d125b9d985b1a59081c995d99585b60921b6044820152606490fd5b61104960017f517de2d19cd96b554768be894916ac969b1449096e6033efc0d82d10a2cec88c9495610cdb61202161202896996005611fe16101b88d600361197b565b0193612007611fef8661198d565b612001335b916001600160a01b031690565b14611ee1565b61201b61201661173087610a0b565b611f1d565b8a6124ee565b8914611f61565b91612032336115e1565b9361203f610da960405190565b0390a3565b906101a294939291611ebe565b61183061206091611828600090565b9061206b60006109dd565b6120766101b8845190565b8110156120be5761209761208a8285610c15565b516001600160a01b031690565b6120a96001600160a01b038416611ff4565b146120b65760010161206b565b505050600190565b505050600090565b916120dd600961100d6101b8969495611033600090565b92612570565b6101b860a0610b56565b6120f56120e3565b906000825260208080808086016000815201600081520160008152016060905250565b6101b86120ed565b9261216b906121646101b894612134612118565b5061215d612145610cf060006109dd565b956121566121516120e3565b998a52565b6020890152565b6040870152565b6060850152565b6080830152565b6101a29061217e6121d3565b6000612189816118d7565b6001600160a01b0381166001600160a01b038416146121ad5750506101a290612496565b631e4fbdf760e01b82526001600160a01b03166004820152602490fd5b6101a290612172565b6121db611941565b33906121e682611ff4565b036121ee5750565b63118cdaa760e01b60009081526001600160a01b039091166004526024036000fd5b1561221757565b60405162461bcd60e51b8152602060048201526012602482015271456d707479206c656176657320617272617960701b6044820152606490fd5b811561106e570490565b01918252565b9061228061226d835190565b61227a610cd060006109dd565b11612210565b815191600192612292610cd0856109dd565b146123f2576122b16122a2825190565b6122ab856109dd565b90611129565b926122ca610cf06002956122c4876109dd565b90612251565b91816122d660006109dd565b905b6122eb575b5050506101b891925061258d565b6122f66101b8835190565b8110156123ed57906123c2839261231561230f856109dd565b82611129565b612323610cd06101b8865190565b10156123c9576123b961238561239161234361233f8588610c15565b5190565b61236161233f61235b6123558b6109dd565b88611129565b89610c15565b9061236b60405190565b93849260208401928360208161225b6101dd938396959052565b90810382520382610b2f565b6123a361239c825190565b9160200190565b20610d3661235b6123b38c6109dd565b85612251565b6122ab886109dd565b90916122d8565b6123e86123d961233f8386610c15565b610d3661235b6123b38c6109dd565b6123b9565b6122dd565b6101b891925061233f9061240660006109dd565b90610c15565b9190820391821161111457565b61246161238591612428600090565b5061243c61243660016109dd565b4361240c565b6040519040602080830191825291948593919290916101dd824461225b824282828b82565b61246c61239c825190565b2090565b906001600160a01b0390610af4565b9061248f6101b8610b15926115e1565b8254612470565b6124bc6124b66124a66000611794565b6124b184600061247f565b6115e1565b916115e1565b907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e06124e760405190565b808061203f565b9161250890612385926124ff600090565b5060405161236b565b61251361239c825190565b201890565b90929192612528610b8f82610b6a565b938185526020808601920283019281841161018757915b83831061254c5750505050565b6020809161255a8486610195565b81520192019161253f565b6101b8913691612518565b91612588906101b89492612582600090565b50612565565b61260e565b908151916001926125a0610cd0856109dd565b146123f2576125b06122a2825190565b926125c3610cf06002956122c4876109dd565b91816125cf60006109dd565b905b6125e3575050506101b891925061258d565b6125ee6101b8835190565b8110156123ed5790612607839261231561230f856109dd565b90916125d1565b6111306126289293610cd092612622600090565b5061262c565b1490565b61263660006109dd565b915b6126436101b8835190565b8310156126715761266461266b9161265e61233f8686610c15565b90612677565b9260010190565b91612638565b91505090565b8181101561269257906101b891600052602052604060002090565b6101b89160005260205260406000209056fea264697066735822122010065fea38109b7bc05423a17dcf9b6cdf9202dd1bd4a57162b2160da40d401764736f6c634300081c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x2E JUMPI PUSH2 0x1D PUSH2 0x14 PUSH2 0xCA JUMP JUMPDEST SWAP3 SWAP2 SWAP1 SWAP2 PUSH2 0x146 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26DA PUSH2 0x300 DUP3 CODECOPY PUSH2 0x26DA SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x6A JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x33 JUMP JUMPDEST SWAP1 PUSH2 0x83 PUSH2 0x7C PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 PUSH2 0x49 JUMP JUMPDEST JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x80 DUP2 DUP4 SUB SLT PUSH2 0x2E JUMPI PUSH2 0x9F DUP3 DUP3 PUSH2 0x85 JUMP JUMPDEST SWAP3 PUSH2 0xC7 PUSH2 0xB0 DUP5 PUSH1 0x20 DUP6 ADD PUSH2 0x85 JUMP JUMPDEST SWAP4 PUSH1 0x60 PUSH2 0xC0 DUP3 PUSH1 0x40 DUP8 ADD PUSH2 0x85 JUMP JUMPDEST SWAP5 ADD PUSH2 0x85 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xE8 PUSH2 0x29DA DUP1 CODESIZE SUB DUP1 PUSH2 0xDD DUP2 PUSH2 0x6F JUMP JUMPDEST SWAP3 DUP4 CODECOPY DUP2 ADD SWAP1 PUSH2 0x8B JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 JUMP JUMPDEST SWAP1 PUSH1 0x0 NOT SWAP1 JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST PUSH2 0xC7 PUSH2 0xC7 PUSH2 0xC7 SWAP3 SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x11B PUSH2 0xC7 PUSH2 0x122 SWAP3 PUSH2 0xFE JUMP JUMPDEST DUP3 SLOAD PUSH2 0xEE JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST SWAP1 PUSH1 0xFF SWAP1 PUSH2 0xF4 JUMP JUMPDEST SWAP1 PUSH2 0x13F PUSH2 0xC7 PUSH2 0x122 SWAP3 ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x126 JUMP JUMPDEST SWAP2 PUSH2 0x16D PUSH2 0x174 SWAP3 PUSH2 0x166 PUSH2 0x17B SWAP7 SWAP6 PUSH2 0x15F CALLER PUSH2 0x1A5 JUMP JUMPDEST PUSH1 0x8 PUSH2 0x10B JUMP JUMPDEST PUSH1 0x9 PUSH2 0x10B JUMP JUMPDEST PUSH1 0xA PUSH2 0x10B JUMP JUMPDEST PUSH1 0xB PUSH2 0x10B JUMP JUMPDEST PUSH2 0x18F PUSH2 0x188 PUSH1 0x0 PUSH2 0xFE JUMP JUMPDEST PUSH1 0x7 PUSH2 0x10B JUMP JUMPDEST PUSH2 0x83 PUSH1 0x1 PUSH1 0xC PUSH2 0x12F JUMP JUMPDEST PUSH2 0xC7 PUSH1 0x1 PUSH2 0xFE JUMP JUMPDEST PUSH2 0x1AE SWAP1 PUSH2 0x1FF JUMP JUMPDEST PUSH2 0x83 PUSH2 0x1B9 PUSH2 0x19B JUMP JUMPDEST PUSH1 0x1 PUSH2 0x10B JUMP JUMPDEST PUSH2 0x1CD PUSH2 0xC7 PUSH2 0xC7 SWAP3 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0xC7 SWAP1 PUSH2 0x1C0 JUMP JUMPDEST PUSH2 0x1EB SWAP1 PUSH2 0x1CD JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 ADD SWAP3 SWAP2 PUSH2 0x83 SWAP2 SWAP1 PUSH2 0x1E2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20A DUP2 PUSH2 0x1D9 JUMP JUMPDEST PUSH2 0x213 DUP2 PUSH2 0x1CD JUMP JUMPDEST PUSH2 0x21C DUP5 PUSH2 0x1CD JUMP JUMPDEST EQ PUSH2 0x22C JUMPI POP POP PUSH2 0x83 SWAP1 PUSH2 0x2A8 JUMP JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP3 MSTORE DUP2 SWAP1 PUSH2 0x245 SWAP1 PUSH1 0x4 DUP4 ADD PUSH2 0x1EF JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0xC7 SWAP1 PUSH2 0x1CD JUMP JUMPDEST PUSH2 0xC7 SWAP1 SLOAD PUSH2 0x249 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH2 0xF4 JUMP JUMPDEST PUSH2 0xC7 SWAP1 PUSH2 0x1CD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 JUMP JUMPDEST PUSH2 0xC7 SWAP1 PUSH2 0x26B JUMP JUMPDEST PUSH2 0xC7 SWAP1 PUSH2 0x27F JUMP JUMPDEST SWAP1 PUSH2 0x2A1 PUSH2 0xC7 PUSH2 0x122 SWAP3 PUSH2 0x288 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x25C JUMP JUMPDEST PUSH2 0x2CE PUSH2 0x2C8 PUSH2 0x2B8 PUSH1 0x0 PUSH2 0x252 JUMP JUMPDEST PUSH2 0x2C3 DUP5 PUSH1 0x0 PUSH2 0x291 JUMP JUMPDEST PUSH2 0x288 JUMP JUMPDEST SWAP2 PUSH2 0x288 JUMP JUMPDEST SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH2 0x2F9 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 LOG3 JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4DCA6FA EQ PUSH2 0x182 JUMPI DUP1 PUSH4 0xA232E67 EQ PUSH2 0x17D JUMPI DUP1 PUSH4 0x10956F27 EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0x16A7B4FA EQ PUSH2 0x173 JUMPI DUP1 PUSH4 0x18CE408F EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0x1AD1EC22 EQ PUSH2 0x169 JUMPI DUP1 PUSH4 0x2E1DDD08 EQ PUSH2 0x164 JUMPI DUP1 PUSH4 0x37305DF5 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0x45CBA114 EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0x47EBC739 EQ PUSH2 0x155 JUMPI DUP1 PUSH4 0x5B7F1E5D EQ PUSH2 0x150 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x14B JUMPI DUP1 PUSH4 0x84B3F4CC EQ PUSH2 0x146 JUMPI DUP1 PUSH4 0x8CF723B8 EQ PUSH2 0x141 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x93BFE13E EQ PUSH2 0x137 JUMPI DUP1 PUSH4 0xB120A58A EQ PUSH2 0x132 JUMPI DUP1 PUSH4 0xCB5A974A EQ PUSH2 0x12D JUMPI DUP1 PUSH4 0xCC5DD326 EQ PUSH2 0x128 JUMPI DUP1 PUSH4 0xCFE16223 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0xD73705E5 EQ PUSH2 0x11E JUMPI DUP1 PUSH4 0xE514EF2E EQ PUSH2 0x119 JUMPI PUSH4 0xF2FDE38B SUB PUSH2 0x187 JUMPI PUSH2 0x9B4 JUMP JUMPDEST PUSH2 0x989 JUMP JUMPDEST PUSH2 0x8FE JUMP JUMPDEST PUSH2 0x8AE JUMP JUMPDEST PUSH2 0x81C JUMP JUMPDEST PUSH2 0x7DD JUMP JUMPDEST PUSH2 0x779 JUMP JUMPDEST PUSH2 0x752 JUMP JUMPDEST PUSH2 0x6A7 JUMP JUMPDEST PUSH2 0x68B JUMP JUMPDEST PUSH2 0x622 JUMP JUMPDEST PUSH2 0x5E4 JUMP JUMPDEST PUSH2 0x5CC JUMP JUMPDEST PUSH2 0x57C JUMP JUMPDEST PUSH2 0x515 JUMP JUMPDEST PUSH2 0x4EE JUMP JUMPDEST PUSH2 0x47B JUMP JUMPDEST PUSH2 0x460 JUMP JUMPDEST PUSH2 0x439 JUMP JUMPDEST PUSH2 0x393 JUMP JUMPDEST PUSH2 0x35D JUMP JUMPDEST PUSH2 0x336 JUMP JUMPDEST PUSH2 0x1BB JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 JUMPDEST SUB PUSH2 0x187 JUMPI JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x1A2 DUP3 PUSH2 0x18C JUMP JUMPDEST JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x187 JUMPI PUSH2 0x1B8 SWAP2 PUSH2 0x195 JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x187 JUMPI PUSH2 0x1D3 PUSH2 0x1CE CALLDATASIZE PUSH1 0x4 PUSH2 0x1A4 JUMP JUMPDEST PUSH2 0xDB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 JUMPDEST SUB SWAP1 RETURN JUMPDEST ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x201 PUSH2 0x1FA PUSH2 0x1F0 DUP5 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP5 MSTORE SWAP3 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x212 JUMPI POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 PUSH2 0x22F PUSH2 0x228 PUSH1 0x1 SWAP3 DUP7 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP5 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 ADD PUSH2 0x205 JUMP JUMPDEST SWAP1 PUSH2 0x246 PUSH2 0x1FA PUSH2 0x1F0 DUP5 MLOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x257 JUMPI POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 PUSH2 0x26D PUSH2 0x228 PUSH1 0x1 SWAP3 DUP7 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 ADD PUSH2 0x24A JUMP JUMPDEST DUP1 MLOAD DUP3 MSTORE SWAP1 PUSH2 0x1B8 SWAP1 PUSH2 0x140 DUP1 PUSH2 0x2C6 PUSH2 0x2B4 PUSH2 0x2A2 PUSH2 0x160 DUP7 ADD PUSH1 0x20 DUP10 ADD MLOAD DUP8 DUP3 SUB PUSH1 0x20 DUP10 ADD MSTORE PUSH2 0x1E1 JUMP JUMPDEST PUSH1 0x40 DUP9 ADD MLOAD DUP7 DUP3 SUB PUSH1 0x40 DUP9 ADD MSTORE PUSH2 0x1E1 JUMP JUMPDEST PUSH1 0x60 DUP8 ADD MLOAD DUP6 DUP3 SUB PUSH1 0x60 DUP8 ADD MSTORE PUSH2 0x237 JUMP JUMPDEST SWAP5 PUSH2 0x2D6 PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0x80 DUP7 ADD MSTORE JUMP JUMPDEST PUSH2 0x2E5 PUSH1 0xA0 DUP3 ADD MLOAD PUSH1 0xA0 DUP7 ADD MSTORE JUMP JUMPDEST PUSH2 0x2F4 PUSH1 0xC0 DUP3 ADD MLOAD PUSH1 0xC0 DUP7 ADD MSTORE JUMP JUMPDEST PUSH1 0xE0 DUP2 DUP2 ADD MLOAD ISZERO ISZERO SWAP1 DUP6 ADD MSTORE PUSH2 0x100 DUP2 DUP2 ADD MLOAD ISZERO ISZERO SWAP1 DUP6 ADD MSTORE PUSH2 0x31E PUSH2 0x120 DUP3 ADD MLOAD PUSH2 0x120 DUP7 ADD MSTORE JUMP JUMPDEST ADD MLOAD SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH2 0x1B8 SWAP3 SWAP2 ADD SWAP1 PUSH2 0x275 JUMP JUMPDEST CALLVALUE PUSH2 0x187 JUMPI PUSH2 0x1D9 PUSH2 0x351 PUSH2 0x34C CALLDATASIZE PUSH1 0x4 PUSH2 0x1A4 JUMP JUMPDEST PUSH2 0x1024 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x325 JUMP JUMPDEST CALLVALUE PUSH2 0x187 JUMPI PUSH2 0x1D9 PUSH2 0x378 PUSH2 0x373 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A4 JUMP JUMPDEST PUSH2 0x1073 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP2 SUB SLT PUSH2 0x187 JUMPI JUMP JUMPDEST CALLVALUE PUSH2 0x187 JUMPI PUSH2 0x3A3 CALLDATASIZE PUSH1 0x4 PUSH2 0x388 JUMP JUMPDEST PUSH2 0x1D9 PUSH2 0x378 PUSH2 0x15BA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x18E JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x1A2 DUP3 PUSH2 0x3BA JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x187 JUMPI PUSH2 0x1B8 SWAP2 PUSH2 0x3C9 JUMP JUMPDEST SWAP1 PUSH2 0x3F9 PUSH2 0x1FA PUSH2 0x1F0 DUP5 MLOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x40A JUMPI POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 PUSH2 0x420 PUSH2 0x228 PUSH1 0x1 SWAP3 DUP7 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 ADD PUSH2 0x3FD JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH2 0x1B8 SWAP3 SWAP2 ADD SWAP1 PUSH2 0x3EA JUMP JUMPDEST CALLVALUE PUSH2 0x187 JUMPI PUSH2 0x1D9 PUSH2 0x454 PUSH2 0x44F CALLDATASIZE PUSH1 0x4 PUSH2 0x3D6 JUMP JUMPDEST PUSH2 0x15FD JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x428 JUMP JUMPDEST CALLVALUE PUSH2 0x187 JUMPI PUSH2 0x470 CALLDATASIZE PUSH1 0x4 PUSH2 0x388 JUMP JUMPDEST PUSH2 0x1D9 PUSH2 0x378 PUSH2 0x1619 JUMP JUMPDEST CALLVALUE PUSH2 0x187 JUMPI PUSH2 0x1D9 PUSH2 0x378 PUSH2 0x491 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A4 JUMP JUMPDEST PUSH2 0x1780 JUMP JUMPDEST SWAP1 PUSH2 0x4A5 PUSH2 0x1FA PUSH2 0x1F0 DUP5 MLOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x4B6 JUMPI POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 PUSH2 0x4D5 PUSH2 0x228 PUSH1 0x1 SWAP3 DUP7 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 ADD PUSH2 0x4A9 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH2 0x1B8 SWAP3 SWAP2 ADD SWAP1 PUSH2 0x496 JUMP JUMPDEST CALLVALUE PUSH2 0x187 JUMPI PUSH2 0x1D9 PUSH2 0x509 PUSH2 0x504 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A4 JUMP JUMPDEST PUSH2 0x1819 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x4DD JUMP JUMPDEST CALLVALUE PUSH2 0x187 JUMPI PUSH2 0x1D3 PUSH2 0x528 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A4 JUMP JUMPDEST PUSH2 0x1871 JUMP JUMPDEST SWAP1 PUSH2 0x53C PUSH2 0x1FA PUSH2 0x1F0 DUP5 MLOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x54D JUMPI POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 PUSH2 0x563 PUSH2 0x228 PUSH1 0x1 SWAP3 DUP7 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 ADD PUSH2 0x540 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH2 0x1B8 SWAP3 SWAP2 ADD SWAP1 PUSH2 0x52D JUMP JUMPDEST CALLVALUE PUSH2 0x187 JUMPI PUSH2 0x1D9 PUSH2 0x597 PUSH2 0x592 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A4 JUMP JUMPDEST PUSH2 0x1883 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x56B JUMP JUMPDEST DUP1 ISZERO ISZERO PUSH2 0x18E JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x1A2 DUP3 PUSH2 0x5A3 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x187 JUMPI PUSH2 0x1B8 SWAP2 PUSH2 0x5AB JUMP JUMPDEST CALLVALUE PUSH2 0x187 JUMPI PUSH2 0x1D3 PUSH2 0x5DF CALLDATASIZE PUSH1 0x4 PUSH2 0x5B8 JUMP JUMPDEST PUSH2 0x18B1 JUMP JUMPDEST CALLVALUE PUSH2 0x187 JUMPI PUSH2 0x5F4 CALLDATASIZE PUSH1 0x4 PUSH2 0x388 JUMP JUMPDEST PUSH2 0x1D3 PUSH2 0x18F2 JUMP JUMPDEST PUSH2 0x1B8 SWAP2 PUSH1 0x8 MUL SHR JUMPDEST PUSH1 0xFF AND SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1B8 SWAP2 SLOAD PUSH2 0x5FC JUMP JUMPDEST PUSH2 0x1B8 PUSH1 0x0 PUSH1 0xC PUSH2 0x60B JUMP JUMPDEST CALLVALUE PUSH2 0x187 JUMPI PUSH2 0x632 CALLDATASIZE PUSH1 0x4 PUSH2 0x388 JUMP JUMPDEST PUSH2 0x1D9 PUSH2 0x63D PUSH2 0x616 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x80 DUP2 DUP4 SUB SLT PUSH2 0x187 JUMPI PUSH2 0x663 DUP3 DUP3 PUSH2 0x195 JUMP JUMPDEST SWAP3 PUSH2 0x1B8 PUSH2 0x674 DUP5 PUSH1 0x20 DUP6 ADD PUSH2 0x195 JUMP JUMPDEST SWAP4 PUSH1 0x60 PUSH2 0x684 DUP3 PUSH1 0x40 DUP8 ADD PUSH2 0x195 JUMP JUMPDEST SWAP5 ADD PUSH2 0x195 JUMP JUMPDEST CALLVALUE PUSH2 0x187 JUMPI PUSH2 0x1D3 PUSH2 0x69E CALLDATASIZE PUSH1 0x4 PUSH2 0x64F JUMP JUMPDEST SWAP3 SWAP2 SWAP1 SWAP2 PUSH2 0x1935 JUMP JUMPDEST CALLVALUE PUSH2 0x187 JUMPI PUSH2 0x6B7 CALLDATASIZE PUSH1 0x4 PUSH2 0x388 JUMP JUMPDEST PUSH2 0x1D9 PUSH2 0x6C2 PUSH2 0x1941 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD DUP3 MSTORE PUSH2 0x1A2 SWAP2 SWAP1 PUSH1 0xC0 SWAP1 DUP2 SWAP1 PUSH2 0x6F9 PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x20 DUP7 ADD MSTORE JUMP JUMPDEST PUSH2 0x708 PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x40 DUP7 ADD MSTORE JUMP JUMPDEST PUSH2 0x717 PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x60 DUP7 ADD MSTORE JUMP JUMPDEST PUSH2 0x726 PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0x80 DUP7 ADD MSTORE JUMP JUMPDEST PUSH1 0xA0 DUP2 DUP2 ADD MLOAD ISZERO ISZERO SWAP1 DUP6 ADD MSTORE ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0xE0 DUP2 ADD SWAP3 SWAP2 PUSH2 0x1A2 SWAP2 SWAP1 PUSH2 0x6DC JUMP JUMPDEST CALLVALUE PUSH2 0x187 JUMPI PUSH2 0x1D9 PUSH2 0x76D PUSH2 0x768 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A4 JUMP JUMPDEST PUSH2 0x1A27 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x742 JUMP JUMPDEST CALLVALUE PUSH2 0x187 JUMPI PUSH2 0x1D9 PUSH2 0x378 PUSH2 0x78F CALLDATASIZE PUSH1 0x4 PUSH2 0x64F JUMP JUMPDEST SWAP3 SWAP2 SWAP1 SWAP2 PUSH2 0x1EB0 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0xA0 DUP4 DUP3 SUB SLT PUSH2 0x187 JUMPI PUSH2 0x7AE DUP2 DUP5 PUSH2 0x195 JUMP JUMPDEST SWAP3 PUSH2 0x7BC DUP3 PUSH1 0x20 DUP4 ADD PUSH2 0x195 JUMP JUMPDEST SWAP3 PUSH2 0x1B8 PUSH2 0x7CD DUP5 PUSH1 0x40 DUP6 ADD PUSH2 0x195 JUMP JUMPDEST SWAP4 PUSH1 0x80 PUSH2 0x684 DUP3 PUSH1 0x60 DUP8 ADD PUSH2 0x195 JUMP JUMPDEST CALLVALUE PUSH2 0x187 JUMPI PUSH2 0x1D3 PUSH2 0x7F0 CALLDATASIZE PUSH1 0x4 PUSH2 0x798 JUMP JUMPDEST SWAP4 SWAP3 SWAP1 SWAP3 PUSH2 0x2044 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0x187 JUMPI PUSH2 0x1B8 SWAP1 PUSH1 0x20 PUSH2 0x815 DUP3 DUP7 PUSH2 0x195 JUMP JUMPDEST SWAP5 ADD PUSH2 0x3C9 JUMP JUMPDEST CALLVALUE PUSH2 0x187 JUMPI PUSH2 0x1D9 PUSH2 0x63D PUSH2 0x832 CALLDATASIZE PUSH1 0x4 PUSH2 0x7F9 JUMP JUMPDEST SWAP1 PUSH2 0x2051 JUMP JUMPDEST SWAP1 SWAP2 DUP3 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x187 JUMPI DUP2 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x187 JUMPI PUSH1 0x20 ADD SWAP3 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH2 0x187 JUMPI JUMP JUMPDEST SWAP2 PUSH1 0x60 DUP4 DUP4 SUB SLT PUSH2 0x187 JUMPI PUSH2 0x87D DUP3 DUP5 PUSH2 0x195 JUMP JUMPDEST SWAP3 PUSH2 0x88B DUP4 PUSH1 0x20 DUP4 ADD PUSH2 0x195 JUMP JUMPDEST SWAP3 PUSH1 0x40 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x187 JUMPI PUSH2 0x8AA SWAP3 ADD PUSH2 0x838 JUMP JUMPDEST SWAP1 SWAP2 JUMP JUMPDEST CALLVALUE PUSH2 0x187 JUMPI PUSH2 0x1D9 PUSH2 0x63D PUSH2 0x8C4 CALLDATASIZE PUSH1 0x4 PUSH2 0x868 JUMP JUMPDEST SWAP3 SWAP2 SWAP1 SWAP2 PUSH2 0x20C6 JUMP JUMPDEST PUSH2 0x8FA PUSH2 0x1A2 SWAP5 PUSH2 0x8F3 PUSH1 0x60 SWAP5 SWAP9 SWAP8 SWAP6 PUSH2 0x8EC PUSH1 0x80 DUP7 ADD SWAP11 PUSH1 0x0 DUP8 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE JUMP JUMPDEST ADD MSTORE JUMP JUMPDEST CALLVALUE PUSH2 0x187 JUMPI PUSH2 0x90E CALLDATASIZE PUSH1 0x4 PUSH2 0x388 JUMP JUMPDEST PUSH2 0x1D9 PUSH1 0x0 DUP1 DUP1 DUP1 PUSH2 0x922 SWAP5 SWAP3 SWAP5 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP5 DUP6 SWAP5 DUP6 PUSH2 0x8CD JUMP JUMPDEST DUP1 MLOAD DUP3 MSTORE PUSH2 0x1B8 SWAP2 PUSH1 0xA0 DUP2 ADD SWAP2 PUSH1 0x80 SWAP1 PUSH2 0x94A PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x20 DUP6 ADD MSTORE JUMP JUMPDEST PUSH2 0x959 PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x40 DUP6 ADD MSTORE JUMP JUMPDEST PUSH2 0x968 PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x60 DUP6 ADD MSTORE JUMP JUMPDEST ADD MLOAD SWAP1 PUSH1 0x80 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x1E1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH2 0x1B8 SWAP3 SWAP2 ADD SWAP1 PUSH2 0x92B JUMP JUMPDEST CALLVALUE PUSH2 0x187 JUMPI PUSH2 0x1D9 PUSH2 0x9A8 PUSH2 0x99F CALLDATASIZE PUSH1 0x4 PUSH2 0x64F JUMP JUMPDEST SWAP3 SWAP2 SWAP1 SWAP2 PUSH2 0x2120 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x978 JUMP JUMPDEST CALLVALUE PUSH2 0x187 JUMPI PUSH2 0x1D3 PUSH2 0x9C7 CALLDATASIZE PUSH1 0x4 PUSH2 0x3D6 JUMP JUMPDEST PUSH2 0x21CA JUMP JUMPDEST PUSH2 0x1A2 SWAP1 PUSH2 0x9D8 PUSH2 0x21D3 JUMP JUMPDEST PUSH2 0xC6B JUMP JUMPDEST PUSH2 0x1B8 PUSH2 0x1B8 PUSH2 0x1B8 SWAP3 SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x9F4 SWAP1 PUSH2 0x9DD JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x1B8 SWAP1 PUSH2 0x605 JUMP JUMPDEST PUSH2 0x1B8 SWAP1 SLOAD PUSH2 0xA02 JUMP JUMPDEST ISZERO PUSH2 0xA1C JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x526F756E64206E6F7420616374697665 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x1B8 SWAP1 DUP2 JUMP JUMPDEST PUSH2 0x1B8 SWAP1 SLOAD PUSH2 0xA54 JUMP JUMPDEST ISZERO PUSH2 0xA6C JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x149BDD5B99081B9BDD08195B991959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0xAAA JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E74207061727469636970616E747300000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 PUSH1 0xFF SWAP1 JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0xB0E PUSH2 0x1B8 PUSH2 0xB15 SWAP3 ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP3 SLOAD PUSH2 0xAEF JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xB51 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0xB19 JUMP JUMPDEST SWAP1 PUSH2 0x1A2 PUSH2 0xB63 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 PUSH2 0xB2F JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xB51 JUMPI PUSH1 0x20 DUP1 SWAP2 MUL ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0xB94 PUSH2 0xB8F DUP4 PUSH2 0xB6A JUMP JUMPDEST PUSH2 0xB56 JUMP JUMPDEST SWAP2 DUP3 MSTORE JUMP JUMPDEST CALLDATASIZE SWAP1 CALLDATACOPY JUMP JUMPDEST SWAP1 PUSH2 0x1A2 PUSH2 0xBB4 PUSH2 0xBAE DUP5 PUSH2 0xB82 JUMP JUMPDEST SWAP4 PUSH2 0xB6A JUMP JUMPDEST PUSH1 0x1F NOT ADD PUSH1 0x20 DUP5 ADD PUSH2 0xB99 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0xBFA JUMPI PUSH2 0xBF1 PUSH1 0x1 SWAP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP2 MUL ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0xBC1 JUMP JUMPDEST PUSH2 0x1B8 SWAP2 PUSH1 0x8 MUL SHR DUP2 JUMP JUMPDEST SWAP1 PUSH2 0x1B8 SWAP2 SLOAD PUSH2 0xBFF JUMP JUMPDEST SWAP1 PUSH2 0xC1E DUP3 MLOAD SWAP1 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0xBFA JUMPI PUSH1 0x20 DUP1 SWAP2 MUL ADD ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 NOT SWAP1 PUSH2 0xAF4 JUMP JUMPDEST SWAP1 PUSH2 0xC47 PUSH2 0x1B8 PUSH2 0xB15 SWAP3 SWAP1 JUMP JUMPDEST DUP3 SLOAD PUSH2 0xC2F JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x60 DUP2 ADD SWAP4 SWAP3 PUSH2 0x1A2 SWAP3 SWAP1 SWAP2 PUSH1 0x40 SWAP2 PUSH2 0x8FA SWAP1 PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH2 0xC79 PUSH2 0x1B8 DUP3 PUSH1 0x2 PUSH2 0x9EA JUMP JUMPDEST SWAP1 PUSH1 0x7 DUP3 ADD SWAP3 PUSH2 0xC90 PUSH2 0xC8B DUP6 PUSH2 0xA0B JUMP JUMPDEST PUSH2 0xA15 JUMP JUMPDEST PUSH2 0xCAA PUSH2 0xCA2 PUSH2 0x1B8 PUSH1 0x5 DUP7 ADD PUSH2 0xA5B JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0xA65 JUMP JUMPDEST PUSH2 0xCE0 PUSH1 0x0 PUSH1 0x8 DUP6 ADD SWAP6 PUSH2 0xCDB PUSH2 0xCC0 DUP9 PUSH2 0xA5B JUMP JUMPDEST PUSH2 0xCD4 PUSH2 0xCD0 PUSH2 0x1B8 PUSH1 0x8 PUSH2 0xA5B JUMP JUMPDEST SWAP2 SWAP1 JUMP JUMPDEST LT ISZERO PUSH2 0xAA3 JUMP JUMPDEST PUSH2 0xAFE JUMP JUMPDEST PUSH1 0x1 DUP4 ADD SWAP1 PUSH2 0xCF5 PUSH2 0xCF0 DUP4 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB9E JUMP JUMPDEST SWAP3 PUSH2 0xD00 PUSH1 0x0 PUSH2 0x9DD JUMP JUMPDEST PUSH2 0xD0B PUSH2 0x1B8 DUP6 SLOAD SWAP1 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0xD44 JUMPI DUP1 PUSH2 0xD39 PUSH2 0xD2C PUSH2 0xD26 PUSH2 0xD3F SWAP5 DUP9 PUSH2 0xBD7 JUMP JUMPDEST SWAP1 PUSH2 0xC0A JUMP JUMPDEST PUSH2 0xD36 DUP4 DUP10 PUSH2 0xC15 JUMP JUMPDEST MSTORE JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH2 0xD00 JUMP JUMPDEST POP SWAP4 SWAP2 POP SWAP4 PUSH2 0xD96 PUSH2 0xD90 PUSH2 0xD9C SWAP3 PUSH2 0xD8B PUSH1 0x9 PUSH2 0xD82 PUSH32 0x702CA2B43EB700BF6C35CD0FD463096F3F976F36ABF9A0640B9111D2774E9095 SWAP9 PUSH2 0x2261 JUMP JUMPDEST SWAP7 ADD SWAP6 DUP7 PUSH2 0xC39 JUMP JUMPDEST PUSH2 0xA5B JUMP JUMPDEST SWAP3 PUSH2 0xA5B JUMP JUMPDEST SWAP4 PUSH2 0x9DD JUMP JUMPDEST SWAP3 PUSH2 0xDB4 PUSH2 0xDA9 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 SWAP3 TIMESTAMP SWAP2 DUP5 PUSH2 0xC4E JUMP JUMPDEST SUB SWAP1 LOG2 JUMP JUMPDEST PUSH2 0x1A2 SWAP1 PUSH2 0x9CC JUMP JUMPDEST PUSH2 0x1B8 PUSH2 0x160 PUSH2 0xB56 JUMP JUMPDEST PUSH2 0xDD5 PUSH2 0xDC2 JUMP JUMPDEST SWAP1 PUSH1 0x0 DUP3 MSTORE PUSH1 0x20 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP13 ADD PUSH1 0x60 DUP2 MSTORE ADD PUSH1 0x60 DUP2 MSTORE ADD PUSH1 0x60 DUP2 MSTORE ADD PUSH1 0x0 DUP2 MSTORE ADD PUSH1 0x0 JUMPDEST DUP2 MSTORE ADD PUSH1 0x0 DUP2 MSTORE ADD PUSH1 0x0 DUP2 MSTORE ADD PUSH1 0x0 DUP2 MSTORE ADD PUSH1 0x0 DUP2 MSTORE ADD PUSH1 0x0 SWAP1 MSTORE POP JUMP JUMPDEST PUSH2 0x1B8 PUSH2 0xDCD JUMP JUMPDEST SWAP1 PUSH2 0xE40 PUSH2 0xE34 PUSH2 0x1F0 DUP5 SLOAD SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0xE51 JUMPI POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 PUSH2 0xE75 PUSH2 0xE6E PUSH1 0x1 SWAP3 PUSH2 0xE66 DUP8 PUSH2 0xA5B JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP5 PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 ADD PUSH2 0xE44 JUMP JUMPDEST SWAP1 PUSH2 0x1B8 SWAP2 PUSH2 0xE25 JUMP JUMPDEST SWAP1 PUSH2 0x1A2 PUSH2 0xEA1 SWAP3 PUSH2 0xE98 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP4 DUP5 DUP1 SWAP3 PUSH2 0xE7D JUMP JUMPDEST SUB DUP4 PUSH2 0xB2F JUMP JUMPDEST SWAP1 PUSH2 0xEB7 PUSH2 0xE34 PUSH2 0x1F0 DUP5 SLOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0xEC8 JUMPI POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 PUSH2 0xEDD PUSH2 0xE6E PUSH1 0x1 SWAP3 PUSH2 0xE66 DUP8 PUSH2 0xA5B JUMP JUMPDEST SWAP3 SWAP2 ADD PUSH2 0xEBB JUMP JUMPDEST SWAP1 PUSH2 0x1B8 SWAP2 PUSH2 0xEA8 JUMP JUMPDEST SWAP1 PUSH2 0x1A2 PUSH2 0xEA1 SWAP3 PUSH2 0xF00 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP4 DUP5 DUP1 SWAP3 PUSH2 0xEE5 JUMP JUMPDEST PUSH2 0x1B8 SWAP1 PUSH1 0x8 SHR PUSH2 0x605 JUMP JUMPDEST PUSH2 0x1B8 SWAP1 SLOAD PUSH2 0xF09 JUMP JUMPDEST SWAP1 PUSH2 0x1A2 PUSH2 0x1013 PUSH1 0x9 PUSH2 0xF30 PUSH2 0xDC2 JUMP JUMPDEST SWAP5 PUSH2 0xF41 PUSH2 0xF3D DUP3 PUSH2 0xA5B JUMP JUMPDEST DUP8 MSTORE JUMP JUMPDEST PUSH2 0xF57 PUSH2 0xF50 PUSH1 0x1 DUP4 ADD PUSH2 0xE87 JUMP JUMPDEST PUSH1 0x20 DUP9 ADD MSTORE JUMP JUMPDEST PUSH2 0xF6D PUSH2 0xF66 PUSH1 0x2 DUP4 ADD PUSH2 0xE87 JUMP JUMPDEST PUSH1 0x40 DUP9 ADD MSTORE JUMP JUMPDEST PUSH2 0xF83 PUSH2 0xF7C PUSH1 0x3 DUP4 ADD PUSH2 0xEEF JUMP JUMPDEST PUSH1 0x60 DUP9 ADD MSTORE JUMP JUMPDEST PUSH2 0xF99 PUSH2 0xF92 PUSH1 0x4 DUP4 ADD PUSH2 0xA5B JUMP JUMPDEST PUSH1 0x80 DUP9 ADD MSTORE JUMP JUMPDEST PUSH2 0xFAF PUSH2 0xFA8 PUSH1 0x5 DUP4 ADD PUSH2 0xA5B JUMP JUMPDEST PUSH1 0xA0 DUP9 ADD MSTORE JUMP JUMPDEST PUSH2 0xFC5 PUSH2 0xFBE PUSH1 0x6 DUP4 ADD PUSH2 0xA5B JUMP JUMPDEST PUSH1 0xC0 DUP9 ADD MSTORE JUMP JUMPDEST PUSH2 0xFDD PUSH2 0xFD4 PUSH1 0x7 DUP4 ADD PUSH2 0xA0B JUMP JUMPDEST ISZERO ISZERO PUSH1 0xE0 DUP9 ADD MSTORE JUMP JUMPDEST PUSH2 0xFF6 PUSH2 0xFEC PUSH1 0x7 DUP4 ADD PUSH2 0xF15 JUMP JUMPDEST ISZERO ISZERO PUSH2 0x100 DUP9 ADD MSTORE JUMP JUMPDEST PUSH2 0x100D PUSH2 0x1005 PUSH1 0x8 DUP4 ADD PUSH2 0xA5B JUMP JUMPDEST PUSH2 0x120 DUP9 ADD MSTORE JUMP JUMPDEST ADD PUSH2 0xA5B JUMP JUMPDEST PUSH2 0x140 DUP5 ADD MSTORE JUMP JUMPDEST PUSH2 0x1B8 SWAP1 PUSH2 0xF1F JUMP JUMPDEST PUSH2 0x103B PUSH2 0x1B8 SWAP2 PUSH2 0x1033 PUSH2 0xE1D JUMP JUMPDEST POP PUSH1 0x2 PUSH2 0x9EA JUMP JUMPDEST PUSH2 0x101B JUMP JUMPDEST PUSH2 0x1B8 SWAP1 PUSH2 0x9DD JUMP JUMPDEST PUSH2 0x9DD JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x106E JUMPI MOD SWAP1 JUMP JUMPDEST PUSH2 0x104E JUMP JUMPDEST PUSH2 0x1090 PUSH2 0x108B PUSH2 0x1B8 SWAP3 PUSH2 0x1085 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH2 0x2419 JUMP JUMPDEST PUSH2 0x1040 JUMP JUMPDEST PUSH2 0x109A PUSH1 0x9 PUSH2 0xA5B JUMP JUMPDEST SWAP1 PUSH2 0x1064 JUMP JUMPDEST PUSH2 0x1B8 SWAP1 PUSH2 0x10AC PUSH2 0x21D3 JUMP JUMPDEST PUSH2 0x1454 JUMP JUMPDEST ISZERO PUSH2 0x10B8 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x135A5E1A5B99C8191A5CD8589B1959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x1114 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH2 0x10EF JUMP JUMPDEST SWAP1 PUSH2 0xC47 PUSH2 0x1B8 PUSH2 0xB15 SWAP3 PUSH2 0x9DD JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x1134 JUMP JUMPDEST SWAP3 SWAP1 JUMP JUMPDEST DUP3 ADD DUP1 SWAP3 GT PUSH2 0x1114 JUMPI JUMP JUMPDEST SWAP2 PUSH1 0x0 NOT PUSH1 0x8 SWAP3 SWAP1 SWAP3 MUL SWAP2 DUP3 SHL SWAP2 SHL PUSH2 0xAF4 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x1162 PUSH2 0x1B8 PUSH2 0xB15 SWAP4 SWAP1 JUMP JUMPDEST SWAP1 DUP4 SLOAD PUSH2 0x113F JUMP JUMPDEST PUSH2 0x1A2 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x1153 JUMP JUMPDEST DUP2 DUP2 LT PUSH2 0x1181 JUMPI POP POP JUMP JUMPDEST DUP1 PUSH2 0x118F PUSH1 0x0 PUSH1 0x1 SWAP4 PUSH2 0x116A JUMP JUMPDEST ADD PUSH2 0x1176 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 DUP3 DUP3 LT PUSH2 0x11A4 JUMPI POP POP POP JUMP JUMPDEST PUSH2 0x1A2 SWAP3 SWAP2 PUSH2 0x11BA SWAP1 JUMPDEST SWAP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x1176 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x40 SHL DUP2 GT PUSH2 0xB51 JUMPI DUP2 PUSH2 0x11DC PUSH2 0x1A2 SWAP4 SLOAD SWAP1 JUMP JUMPDEST SWAP1 DUP3 DUP2 SSTORE PUSH2 0x1195 JUMP JUMPDEST DUP2 MLOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0xB51 JUMPI PUSH2 0x1210 PUSH2 0xE34 PUSH1 0x1 SWAP3 PUSH2 0x120A DUP7 DUP7 PUSH2 0x11C4 JUMP JUMPDEST PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 DIV SWAP2 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x1223 JUMPI POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SWAP1 PUSH1 0x20 PUSH2 0x1233 PUSH2 0x1B8 DUP7 MLOAD SWAP1 JUMP JUMPDEST SWAP5 ADD SWAP4 DUP2 DUP5 ADD SSTORE ADD PUSH2 0x1216 JUMP JUMPDEST SWAP1 PUSH2 0x1A2 SWAP2 PUSH2 0x11E5 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x1162 PUSH2 0x1B8 PUSH2 0xB15 SWAP4 PUSH2 0x9DD JUMP JUMPDEST PUSH2 0x1A2 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x124A JUMP JUMPDEST DUP2 DUP2 LT PUSH2 0x1272 JUMPI POP POP JUMP JUMPDEST DUP1 PUSH2 0x1280 PUSH1 0x0 PUSH1 0x1 SWAP4 PUSH2 0x125B JUMP JUMPDEST ADD PUSH2 0x1267 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 DUP3 DUP3 LT PUSH2 0x1295 JUMPI POP POP POP JUMP JUMPDEST PUSH2 0x1A2 SWAP3 SWAP2 PUSH2 0x12A3 SWAP1 PUSH2 0x11AE JUMP JUMPDEST SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x1267 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x40 SHL DUP2 GT PUSH2 0xB51 JUMPI DUP2 PUSH2 0x12C5 PUSH2 0x1A2 SWAP4 SLOAD SWAP1 JUMP JUMPDEST SWAP1 DUP3 DUP2 SSTORE PUSH2 0x1286 JUMP JUMPDEST DUP2 MLOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0xB51 JUMPI PUSH2 0x12F3 PUSH2 0xE34 PUSH1 0x1 SWAP3 PUSH2 0x120A DUP7 DUP7 PUSH2 0x12AD JUMP JUMPDEST SWAP3 DIV SWAP2 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x1306 JUMPI POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SWAP1 PUSH1 0x20 PUSH2 0x1316 PUSH2 0x1B8 DUP7 MLOAD SWAP1 JUMP JUMPDEST SWAP5 ADD SWAP4 DUP2 DUP5 ADD SSTORE ADD PUSH2 0x12F9 JUMP JUMPDEST SWAP1 PUSH2 0x1A2 SWAP2 PUSH2 0x12CE JUMP JUMPDEST SWAP1 PUSH2 0xFF00 SWAP1 PUSH1 0x8 SHL PUSH2 0xAF4 JUMP JUMPDEST SWAP1 PUSH2 0x134A PUSH2 0x1B8 PUSH2 0xB15 SWAP3 ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x132D JUMP JUMPDEST PUSH1 0x9 PUSH2 0x1443 PUSH2 0x140 PUSH2 0x1A2 SWAP5 PUSH2 0x1371 PUSH2 0x136B PUSH1 0x0 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST DUP7 PUSH2 0x1119 JUMP JUMPDEST PUSH2 0x1388 PUSH2 0x137F PUSH1 0x20 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP8 ADD PUSH2 0x1240 JUMP JUMPDEST PUSH2 0x139F PUSH2 0x1396 PUSH1 0x40 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP8 ADD PUSH2 0x1240 JUMP JUMPDEST PUSH2 0x13B6 PUSH2 0x13AD PUSH1 0x60 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x3 DUP8 ADD PUSH2 0x1323 JUMP JUMPDEST PUSH2 0x13CD PUSH2 0x13C4 PUSH1 0x80 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x4 DUP8 ADD PUSH2 0x1119 JUMP JUMPDEST PUSH2 0x13E4 PUSH2 0x13DB PUSH1 0xA0 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x5 DUP8 ADD PUSH2 0x1119 JUMP JUMPDEST PUSH2 0x13FB PUSH2 0x13F2 PUSH1 0xC0 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x6 DUP8 ADD PUSH2 0x1119 JUMP JUMPDEST PUSH2 0x1426 PUSH1 0x7 DUP7 ADD PUSH2 0x1418 PUSH2 0x1412 PUSH1 0xE0 DUP6 ADD MLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP3 PUSH2 0xAFE JUMP JUMPDEST PUSH2 0x100 DUP4 ADD MLOAD ISZERO ISZERO SWAP1 PUSH2 0x133A JUMP JUMPDEST PUSH2 0x143E PUSH2 0x1435 PUSH2 0x120 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x8 DUP8 ADD PUSH2 0x1119 JUMP JUMPDEST ADD MLOAD SWAP1 JUMP JUMPDEST SWAP2 ADD PUSH2 0xC39 JUMP JUMPDEST SWAP1 PUSH2 0x1A2 SWAP2 PUSH2 0x1351 JUMP JUMPDEST POP PUSH2 0x145F PUSH1 0xC PUSH2 0xA0B JUMP JUMPDEST PUSH2 0x1468 SWAP1 PUSH2 0x10B1 JUMP JUMPDEST PUSH2 0x1472 PUSH1 0x7 PUSH2 0xA5B JUMP JUMPDEST PUSH2 0x147B DUP2 PUSH2 0x1105 JUMP JUMPDEST PUSH2 0x1486 SWAP1 PUSH1 0x7 PUSH2 0x1119 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1491 DUP2 PUSH2 0x9DD JUMP JUMPDEST SWAP1 PUSH2 0x149B DUP3 PUSH2 0xB9E JUMP JUMPDEST SWAP2 PUSH2 0x14A5 DUP2 PUSH2 0xB9E JUMP JUMPDEST SWAP2 PUSH2 0x14AF DUP3 PUSH2 0xB9E JUMP JUMPDEST PUSH2 0x14B9 PUSH1 0xA PUSH2 0xA5B JUMP JUMPDEST PUSH2 0x14C3 SWAP1 TIMESTAMP PUSH2 0x1129 JUMP JUMPDEST PUSH2 0x14CD PUSH1 0xA PUSH2 0xA5B JUMP JUMPDEST PUSH2 0x14D7 SWAP1 TIMESTAMP PUSH2 0x1129 JUMP JUMPDEST PUSH2 0x14E1 PUSH1 0xB PUSH2 0xA5B JUMP JUMPDEST PUSH2 0x14EA SWAP2 PUSH2 0x1129 JUMP JUMPDEST SWAP2 PUSH2 0x14F4 DUP5 PUSH2 0x9DD JUMP JUMPDEST SWAP6 PUSH2 0x14FD PUSH2 0xDC2 JUMP JUMPDEST SWAP8 PUSH2 0x1508 DUP11 DUP8 DUP12 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 DUP10 ADD MSTORE PUSH1 0x40 DUP9 ADD MSTORE PUSH1 0x60 DUP8 ADD MSTORE PUSH2 0x1522 TIMESTAMP PUSH1 0x80 DUP9 ADD MSTORE JUMP JUMPDEST PUSH1 0xA0 DUP7 ADD MSTORE PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0xE0 DUP6 ADD MSTORE ISZERO ISZERO PUSH2 0x100 DUP5 ADD MSTORE PUSH2 0x120 DUP4 ADD MSTORE PUSH2 0x140 DUP3 ADD MSTORE DUP1 PUSH2 0x1553 DUP4 PUSH1 0x2 PUSH2 0x9EA JUMP JUMPDEST SWAP1 PUSH2 0x155D SWAP2 PUSH2 0x144A JUMP JUMPDEST PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0xA0 SWAP1 SWAP2 ADD MLOAD PUSH2 0x1572 PUSH1 0x8 PUSH2 0xA5B JUMP JUMPDEST SWAP1 PUSH2 0x157C DUP5 PUSH2 0x9DD JUMP JUMPDEST SWAP3 PUSH2 0x1586 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 SWAP3 PUSH2 0x1593 SWAP3 DUP5 PUSH2 0xC4E JUMP JUMPDEST SUB PUSH32 0x87A3241A0380A7685F0CFD2544C5D771C51DC926DD74D20D81EE1AEA62FBFB55 SWAP2 LOG2 SWAP1 JUMP JUMPDEST PUSH2 0x1B8 PUSH1 0x0 PUSH2 0x10A0 JUMP JUMPDEST PUSH2 0x1B8 SWAP1 PUSH2 0x3AE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 JUMP JUMPDEST PUSH2 0x1B8 SWAP1 PUSH2 0x15C4 JUMP JUMPDEST PUSH2 0x1B8 SWAP1 PUSH2 0x15D8 JUMP JUMPDEST SWAP1 PUSH2 0x9F4 SWAP1 PUSH2 0x15E1 JUMP JUMPDEST PUSH2 0x1B8 SWAP1 PUSH2 0xEEF JUMP JUMPDEST PUSH2 0x1614 PUSH2 0x1B8 SWAP2 PUSH2 0x160C PUSH1 0x60 SWAP1 JUMP JUMPDEST POP PUSH1 0x4 PUSH2 0x15EA JUMP JUMPDEST PUSH2 0x15F4 JUMP JUMPDEST PUSH2 0x1B8 PUSH1 0x7 PUSH2 0xA5B JUMP JUMPDEST SWAP1 PUSH2 0x1B8 SWAP2 PUSH2 0x1630 PUSH2 0x21D3 JUMP JUMPDEST PUSH2 0x1681 JUMP JUMPDEST ISZERO PUSH2 0x163C JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x52657665616C2074696D65206E6F742072656163686564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x1B8 SWAP2 PUSH2 0x16A4 PUSH2 0x169C PUSH2 0x1B8 PUSH1 0x6 PUSH2 0x100D DUP7 PUSH1 0x2 PUSH2 0x9EA JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x1635 JUMP JUMPDEST PUSH2 0x1701 JUMP JUMPDEST ISZERO PUSH2 0x16B0 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x149BDD5B9908185B1C9958591E481C995D99585B1959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP2 ADD SWAP3 SWAP2 PUSH2 0x1A2 SWAP2 PUSH1 0x20 ADD MSTORE JUMP JUMPDEST POP PUSH2 0x1744 PUSH2 0x173E PUSH1 0x8 PUSH2 0x1718 PUSH2 0x1B8 DUP6 PUSH1 0x2 PUSH2 0x9EA JUMP JUMPDEST PUSH2 0x100D PUSH1 0x1 PUSH1 0x7 DUP4 ADD PUSH2 0x1739 PUSH2 0x1734 PUSH2 0x1730 DUP4 PUSH2 0xF15 JUMP JUMPDEST ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x16A9 JUMP JUMPDEST PUSH2 0x133A JUMP JUMPDEST SWAP2 PUSH2 0x9DD JUMP JUMPDEST PUSH32 0xD48FE253BDB396C73BC32F7B556A42456788B817D0254DD2469873141CA91C24 PUSH2 0x176E PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST DUP1 PUSH2 0x177A TIMESTAMP DUP7 DUP4 PUSH2 0x16EE JUMP JUMPDEST SUB SWAP1 LOG2 SWAP1 JUMP JUMPDEST PUSH2 0x1B8 SWAP1 PUSH1 0x0 PUSH2 0x1623 JUMP JUMPDEST PUSH2 0x1B8 SWAP1 PUSH2 0x3AE JUMP JUMPDEST PUSH2 0x1B8 SWAP1 SLOAD PUSH2 0x178B JUMP JUMPDEST SWAP1 PUSH2 0x17AD PUSH2 0xE34 PUSH2 0x1F0 DUP5 SLOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x17BE JUMPI POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 PUSH2 0x17E4 PUSH2 0xE6E PUSH1 0x1 SWAP3 PUSH2 0x17D3 DUP8 PUSH2 0x1794 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 ADD PUSH2 0x17B1 JUMP JUMPDEST SWAP1 PUSH2 0x1B8 SWAP2 PUSH2 0x179E JUMP JUMPDEST SWAP1 PUSH2 0x1A2 PUSH2 0xEA1 SWAP3 PUSH2 0x1807 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP4 DUP5 DUP1 SWAP3 PUSH2 0x17EC JUMP JUMPDEST PUSH2 0x1B8 SWAP1 PUSH2 0x17F6 JUMP JUMPDEST PUSH2 0x1830 PUSH2 0x1B8 SWAP2 PUSH2 0x1828 PUSH1 0x60 SWAP1 JUMP JUMPDEST POP PUSH1 0x5 PUSH2 0x9EA JUMP JUMPDEST PUSH2 0x1810 JUMP JUMPDEST PUSH2 0x1A2 SWAP1 PUSH2 0x1841 PUSH2 0x21D3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH2 0x186B PUSH2 0x1A2 SWAP4 PUSH2 0x1864 PUSH2 0xC8B DUP5 PUSH2 0x185E DUP5 PUSH1 0x2 PUSH2 0x9EA JUMP JUMPDEST ADD PUSH2 0xA0B JUMP JUMPDEST PUSH1 0x2 PUSH2 0x9EA JUMP JUMPDEST ADD PUSH2 0xAFE JUMP JUMPDEST PUSH2 0x1A2 SWAP1 PUSH2 0x1835 JUMP JUMPDEST PUSH2 0x1B8 SWAP1 PUSH2 0xE87 JUMP JUMPDEST PUSH1 0x1 PUSH2 0x1894 PUSH2 0x1B8 SWAP3 PUSH2 0x1033 PUSH1 0x60 SWAP1 JUMP JUMPDEST ADD PUSH2 0x187A JUMP JUMPDEST PUSH2 0x1A2 SWAP1 PUSH2 0x18A6 PUSH2 0x21D3 JUMP JUMPDEST PUSH2 0x1A2 SWAP1 PUSH1 0xC PUSH2 0xAFE JUMP JUMPDEST PUSH2 0x1A2 SWAP1 PUSH2 0x189A JUMP JUMPDEST PUSH2 0x18C2 PUSH2 0x21D3 JUMP JUMPDEST PUSH2 0x1A2 PUSH2 0x18E0 JUMP JUMPDEST PUSH2 0x3AE PUSH2 0x1B8 PUSH2 0x1B8 SWAP3 SWAP1 JUMP JUMPDEST PUSH2 0x1B8 SWAP1 PUSH2 0x18CA JUMP JUMPDEST PUSH2 0x1A2 PUSH2 0x18ED PUSH1 0x0 PUSH2 0x18D7 JUMP JUMPDEST PUSH2 0x2496 JUMP JUMPDEST PUSH2 0x1A2 PUSH2 0x18BA JUMP JUMPDEST SWAP1 PUSH2 0x1A2 SWAP4 SWAP3 SWAP2 PUSH2 0x1909 PUSH2 0x21D3 JUMP JUMPDEST SWAP2 PUSH2 0x1927 PUSH2 0x192E SWAP3 PUSH2 0x1920 PUSH2 0x1A2 SWAP7 SWAP6 PUSH1 0x8 PUSH2 0x1119 JUMP JUMPDEST PUSH1 0x9 PUSH2 0x1119 JUMP JUMPDEST PUSH1 0xA PUSH2 0x1119 JUMP JUMPDEST PUSH1 0xB PUSH2 0x1119 JUMP JUMPDEST SWAP1 PUSH2 0x1A2 SWAP4 SWAP3 SWAP2 PUSH2 0x18FA JUMP JUMPDEST PUSH2 0x1B8 PUSH1 0x0 PUSH2 0x1794 JUMP JUMPDEST PUSH2 0x1B8 PUSH1 0xE0 PUSH2 0xB56 JUMP JUMPDEST PUSH2 0x195D PUSH2 0x194B JUMP JUMPDEST SWAP1 PUSH1 0x0 DUP3 MSTORE PUSH1 0x20 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP9 ADD PUSH1 0x0 PUSH2 0xDFF JUMP JUMPDEST PUSH2 0x1B8 PUSH2 0x1955 JUMP JUMPDEST SWAP1 PUSH2 0x9F4 JUMP JUMPDEST PUSH2 0x1B8 SWAP1 PUSH1 0x8 SHR PUSH2 0x3AE JUMP JUMPDEST PUSH2 0x1B8 SWAP1 SLOAD PUSH2 0x1981 JUMP JUMPDEST SWAP1 PUSH2 0x1A2 PUSH2 0x1A0E PUSH1 0x5 PUSH2 0x19A8 PUSH2 0x194B JUMP JUMPDEST SWAP5 PUSH2 0x19B5 PUSH2 0xF3D DUP3 PUSH2 0xA5B JUMP JUMPDEST PUSH2 0x19C4 PUSH2 0xF50 PUSH1 0x1 DUP4 ADD PUSH2 0xA5B JUMP JUMPDEST PUSH2 0x19D3 PUSH2 0xF66 PUSH1 0x2 DUP4 ADD PUSH2 0xA5B JUMP JUMPDEST PUSH2 0x19E2 PUSH2 0xF7C PUSH1 0x3 DUP4 ADD PUSH2 0xA5B JUMP JUMPDEST PUSH2 0x19F1 PUSH2 0xF92 PUSH1 0x4 DUP4 ADD PUSH2 0xA5B JUMP JUMPDEST PUSH2 0x1A08 PUSH2 0x19FF DUP4 DUP4 ADD PUSH2 0xA0B JUMP JUMPDEST ISZERO ISZERO PUSH1 0xA0 DUP9 ADD MSTORE JUMP JUMPDEST ADD PUSH2 0x198D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0xC0 DUP5 ADD MSTORE JUMP JUMPDEST PUSH2 0x1B8 SWAP1 PUSH2 0x1997 JUMP JUMPDEST PUSH2 0x1A3E PUSH2 0x1B8 SWAP2 PUSH2 0x1A36 PUSH2 0x1973 JUMP JUMPDEST POP PUSH1 0x3 PUSH2 0x197B JUMP JUMPDEST PUSH2 0x1A1E JUMP JUMPDEST SWAP1 PUSH2 0x1B8 SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0x1A5E PUSH2 0xC8B PUSH1 0x7 PUSH2 0x185E DUP6 PUSH1 0x2 PUSH2 0x9EA JUMP JUMPDEST PUSH2 0x1AAF JUMP JUMPDEST ISZERO PUSH2 0x1A6A JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x52616E646F6D6E65737320616C72656164792075736564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x1B8 SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0x1AD5 PUSH2 0x1AD0 PUSH2 0x1730 PUSH2 0x1ACB DUP8 PUSH1 0x6 PUSH2 0x197B JUMP JUMPDEST PUSH2 0xA0B JUMP JUMPDEST PUSH2 0x1A63 JUMP JUMPDEST PUSH2 0x1D19 JUMP JUMPDEST ISZERO PUSH2 0x1AE1 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x149BDD5B9908195B991959 PUSH1 0xAA SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1B1B JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x149BDD5B9908199D5B1B PUSH1 0xB2 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1B54 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x105B1C9958591E481C185C9D1A58DA5C185D1959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB SWAP1 PUSH1 0x8 SHL PUSH2 0xAF4 JUMP JUMPDEST SWAP1 PUSH2 0x1BB3 PUSH2 0x1B8 PUSH2 0xB15 SWAP3 PUSH2 0x15E1 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x1B90 JUMP JUMPDEST SWAP1 PUSH2 0x1C5C PUSH1 0xC0 PUSH1 0x5 PUSH2 0x1A2 SWAP5 PUSH2 0x1BDA PUSH2 0x1BD4 PUSH1 0x0 DUP8 ADD MLOAD SWAP1 JUMP JUMPDEST DUP3 PUSH2 0xC39 JUMP JUMPDEST PUSH2 0x1BF1 PUSH2 0x1BE8 PUSH1 0x20 DUP8 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP4 ADD PUSH2 0xC39 JUMP JUMPDEST PUSH2 0x1C08 PUSH2 0x1BFF PUSH1 0x40 DUP8 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP4 ADD PUSH2 0xC39 JUMP JUMPDEST PUSH2 0x1C1F PUSH2 0x1C16 PUSH1 0x60 DUP8 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x3 DUP4 ADD PUSH2 0x1119 JUMP JUMPDEST PUSH2 0x1C36 PUSH2 0x1C2D PUSH1 0x80 DUP8 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x4 DUP4 ADD PUSH2 0x1119 JUMP JUMPDEST ADD SWAP3 PUSH2 0x1C4E PUSH2 0x1C48 PUSH1 0xA0 DUP4 ADD MLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP6 PUSH2 0xAFE JUMP JUMPDEST ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1BA3 JUMP JUMPDEST SWAP1 PUSH2 0x1A2 SWAP2 PUSH2 0x1BBA JUMP JUMPDEST SWAP1 DUP2 SLOAD SWAP2 PUSH1 0x1 PUSH1 0x40 SHL DUP4 LT ISZERO PUSH2 0xB51 JUMPI DUP3 PUSH2 0x1C8F SWAP2 PUSH1 0x1 PUSH2 0x1A2 SWAP6 ADD DUP2 SSTORE PUSH2 0xBD7 JUMP JUMPDEST SWAP1 PUSH2 0x1153 JUMP JUMPDEST SWAP1 DUP2 SLOAD SWAP2 PUSH1 0x1 PUSH1 0x40 SHL DUP4 LT ISZERO PUSH2 0xB51 JUMPI DUP3 PUSH2 0x1CB8 SWAP2 PUSH1 0x1 PUSH2 0x1A2 SWAP6 ADD DUP2 SSTORE PUSH2 0xBD7 JUMP JUMPDEST SWAP1 PUSH2 0x124A JUMP JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x8 SWAP3 SWAP1 SWAP3 MUL SWAP2 DUP3 SHL SWAP2 SHL PUSH2 0xAF4 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x1CE8 PUSH2 0x1B8 PUSH2 0xB15 SWAP4 PUSH2 0x15E1 JUMP JUMPDEST SWAP1 DUP4 SLOAD PUSH2 0x1CBE JUMP JUMPDEST SWAP1 DUP2 SLOAD SWAP2 PUSH1 0x1 PUSH1 0x40 SHL DUP4 LT ISZERO PUSH2 0xB51 JUMPI DUP3 PUSH2 0x1D13 SWAP2 PUSH1 0x1 PUSH2 0x1A2 SWAP6 ADD DUP2 SSTORE PUSH2 0xBD7 JUMP JUMPDEST SWAP1 PUSH2 0x1CD7 JUMP JUMPDEST POP SWAP1 SWAP3 SWAP2 PUSH2 0x1D28 DUP3 PUSH1 0x2 PUSH2 0x9EA JUMP JUMPDEST PUSH2 0x1D34 PUSH1 0x5 DUP3 ADD PUSH2 0xA5B JUMP JUMPDEST TIMESTAMP GT ISZERO PUSH2 0x1D40 SWAP1 PUSH2 0x1ADA JUMP JUMPDEST DUP4 PUSH1 0x8 DUP3 ADD SWAP2 PUSH2 0x1D4F DUP4 PUSH2 0xA5B JUMP JUMPDEST PUSH2 0x1D59 PUSH1 0x9 PUSH2 0xA5B JUMP JUMPDEST GT PUSH2 0x1D63 SWAP1 PUSH2 0x1B14 JUMP JUMPDEST PUSH2 0x1D6D CALLER DUP7 PUSH2 0x2051 JUMP JUMPDEST ISZERO PUSH2 0x1D77 SWAP1 PUSH2 0x1B4D JUMP JUMPDEST PUSH2 0x1D82 DUP3 DUP6 DUP10 PUSH2 0x24EE JUMP JUMPDEST SWAP7 PUSH2 0x1D8B PUSH2 0x194B JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH2 0x1D99 DUP9 PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH2 0x1DA4 DUP6 PUSH1 0x40 DUP4 ADD MSTORE JUMP JUMPDEST PUSH2 0x1DAF DUP4 PUSH1 0x60 DUP4 ADD MSTORE JUMP JUMPDEST PUSH2 0x1DBA TIMESTAMP PUSH1 0x80 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD MSTORE CALLER PUSH1 0xC0 DUP3 ADD MSTORE PUSH2 0x1DD2 DUP9 PUSH1 0x3 PUSH2 0x197B JUMP JUMPDEST SWAP1 PUSH2 0x1DDC SWAP2 PUSH2 0x1C62 JUMP JUMPDEST PUSH2 0x1DE9 DUP8 PUSH1 0x1 DUP4 ADD PUSH2 0x1C6C JUMP JUMPDEST PUSH2 0x1DF6 DUP5 PUSH1 0x2 DUP4 ADD PUSH2 0x1C6C JUMP JUMPDEST PUSH1 0x3 ADD SWAP1 PUSH2 0x1E03 SWAP2 PUSH2 0x1C95 JUMP JUMPDEST PUSH2 0x1E0C DUP2 PUSH2 0xA5B JUMP JUMPDEST PUSH2 0x1E15 SWAP1 PUSH2 0x1105 JUMP JUMPDEST PUSH2 0x1E1E SWAP2 PUSH2 0x1119 JUMP JUMPDEST PUSH2 0x1E29 DUP3 PUSH1 0x5 PUSH2 0x9EA JUMP JUMPDEST CALLER PUSH2 0x1E33 SWAP2 PUSH2 0x1CF0 JUMP JUMPDEST DUP2 PUSH2 0x1E3F CALLER PUSH1 0x4 PUSH2 0x15EA JUMP JUMPDEST SWAP1 PUSH2 0x1E49 SWAP2 PUSH2 0x1C95 JUMP JUMPDEST PUSH2 0x1E54 SWAP1 PUSH1 0x6 PUSH2 0x197B JUMP JUMPDEST PUSH1 0x1 PUSH2 0x1E5F SWAP2 PUSH2 0xAFE JUMP JUMPDEST PUSH2 0x1E68 SWAP1 PUSH2 0x9DD JUMP JUMPDEST PUSH2 0x1E71 CALLER PUSH2 0x15E1 JUMP JUMPDEST SWAP2 PUSH2 0x1E7B PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST DUP1 SWAP2 TIMESTAMP PUSH2 0x1E89 SWAP2 DUP8 DUP5 PUSH2 0xC4E JUMP JUMPDEST SUB PUSH32 0x57AD1338C773DF8AB4B3A0B286CAE4E4F6D36473D7E7A1F0B3F1B4DE474CD37B SWAP2 LOG3 SWAP1 JUMP JUMPDEST PUSH2 0x1B8 SWAP4 SWAP3 SWAP2 SWAP1 PUSH1 0x0 PUSH2 0x1A43 JUMP JUMPDEST SWAP1 PUSH2 0x1A2 SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0x1EDC PUSH2 0x169C PUSH2 0x1B8 PUSH1 0x6 PUSH2 0x100D DUP6 PUSH1 0x2 PUSH2 0x9EA JUMP JUMPDEST PUSH2 0x1F9E JUMP JUMPDEST ISZERO PUSH2 0x1EE8 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x4E6F7420796F757220766F7465 PUSH1 0x98 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1F24 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x159BDD1948185B1C9958591E481C995D99585B1959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1F68 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x125B9D985B1A59081C995D99585B PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x1049 PUSH1 0x1 PUSH32 0x517DE2D19CD96B554768BE894916AC969B1449096E6033EFC0D82D10A2CEC88C SWAP5 SWAP6 PUSH2 0xCDB PUSH2 0x2021 PUSH2 0x2028 SWAP7 SWAP10 PUSH1 0x5 PUSH2 0x1FE1 PUSH2 0x1B8 DUP14 PUSH1 0x3 PUSH2 0x197B JUMP JUMPDEST ADD SWAP4 PUSH2 0x2007 PUSH2 0x1FEF DUP7 PUSH2 0x198D JUMP JUMPDEST PUSH2 0x2001 CALLER JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST EQ PUSH2 0x1EE1 JUMP JUMPDEST PUSH2 0x201B PUSH2 0x2016 PUSH2 0x1730 DUP8 PUSH2 0xA0B JUMP JUMPDEST PUSH2 0x1F1D JUMP JUMPDEST DUP11 PUSH2 0x24EE JUMP JUMPDEST DUP10 EQ PUSH2 0x1F61 JUMP JUMPDEST SWAP2 PUSH2 0x2032 CALLER PUSH2 0x15E1 JUMP JUMPDEST SWAP4 PUSH2 0x203F PUSH2 0xDA9 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SUB SWAP1 LOG3 JUMP JUMPDEST SWAP1 PUSH2 0x1A2 SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0x1EBE JUMP JUMPDEST PUSH2 0x1830 PUSH2 0x2060 SWAP2 PUSH2 0x1828 PUSH1 0x0 SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x206B PUSH1 0x0 PUSH2 0x9DD JUMP JUMPDEST PUSH2 0x2076 PUSH2 0x1B8 DUP5 MLOAD SWAP1 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x20BE JUMPI PUSH2 0x2097 PUSH2 0x208A DUP3 DUP6 PUSH2 0xC15 JUMP JUMPDEST MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x20A9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1FF4 JUMP JUMPDEST EQ PUSH2 0x20B6 JUMPI PUSH1 0x1 ADD PUSH2 0x206B JUMP JUMPDEST POP POP POP PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST SWAP2 PUSH2 0x20DD PUSH1 0x9 PUSH2 0x100D PUSH2 0x1B8 SWAP7 SWAP5 SWAP6 PUSH2 0x1033 PUSH1 0x0 SWAP1 JUMP JUMPDEST SWAP3 PUSH2 0x2570 JUMP JUMPDEST PUSH2 0x1B8 PUSH1 0xA0 PUSH2 0xB56 JUMP JUMPDEST PUSH2 0x20F5 PUSH2 0x20E3 JUMP JUMPDEST SWAP1 PUSH1 0x0 DUP3 MSTORE PUSH1 0x20 DUP1 DUP1 DUP1 DUP1 DUP7 ADD PUSH1 0x0 DUP2 MSTORE ADD PUSH1 0x0 DUP2 MSTORE ADD PUSH1 0x0 DUP2 MSTORE ADD PUSH1 0x60 SWAP1 MSTORE POP JUMP JUMPDEST PUSH2 0x1B8 PUSH2 0x20ED JUMP JUMPDEST SWAP3 PUSH2 0x216B SWAP1 PUSH2 0x2164 PUSH2 0x1B8 SWAP5 PUSH2 0x2134 PUSH2 0x2118 JUMP JUMPDEST POP PUSH2 0x215D PUSH2 0x2145 PUSH2 0xCF0 PUSH1 0x0 PUSH2 0x9DD JUMP JUMPDEST SWAP6 PUSH2 0x2156 PUSH2 0x2151 PUSH2 0x20E3 JUMP JUMPDEST SWAP10 DUP11 MSTORE JUMP JUMPDEST PUSH1 0x20 DUP10 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 DUP8 ADD MSTORE JUMP JUMPDEST PUSH1 0x60 DUP6 ADD MSTORE JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE JUMP JUMPDEST PUSH2 0x1A2 SWAP1 PUSH2 0x217E PUSH2 0x21D3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2189 DUP2 PUSH2 0x18D7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EQ PUSH2 0x21AD JUMPI POP POP PUSH2 0x1A2 SWAP1 PUSH2 0x2496 JUMP JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH2 0x1A2 SWAP1 PUSH2 0x2172 JUMP JUMPDEST PUSH2 0x21DB PUSH2 0x1941 JUMP JUMPDEST CALLER SWAP1 PUSH2 0x21E6 DUP3 PUSH2 0x1FF4 JUMP JUMPDEST SUB PUSH2 0x21EE JUMPI POP JUMP JUMPDEST PUSH4 0x118CDAA7 PUSH1 0xE0 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 MSTORE PUSH1 0x24 SUB PUSH1 0x0 REVERT JUMPDEST ISZERO PUSH2 0x2217 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x456D707479206C6561766573206172726179 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x106E JUMPI DIV SWAP1 JUMP JUMPDEST ADD SWAP2 DUP3 MSTORE JUMP JUMPDEST SWAP1 PUSH2 0x2280 PUSH2 0x226D DUP4 MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x227A PUSH2 0xCD0 PUSH1 0x0 PUSH2 0x9DD JUMP JUMPDEST GT PUSH2 0x2210 JUMP JUMPDEST DUP2 MLOAD SWAP2 PUSH1 0x1 SWAP3 PUSH2 0x2292 PUSH2 0xCD0 DUP6 PUSH2 0x9DD JUMP JUMPDEST EQ PUSH2 0x23F2 JUMPI PUSH2 0x22B1 PUSH2 0x22A2 DUP3 MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x22AB DUP6 PUSH2 0x9DD JUMP JUMPDEST SWAP1 PUSH2 0x1129 JUMP JUMPDEST SWAP3 PUSH2 0x22CA PUSH2 0xCF0 PUSH1 0x2 SWAP6 PUSH2 0x22C4 DUP8 PUSH2 0x9DD JUMP JUMPDEST SWAP1 PUSH2 0x2251 JUMP JUMPDEST SWAP2 DUP2 PUSH2 0x22D6 PUSH1 0x0 PUSH2 0x9DD JUMP JUMPDEST SWAP1 JUMPDEST PUSH2 0x22EB JUMPI JUMPDEST POP POP POP PUSH2 0x1B8 SWAP2 SWAP3 POP PUSH2 0x258D JUMP JUMPDEST PUSH2 0x22F6 PUSH2 0x1B8 DUP4 MLOAD SWAP1 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x23ED JUMPI SWAP1 PUSH2 0x23C2 DUP4 SWAP3 PUSH2 0x2315 PUSH2 0x230F DUP6 PUSH2 0x9DD JUMP JUMPDEST DUP3 PUSH2 0x1129 JUMP JUMPDEST PUSH2 0x2323 PUSH2 0xCD0 PUSH2 0x1B8 DUP7 MLOAD SWAP1 JUMP JUMPDEST LT ISZERO PUSH2 0x23C9 JUMPI PUSH2 0x23B9 PUSH2 0x2385 PUSH2 0x2391 PUSH2 0x2343 PUSH2 0x233F DUP6 DUP9 PUSH2 0xC15 JUMP JUMPDEST MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x2361 PUSH2 0x233F PUSH2 0x235B PUSH2 0x2355 DUP12 PUSH2 0x9DD JUMP JUMPDEST DUP9 PUSH2 0x1129 JUMP JUMPDEST DUP10 PUSH2 0xC15 JUMP JUMPDEST SWAP1 PUSH2 0x236B PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP4 DUP5 SWAP3 PUSH1 0x20 DUP5 ADD SWAP3 DUP4 PUSH1 0x20 DUP2 PUSH2 0x225B PUSH2 0x1DD SWAP4 DUP4 SWAP7 SWAP6 SWAP1 MSTORE JUMP JUMPDEST SWAP1 DUP2 SUB DUP3 MSTORE SUB DUP3 PUSH2 0xB2F JUMP JUMPDEST PUSH2 0x23A3 PUSH2 0x239C DUP3 MLOAD SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST KECCAK256 PUSH2 0xD36 PUSH2 0x235B PUSH2 0x23B3 DUP13 PUSH2 0x9DD JUMP JUMPDEST DUP6 PUSH2 0x2251 JUMP JUMPDEST PUSH2 0x22AB DUP9 PUSH2 0x9DD JUMP JUMPDEST SWAP1 SWAP2 PUSH2 0x22D8 JUMP JUMPDEST PUSH2 0x23E8 PUSH2 0x23D9 PUSH2 0x233F DUP4 DUP7 PUSH2 0xC15 JUMP JUMPDEST PUSH2 0xD36 PUSH2 0x235B PUSH2 0x23B3 DUP13 PUSH2 0x9DD JUMP JUMPDEST PUSH2 0x23B9 JUMP JUMPDEST PUSH2 0x22DD JUMP JUMPDEST PUSH2 0x1B8 SWAP2 SWAP3 POP PUSH2 0x233F SWAP1 PUSH2 0x2406 PUSH1 0x0 PUSH2 0x9DD JUMP JUMPDEST SWAP1 PUSH2 0xC15 JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x1114 JUMPI JUMP JUMPDEST PUSH2 0x2461 PUSH2 0x2385 SWAP2 PUSH2 0x2428 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH2 0x243C PUSH2 0x2436 PUSH1 0x1 PUSH2 0x9DD JUMP JUMPDEST NUMBER PUSH2 0x240C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 BLOCKHASH PUSH1 0x20 DUP1 DUP4 ADD SWAP2 DUP3 MSTORE SWAP2 SWAP5 DUP6 SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 PUSH2 0x1DD DUP3 PREVRANDAO PUSH2 0x225B DUP3 TIMESTAMP DUP3 DUP3 DUP12 DUP3 JUMP JUMPDEST PUSH2 0x246C PUSH2 0x239C DUP3 MLOAD SWAP1 JUMP JUMPDEST KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH2 0xAF4 JUMP JUMPDEST SWAP1 PUSH2 0x248F PUSH2 0x1B8 PUSH2 0xB15 SWAP3 PUSH2 0x15E1 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x2470 JUMP JUMPDEST PUSH2 0x24BC PUSH2 0x24B6 PUSH2 0x24A6 PUSH1 0x0 PUSH2 0x1794 JUMP JUMPDEST PUSH2 0x24B1 DUP5 PUSH1 0x0 PUSH2 0x247F JUMP JUMPDEST PUSH2 0x15E1 JUMP JUMPDEST SWAP2 PUSH2 0x15E1 JUMP JUMPDEST SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH2 0x24E7 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x203F JUMP JUMPDEST SWAP2 PUSH2 0x2508 SWAP1 PUSH2 0x2385 SWAP3 PUSH2 0x24FF PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x236B JUMP JUMPDEST PUSH2 0x2513 PUSH2 0x239C DUP3 MLOAD SWAP1 JUMP JUMPDEST KECCAK256 XOR SWAP1 JUMP JUMPDEST SWAP1 SWAP3 SWAP2 SWAP3 PUSH2 0x2528 PUSH2 0xB8F DUP3 PUSH2 0xB6A JUMP JUMPDEST SWAP4 DUP2 DUP6 MSTORE PUSH1 0x20 DUP1 DUP7 ADD SWAP3 MUL DUP4 ADD SWAP3 DUP2 DUP5 GT PUSH2 0x187 JUMPI SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x254C JUMPI POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 SWAP2 PUSH2 0x255A DUP5 DUP7 PUSH2 0x195 JUMP JUMPDEST DUP2 MSTORE ADD SWAP3 ADD SWAP2 PUSH2 0x253F JUMP JUMPDEST PUSH2 0x1B8 SWAP2 CALLDATASIZE SWAP2 PUSH2 0x2518 JUMP JUMPDEST SWAP2 PUSH2 0x2588 SWAP1 PUSH2 0x1B8 SWAP5 SWAP3 PUSH2 0x2582 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH2 0x2565 JUMP JUMPDEST PUSH2 0x260E JUMP JUMPDEST SWAP1 DUP2 MLOAD SWAP2 PUSH1 0x1 SWAP3 PUSH2 0x25A0 PUSH2 0xCD0 DUP6 PUSH2 0x9DD JUMP JUMPDEST EQ PUSH2 0x23F2 JUMPI PUSH2 0x25B0 PUSH2 0x22A2 DUP3 MLOAD SWAP1 JUMP JUMPDEST SWAP3 PUSH2 0x25C3 PUSH2 0xCF0 PUSH1 0x2 SWAP6 PUSH2 0x22C4 DUP8 PUSH2 0x9DD JUMP JUMPDEST SWAP2 DUP2 PUSH2 0x25CF PUSH1 0x0 PUSH2 0x9DD JUMP JUMPDEST SWAP1 JUMPDEST PUSH2 0x25E3 JUMPI POP POP POP PUSH2 0x1B8 SWAP2 SWAP3 POP PUSH2 0x258D JUMP JUMPDEST PUSH2 0x25EE PUSH2 0x1B8 DUP4 MLOAD SWAP1 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x23ED JUMPI SWAP1 PUSH2 0x2607 DUP4 SWAP3 PUSH2 0x2315 PUSH2 0x230F DUP6 PUSH2 0x9DD JUMP JUMPDEST SWAP1 SWAP2 PUSH2 0x25D1 JUMP JUMPDEST PUSH2 0x1130 PUSH2 0x2628 SWAP3 SWAP4 PUSH2 0xCD0 SWAP3 PUSH2 0x2622 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH2 0x262C JUMP JUMPDEST EQ SWAP1 JUMP JUMPDEST PUSH2 0x2636 PUSH1 0x0 PUSH2 0x9DD JUMP JUMPDEST SWAP2 JUMPDEST PUSH2 0x2643 PUSH2 0x1B8 DUP4 MLOAD SWAP1 JUMP JUMPDEST DUP4 LT ISZERO PUSH2 0x2671 JUMPI PUSH2 0x2664 PUSH2 0x266B SWAP2 PUSH2 0x265E PUSH2 0x233F DUP7 DUP7 PUSH2 0xC15 JUMP JUMPDEST SWAP1 PUSH2 0x2677 JUMP JUMPDEST SWAP3 PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST SWAP2 PUSH2 0x2638 JUMP JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2692 JUMPI SWAP1 PUSH2 0x1B8 SWAP2 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x1B8 SWAP2 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LT MOD PUSH0 0xEA CODESIZE LT SWAP12 PUSH28 0xC05423A17DCF9B6CDF9202DD1BD4A57162B2160DA40D401764736F6C PUSH4 0x4300081C STOP CALLER ","sourceMap":"378:14812:11:-:0;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;378:14812:11;;;;;;-1:-1:-1;;;;;378:14812:11;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;:::o;:::-;;-1:-1:-1;;378:14812:11;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::i;3189:410::-;;3419:34;3464:32;3189:410;3374:34;3507:26;3189:410;;;3351:10;3189:410;:::i;:::-;3374:34;;:::i;:::-;3419;;:::i;:::-;3464:32;;:::i;:::-;3507:26;;:::i;:::-;3544:16;;3559:1;3544:16;:::i;:::-;;;:::i;:::-;3571:20;3587:4;3571:20;;:::i;1818:40:3:-;1857:1;;;:::i;2037:52::-;;;;:::i;:::-;2061:21;2071:11;;:::i;:::-;2061:21;;:::i;378:14812:11:-;;;;;;;;-1:-1:-1;;;;;378:14812:11;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;:::i;1225:187:0:-;1297:1;1289:10;;;:::i;:::-;1273:26;;;:::i;:::-;;;;:::i;:::-;;1269:95;;1392:12;;;;;:::i;1269:95::-;-1:-1:-1;;;1322:31:0;;;;;;;;;;:::i;:::-;;;;378:14812:11;;;;;;;;;;:::i;:::-;;-1:-1:-1;;;;;378:14812:11;;;;;;;;-1:-1:-1;;;;;378:14812:11;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;:::i;:::-;;;;:::i;2912:187:0:-;3052:40;;3004:6;;;:::i;:::-;3020:17;;;;:::i;:::-;3052:40;:::i;:::-;;;:::i;:::-;;;;378:14812:11;;;;3052:40:0;;;;2912:187::o"},"deployedBytecode":{"functionDebugData":{"abi_decode":{"entryPoint":904,"id":null,"parameterSlots":2,"returnSlots":0},"abi_decode_address":{"entryPoint":969,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_array_bytes32_dyn_calldata":{"entryPoint":2104,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_available_length_array_bytes32_dyn":{"entryPoint":9496,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_bool":{"entryPoint":1464,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_bytes32":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_bytes32t_bytes32t_bytes32t_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_t_bool":{"entryPoint":1451,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_address":{"entryPoint":982,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_uint256":{"entryPoint":420,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_uint256":{"entryPoint":405,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_uint256t_address":{"entryPoint":2041,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_uint256t_bytes32t_array_bytes32_dyn_calldata":{"entryPoint":2152,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_uint256t_bytes32t_bytes32t_bytes32t_uint256":{"entryPoint":1944,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_uint256t_bytes32t_bytes32t_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_uint256t_uint256t_uint256t_uint256":{"entryPoint":1615,"id":null,"parameterSlots":2,"returnSlots":4},"abi_encodeUpdatedPos_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_array_address_dyn_storage":{"entryPoint":6124,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_array_bytes32_dyn_storage":{"entryPoint":3709,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_array_uint256_dyn_storage":{"entryPoint":3813,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_bytes32":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_address_to_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_array_address_dyn":{"entryPoint":1174,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_address_dyn_memory_ptr":{"entryPoint":1245,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_address_dyn_storage":{"entryPoint":6046,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_bytes32_dyn":{"entryPoint":481,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_bytes32_dyn_memory_ptr":{"entryPoint":1387,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_bytes32_dyn_storage":{"entryPoint":3621,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_bytes32_dyn_to_array_bytes32_dyn":{"entryPoint":1325,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_uint256_dyn":{"entryPoint":1064,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_uint256_dyn_memory_ptr":{"entryPoint":1002,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_uint256_dyn_storage":{"entryPoint":3752,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_uint256_dyn_to_array_uint256_dyn":{"entryPoint":567,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_bool":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_bytes32":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_bytes32_bytes32_uint256":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_bytes32_to_bytes32_nonPadded_inplace":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_bytes32_uint256_uint256":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_packed_bytes32_bytes32":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_packed_bytes32_uint256":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_packed_bytes32_uint256_uint256_bytes32":{"entryPoint":null,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_stringliteral":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_2339":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_29b2":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_4b51":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_4b51a346026a42a2d6ebd34e52f86b2b7ded33a11cbeedc5fbca3b42dd345235":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_516c":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_56d2":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_56d2dfa42e94b97ce4f8bcd78ec72cfde368892527b2f6491331b727bd44b34c":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_57a1":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_57a1b922d1c44cf3cc1436441c2b43b8142b903ad199db948d690feac6801915":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_68c3":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_6df6":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_9011":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_a43c":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_d42d":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_d9c9":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_d9c94eaf1f09f279f0fcf497e1e3fcb6dcbe36f01a34dbbd02ee7a3c0ac13629":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_eb2b":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_f8eb":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_struct_MixedVote":{"entryPoint":1858,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_struct_MixedVote_memory_ptr":{"entryPoint":1756,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_struct_MixingProof":{"entryPoint":2424,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_struct_MixingProof_memory_ptr":{"entryPoint":2347,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_struct_MixingRound":{"entryPoint":629,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_struct_MixingRound_memory_ptr":{"entryPoint":805,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_bool":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_bytes32":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_stringliteral":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_stringliteral_29b2":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_stringliteral_516c":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_stringliteral_68c3":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_stringliteral_6df6":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_stringliteral_a43c":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_stringliteral_d42d":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_stringliteral_eb2b":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_stringliteral_f8eb":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_uint256_bytes32_uint256":{"entryPoint":3150,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_uint256_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_uint256_to_uint256_nonPadded_inplace":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_uint256_uint256":{"entryPoint":5870,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_uint256_uint256_uint256":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_uint256_uint256_uint256_uint256":{"entryPoint":2253,"id":null,"parameterSlots":5,"returnSlots":1},"allocate_and_zero_memory_array_array_bytes32_dyn":{"entryPoint":2974,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_and_zero_memory_array_array_uint256_dyn":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_and_zero_memory_struct_struct_MixedVote":{"entryPoint":6485,"id":null,"parameterSlots":0,"returnSlots":1},"allocate_and_zero_memory_struct_struct_MixingProof":{"entryPoint":8429,"id":null,"parameterSlots":0,"returnSlots":1},"allocate_and_zero_memory_struct_struct_MixingRound":{"entryPoint":3533,"id":null,"parameterSlots":0,"returnSlots":1},"allocate_memory":{"entryPoint":2902,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_memory_array_array_bytes32_dyn":{"entryPoint":2946,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_memory_array_array_uint256_dyn":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_memory_struct_struct_MixedVote":{"entryPoint":6475,"id":null,"parameterSlots":0,"returnSlots":1},"allocate_memory_struct_struct_MixingProof":{"entryPoint":8419,"id":null,"parameterSlots":0,"returnSlots":1},"allocate_memory_struct_struct_MixingRound":{"entryPoint":3522,"id":null,"parameterSlots":0,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_array_bytes32_dyn":{"entryPoint":2922,"id":null,"parameterSlots":1,"returnSlots":1},"array_convert_length_to_size_array_bytes32_dyn_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_array_bytes32_dyn":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_array_bytes32_dyn_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_array_bytes32_dyn":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_array_bytes32_dyn_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_array_bytes32_dyn":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_array_bytes32_dyn_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_push_from_address_to_array_address_dyn_storage_ptr":{"entryPoint":7408,"id":null,"parameterSlots":2,"returnSlots":0},"array_push_from_bytes32_to_array_bytes32_dyn_storage_ptr":{"entryPoint":7276,"id":null,"parameterSlots":2,"returnSlots":0},"array_push_from_uint256_to_array_uint256_dyn_storage_ptr":{"entryPoint":7317,"id":null,"parameterSlots":2,"returnSlots":0},"array_storeLengthForEncoding_array_bytes32_dyn":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_uint256":{"entryPoint":4393,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_uint256":{"entryPoint":8785,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_uint256":{"entryPoint":9228,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_address":{"entryPoint":942,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_from_storage_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_storage_array_end_array_bytes32_dyn":{"entryPoint":4501,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_storage_array_end_array_uint256_dyn":{"entryPoint":4742,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_uint160":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_bytes32":{"entryPoint":4470,"id":null,"parameterSlots":2,"returnSlots":0},"clear_storage_range_uint256":{"entryPoint":4711,"id":null,"parameterSlots":2,"returnSlots":0},"convert_address_to_address":{"entryPoint":5601,"id":null,"parameterSlots":1,"returnSlots":1},"convert_array_array_address_dyn_storage_to_array_address_dyn":{"entryPoint":6160,"id":null,"parameterSlots":1,"returnSlots":1},"convert_array_array_bytes32_dyn_calldata_to_array_bytes32_dyn":{"entryPoint":9573,"id":null,"parameterSlots":2,"returnSlots":1},"convert_array_array_bytes32_dyn_storage_to_array_bytes32_dyn":{"entryPoint":6266,"id":null,"parameterSlots":1,"returnSlots":1},"convert_array_array_uint256_dyn_storage_to_array_uint256_dyn":{"entryPoint":5620,"id":null,"parameterSlots":1,"returnSlots":1},"convert_bool_to_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_bytes32_to_bytes32":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_bytes32_to_uint256":{"entryPoint":4160,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_2_by_1_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_by_to_address":{"entryPoint":6359,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_by_to_bytes32":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_by_to_uint160":{"entryPoint":6346,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_by_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_struct_MixedVote_storage_to_struct_MixedVote":{"entryPoint":6686,"id":null,"parameterSlots":1,"returnSlots":1},"convert_struct_MixingRound_storage_to_struct_MixingRound":{"entryPoint":4123,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_rational_by_to_t_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint160_to_address":{"entryPoint":5592,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint160_to_uint160":{"entryPoint":5572,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint256_to_uint256":{"entryPoint":2525,"id":null,"parameterSlots":1,"returnSlots":1},"copy_array_from_storage_to_memory_array_address_dyn":{"entryPoint":6134,"id":null,"parameterSlots":1,"returnSlots":1},"copy_array_from_storage_to_memory_array_bytes32_dyn":{"entryPoint":3719,"id":null,"parameterSlots":1,"returnSlots":1},"copy_array_from_storage_to_memory_array_uint256_dyn":{"entryPoint":3823,"id":null,"parameterSlots":1,"returnSlots":1},"copy_array_to_storage_from_array_bytes32_dyn_to_array_bytes32_dyn":{"entryPoint":4581,"id":null,"parameterSlots":2,"returnSlots":0},"copy_array_to_storage_from_array_uint256_dyn_to_array_uint256_dyn":{"entryPoint":4814,"id":null,"parameterSlots":2,"returnSlots":0},"copy_struct_to_storage_from_struct_MixedVote_to_struct_MixedVote":{"entryPoint":7098,"id":null,"parameterSlots":2,"returnSlots":0},"copy_struct_to_storage_from_struct_MixingRound_to_struct_MixingRound":{"entryPoint":4945,"id":null,"parameterSlots":2,"returnSlots":0},"external_fun_completeMixingRound":{"entryPoint":443,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_createMixingProof":{"entryPoint":2441,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_createMixingRound":{"entryPoint":915,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_emergencyInvalidateRound":{"entryPoint":1301,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_generateMixIndex":{"entryPoint":861,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getMixedVote":{"entryPoint":1874,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getMixingParameters":{"entryPoint":2302,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getMixingRound":{"entryPoint":822,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getRoundMixedVotes":{"entryPoint":1404,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getRoundParticipants":{"entryPoint":1262,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getTotalRounds":{"entryPoint":1120,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getVoterRounds":{"entryPoint":1081,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_hasVoterParticipated":{"entryPoint":2076,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_mixingEnabled":{"entryPoint":1570,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_owner":{"entryPoint":1703,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_renounceOwnership":{"entryPoint":1508,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_revealMixingRound":{"entryPoint":1147,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_revealVote":{"entryPoint":2013,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_setMixingEnabled":{"entryPoint":1484,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_submitVote":{"entryPoint":1913,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_transferOwnership":{"entryPoint":2484,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_updateMixingParameters":{"entryPoint":1675,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_verifyVoteInclusion":{"entryPoint":2222,"id":null,"parameterSlots":0,"returnSlots":0},"extract_from_storage_value_dynamict_bool":{"entryPoint":1532,"id":null,"parameterSlots":2,"returnSlots":1},"extract_from_storage_value_dynamict_bytes32":{"entryPoint":3071,"id":null,"parameterSlots":2,"returnSlots":1},"extract_from_storage_value_offset_address":{"entryPoint":6529,"id":null,"parameterSlots":1,"returnSlots":1},"extract_from_storage_value_offset_bool":{"entryPoint":3849,"id":null,"parameterSlots":1,"returnSlots":1},"extract_from_storage_value_offset_bytes32":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"extract_from_storage_value_offset_t_address":{"entryPoint":6027,"id":null,"parameterSlots":1,"returnSlots":1},"extract_from_storage_value_offset_t_bool":{"entryPoint":2562,"id":null,"parameterSlots":1,"returnSlots":1},"extract_from_storage_value_offset_uint256":{"entryPoint":2644,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":2863,"id":null,"parameterSlots":2,"returnSlots":0},"fun__transferOwnership":{"entryPoint":9366,"id":146,"parameterSlots":1,"returnSlots":0},"fun_checkOwner":{"entryPoint":8659,"id":84,"parameterSlots":0,"returnSlots":0},"fun_commutativeKeccak256":{"entryPoint":9847,"id":729,"parameterSlots":2,"returnSlots":1},"fun_completeMixingRound":{"entryPoint":3513,"id":5496,"parameterSlots":1,"returnSlots":0},"fun_completeMixingRound_inner":{"entryPoint":3179,"id":null,"parameterSlots":1,"returnSlots":0},"fun_createMerkleRootFromLevel":{"entryPoint":9613,"id":7166,"parameterSlots":1,"returnSlots":1},"fun_createMerkleRootFromMemory":{"entryPoint":8801,"id":7072,"parameterSlots":1,"returnSlots":1},"fun_createMixingProof":{"entryPoint":8480,"id":5907,"parameterSlots":4,"returnSlots":1},"fun_createMixingRound":{"entryPoint":5562,"id":5248,"parameterSlots":0,"returnSlots":1},"fun_createMixingRound_inner":{"entryPoint":5204,"id":null,"parameterSlots":1,"returnSlots":1},"fun_efficientKeccak256":{"entryPoint":null,"id":741,"parameterSlots":2,"returnSlots":1},"fun_emergencyInvalidateRound":{"entryPoint":6257,"id":5852,"parameterSlots":1,"returnSlots":0},"fun_emergencyInvalidateRound_inner":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"fun_generateMixIndex":{"entryPoint":4211,"id":5875,"parameterSlots":1,"returnSlots":1},"fun_generateRandomNumber":{"entryPoint":9241,"id":7192,"parameterSlots":1,"returnSlots":1},"fun_getMixedVote":{"entryPoint":6695,"id":5645,"parameterSlots":1,"returnSlots":1},"fun_getMixingParameters":{"entryPoint":null,"id":5775,"parameterSlots":0,"returnSlots":4},"fun_getMixingRound":{"entryPoint":4132,"id":5631,"parameterSlots":1,"returnSlots":1},"fun_getRoundMixedVotes":{"entryPoint":6275,"id":5688,"parameterSlots":1,"returnSlots":1},"fun_getRoundParticipants":{"entryPoint":6169,"id":5659,"parameterSlots":1,"returnSlots":1},"fun_getTotalRounds":{"entryPoint":5657,"id":5784,"parameterSlots":0,"returnSlots":1},"fun_getVoterRounds":{"entryPoint":5629,"id":5673,"parameterSlots":1,"returnSlots":1},"fun_hasVoterParticipated":{"entryPoint":8273,"id":5756,"parameterSlots":2,"returnSlots":1},"fun_mixVote":{"entryPoint":9454,"id":6790,"parameterSlots":3,"returnSlots":1},"fun_msgSender":{"entryPoint":null,"id":159,"parameterSlots":0,"returnSlots":1},"fun_owner":{"entryPoint":6465,"id":67,"parameterSlots":0,"returnSlots":1},"fun_processProof":{"entryPoint":9772,"id":812,"parameterSlots":2,"returnSlots":1},"fun_renounceOwnership":{"entryPoint":6386,"id":98,"parameterSlots":0,"returnSlots":0},"fun_renounceOwnership_inner":{"entryPoint":6368,"id":null,"parameterSlots":0,"returnSlots":0},"fun_revealMixingRound":{"entryPoint":6016,"id":5617,"parameterSlots":1,"returnSlots":1},"fun_revealMixingRound_inner":{"entryPoint":5889,"id":null,"parameterSlots":2,"returnSlots":1},"fun_revealVote":{"entryPoint":8260,"id":5569,"parameterSlots":5,"returnSlots":0},"fun_revealVote_inner":{"entryPoint":8094,"id":null,"parameterSlots":5,"returnSlots":0},"fun_setMixingEnabled":{"entryPoint":6321,"id":5828,"parameterSlots":1,"returnSlots":0},"fun_setMixingEnabled_inner":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"fun_submitVote":{"entryPoint":7856,"id":5396,"parameterSlots":4,"returnSlots":1},"fun_submitVote_inner":{"entryPoint":7449,"id":null,"parameterSlots":5,"returnSlots":1},"fun_transferOwnership":{"entryPoint":8650,"id":126,"parameterSlots":1,"returnSlots":0},"fun_transferOwnership_inner":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"fun_updateMixingParameters":{"entryPoint":6453,"id":5815,"parameterSlots":4,"returnSlots":0},"fun_updateMixingParameters_inner":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":0},"fun_verify":{"entryPoint":9742,"id":771,"parameterSlots":3,"returnSlots":1},"fun_verifyMerkleProof":{"entryPoint":9584,"id":6868,"parameterSlots":4,"returnSlots":1},"fun_verifyVoteInclusion":{"entryPoint":8390,"id":5712,"parameterSlots":4,"returnSlots":1},"getter_fun_mixingEnabled":{"entryPoint":1558,"id":5034,"parameterSlots":0,"returnSlots":1},"increment_uint256":{"entryPoint":4357,"id":null,"parameterSlots":1,"returnSlots":1},"increment_wrapping_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"mapping_index_access_mapping_address_array_uint256_dyn_storage_of_address":{"entryPoint":5610,"id":null,"parameterSlots":2,"returnSlots":1},"mapping_index_access_mapping_bytes32_struct_MixedVote_storage_of_bytes32":{"entryPoint":6523,"id":null,"parameterSlots":2,"returnSlots":1},"mapping_index_access_mapping_uint256_struct_MixingRound_storage_of_uint256":{"entryPoint":2538,"id":null,"parameterSlots":2,"returnSlots":1},"memory_array_index_access_address_dyn":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"memory_array_index_access_bytes32_dyn":{"entryPoint":3093,"id":null,"parameterSlots":2,"returnSlots":1},"mod_uint256":{"entryPoint":4196,"id":null,"parameterSlots":2,"returnSlots":1},"modifier_onlyActiveRound":{"entryPoint":6723,"id":5100,"parameterSlots":5,"returnSlots":1},"modifier_onlyOwner":{"entryPoint":6330,"id":58,"parameterSlots":0,"returnSlots":0},"modifier_onlyOwner_104":{"entryPoint":8562,"id":58,"parameterSlots":1,"returnSlots":0},"modifier_onlyOwner_5175":{"entryPoint":4256,"id":58,"parameterSlots":1,"returnSlots":1},"modifier_onlyOwner_5402":{"entryPoint":2508,"id":58,"parameterSlots":1,"returnSlots":0},"modifier_onlyOwner_5575":{"entryPoint":5667,"id":58,"parameterSlots":2,"returnSlots":1},"modifier_onlyOwner_5796":{"entryPoint":6394,"id":58,"parameterSlots":4,"returnSlots":0},"modifier_onlyOwner_5821":{"entryPoint":6298,"id":58,"parameterSlots":1,"returnSlots":0},"modifier_onlyOwner_5834":{"entryPoint":6197,"id":58,"parameterSlots":1,"returnSlots":0},"modifier_onlyRevealTime":{"entryPoint":7870,"id":5117,"parameterSlots":5,"returnSlots":0},"modifier_onlyRevealTime_5578":{"entryPoint":5761,"id":5117,"parameterSlots":2,"returnSlots":1},"modifier_onlyValidRandomness":{"entryPoint":6831,"id":5131,"parameterSlots":5,"returnSlots":1},"panic_error_0x11":{"entryPoint":4335,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":4174,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":3009,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":2841,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_bytes32":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_memoryt_address":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_memoryt_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_memoryt_bytes32":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_memoryt_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_offset_address":{"entryPoint":6036,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_reference_type_struct_MixedVote":{"entryPoint":6551,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_reference_type_struct_MixingRound":{"entryPoint":3871,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_split_dynamic_bool":{"entryPoint":1547,"id":null,"parameterSlots":2,"returnSlots":1},"read_from_storage_split_dynamic_bytes32":{"entryPoint":3082,"id":null,"parameterSlots":2,"returnSlots":1},"read_from_storage_split_offset_address":{"entryPoint":6541,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_split_offset_bool":{"entryPoint":3861,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_split_offset_bytes32":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_split_offset_t_bool":{"entryPoint":2571,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_split_offset_uint256":{"entryPoint":2651,"id":null,"parameterSlots":1,"returnSlots":1},"require_helper_stringliteral":{"entryPoint":6932,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_29b2":{"entryPoint":5801,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_4b51":{"entryPoint":8720,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_516c":{"entryPoint":2581,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_56d2":{"entryPoint":6989,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_57a1":{"entryPoint":2723,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_68c3":{"entryPoint":7905,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_6df6":{"entryPoint":6874,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_9011":{"entryPoint":8033,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_a43c":{"entryPoint":6755,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_d42d":{"entryPoint":7965,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_d9c9":{"entryPoint":5685,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_eb2b":{"entryPoint":2661,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_f8eb":{"entryPoint":4273,"id":null,"parameterSlots":1,"returnSlots":0},"resize_array_array_bytes32_dyn_storage":{"entryPoint":4548,"id":null,"parameterSlots":2,"returnSlots":0},"resize_array_array_uint256_dyn_storage":{"entryPoint":4781,"id":null,"parameterSlots":2,"returnSlots":0},"revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb":{"entryPoint":391,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_0":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_0_unsigned":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_right_8_unsigned":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_right_unsigned":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"storage_array_index_access_address_dyn_ptr":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":2},"storage_array_index_access_bytes32_dyn":{"entryPoint":3031,"id":null,"parameterSlots":2,"returnSlots":2},"storage_array_index_access_bytes32_dyn_ptr":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":2},"storage_array_index_access_uint256_dyn_ptr":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":2},"storage_set_to_zero_bytes32":{"entryPoint":4458,"id":null,"parameterSlots":2,"returnSlots":0},"storage_set_to_zero_uint256":{"entryPoint":4699,"id":null,"parameterSlots":2,"returnSlots":0},"store_literal_in_memory_2339ad3e1c7e0c2ed8b905cfdb8a62b11b95d301011bd0d17f2f7b70bc889a56":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_29b229e0e62a0970da0737f488a85eb94b636e19edb600c5b88ab103dc251e9f":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_4b51a346026a42a2d6ebd34e52f86b2b7ded33a11cbeedc5fbca3b42dd345235":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_516cdb2ebb3256cebe8efc4290554288b70a3508a24d64eda281a8e6cf3b95b3":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_56d2dfa42e94b97ce4f8bcd78ec72cfde368892527b2f6491331b727bd44b34c":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_57a1b922d1c44cf3cc1436441c2b43b8142b903ad199db948d690feac6801915":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_68c38339e7f8527bca021e81c262ada4a2a1fee6c820a407205d421963108057":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_6df691e4f8cb470303ed918f748a082d026e9e83e69c9f5b5790ee34ca804168":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9011bf05b33bdd4aa147b19581dbf78541882e8cea7c343255f966df51e06eb8":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_a43cd3a095c0af2033177b8afe8950d0f186595dbd73278a6bbf262a64d70af3":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_d42d83aa0c2183a61b68cd47c8e1b5835de575ce708623305e88faa2e5d1fae2":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_d9c94eaf1f09f279f0fcf497e1e3fcb6dcbe36f01a34dbbd02ee7a3c0ac13629":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_eb2bb77277391433ef9418e0f0d2a778f6ef70c0edecd764e66116a9c5f3eb2b":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_f8eba552678972378b77827f2bd197fadc1fe8afab84cc0a43076bbb24959bd2":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"update_byte_slice_20_shift":{"entryPoint":7056,"id":null,"parameterSlots":2,"returnSlots":1},"update_byte_slice_20_shift_0":{"entryPoint":9328,"id":null,"parameterSlots":2,"returnSlots":1},"update_byte_slice_dynamic20":{"entryPoint":7358,"id":null,"parameterSlots":3,"returnSlots":1},"update_byte_slice_dynamic32":{"entryPoint":4415,"id":null,"parameterSlots":3,"returnSlots":1},"update_byte_slice_shift":{"entryPoint":3119,"id":null,"parameterSlots":2,"returnSlots":1},"update_byte_slice_shift_0":{"entryPoint":2799,"id":null,"parameterSlots":2,"returnSlots":1},"update_byte_slice_shift_1":{"entryPoint":4909,"id":null,"parameterSlots":2,"returnSlots":1},"update_storage_value_address_to_address":{"entryPoint":7383,"id":null,"parameterSlots":3,"returnSlots":0},"update_storage_value_bytes32_to_bytes32":{"entryPoint":4435,"id":null,"parameterSlots":3,"returnSlots":0},"update_storage_value_offset_address_to_address":{"entryPoint":7075,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offset_array_bytes32_dyn_to_array_bytes32_dyn":{"entryPoint":4672,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offset_array_uint256_dyn_to_array_uint256_dyn":{"entryPoint":4899,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offset_bool_to_bool":{"entryPoint":2814,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offset_bytes32_to_bytes32":{"entryPoint":3129,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offset_struct_MixedVote_to_struct_MixedVote":{"entryPoint":7266,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offset_struct_MixingRound_to_struct_MixingRound":{"entryPoint":5194,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offset_t_address_to_t_address":{"entryPoint":9343,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offset_t_bool_to_t_bool":{"entryPoint":4922,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offset_uint256_to_uint256":{"entryPoint":4377,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_uint256_to_uint256":{"entryPoint":4682,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_address":{"entryPoint":954,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_bool":{"entryPoint":1443,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_bytes32":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_uint256":{"entryPoint":396,"id":null,"parameterSlots":1,"returnSlots":0},"write_to_memory_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"write_to_memory_array_bytes32_dyn":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"write_to_memory_bool":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"write_to_memory_bytes32":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"write_to_memory_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"zero_memory_chunk_bytes32":{"entryPoint":2969,"id":null,"parameterSlots":2,"returnSlots":0},"zero_value_for_array_bytes32_dyn":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"zero_value_for_split_struct_MixedVote":{"entryPoint":6515,"id":null,"parameterSlots":0,"returnSlots":1},"zero_value_for_split_struct_MixingProof":{"entryPoint":8472,"id":null,"parameterSlots":0,"returnSlots":1},"zero_value_for_split_struct_MixingRound":{"entryPoint":3613,"id":null,"parameterSlots":0,"returnSlots":1},"zero_value_for_uint256":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080604052600436101561001257600080fd5b60003560e01c806304dca6fa146101825780630a232e671461017d57806310956f271461017857806316a7b4fa1461017357806318ce408f1461016e5780631ad1ec22146101695780632e1ddd081461016457806337305df51461015f57806345cba1141461015a57806347ebc739146101555780635b7f1e5d14610150578063715018a61461014b57806384b3f4cc146101465780638cf723b8146101415780638da5cb5b1461013c57806393bfe13e14610137578063b120a58a14610132578063cb5a974a1461012d578063cc5dd32614610128578063cfe1622314610123578063d73705e51461011e578063e514ef2e146101195763f2fde38b03610187576109b4565b610989565b6108fe565b6108ae565b61081c565b6107dd565b610779565b610752565b6106a7565b61068b565b610622565b6105e4565b6105cc565b61057c565b610515565b6104ee565b61047b565b610460565b610439565b610393565b61035d565b610336565b6101bb565b600080fd5b805b0361018757565b905035906101a28261018c565b565b90602082820312610187576101b891610195565b90565b34610187576101d36101ce3660046101a4565b610db9565b60405180805b0390f35b0190565b906102016101fa6101f0845190565b8084529260200190565b9260200190565b9060005b8181106102125750505090565b90919261022f6102286001928651815260200190565b9460200190565b929101610205565b906102466101fa6101f0845190565b9060005b8181106102575750505090565b90919261026d6102286001928651815260200190565b92910161024a565b80518252906101b890610140806102c66102b46102a26101608601602089015187820360208901526101e1565b604088015186820360408801526101e1565b60608701518582036060870152610237565b946102d660808201516080860152565b6102e560a082015160a0860152565b6102f460c082015160c0860152565b60e0818101511515908501526101008181015115159085015261031e610120820151610120860152565b0151910152565b60208082526101b892910190610275565b34610187576101d961035161034c3660046101a4565b611024565b60405191829182610325565b34610187576101d96103786103733660046101a4565b611073565b6040519182918290815260200190565b600091031261018757565b34610187576103a3366004610388565b6101d96103786115ba565b6001600160a01b031690565b6001600160a01b03811661018e565b905035906101a2826103ba565b90602082820312610187576101b8916103c9565b906103f96101fa6101f0845190565b9060005b81811061040a5750505090565b9091926104206102286001928651815260200190565b9291016103fd565b60208082526101b8929101906103ea565b34610187576101d961045461044f3660046103d6565b6115fd565b60405191829182610428565b3461018757610470366004610388565b6101d9610378611619565b34610187576101d96103786104913660046101a4565b611780565b906104a56101fa6101f0845190565b9060005b8181106104b65750505090565b9091926104d561022860019286516001600160a01b0316815260200190565b9291016104a9565b60208082526101b892910190610496565b34610187576101d96105096105043660046101a4565b611819565b604051918291826104dd565b34610187576101d36105283660046101a4565b611871565b9061053c6101fa6101f0845190565b9060005b81811061054d5750505090565b9091926105636102286001928651815260200190565b929101610540565b60208082526101b89291019061052d565b34610187576101d96105976105923660046101a4565b611883565b6040519182918261056b565b80151561018e565b905035906101a2826105a3565b90602082820312610187576101b8916105ab565b34610187576101d36105df3660046105b8565b6118b1565b34610187576105f4366004610388565b6101d36118f2565b6101b8916008021c5b60ff1690565b906101b891546105fc565b6101b86000600c61060b565b3461018757610632366004610388565b6101d961063d610616565b60405191829182901515815260200190565b608081830312610187576106638282610195565b926101b86106748460208501610195565b9360606106848260408701610195565b9401610195565b34610187576101d361069e36600461064f565b92919091611935565b34610187576106b7366004610388565b6101d96106c2611941565b604051918291826001600160a01b03909116815260200190565b805182526101a2919060c09081906106f960208201516020860152565b61070860408201516040860152565b61071760608201516060860152565b61072660808201516080860152565b60a08181015115159085015201516001600160a01b0316910152565b60e0810192916101a291906106dc565b34610187576101d961076d6107683660046101a4565b611a27565b60405191829182610742565b34610187576101d961037861078f36600461064f565b92919091611eb0565b919060a083820312610187576107ae8184610195565b926107bc8260208301610195565b926101b86107cd8460408501610195565b9360806106848260608701610195565b34610187576101d36107f0366004610798565b93929092612044565b9190604083820312610187576101b89060206108158286610195565b94016103c9565b34610187576101d961063d6108323660046107f9565b90612051565b909182601f830112156101875781359167ffffffffffffffff831161018757602001926020830284011161018757565b916060838303126101875761087d8284610195565b9261088b8360208301610195565b92604082013567ffffffffffffffff8111610187576108aa9201610838565b9091565b34610187576101d961063d6108c4366004610868565b929190916120c6565b6108fa6101a2946108f36060949897956108ec608086019a6000870152565b6020850152565b6040830152565b0152565b346101875761090e366004610388565b6101d9600080808061092294929460405190565b948594856108cd565b805182526101b89160a081019160809061094a60208201516020850152565b61095960408201516040850152565b61096860608201516060850152565b01519060808184039101526101e1565b60208082526101b89291019061092b565b34610187576101d96109a861099f36600461064f565b92919091612120565b60405191829182610978565b34610187576101d36109c73660046103d6565b6121ca565b6101a2906109d86121d3565b610c6b565b6101b86101b86101b89290565b906109f4906109dd565b600052602052604060002090565b6101b890610605565b6101b89054610a02565b15610a1c57565b60405162461bcd60e51b815260206004820152601060248201526f526f756e64206e6f742061637469766560801b6044820152606490fd5b6101b89081565b6101b89054610a54565b15610a6c57565b60405162461bcd60e51b815260206004820152600f60248201526e149bdd5b99081b9bdd08195b991959608a1b6044820152606490fd5b15610aaa57565b60405162461bcd60e51b815260206004820152601960248201527f496e73756666696369656e74207061727469636970616e7473000000000000006044820152606490fd5b9060ff905b9181191691161790565b90610b0e6101b8610b1592151590565b8254610aef565b9055565b634e487b7160e01b600052604160045260246000fd5b90601f01601f1916810190811067ffffffffffffffff821117610b5157604052565b610b19565b906101a2610b6360405190565b9283610b2f565b67ffffffffffffffff8111610b515760208091020190565b90610b94610b8f83610b6a565b610b56565b918252565b369037565b906101a2610bb4610bae84610b82565b93610b6a565b601f190160208401610b99565b634e487b7160e01b600052603260045260246000fd5b8054821015610bfa57610bf1600191600052602060002090565b91020190600090565b610bc1565b6101b8916008021c81565b906101b89154610bff565b90610c1e825190565b811015610bfa576020809102010190565b9060001990610af4565b90610c476101b8610b159290565b8254610c2f565b9081526060810193926101a29290916040916108fa906020830152565b610c796101b88260026109ea565b906007820192610c90610c8b85610a0b565b610a15565b610caa610ca26101b860058601610a5b565b421015610a65565b610ce060006008850195610cdb610cc088610a5b565b610cd4610cd06101b86008610a5b565b9190565b1015610aa3565b610afe565b6001830190610cf5610cf0835490565b610b9e565b92610d0060006109dd565b610d0b6101b8855490565b811015610d445780610d39610d2c610d26610d3f9488610bd7565b90610c0a565b610d368389610c15565b52565b60010190565b610d00565b5093915093610d96610d90610d9c92610d8b6009610d827f702ca2b43eb700bf6c35cd0fd463096f3f976f36abf9a0640b9111d2774e909598612261565b96019586610c39565b610a5b565b92610a5b565b936109dd565b92610db4610da960405190565b928392429184610c4e565b0390a2565b6101a2906109cc565b6101b8610160610b56565b610dd5610dc2565b90600082526020808080808080808080808c01606081520160608152016060815201600081520160005b81520160008152016000815201600081520160008152016000905250565b6101b8610dcd565b90610e40610e346101f0845490565b92600052602060002090565b9060005b818110610e515750505090565b909192610e75610e6e600192610e6687610a5b565b815260200190565b9460010190565b929101610e44565b906101b891610e25565b906101a2610ea192610e9860405190565b93848092610e7d565b0383610b2f565b90610eb7610e346101f0845490565b9060005b818110610ec85750505090565b909192610edd610e6e600192610e6687610a5b565b929101610ebb565b906101b891610ea8565b906101a2610ea192610f0060405190565b93848092610ee5565b6101b89060081c610605565b6101b89054610f09565b906101a26110136009610f30610dc2565b94610f41610f3d82610a5b565b8752565b610f57610f5060018301610e87565b6020880152565b610f6d610f6660028301610e87565b6040880152565b610f83610f7c60038301610eef565b6060880152565b610f99610f9260048301610a5b565b6080880152565b610faf610fa860058301610a5b565b60a0880152565b610fc5610fbe60068301610a5b565b60c0880152565b610fdd610fd460078301610a0b565b151560e0880152565b610ff6610fec60078301610f15565b1515610100880152565b61100d61100560088301610a5b565b610120880152565b01610a5b565b610140840152565b6101b890610f1f565b61103b6101b891611033610e1d565b5060026109ea565b61101b565b6101b8906109dd565b6109dd565b634e487b7160e01b600052601260045260246000fd5b811561106e570690565b61104e565b61109061108b6101b892611085600090565b50612419565b611040565b61109a6009610a5b565b90611064565b6101b8906110ac6121d3565b611454565b156110b857565b60405162461bcd60e51b815260206004820152600f60248201526e135a5e1a5b99c8191a5cd8589b1959608a1b6044820152606490fd5b634e487b7160e01b600052601160045260246000fd5b60001981146111145760010190565b6110ef565b90610c476101b8610b15926109dd565b9190611134565b9290565b820180921161111457565b9160001960089290920291821b911b610af4565b91906111626101b8610b159390565b90835461113f565b6101a291600091611153565b818110611181575050565b8061118f600060019361116a565b01611176565b9190918282106111a457505050565b6101a292916111ba905b91600052602060002090565b9182019101611176565b90600160401b8111610b5157816111dc6101a2935490565b90828155611195565b81519167ffffffffffffffff8311610b5157611210610e3460019261120a86866111c4565b60200190565b92049160005b8381106112235750505050565b60019060206112336101b8865190565b9401938184015501611216565b906101a2916111e5565b91906111626101b8610b15936109dd565b6101a29160009161124a565b818110611272575050565b80611280600060019361125b565b01611267565b91909182821061129557505050565b6101a292916112a3906111ae565b9182019101611267565b90600160401b8111610b5157816112c56101a2935490565b90828155611286565b81519167ffffffffffffffff8311610b51576112f3610e3460019261120a86866112ad565b92049160005b8381106113065750505050565b60019060206113166101b8865190565b94019381840155016112f9565b906101a2916112ce565b9061ff009060081b610af4565b9061134a6101b8610b1592151590565b825461132d565b60096114436101406101a29461137161136b600083015190565b86611119565b61138861137f602083015190565b60018701611240565b61139f611396604083015190565b60028701611240565b6113b66113ad606083015190565b60038701611323565b6113cd6113c4608083015190565b60048701611119565b6113e46113db60a083015190565b60058701611119565b6113fb6113f260c083015190565b60068701611119565b6114266007860161141861141260e0850151151590565b82610afe565b61010083015115159061133a565b61143e61143561012083015190565b60088701611119565b015190565b9101610c39565b906101a291611351565b5061145f600c610a0b565b611468906110b1565b6114726007610a5b565b61147b81611105565b611486906007611119565b6000611491816109dd565b9061149b82610b9e565b916114a581610b9e565b916114af82610b9e565b6114b9600a610a5b565b6114c39042611129565b6114cd600a610a5b565b6114d79042611129565b6114e1600b610a5b565b6114ea91611129565b916114f4846109dd565b956114fd610dc2565b976115088a878b0152565b602089015260408801526060870152611522426080880152565b60a086015260c0850152600160e08501521515610100840152610120830152610140820152806115538360026109ea565b9061155d9161144a565b608081015160a0909101516115726008610a5b565b9061157c846109dd565b9261158660405190565b9283926115939284610c4e565b037f87a3241a0380a7685f0cfd2544c5d771c51dc926dd74d20d81ee1aea62fbfb5591a290565b6101b860006110a0565b6101b8906103ae906001600160a01b031682565b6101b8906115c4565b6101b8906115d8565b906109f4906115e1565b6101b890610eef565b6116146101b89161160c606090565b5060046115ea565b6115f4565b6101b86007610a5b565b906101b8916116306121d3565b611681565b1561163c57565b60405162461bcd60e51b815260206004820152601760248201527f52657665616c2074696d65206e6f7420726561636865640000000000000000006044820152606490fd5b906101b8916116a461169c6101b8600661100d8660026109ea565b421015611635565b611701565b156116b057565b60405162461bcd60e51b8152602060048201526016602482015275149bdd5b9908185b1c9958591e481c995d99585b195960521b6044820152606490fd5b9081526040810192916101a29160200152565b5061174461173e60086117186101b88560026109ea565b61100d60016007830161173961173461173083610f15565b1590565b6116a9565b61133a565b916109dd565b7fd48fe253bdb396c73bc32f7b556a42456788b817d0254dd2469873141ca91c2461176e60405190565b8061177a4286836116ee565b0390a290565b6101b8906000611623565b6101b8906103ae565b6101b8905461178b565b906117ad610e346101f0845490565b9060005b8181106117be5750505090565b9091926117e4610e6e6001926117d387611794565b6001600160a01b0316815260200190565b9291016117b1565b906101b89161179e565b906101a2610ea19261180760405190565b938480926117ec565b6101b8906117f6565b6118306101b891611828606090565b5060056109ea565b611810565b6101a2906118416121d3565b6000600761186b6101a293611864610c8b8461185e8460026109ea565b01610a0b565b60026109ea565b01610afe565b6101a290611835565b6101b890610e87565b60016118946101b892611033606090565b0161187a565b6101a2906118a66121d3565b6101a290600c610afe565b6101a29061189a565b6118c26121d3565b6101a26118e0565b6103ae6101b86101b89290565b6101b8906118ca565b6101a26118ed60006118d7565b612496565b6101a26118ba565b906101a29392916119096121d3565b9161192761192e926119206101a296956008611119565b6009611119565b600a611119565b600b611119565b906101a29392916118fa565b6101b86000611794565b6101b860e0610b56565b61195d61194b565b9060008252602080808080808088016000610dff565b6101b8611955565b906109f4565b6101b89060081c6103ae565b6101b89054611981565b906101a2611a0e60056119a861194b565b946119b5610f3d82610a5b565b6119c4610f5060018301610a5b565b6119d3610f6660028301610a5b565b6119e2610f7c60038301610a5b565b6119f1610f9260048301610a5b565b611a086119ff838301610a0b565b151560a0880152565b0161198d565b6001600160a01b031660c0840152565b6101b890611997565b611a3e6101b891611a36611973565b50600361197b565b611a1e565b906101b894939291611a5e610c8b600761185e8560026109ea565b611aaf565b15611a6a57565b60405162461bcd60e51b815260206004820152601760248201527f52616e646f6d6e65737320616c726561647920757365640000000000000000006044820152606490fd5b906101b894939291611ad5611ad0611730611acb87600661197b565b610a0b565b611a63565b611d19565b15611ae157565b60405162461bcd60e51b815260206004820152600b60248201526a149bdd5b9908195b99195960aa1b6044820152606490fd5b15611b1b57565b60405162461bcd60e51b815260206004820152600a602482015269149bdd5b9908199d5b1b60b21b6044820152606490fd5b15611b5457565b60405162461bcd60e51b8152602060048201526014602482015273105b1c9958591e481c185c9d1a58da5c185d195960621b6044820152606490fd5b90610100600160a81b039060081b610af4565b90611bb36101b8610b15926115e1565b8254611b90565b90611c5c60c060056101a294611bda611bd4600087015190565b82610c39565b611bf1611be8602087015190565b60018301610c39565b611c08611bff604087015190565b60028301610c39565b611c1f611c16606087015190565b60038301611119565b611c36611c2d608087015190565b60048301611119565b0192611c4e611c4860a0830151151590565b85610afe565b01516001600160a01b031690565b90611ba3565b906101a291611bba565b90815491600160401b831015610b515782611c8f9160016101a295018155610bd7565b90611153565b90815491600160401b831015610b515782611cb89160016101a295018155610bd7565b9061124a565b916001600160a01b0360089290920291821b911b610af4565b9190611ce86101b8610b15936115e1565b908354611cbe565b90815491600160401b831015610b515782611d139160016101a295018155610bd7565b90611cd7565b50909291611d288260026109ea565b611d3460058201610a5b565b421115611d4090611ada565b836008820191611d4f83610a5b565b611d596009610a5b565b11611d6390611b14565b611d6d3386612051565b15611d7790611b4d565b611d828285896124ee565b96611d8b61194b565b908152611d99886020830152565b611da4856040830152565b611daf836060830152565b611dba426080830152565b600060a08201523360c0820152611dd288600361197b565b90611ddc91611c62565b611de98760018301611c6c565b611df68460028301611c6c565b60030190611e0391611c95565b611e0c81610a5b565b611e1590611105565b611e1e91611119565b611e298260056109ea565b33611e3391611cf0565b81611e3f3360046115ea565b90611e4991611c95565b611e5490600661197b565b6001611e5f91610afe565b611e68906109dd565b611e71336115e1565b91611e7b60405190565b809142611e89918784610c4e565b037f57ad1338c773df8ab4b3a0b286cae4e4f6d36473d7e7a1f0b3f1b4de474cd37b91a390565b6101b8939291906000611a43565b906101a294939291611edc61169c6101b8600661100d8560026109ea565b611f9e565b15611ee857565b60405162461bcd60e51b815260206004820152600d60248201526c4e6f7420796f757220766f746560981b6044820152606490fd5b15611f2457565b60405162461bcd60e51b8152602060048201526015602482015274159bdd1948185b1c9958591e481c995d99585b1959605a1b6044820152606490fd5b15611f6857565b60405162461bcd60e51b815260206004820152600e60248201526d125b9d985b1a59081c995d99585b60921b6044820152606490fd5b61104960017f517de2d19cd96b554768be894916ac969b1449096e6033efc0d82d10a2cec88c9495610cdb61202161202896996005611fe16101b88d600361197b565b0193612007611fef8661198d565b612001335b916001600160a01b031690565b14611ee1565b61201b61201661173087610a0b565b611f1d565b8a6124ee565b8914611f61565b91612032336115e1565b9361203f610da960405190565b0390a3565b906101a294939291611ebe565b61183061206091611828600090565b9061206b60006109dd565b6120766101b8845190565b8110156120be5761209761208a8285610c15565b516001600160a01b031690565b6120a96001600160a01b038416611ff4565b146120b65760010161206b565b505050600190565b505050600090565b916120dd600961100d6101b8969495611033600090565b92612570565b6101b860a0610b56565b6120f56120e3565b906000825260208080808086016000815201600081520160008152016060905250565b6101b86120ed565b9261216b906121646101b894612134612118565b5061215d612145610cf060006109dd565b956121566121516120e3565b998a52565b6020890152565b6040870152565b6060850152565b6080830152565b6101a29061217e6121d3565b6000612189816118d7565b6001600160a01b0381166001600160a01b038416146121ad5750506101a290612496565b631e4fbdf760e01b82526001600160a01b03166004820152602490fd5b6101a290612172565b6121db611941565b33906121e682611ff4565b036121ee5750565b63118cdaa760e01b60009081526001600160a01b039091166004526024036000fd5b1561221757565b60405162461bcd60e51b8152602060048201526012602482015271456d707479206c656176657320617272617960701b6044820152606490fd5b811561106e570490565b01918252565b9061228061226d835190565b61227a610cd060006109dd565b11612210565b815191600192612292610cd0856109dd565b146123f2576122b16122a2825190565b6122ab856109dd565b90611129565b926122ca610cf06002956122c4876109dd565b90612251565b91816122d660006109dd565b905b6122eb575b5050506101b891925061258d565b6122f66101b8835190565b8110156123ed57906123c2839261231561230f856109dd565b82611129565b612323610cd06101b8865190565b10156123c9576123b961238561239161234361233f8588610c15565b5190565b61236161233f61235b6123558b6109dd565b88611129565b89610c15565b9061236b60405190565b93849260208401928360208161225b6101dd938396959052565b90810382520382610b2f565b6123a361239c825190565b9160200190565b20610d3661235b6123b38c6109dd565b85612251565b6122ab886109dd565b90916122d8565b6123e86123d961233f8386610c15565b610d3661235b6123b38c6109dd565b6123b9565b6122dd565b6101b891925061233f9061240660006109dd565b90610c15565b9190820391821161111457565b61246161238591612428600090565b5061243c61243660016109dd565b4361240c565b6040519040602080830191825291948593919290916101dd824461225b824282828b82565b61246c61239c825190565b2090565b906001600160a01b0390610af4565b9061248f6101b8610b15926115e1565b8254612470565b6124bc6124b66124a66000611794565b6124b184600061247f565b6115e1565b916115e1565b907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e06124e760405190565b808061203f565b9161250890612385926124ff600090565b5060405161236b565b61251361239c825190565b201890565b90929192612528610b8f82610b6a565b938185526020808601920283019281841161018757915b83831061254c5750505050565b6020809161255a8486610195565b81520192019161253f565b6101b8913691612518565b91612588906101b89492612582600090565b50612565565b61260e565b908151916001926125a0610cd0856109dd565b146123f2576125b06122a2825190565b926125c3610cf06002956122c4876109dd565b91816125cf60006109dd565b905b6125e3575050506101b891925061258d565b6125ee6101b8835190565b8110156123ed5790612607839261231561230f856109dd565b90916125d1565b6111306126289293610cd092612622600090565b5061262c565b1490565b61263660006109dd565b915b6126436101b8835190565b8310156126715761266461266b9161265e61233f8686610c15565b90612677565b9260010190565b91612638565b91505090565b8181101561269257906101b891600052602052604060002090565b6101b89160005260205260406000209056fea264697066735822122010065fea38109b7bc05423a17dcf9b6cdf9202dd1bd4a57162b2160da40d401764736f6c634300081c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4DCA6FA EQ PUSH2 0x182 JUMPI DUP1 PUSH4 0xA232E67 EQ PUSH2 0x17D JUMPI DUP1 PUSH4 0x10956F27 EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0x16A7B4FA EQ PUSH2 0x173 JUMPI DUP1 PUSH4 0x18CE408F EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0x1AD1EC22 EQ PUSH2 0x169 JUMPI DUP1 PUSH4 0x2E1DDD08 EQ PUSH2 0x164 JUMPI DUP1 PUSH4 0x37305DF5 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0x45CBA114 EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0x47EBC739 EQ PUSH2 0x155 JUMPI DUP1 PUSH4 0x5B7F1E5D EQ PUSH2 0x150 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x14B JUMPI DUP1 PUSH4 0x84B3F4CC EQ PUSH2 0x146 JUMPI DUP1 PUSH4 0x8CF723B8 EQ PUSH2 0x141 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x93BFE13E EQ PUSH2 0x137 JUMPI DUP1 PUSH4 0xB120A58A EQ PUSH2 0x132 JUMPI DUP1 PUSH4 0xCB5A974A EQ PUSH2 0x12D JUMPI DUP1 PUSH4 0xCC5DD326 EQ PUSH2 0x128 JUMPI DUP1 PUSH4 0xCFE16223 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0xD73705E5 EQ PUSH2 0x11E JUMPI DUP1 PUSH4 0xE514EF2E EQ PUSH2 0x119 JUMPI PUSH4 0xF2FDE38B SUB PUSH2 0x187 JUMPI PUSH2 0x9B4 JUMP JUMPDEST PUSH2 0x989 JUMP JUMPDEST PUSH2 0x8FE JUMP JUMPDEST PUSH2 0x8AE JUMP JUMPDEST PUSH2 0x81C JUMP JUMPDEST PUSH2 0x7DD JUMP JUMPDEST PUSH2 0x779 JUMP JUMPDEST PUSH2 0x752 JUMP JUMPDEST PUSH2 0x6A7 JUMP JUMPDEST PUSH2 0x68B JUMP JUMPDEST PUSH2 0x622 JUMP JUMPDEST PUSH2 0x5E4 JUMP JUMPDEST PUSH2 0x5CC JUMP JUMPDEST PUSH2 0x57C JUMP JUMPDEST PUSH2 0x515 JUMP JUMPDEST PUSH2 0x4EE JUMP JUMPDEST PUSH2 0x47B JUMP JUMPDEST PUSH2 0x460 JUMP JUMPDEST PUSH2 0x439 JUMP JUMPDEST PUSH2 0x393 JUMP JUMPDEST PUSH2 0x35D JUMP JUMPDEST PUSH2 0x336 JUMP JUMPDEST PUSH2 0x1BB JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 JUMPDEST SUB PUSH2 0x187 JUMPI JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x1A2 DUP3 PUSH2 0x18C JUMP JUMPDEST JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x187 JUMPI PUSH2 0x1B8 SWAP2 PUSH2 0x195 JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x187 JUMPI PUSH2 0x1D3 PUSH2 0x1CE CALLDATASIZE PUSH1 0x4 PUSH2 0x1A4 JUMP JUMPDEST PUSH2 0xDB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 JUMPDEST SUB SWAP1 RETURN JUMPDEST ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x201 PUSH2 0x1FA PUSH2 0x1F0 DUP5 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP5 MSTORE SWAP3 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x212 JUMPI POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 PUSH2 0x22F PUSH2 0x228 PUSH1 0x1 SWAP3 DUP7 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP5 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 ADD PUSH2 0x205 JUMP JUMPDEST SWAP1 PUSH2 0x246 PUSH2 0x1FA PUSH2 0x1F0 DUP5 MLOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x257 JUMPI POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 PUSH2 0x26D PUSH2 0x228 PUSH1 0x1 SWAP3 DUP7 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 ADD PUSH2 0x24A JUMP JUMPDEST DUP1 MLOAD DUP3 MSTORE SWAP1 PUSH2 0x1B8 SWAP1 PUSH2 0x140 DUP1 PUSH2 0x2C6 PUSH2 0x2B4 PUSH2 0x2A2 PUSH2 0x160 DUP7 ADD PUSH1 0x20 DUP10 ADD MLOAD DUP8 DUP3 SUB PUSH1 0x20 DUP10 ADD MSTORE PUSH2 0x1E1 JUMP JUMPDEST PUSH1 0x40 DUP9 ADD MLOAD DUP7 DUP3 SUB PUSH1 0x40 DUP9 ADD MSTORE PUSH2 0x1E1 JUMP JUMPDEST PUSH1 0x60 DUP8 ADD MLOAD DUP6 DUP3 SUB PUSH1 0x60 DUP8 ADD MSTORE PUSH2 0x237 JUMP JUMPDEST SWAP5 PUSH2 0x2D6 PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0x80 DUP7 ADD MSTORE JUMP JUMPDEST PUSH2 0x2E5 PUSH1 0xA0 DUP3 ADD MLOAD PUSH1 0xA0 DUP7 ADD MSTORE JUMP JUMPDEST PUSH2 0x2F4 PUSH1 0xC0 DUP3 ADD MLOAD PUSH1 0xC0 DUP7 ADD MSTORE JUMP JUMPDEST PUSH1 0xE0 DUP2 DUP2 ADD MLOAD ISZERO ISZERO SWAP1 DUP6 ADD MSTORE PUSH2 0x100 DUP2 DUP2 ADD MLOAD ISZERO ISZERO SWAP1 DUP6 ADD MSTORE PUSH2 0x31E PUSH2 0x120 DUP3 ADD MLOAD PUSH2 0x120 DUP7 ADD MSTORE JUMP JUMPDEST ADD MLOAD SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH2 0x1B8 SWAP3 SWAP2 ADD SWAP1 PUSH2 0x275 JUMP JUMPDEST CALLVALUE PUSH2 0x187 JUMPI PUSH2 0x1D9 PUSH2 0x351 PUSH2 0x34C CALLDATASIZE PUSH1 0x4 PUSH2 0x1A4 JUMP JUMPDEST PUSH2 0x1024 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x325 JUMP JUMPDEST CALLVALUE PUSH2 0x187 JUMPI PUSH2 0x1D9 PUSH2 0x378 PUSH2 0x373 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A4 JUMP JUMPDEST PUSH2 0x1073 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP2 SUB SLT PUSH2 0x187 JUMPI JUMP JUMPDEST CALLVALUE PUSH2 0x187 JUMPI PUSH2 0x3A3 CALLDATASIZE PUSH1 0x4 PUSH2 0x388 JUMP JUMPDEST PUSH2 0x1D9 PUSH2 0x378 PUSH2 0x15BA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x18E JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x1A2 DUP3 PUSH2 0x3BA JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x187 JUMPI PUSH2 0x1B8 SWAP2 PUSH2 0x3C9 JUMP JUMPDEST SWAP1 PUSH2 0x3F9 PUSH2 0x1FA PUSH2 0x1F0 DUP5 MLOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x40A JUMPI POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 PUSH2 0x420 PUSH2 0x228 PUSH1 0x1 SWAP3 DUP7 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 ADD PUSH2 0x3FD JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH2 0x1B8 SWAP3 SWAP2 ADD SWAP1 PUSH2 0x3EA JUMP JUMPDEST CALLVALUE PUSH2 0x187 JUMPI PUSH2 0x1D9 PUSH2 0x454 PUSH2 0x44F CALLDATASIZE PUSH1 0x4 PUSH2 0x3D6 JUMP JUMPDEST PUSH2 0x15FD JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x428 JUMP JUMPDEST CALLVALUE PUSH2 0x187 JUMPI PUSH2 0x470 CALLDATASIZE PUSH1 0x4 PUSH2 0x388 JUMP JUMPDEST PUSH2 0x1D9 PUSH2 0x378 PUSH2 0x1619 JUMP JUMPDEST CALLVALUE PUSH2 0x187 JUMPI PUSH2 0x1D9 PUSH2 0x378 PUSH2 0x491 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A4 JUMP JUMPDEST PUSH2 0x1780 JUMP JUMPDEST SWAP1 PUSH2 0x4A5 PUSH2 0x1FA PUSH2 0x1F0 DUP5 MLOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x4B6 JUMPI POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 PUSH2 0x4D5 PUSH2 0x228 PUSH1 0x1 SWAP3 DUP7 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 ADD PUSH2 0x4A9 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH2 0x1B8 SWAP3 SWAP2 ADD SWAP1 PUSH2 0x496 JUMP JUMPDEST CALLVALUE PUSH2 0x187 JUMPI PUSH2 0x1D9 PUSH2 0x509 PUSH2 0x504 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A4 JUMP JUMPDEST PUSH2 0x1819 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x4DD JUMP JUMPDEST CALLVALUE PUSH2 0x187 JUMPI PUSH2 0x1D3 PUSH2 0x528 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A4 JUMP JUMPDEST PUSH2 0x1871 JUMP JUMPDEST SWAP1 PUSH2 0x53C PUSH2 0x1FA PUSH2 0x1F0 DUP5 MLOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x54D JUMPI POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 PUSH2 0x563 PUSH2 0x228 PUSH1 0x1 SWAP3 DUP7 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 ADD PUSH2 0x540 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH2 0x1B8 SWAP3 SWAP2 ADD SWAP1 PUSH2 0x52D JUMP JUMPDEST CALLVALUE PUSH2 0x187 JUMPI PUSH2 0x1D9 PUSH2 0x597 PUSH2 0x592 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A4 JUMP JUMPDEST PUSH2 0x1883 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x56B JUMP JUMPDEST DUP1 ISZERO ISZERO PUSH2 0x18E JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x1A2 DUP3 PUSH2 0x5A3 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x187 JUMPI PUSH2 0x1B8 SWAP2 PUSH2 0x5AB JUMP JUMPDEST CALLVALUE PUSH2 0x187 JUMPI PUSH2 0x1D3 PUSH2 0x5DF CALLDATASIZE PUSH1 0x4 PUSH2 0x5B8 JUMP JUMPDEST PUSH2 0x18B1 JUMP JUMPDEST CALLVALUE PUSH2 0x187 JUMPI PUSH2 0x5F4 CALLDATASIZE PUSH1 0x4 PUSH2 0x388 JUMP JUMPDEST PUSH2 0x1D3 PUSH2 0x18F2 JUMP JUMPDEST PUSH2 0x1B8 SWAP2 PUSH1 0x8 MUL SHR JUMPDEST PUSH1 0xFF AND SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1B8 SWAP2 SLOAD PUSH2 0x5FC JUMP JUMPDEST PUSH2 0x1B8 PUSH1 0x0 PUSH1 0xC PUSH2 0x60B JUMP JUMPDEST CALLVALUE PUSH2 0x187 JUMPI PUSH2 0x632 CALLDATASIZE PUSH1 0x4 PUSH2 0x388 JUMP JUMPDEST PUSH2 0x1D9 PUSH2 0x63D PUSH2 0x616 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x80 DUP2 DUP4 SUB SLT PUSH2 0x187 JUMPI PUSH2 0x663 DUP3 DUP3 PUSH2 0x195 JUMP JUMPDEST SWAP3 PUSH2 0x1B8 PUSH2 0x674 DUP5 PUSH1 0x20 DUP6 ADD PUSH2 0x195 JUMP JUMPDEST SWAP4 PUSH1 0x60 PUSH2 0x684 DUP3 PUSH1 0x40 DUP8 ADD PUSH2 0x195 JUMP JUMPDEST SWAP5 ADD PUSH2 0x195 JUMP JUMPDEST CALLVALUE PUSH2 0x187 JUMPI PUSH2 0x1D3 PUSH2 0x69E CALLDATASIZE PUSH1 0x4 PUSH2 0x64F JUMP JUMPDEST SWAP3 SWAP2 SWAP1 SWAP2 PUSH2 0x1935 JUMP JUMPDEST CALLVALUE PUSH2 0x187 JUMPI PUSH2 0x6B7 CALLDATASIZE PUSH1 0x4 PUSH2 0x388 JUMP JUMPDEST PUSH2 0x1D9 PUSH2 0x6C2 PUSH2 0x1941 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD DUP3 MSTORE PUSH2 0x1A2 SWAP2 SWAP1 PUSH1 0xC0 SWAP1 DUP2 SWAP1 PUSH2 0x6F9 PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x20 DUP7 ADD MSTORE JUMP JUMPDEST PUSH2 0x708 PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x40 DUP7 ADD MSTORE JUMP JUMPDEST PUSH2 0x717 PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x60 DUP7 ADD MSTORE JUMP JUMPDEST PUSH2 0x726 PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0x80 DUP7 ADD MSTORE JUMP JUMPDEST PUSH1 0xA0 DUP2 DUP2 ADD MLOAD ISZERO ISZERO SWAP1 DUP6 ADD MSTORE ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0xE0 DUP2 ADD SWAP3 SWAP2 PUSH2 0x1A2 SWAP2 SWAP1 PUSH2 0x6DC JUMP JUMPDEST CALLVALUE PUSH2 0x187 JUMPI PUSH2 0x1D9 PUSH2 0x76D PUSH2 0x768 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A4 JUMP JUMPDEST PUSH2 0x1A27 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x742 JUMP JUMPDEST CALLVALUE PUSH2 0x187 JUMPI PUSH2 0x1D9 PUSH2 0x378 PUSH2 0x78F CALLDATASIZE PUSH1 0x4 PUSH2 0x64F JUMP JUMPDEST SWAP3 SWAP2 SWAP1 SWAP2 PUSH2 0x1EB0 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0xA0 DUP4 DUP3 SUB SLT PUSH2 0x187 JUMPI PUSH2 0x7AE DUP2 DUP5 PUSH2 0x195 JUMP JUMPDEST SWAP3 PUSH2 0x7BC DUP3 PUSH1 0x20 DUP4 ADD PUSH2 0x195 JUMP JUMPDEST SWAP3 PUSH2 0x1B8 PUSH2 0x7CD DUP5 PUSH1 0x40 DUP6 ADD PUSH2 0x195 JUMP JUMPDEST SWAP4 PUSH1 0x80 PUSH2 0x684 DUP3 PUSH1 0x60 DUP8 ADD PUSH2 0x195 JUMP JUMPDEST CALLVALUE PUSH2 0x187 JUMPI PUSH2 0x1D3 PUSH2 0x7F0 CALLDATASIZE PUSH1 0x4 PUSH2 0x798 JUMP JUMPDEST SWAP4 SWAP3 SWAP1 SWAP3 PUSH2 0x2044 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0x187 JUMPI PUSH2 0x1B8 SWAP1 PUSH1 0x20 PUSH2 0x815 DUP3 DUP7 PUSH2 0x195 JUMP JUMPDEST SWAP5 ADD PUSH2 0x3C9 JUMP JUMPDEST CALLVALUE PUSH2 0x187 JUMPI PUSH2 0x1D9 PUSH2 0x63D PUSH2 0x832 CALLDATASIZE PUSH1 0x4 PUSH2 0x7F9 JUMP JUMPDEST SWAP1 PUSH2 0x2051 JUMP JUMPDEST SWAP1 SWAP2 DUP3 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x187 JUMPI DUP2 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x187 JUMPI PUSH1 0x20 ADD SWAP3 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH2 0x187 JUMPI JUMP JUMPDEST SWAP2 PUSH1 0x60 DUP4 DUP4 SUB SLT PUSH2 0x187 JUMPI PUSH2 0x87D DUP3 DUP5 PUSH2 0x195 JUMP JUMPDEST SWAP3 PUSH2 0x88B DUP4 PUSH1 0x20 DUP4 ADD PUSH2 0x195 JUMP JUMPDEST SWAP3 PUSH1 0x40 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x187 JUMPI PUSH2 0x8AA SWAP3 ADD PUSH2 0x838 JUMP JUMPDEST SWAP1 SWAP2 JUMP JUMPDEST CALLVALUE PUSH2 0x187 JUMPI PUSH2 0x1D9 PUSH2 0x63D PUSH2 0x8C4 CALLDATASIZE PUSH1 0x4 PUSH2 0x868 JUMP JUMPDEST SWAP3 SWAP2 SWAP1 SWAP2 PUSH2 0x20C6 JUMP JUMPDEST PUSH2 0x8FA PUSH2 0x1A2 SWAP5 PUSH2 0x8F3 PUSH1 0x60 SWAP5 SWAP9 SWAP8 SWAP6 PUSH2 0x8EC PUSH1 0x80 DUP7 ADD SWAP11 PUSH1 0x0 DUP8 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE JUMP JUMPDEST ADD MSTORE JUMP JUMPDEST CALLVALUE PUSH2 0x187 JUMPI PUSH2 0x90E CALLDATASIZE PUSH1 0x4 PUSH2 0x388 JUMP JUMPDEST PUSH2 0x1D9 PUSH1 0x0 DUP1 DUP1 DUP1 PUSH2 0x922 SWAP5 SWAP3 SWAP5 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP5 DUP6 SWAP5 DUP6 PUSH2 0x8CD JUMP JUMPDEST DUP1 MLOAD DUP3 MSTORE PUSH2 0x1B8 SWAP2 PUSH1 0xA0 DUP2 ADD SWAP2 PUSH1 0x80 SWAP1 PUSH2 0x94A PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x20 DUP6 ADD MSTORE JUMP JUMPDEST PUSH2 0x959 PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x40 DUP6 ADD MSTORE JUMP JUMPDEST PUSH2 0x968 PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x60 DUP6 ADD MSTORE JUMP JUMPDEST ADD MLOAD SWAP1 PUSH1 0x80 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x1E1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH2 0x1B8 SWAP3 SWAP2 ADD SWAP1 PUSH2 0x92B JUMP JUMPDEST CALLVALUE PUSH2 0x187 JUMPI PUSH2 0x1D9 PUSH2 0x9A8 PUSH2 0x99F CALLDATASIZE PUSH1 0x4 PUSH2 0x64F JUMP JUMPDEST SWAP3 SWAP2 SWAP1 SWAP2 PUSH2 0x2120 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x978 JUMP JUMPDEST CALLVALUE PUSH2 0x187 JUMPI PUSH2 0x1D3 PUSH2 0x9C7 CALLDATASIZE PUSH1 0x4 PUSH2 0x3D6 JUMP JUMPDEST PUSH2 0x21CA JUMP JUMPDEST PUSH2 0x1A2 SWAP1 PUSH2 0x9D8 PUSH2 0x21D3 JUMP JUMPDEST PUSH2 0xC6B JUMP JUMPDEST PUSH2 0x1B8 PUSH2 0x1B8 PUSH2 0x1B8 SWAP3 SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x9F4 SWAP1 PUSH2 0x9DD JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x1B8 SWAP1 PUSH2 0x605 JUMP JUMPDEST PUSH2 0x1B8 SWAP1 SLOAD PUSH2 0xA02 JUMP JUMPDEST ISZERO PUSH2 0xA1C JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x526F756E64206E6F7420616374697665 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x1B8 SWAP1 DUP2 JUMP JUMPDEST PUSH2 0x1B8 SWAP1 SLOAD PUSH2 0xA54 JUMP JUMPDEST ISZERO PUSH2 0xA6C JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x149BDD5B99081B9BDD08195B991959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0xAAA JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E74207061727469636970616E747300000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 PUSH1 0xFF SWAP1 JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0xB0E PUSH2 0x1B8 PUSH2 0xB15 SWAP3 ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP3 SLOAD PUSH2 0xAEF JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xB51 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0xB19 JUMP JUMPDEST SWAP1 PUSH2 0x1A2 PUSH2 0xB63 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 PUSH2 0xB2F JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xB51 JUMPI PUSH1 0x20 DUP1 SWAP2 MUL ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0xB94 PUSH2 0xB8F DUP4 PUSH2 0xB6A JUMP JUMPDEST PUSH2 0xB56 JUMP JUMPDEST SWAP2 DUP3 MSTORE JUMP JUMPDEST CALLDATASIZE SWAP1 CALLDATACOPY JUMP JUMPDEST SWAP1 PUSH2 0x1A2 PUSH2 0xBB4 PUSH2 0xBAE DUP5 PUSH2 0xB82 JUMP JUMPDEST SWAP4 PUSH2 0xB6A JUMP JUMPDEST PUSH1 0x1F NOT ADD PUSH1 0x20 DUP5 ADD PUSH2 0xB99 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0xBFA JUMPI PUSH2 0xBF1 PUSH1 0x1 SWAP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP2 MUL ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0xBC1 JUMP JUMPDEST PUSH2 0x1B8 SWAP2 PUSH1 0x8 MUL SHR DUP2 JUMP JUMPDEST SWAP1 PUSH2 0x1B8 SWAP2 SLOAD PUSH2 0xBFF JUMP JUMPDEST SWAP1 PUSH2 0xC1E DUP3 MLOAD SWAP1 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0xBFA JUMPI PUSH1 0x20 DUP1 SWAP2 MUL ADD ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 NOT SWAP1 PUSH2 0xAF4 JUMP JUMPDEST SWAP1 PUSH2 0xC47 PUSH2 0x1B8 PUSH2 0xB15 SWAP3 SWAP1 JUMP JUMPDEST DUP3 SLOAD PUSH2 0xC2F JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x60 DUP2 ADD SWAP4 SWAP3 PUSH2 0x1A2 SWAP3 SWAP1 SWAP2 PUSH1 0x40 SWAP2 PUSH2 0x8FA SWAP1 PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH2 0xC79 PUSH2 0x1B8 DUP3 PUSH1 0x2 PUSH2 0x9EA JUMP JUMPDEST SWAP1 PUSH1 0x7 DUP3 ADD SWAP3 PUSH2 0xC90 PUSH2 0xC8B DUP6 PUSH2 0xA0B JUMP JUMPDEST PUSH2 0xA15 JUMP JUMPDEST PUSH2 0xCAA PUSH2 0xCA2 PUSH2 0x1B8 PUSH1 0x5 DUP7 ADD PUSH2 0xA5B JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0xA65 JUMP JUMPDEST PUSH2 0xCE0 PUSH1 0x0 PUSH1 0x8 DUP6 ADD SWAP6 PUSH2 0xCDB PUSH2 0xCC0 DUP9 PUSH2 0xA5B JUMP JUMPDEST PUSH2 0xCD4 PUSH2 0xCD0 PUSH2 0x1B8 PUSH1 0x8 PUSH2 0xA5B JUMP JUMPDEST SWAP2 SWAP1 JUMP JUMPDEST LT ISZERO PUSH2 0xAA3 JUMP JUMPDEST PUSH2 0xAFE JUMP JUMPDEST PUSH1 0x1 DUP4 ADD SWAP1 PUSH2 0xCF5 PUSH2 0xCF0 DUP4 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB9E JUMP JUMPDEST SWAP3 PUSH2 0xD00 PUSH1 0x0 PUSH2 0x9DD JUMP JUMPDEST PUSH2 0xD0B PUSH2 0x1B8 DUP6 SLOAD SWAP1 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0xD44 JUMPI DUP1 PUSH2 0xD39 PUSH2 0xD2C PUSH2 0xD26 PUSH2 0xD3F SWAP5 DUP9 PUSH2 0xBD7 JUMP JUMPDEST SWAP1 PUSH2 0xC0A JUMP JUMPDEST PUSH2 0xD36 DUP4 DUP10 PUSH2 0xC15 JUMP JUMPDEST MSTORE JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH2 0xD00 JUMP JUMPDEST POP SWAP4 SWAP2 POP SWAP4 PUSH2 0xD96 PUSH2 0xD90 PUSH2 0xD9C SWAP3 PUSH2 0xD8B PUSH1 0x9 PUSH2 0xD82 PUSH32 0x702CA2B43EB700BF6C35CD0FD463096F3F976F36ABF9A0640B9111D2774E9095 SWAP9 PUSH2 0x2261 JUMP JUMPDEST SWAP7 ADD SWAP6 DUP7 PUSH2 0xC39 JUMP JUMPDEST PUSH2 0xA5B JUMP JUMPDEST SWAP3 PUSH2 0xA5B JUMP JUMPDEST SWAP4 PUSH2 0x9DD JUMP JUMPDEST SWAP3 PUSH2 0xDB4 PUSH2 0xDA9 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 SWAP3 TIMESTAMP SWAP2 DUP5 PUSH2 0xC4E JUMP JUMPDEST SUB SWAP1 LOG2 JUMP JUMPDEST PUSH2 0x1A2 SWAP1 PUSH2 0x9CC JUMP JUMPDEST PUSH2 0x1B8 PUSH2 0x160 PUSH2 0xB56 JUMP JUMPDEST PUSH2 0xDD5 PUSH2 0xDC2 JUMP JUMPDEST SWAP1 PUSH1 0x0 DUP3 MSTORE PUSH1 0x20 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP13 ADD PUSH1 0x60 DUP2 MSTORE ADD PUSH1 0x60 DUP2 MSTORE ADD PUSH1 0x60 DUP2 MSTORE ADD PUSH1 0x0 DUP2 MSTORE ADD PUSH1 0x0 JUMPDEST DUP2 MSTORE ADD PUSH1 0x0 DUP2 MSTORE ADD PUSH1 0x0 DUP2 MSTORE ADD PUSH1 0x0 DUP2 MSTORE ADD PUSH1 0x0 DUP2 MSTORE ADD PUSH1 0x0 SWAP1 MSTORE POP JUMP JUMPDEST PUSH2 0x1B8 PUSH2 0xDCD JUMP JUMPDEST SWAP1 PUSH2 0xE40 PUSH2 0xE34 PUSH2 0x1F0 DUP5 SLOAD SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0xE51 JUMPI POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 PUSH2 0xE75 PUSH2 0xE6E PUSH1 0x1 SWAP3 PUSH2 0xE66 DUP8 PUSH2 0xA5B JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP5 PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 ADD PUSH2 0xE44 JUMP JUMPDEST SWAP1 PUSH2 0x1B8 SWAP2 PUSH2 0xE25 JUMP JUMPDEST SWAP1 PUSH2 0x1A2 PUSH2 0xEA1 SWAP3 PUSH2 0xE98 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP4 DUP5 DUP1 SWAP3 PUSH2 0xE7D JUMP JUMPDEST SUB DUP4 PUSH2 0xB2F JUMP JUMPDEST SWAP1 PUSH2 0xEB7 PUSH2 0xE34 PUSH2 0x1F0 DUP5 SLOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0xEC8 JUMPI POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 PUSH2 0xEDD PUSH2 0xE6E PUSH1 0x1 SWAP3 PUSH2 0xE66 DUP8 PUSH2 0xA5B JUMP JUMPDEST SWAP3 SWAP2 ADD PUSH2 0xEBB JUMP JUMPDEST SWAP1 PUSH2 0x1B8 SWAP2 PUSH2 0xEA8 JUMP JUMPDEST SWAP1 PUSH2 0x1A2 PUSH2 0xEA1 SWAP3 PUSH2 0xF00 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP4 DUP5 DUP1 SWAP3 PUSH2 0xEE5 JUMP JUMPDEST PUSH2 0x1B8 SWAP1 PUSH1 0x8 SHR PUSH2 0x605 JUMP JUMPDEST PUSH2 0x1B8 SWAP1 SLOAD PUSH2 0xF09 JUMP JUMPDEST SWAP1 PUSH2 0x1A2 PUSH2 0x1013 PUSH1 0x9 PUSH2 0xF30 PUSH2 0xDC2 JUMP JUMPDEST SWAP5 PUSH2 0xF41 PUSH2 0xF3D DUP3 PUSH2 0xA5B JUMP JUMPDEST DUP8 MSTORE JUMP JUMPDEST PUSH2 0xF57 PUSH2 0xF50 PUSH1 0x1 DUP4 ADD PUSH2 0xE87 JUMP JUMPDEST PUSH1 0x20 DUP9 ADD MSTORE JUMP JUMPDEST PUSH2 0xF6D PUSH2 0xF66 PUSH1 0x2 DUP4 ADD PUSH2 0xE87 JUMP JUMPDEST PUSH1 0x40 DUP9 ADD MSTORE JUMP JUMPDEST PUSH2 0xF83 PUSH2 0xF7C PUSH1 0x3 DUP4 ADD PUSH2 0xEEF JUMP JUMPDEST PUSH1 0x60 DUP9 ADD MSTORE JUMP JUMPDEST PUSH2 0xF99 PUSH2 0xF92 PUSH1 0x4 DUP4 ADD PUSH2 0xA5B JUMP JUMPDEST PUSH1 0x80 DUP9 ADD MSTORE JUMP JUMPDEST PUSH2 0xFAF PUSH2 0xFA8 PUSH1 0x5 DUP4 ADD PUSH2 0xA5B JUMP JUMPDEST PUSH1 0xA0 DUP9 ADD MSTORE JUMP JUMPDEST PUSH2 0xFC5 PUSH2 0xFBE PUSH1 0x6 DUP4 ADD PUSH2 0xA5B JUMP JUMPDEST PUSH1 0xC0 DUP9 ADD MSTORE JUMP JUMPDEST PUSH2 0xFDD PUSH2 0xFD4 PUSH1 0x7 DUP4 ADD PUSH2 0xA0B JUMP JUMPDEST ISZERO ISZERO PUSH1 0xE0 DUP9 ADD MSTORE JUMP JUMPDEST PUSH2 0xFF6 PUSH2 0xFEC PUSH1 0x7 DUP4 ADD PUSH2 0xF15 JUMP JUMPDEST ISZERO ISZERO PUSH2 0x100 DUP9 ADD MSTORE JUMP JUMPDEST PUSH2 0x100D PUSH2 0x1005 PUSH1 0x8 DUP4 ADD PUSH2 0xA5B JUMP JUMPDEST PUSH2 0x120 DUP9 ADD MSTORE JUMP JUMPDEST ADD PUSH2 0xA5B JUMP JUMPDEST PUSH2 0x140 DUP5 ADD MSTORE JUMP JUMPDEST PUSH2 0x1B8 SWAP1 PUSH2 0xF1F JUMP JUMPDEST PUSH2 0x103B PUSH2 0x1B8 SWAP2 PUSH2 0x1033 PUSH2 0xE1D JUMP JUMPDEST POP PUSH1 0x2 PUSH2 0x9EA JUMP JUMPDEST PUSH2 0x101B JUMP JUMPDEST PUSH2 0x1B8 SWAP1 PUSH2 0x9DD JUMP JUMPDEST PUSH2 0x9DD JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x106E JUMPI MOD SWAP1 JUMP JUMPDEST PUSH2 0x104E JUMP JUMPDEST PUSH2 0x1090 PUSH2 0x108B PUSH2 0x1B8 SWAP3 PUSH2 0x1085 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH2 0x2419 JUMP JUMPDEST PUSH2 0x1040 JUMP JUMPDEST PUSH2 0x109A PUSH1 0x9 PUSH2 0xA5B JUMP JUMPDEST SWAP1 PUSH2 0x1064 JUMP JUMPDEST PUSH2 0x1B8 SWAP1 PUSH2 0x10AC PUSH2 0x21D3 JUMP JUMPDEST PUSH2 0x1454 JUMP JUMPDEST ISZERO PUSH2 0x10B8 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x135A5E1A5B99C8191A5CD8589B1959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x1114 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH2 0x10EF JUMP JUMPDEST SWAP1 PUSH2 0xC47 PUSH2 0x1B8 PUSH2 0xB15 SWAP3 PUSH2 0x9DD JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x1134 JUMP JUMPDEST SWAP3 SWAP1 JUMP JUMPDEST DUP3 ADD DUP1 SWAP3 GT PUSH2 0x1114 JUMPI JUMP JUMPDEST SWAP2 PUSH1 0x0 NOT PUSH1 0x8 SWAP3 SWAP1 SWAP3 MUL SWAP2 DUP3 SHL SWAP2 SHL PUSH2 0xAF4 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x1162 PUSH2 0x1B8 PUSH2 0xB15 SWAP4 SWAP1 JUMP JUMPDEST SWAP1 DUP4 SLOAD PUSH2 0x113F JUMP JUMPDEST PUSH2 0x1A2 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x1153 JUMP JUMPDEST DUP2 DUP2 LT PUSH2 0x1181 JUMPI POP POP JUMP JUMPDEST DUP1 PUSH2 0x118F PUSH1 0x0 PUSH1 0x1 SWAP4 PUSH2 0x116A JUMP JUMPDEST ADD PUSH2 0x1176 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 DUP3 DUP3 LT PUSH2 0x11A4 JUMPI POP POP POP JUMP JUMPDEST PUSH2 0x1A2 SWAP3 SWAP2 PUSH2 0x11BA SWAP1 JUMPDEST SWAP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x1176 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x40 SHL DUP2 GT PUSH2 0xB51 JUMPI DUP2 PUSH2 0x11DC PUSH2 0x1A2 SWAP4 SLOAD SWAP1 JUMP JUMPDEST SWAP1 DUP3 DUP2 SSTORE PUSH2 0x1195 JUMP JUMPDEST DUP2 MLOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0xB51 JUMPI PUSH2 0x1210 PUSH2 0xE34 PUSH1 0x1 SWAP3 PUSH2 0x120A DUP7 DUP7 PUSH2 0x11C4 JUMP JUMPDEST PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 DIV SWAP2 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x1223 JUMPI POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SWAP1 PUSH1 0x20 PUSH2 0x1233 PUSH2 0x1B8 DUP7 MLOAD SWAP1 JUMP JUMPDEST SWAP5 ADD SWAP4 DUP2 DUP5 ADD SSTORE ADD PUSH2 0x1216 JUMP JUMPDEST SWAP1 PUSH2 0x1A2 SWAP2 PUSH2 0x11E5 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x1162 PUSH2 0x1B8 PUSH2 0xB15 SWAP4 PUSH2 0x9DD JUMP JUMPDEST PUSH2 0x1A2 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x124A JUMP JUMPDEST DUP2 DUP2 LT PUSH2 0x1272 JUMPI POP POP JUMP JUMPDEST DUP1 PUSH2 0x1280 PUSH1 0x0 PUSH1 0x1 SWAP4 PUSH2 0x125B JUMP JUMPDEST ADD PUSH2 0x1267 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 DUP3 DUP3 LT PUSH2 0x1295 JUMPI POP POP POP JUMP JUMPDEST PUSH2 0x1A2 SWAP3 SWAP2 PUSH2 0x12A3 SWAP1 PUSH2 0x11AE JUMP JUMPDEST SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x1267 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x40 SHL DUP2 GT PUSH2 0xB51 JUMPI DUP2 PUSH2 0x12C5 PUSH2 0x1A2 SWAP4 SLOAD SWAP1 JUMP JUMPDEST SWAP1 DUP3 DUP2 SSTORE PUSH2 0x1286 JUMP JUMPDEST DUP2 MLOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0xB51 JUMPI PUSH2 0x12F3 PUSH2 0xE34 PUSH1 0x1 SWAP3 PUSH2 0x120A DUP7 DUP7 PUSH2 0x12AD JUMP JUMPDEST SWAP3 DIV SWAP2 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x1306 JUMPI POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SWAP1 PUSH1 0x20 PUSH2 0x1316 PUSH2 0x1B8 DUP7 MLOAD SWAP1 JUMP JUMPDEST SWAP5 ADD SWAP4 DUP2 DUP5 ADD SSTORE ADD PUSH2 0x12F9 JUMP JUMPDEST SWAP1 PUSH2 0x1A2 SWAP2 PUSH2 0x12CE JUMP JUMPDEST SWAP1 PUSH2 0xFF00 SWAP1 PUSH1 0x8 SHL PUSH2 0xAF4 JUMP JUMPDEST SWAP1 PUSH2 0x134A PUSH2 0x1B8 PUSH2 0xB15 SWAP3 ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x132D JUMP JUMPDEST PUSH1 0x9 PUSH2 0x1443 PUSH2 0x140 PUSH2 0x1A2 SWAP5 PUSH2 0x1371 PUSH2 0x136B PUSH1 0x0 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST DUP7 PUSH2 0x1119 JUMP JUMPDEST PUSH2 0x1388 PUSH2 0x137F PUSH1 0x20 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP8 ADD PUSH2 0x1240 JUMP JUMPDEST PUSH2 0x139F PUSH2 0x1396 PUSH1 0x40 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP8 ADD PUSH2 0x1240 JUMP JUMPDEST PUSH2 0x13B6 PUSH2 0x13AD PUSH1 0x60 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x3 DUP8 ADD PUSH2 0x1323 JUMP JUMPDEST PUSH2 0x13CD PUSH2 0x13C4 PUSH1 0x80 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x4 DUP8 ADD PUSH2 0x1119 JUMP JUMPDEST PUSH2 0x13E4 PUSH2 0x13DB PUSH1 0xA0 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x5 DUP8 ADD PUSH2 0x1119 JUMP JUMPDEST PUSH2 0x13FB PUSH2 0x13F2 PUSH1 0xC0 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x6 DUP8 ADD PUSH2 0x1119 JUMP JUMPDEST PUSH2 0x1426 PUSH1 0x7 DUP7 ADD PUSH2 0x1418 PUSH2 0x1412 PUSH1 0xE0 DUP6 ADD MLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP3 PUSH2 0xAFE JUMP JUMPDEST PUSH2 0x100 DUP4 ADD MLOAD ISZERO ISZERO SWAP1 PUSH2 0x133A JUMP JUMPDEST PUSH2 0x143E PUSH2 0x1435 PUSH2 0x120 DUP4 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x8 DUP8 ADD PUSH2 0x1119 JUMP JUMPDEST ADD MLOAD SWAP1 JUMP JUMPDEST SWAP2 ADD PUSH2 0xC39 JUMP JUMPDEST SWAP1 PUSH2 0x1A2 SWAP2 PUSH2 0x1351 JUMP JUMPDEST POP PUSH2 0x145F PUSH1 0xC PUSH2 0xA0B JUMP JUMPDEST PUSH2 0x1468 SWAP1 PUSH2 0x10B1 JUMP JUMPDEST PUSH2 0x1472 PUSH1 0x7 PUSH2 0xA5B JUMP JUMPDEST PUSH2 0x147B DUP2 PUSH2 0x1105 JUMP JUMPDEST PUSH2 0x1486 SWAP1 PUSH1 0x7 PUSH2 0x1119 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1491 DUP2 PUSH2 0x9DD JUMP JUMPDEST SWAP1 PUSH2 0x149B DUP3 PUSH2 0xB9E JUMP JUMPDEST SWAP2 PUSH2 0x14A5 DUP2 PUSH2 0xB9E JUMP JUMPDEST SWAP2 PUSH2 0x14AF DUP3 PUSH2 0xB9E JUMP JUMPDEST PUSH2 0x14B9 PUSH1 0xA PUSH2 0xA5B JUMP JUMPDEST PUSH2 0x14C3 SWAP1 TIMESTAMP PUSH2 0x1129 JUMP JUMPDEST PUSH2 0x14CD PUSH1 0xA PUSH2 0xA5B JUMP JUMPDEST PUSH2 0x14D7 SWAP1 TIMESTAMP PUSH2 0x1129 JUMP JUMPDEST PUSH2 0x14E1 PUSH1 0xB PUSH2 0xA5B JUMP JUMPDEST PUSH2 0x14EA SWAP2 PUSH2 0x1129 JUMP JUMPDEST SWAP2 PUSH2 0x14F4 DUP5 PUSH2 0x9DD JUMP JUMPDEST SWAP6 PUSH2 0x14FD PUSH2 0xDC2 JUMP JUMPDEST SWAP8 PUSH2 0x1508 DUP11 DUP8 DUP12 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 DUP10 ADD MSTORE PUSH1 0x40 DUP9 ADD MSTORE PUSH1 0x60 DUP8 ADD MSTORE PUSH2 0x1522 TIMESTAMP PUSH1 0x80 DUP9 ADD MSTORE JUMP JUMPDEST PUSH1 0xA0 DUP7 ADD MSTORE PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0xE0 DUP6 ADD MSTORE ISZERO ISZERO PUSH2 0x100 DUP5 ADD MSTORE PUSH2 0x120 DUP4 ADD MSTORE PUSH2 0x140 DUP3 ADD MSTORE DUP1 PUSH2 0x1553 DUP4 PUSH1 0x2 PUSH2 0x9EA JUMP JUMPDEST SWAP1 PUSH2 0x155D SWAP2 PUSH2 0x144A JUMP JUMPDEST PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0xA0 SWAP1 SWAP2 ADD MLOAD PUSH2 0x1572 PUSH1 0x8 PUSH2 0xA5B JUMP JUMPDEST SWAP1 PUSH2 0x157C DUP5 PUSH2 0x9DD JUMP JUMPDEST SWAP3 PUSH2 0x1586 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 SWAP3 PUSH2 0x1593 SWAP3 DUP5 PUSH2 0xC4E JUMP JUMPDEST SUB PUSH32 0x87A3241A0380A7685F0CFD2544C5D771C51DC926DD74D20D81EE1AEA62FBFB55 SWAP2 LOG2 SWAP1 JUMP JUMPDEST PUSH2 0x1B8 PUSH1 0x0 PUSH2 0x10A0 JUMP JUMPDEST PUSH2 0x1B8 SWAP1 PUSH2 0x3AE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 JUMP JUMPDEST PUSH2 0x1B8 SWAP1 PUSH2 0x15C4 JUMP JUMPDEST PUSH2 0x1B8 SWAP1 PUSH2 0x15D8 JUMP JUMPDEST SWAP1 PUSH2 0x9F4 SWAP1 PUSH2 0x15E1 JUMP JUMPDEST PUSH2 0x1B8 SWAP1 PUSH2 0xEEF JUMP JUMPDEST PUSH2 0x1614 PUSH2 0x1B8 SWAP2 PUSH2 0x160C PUSH1 0x60 SWAP1 JUMP JUMPDEST POP PUSH1 0x4 PUSH2 0x15EA JUMP JUMPDEST PUSH2 0x15F4 JUMP JUMPDEST PUSH2 0x1B8 PUSH1 0x7 PUSH2 0xA5B JUMP JUMPDEST SWAP1 PUSH2 0x1B8 SWAP2 PUSH2 0x1630 PUSH2 0x21D3 JUMP JUMPDEST PUSH2 0x1681 JUMP JUMPDEST ISZERO PUSH2 0x163C JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x52657665616C2074696D65206E6F742072656163686564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x1B8 SWAP2 PUSH2 0x16A4 PUSH2 0x169C PUSH2 0x1B8 PUSH1 0x6 PUSH2 0x100D DUP7 PUSH1 0x2 PUSH2 0x9EA JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x1635 JUMP JUMPDEST PUSH2 0x1701 JUMP JUMPDEST ISZERO PUSH2 0x16B0 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x149BDD5B9908185B1C9958591E481C995D99585B1959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP2 ADD SWAP3 SWAP2 PUSH2 0x1A2 SWAP2 PUSH1 0x20 ADD MSTORE JUMP JUMPDEST POP PUSH2 0x1744 PUSH2 0x173E PUSH1 0x8 PUSH2 0x1718 PUSH2 0x1B8 DUP6 PUSH1 0x2 PUSH2 0x9EA JUMP JUMPDEST PUSH2 0x100D PUSH1 0x1 PUSH1 0x7 DUP4 ADD PUSH2 0x1739 PUSH2 0x1734 PUSH2 0x1730 DUP4 PUSH2 0xF15 JUMP JUMPDEST ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x16A9 JUMP JUMPDEST PUSH2 0x133A JUMP JUMPDEST SWAP2 PUSH2 0x9DD JUMP JUMPDEST PUSH32 0xD48FE253BDB396C73BC32F7B556A42456788B817D0254DD2469873141CA91C24 PUSH2 0x176E PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST DUP1 PUSH2 0x177A TIMESTAMP DUP7 DUP4 PUSH2 0x16EE JUMP JUMPDEST SUB SWAP1 LOG2 SWAP1 JUMP JUMPDEST PUSH2 0x1B8 SWAP1 PUSH1 0x0 PUSH2 0x1623 JUMP JUMPDEST PUSH2 0x1B8 SWAP1 PUSH2 0x3AE JUMP JUMPDEST PUSH2 0x1B8 SWAP1 SLOAD PUSH2 0x178B JUMP JUMPDEST SWAP1 PUSH2 0x17AD PUSH2 0xE34 PUSH2 0x1F0 DUP5 SLOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x17BE JUMPI POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 PUSH2 0x17E4 PUSH2 0xE6E PUSH1 0x1 SWAP3 PUSH2 0x17D3 DUP8 PUSH2 0x1794 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 ADD PUSH2 0x17B1 JUMP JUMPDEST SWAP1 PUSH2 0x1B8 SWAP2 PUSH2 0x179E JUMP JUMPDEST SWAP1 PUSH2 0x1A2 PUSH2 0xEA1 SWAP3 PUSH2 0x1807 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP4 DUP5 DUP1 SWAP3 PUSH2 0x17EC JUMP JUMPDEST PUSH2 0x1B8 SWAP1 PUSH2 0x17F6 JUMP JUMPDEST PUSH2 0x1830 PUSH2 0x1B8 SWAP2 PUSH2 0x1828 PUSH1 0x60 SWAP1 JUMP JUMPDEST POP PUSH1 0x5 PUSH2 0x9EA JUMP JUMPDEST PUSH2 0x1810 JUMP JUMPDEST PUSH2 0x1A2 SWAP1 PUSH2 0x1841 PUSH2 0x21D3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH2 0x186B PUSH2 0x1A2 SWAP4 PUSH2 0x1864 PUSH2 0xC8B DUP5 PUSH2 0x185E DUP5 PUSH1 0x2 PUSH2 0x9EA JUMP JUMPDEST ADD PUSH2 0xA0B JUMP JUMPDEST PUSH1 0x2 PUSH2 0x9EA JUMP JUMPDEST ADD PUSH2 0xAFE JUMP JUMPDEST PUSH2 0x1A2 SWAP1 PUSH2 0x1835 JUMP JUMPDEST PUSH2 0x1B8 SWAP1 PUSH2 0xE87 JUMP JUMPDEST PUSH1 0x1 PUSH2 0x1894 PUSH2 0x1B8 SWAP3 PUSH2 0x1033 PUSH1 0x60 SWAP1 JUMP JUMPDEST ADD PUSH2 0x187A JUMP JUMPDEST PUSH2 0x1A2 SWAP1 PUSH2 0x18A6 PUSH2 0x21D3 JUMP JUMPDEST PUSH2 0x1A2 SWAP1 PUSH1 0xC PUSH2 0xAFE JUMP JUMPDEST PUSH2 0x1A2 SWAP1 PUSH2 0x189A JUMP JUMPDEST PUSH2 0x18C2 PUSH2 0x21D3 JUMP JUMPDEST PUSH2 0x1A2 PUSH2 0x18E0 JUMP JUMPDEST PUSH2 0x3AE PUSH2 0x1B8 PUSH2 0x1B8 SWAP3 SWAP1 JUMP JUMPDEST PUSH2 0x1B8 SWAP1 PUSH2 0x18CA JUMP JUMPDEST PUSH2 0x1A2 PUSH2 0x18ED PUSH1 0x0 PUSH2 0x18D7 JUMP JUMPDEST PUSH2 0x2496 JUMP JUMPDEST PUSH2 0x1A2 PUSH2 0x18BA JUMP JUMPDEST SWAP1 PUSH2 0x1A2 SWAP4 SWAP3 SWAP2 PUSH2 0x1909 PUSH2 0x21D3 JUMP JUMPDEST SWAP2 PUSH2 0x1927 PUSH2 0x192E SWAP3 PUSH2 0x1920 PUSH2 0x1A2 SWAP7 SWAP6 PUSH1 0x8 PUSH2 0x1119 JUMP JUMPDEST PUSH1 0x9 PUSH2 0x1119 JUMP JUMPDEST PUSH1 0xA PUSH2 0x1119 JUMP JUMPDEST PUSH1 0xB PUSH2 0x1119 JUMP JUMPDEST SWAP1 PUSH2 0x1A2 SWAP4 SWAP3 SWAP2 PUSH2 0x18FA JUMP JUMPDEST PUSH2 0x1B8 PUSH1 0x0 PUSH2 0x1794 JUMP JUMPDEST PUSH2 0x1B8 PUSH1 0xE0 PUSH2 0xB56 JUMP JUMPDEST PUSH2 0x195D PUSH2 0x194B JUMP JUMPDEST SWAP1 PUSH1 0x0 DUP3 MSTORE PUSH1 0x20 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP9 ADD PUSH1 0x0 PUSH2 0xDFF JUMP JUMPDEST PUSH2 0x1B8 PUSH2 0x1955 JUMP JUMPDEST SWAP1 PUSH2 0x9F4 JUMP JUMPDEST PUSH2 0x1B8 SWAP1 PUSH1 0x8 SHR PUSH2 0x3AE JUMP JUMPDEST PUSH2 0x1B8 SWAP1 SLOAD PUSH2 0x1981 JUMP JUMPDEST SWAP1 PUSH2 0x1A2 PUSH2 0x1A0E PUSH1 0x5 PUSH2 0x19A8 PUSH2 0x194B JUMP JUMPDEST SWAP5 PUSH2 0x19B5 PUSH2 0xF3D DUP3 PUSH2 0xA5B JUMP JUMPDEST PUSH2 0x19C4 PUSH2 0xF50 PUSH1 0x1 DUP4 ADD PUSH2 0xA5B JUMP JUMPDEST PUSH2 0x19D3 PUSH2 0xF66 PUSH1 0x2 DUP4 ADD PUSH2 0xA5B JUMP JUMPDEST PUSH2 0x19E2 PUSH2 0xF7C PUSH1 0x3 DUP4 ADD PUSH2 0xA5B JUMP JUMPDEST PUSH2 0x19F1 PUSH2 0xF92 PUSH1 0x4 DUP4 ADD PUSH2 0xA5B JUMP JUMPDEST PUSH2 0x1A08 PUSH2 0x19FF DUP4 DUP4 ADD PUSH2 0xA0B JUMP JUMPDEST ISZERO ISZERO PUSH1 0xA0 DUP9 ADD MSTORE JUMP JUMPDEST ADD PUSH2 0x198D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0xC0 DUP5 ADD MSTORE JUMP JUMPDEST PUSH2 0x1B8 SWAP1 PUSH2 0x1997 JUMP JUMPDEST PUSH2 0x1A3E PUSH2 0x1B8 SWAP2 PUSH2 0x1A36 PUSH2 0x1973 JUMP JUMPDEST POP PUSH1 0x3 PUSH2 0x197B JUMP JUMPDEST PUSH2 0x1A1E JUMP JUMPDEST SWAP1 PUSH2 0x1B8 SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0x1A5E PUSH2 0xC8B PUSH1 0x7 PUSH2 0x185E DUP6 PUSH1 0x2 PUSH2 0x9EA JUMP JUMPDEST PUSH2 0x1AAF JUMP JUMPDEST ISZERO PUSH2 0x1A6A JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x52616E646F6D6E65737320616C72656164792075736564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x1B8 SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0x1AD5 PUSH2 0x1AD0 PUSH2 0x1730 PUSH2 0x1ACB DUP8 PUSH1 0x6 PUSH2 0x197B JUMP JUMPDEST PUSH2 0xA0B JUMP JUMPDEST PUSH2 0x1A63 JUMP JUMPDEST PUSH2 0x1D19 JUMP JUMPDEST ISZERO PUSH2 0x1AE1 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x149BDD5B9908195B991959 PUSH1 0xAA SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1B1B JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x149BDD5B9908199D5B1B PUSH1 0xB2 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1B54 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x105B1C9958591E481C185C9D1A58DA5C185D1959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB SWAP1 PUSH1 0x8 SHL PUSH2 0xAF4 JUMP JUMPDEST SWAP1 PUSH2 0x1BB3 PUSH2 0x1B8 PUSH2 0xB15 SWAP3 PUSH2 0x15E1 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x1B90 JUMP JUMPDEST SWAP1 PUSH2 0x1C5C PUSH1 0xC0 PUSH1 0x5 PUSH2 0x1A2 SWAP5 PUSH2 0x1BDA PUSH2 0x1BD4 PUSH1 0x0 DUP8 ADD MLOAD SWAP1 JUMP JUMPDEST DUP3 PUSH2 0xC39 JUMP JUMPDEST PUSH2 0x1BF1 PUSH2 0x1BE8 PUSH1 0x20 DUP8 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP4 ADD PUSH2 0xC39 JUMP JUMPDEST PUSH2 0x1C08 PUSH2 0x1BFF PUSH1 0x40 DUP8 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP4 ADD PUSH2 0xC39 JUMP JUMPDEST PUSH2 0x1C1F PUSH2 0x1C16 PUSH1 0x60 DUP8 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x3 DUP4 ADD PUSH2 0x1119 JUMP JUMPDEST PUSH2 0x1C36 PUSH2 0x1C2D PUSH1 0x80 DUP8 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x4 DUP4 ADD PUSH2 0x1119 JUMP JUMPDEST ADD SWAP3 PUSH2 0x1C4E PUSH2 0x1C48 PUSH1 0xA0 DUP4 ADD MLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP6 PUSH2 0xAFE JUMP JUMPDEST ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1BA3 JUMP JUMPDEST SWAP1 PUSH2 0x1A2 SWAP2 PUSH2 0x1BBA JUMP JUMPDEST SWAP1 DUP2 SLOAD SWAP2 PUSH1 0x1 PUSH1 0x40 SHL DUP4 LT ISZERO PUSH2 0xB51 JUMPI DUP3 PUSH2 0x1C8F SWAP2 PUSH1 0x1 PUSH2 0x1A2 SWAP6 ADD DUP2 SSTORE PUSH2 0xBD7 JUMP JUMPDEST SWAP1 PUSH2 0x1153 JUMP JUMPDEST SWAP1 DUP2 SLOAD SWAP2 PUSH1 0x1 PUSH1 0x40 SHL DUP4 LT ISZERO PUSH2 0xB51 JUMPI DUP3 PUSH2 0x1CB8 SWAP2 PUSH1 0x1 PUSH2 0x1A2 SWAP6 ADD DUP2 SSTORE PUSH2 0xBD7 JUMP JUMPDEST SWAP1 PUSH2 0x124A JUMP JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x8 SWAP3 SWAP1 SWAP3 MUL SWAP2 DUP3 SHL SWAP2 SHL PUSH2 0xAF4 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x1CE8 PUSH2 0x1B8 PUSH2 0xB15 SWAP4 PUSH2 0x15E1 JUMP JUMPDEST SWAP1 DUP4 SLOAD PUSH2 0x1CBE JUMP JUMPDEST SWAP1 DUP2 SLOAD SWAP2 PUSH1 0x1 PUSH1 0x40 SHL DUP4 LT ISZERO PUSH2 0xB51 JUMPI DUP3 PUSH2 0x1D13 SWAP2 PUSH1 0x1 PUSH2 0x1A2 SWAP6 ADD DUP2 SSTORE PUSH2 0xBD7 JUMP JUMPDEST SWAP1 PUSH2 0x1CD7 JUMP JUMPDEST POP SWAP1 SWAP3 SWAP2 PUSH2 0x1D28 DUP3 PUSH1 0x2 PUSH2 0x9EA JUMP JUMPDEST PUSH2 0x1D34 PUSH1 0x5 DUP3 ADD PUSH2 0xA5B JUMP JUMPDEST TIMESTAMP GT ISZERO PUSH2 0x1D40 SWAP1 PUSH2 0x1ADA JUMP JUMPDEST DUP4 PUSH1 0x8 DUP3 ADD SWAP2 PUSH2 0x1D4F DUP4 PUSH2 0xA5B JUMP JUMPDEST PUSH2 0x1D59 PUSH1 0x9 PUSH2 0xA5B JUMP JUMPDEST GT PUSH2 0x1D63 SWAP1 PUSH2 0x1B14 JUMP JUMPDEST PUSH2 0x1D6D CALLER DUP7 PUSH2 0x2051 JUMP JUMPDEST ISZERO PUSH2 0x1D77 SWAP1 PUSH2 0x1B4D JUMP JUMPDEST PUSH2 0x1D82 DUP3 DUP6 DUP10 PUSH2 0x24EE JUMP JUMPDEST SWAP7 PUSH2 0x1D8B PUSH2 0x194B JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH2 0x1D99 DUP9 PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH2 0x1DA4 DUP6 PUSH1 0x40 DUP4 ADD MSTORE JUMP JUMPDEST PUSH2 0x1DAF DUP4 PUSH1 0x60 DUP4 ADD MSTORE JUMP JUMPDEST PUSH2 0x1DBA TIMESTAMP PUSH1 0x80 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD MSTORE CALLER PUSH1 0xC0 DUP3 ADD MSTORE PUSH2 0x1DD2 DUP9 PUSH1 0x3 PUSH2 0x197B JUMP JUMPDEST SWAP1 PUSH2 0x1DDC SWAP2 PUSH2 0x1C62 JUMP JUMPDEST PUSH2 0x1DE9 DUP8 PUSH1 0x1 DUP4 ADD PUSH2 0x1C6C JUMP JUMPDEST PUSH2 0x1DF6 DUP5 PUSH1 0x2 DUP4 ADD PUSH2 0x1C6C JUMP JUMPDEST PUSH1 0x3 ADD SWAP1 PUSH2 0x1E03 SWAP2 PUSH2 0x1C95 JUMP JUMPDEST PUSH2 0x1E0C DUP2 PUSH2 0xA5B JUMP JUMPDEST PUSH2 0x1E15 SWAP1 PUSH2 0x1105 JUMP JUMPDEST PUSH2 0x1E1E SWAP2 PUSH2 0x1119 JUMP JUMPDEST PUSH2 0x1E29 DUP3 PUSH1 0x5 PUSH2 0x9EA JUMP JUMPDEST CALLER PUSH2 0x1E33 SWAP2 PUSH2 0x1CF0 JUMP JUMPDEST DUP2 PUSH2 0x1E3F CALLER PUSH1 0x4 PUSH2 0x15EA JUMP JUMPDEST SWAP1 PUSH2 0x1E49 SWAP2 PUSH2 0x1C95 JUMP JUMPDEST PUSH2 0x1E54 SWAP1 PUSH1 0x6 PUSH2 0x197B JUMP JUMPDEST PUSH1 0x1 PUSH2 0x1E5F SWAP2 PUSH2 0xAFE JUMP JUMPDEST PUSH2 0x1E68 SWAP1 PUSH2 0x9DD JUMP JUMPDEST PUSH2 0x1E71 CALLER PUSH2 0x15E1 JUMP JUMPDEST SWAP2 PUSH2 0x1E7B PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST DUP1 SWAP2 TIMESTAMP PUSH2 0x1E89 SWAP2 DUP8 DUP5 PUSH2 0xC4E JUMP JUMPDEST SUB PUSH32 0x57AD1338C773DF8AB4B3A0B286CAE4E4F6D36473D7E7A1F0B3F1B4DE474CD37B SWAP2 LOG3 SWAP1 JUMP JUMPDEST PUSH2 0x1B8 SWAP4 SWAP3 SWAP2 SWAP1 PUSH1 0x0 PUSH2 0x1A43 JUMP JUMPDEST SWAP1 PUSH2 0x1A2 SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0x1EDC PUSH2 0x169C PUSH2 0x1B8 PUSH1 0x6 PUSH2 0x100D DUP6 PUSH1 0x2 PUSH2 0x9EA JUMP JUMPDEST PUSH2 0x1F9E JUMP JUMPDEST ISZERO PUSH2 0x1EE8 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x4E6F7420796F757220766F7465 PUSH1 0x98 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1F24 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x159BDD1948185B1C9958591E481C995D99585B1959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1F68 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x125B9D985B1A59081C995D99585B PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x1049 PUSH1 0x1 PUSH32 0x517DE2D19CD96B554768BE894916AC969B1449096E6033EFC0D82D10A2CEC88C SWAP5 SWAP6 PUSH2 0xCDB PUSH2 0x2021 PUSH2 0x2028 SWAP7 SWAP10 PUSH1 0x5 PUSH2 0x1FE1 PUSH2 0x1B8 DUP14 PUSH1 0x3 PUSH2 0x197B JUMP JUMPDEST ADD SWAP4 PUSH2 0x2007 PUSH2 0x1FEF DUP7 PUSH2 0x198D JUMP JUMPDEST PUSH2 0x2001 CALLER JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST EQ PUSH2 0x1EE1 JUMP JUMPDEST PUSH2 0x201B PUSH2 0x2016 PUSH2 0x1730 DUP8 PUSH2 0xA0B JUMP JUMPDEST PUSH2 0x1F1D JUMP JUMPDEST DUP11 PUSH2 0x24EE JUMP JUMPDEST DUP10 EQ PUSH2 0x1F61 JUMP JUMPDEST SWAP2 PUSH2 0x2032 CALLER PUSH2 0x15E1 JUMP JUMPDEST SWAP4 PUSH2 0x203F PUSH2 0xDA9 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SUB SWAP1 LOG3 JUMP JUMPDEST SWAP1 PUSH2 0x1A2 SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0x1EBE JUMP JUMPDEST PUSH2 0x1830 PUSH2 0x2060 SWAP2 PUSH2 0x1828 PUSH1 0x0 SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x206B PUSH1 0x0 PUSH2 0x9DD JUMP JUMPDEST PUSH2 0x2076 PUSH2 0x1B8 DUP5 MLOAD SWAP1 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x20BE JUMPI PUSH2 0x2097 PUSH2 0x208A DUP3 DUP6 PUSH2 0xC15 JUMP JUMPDEST MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x20A9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1FF4 JUMP JUMPDEST EQ PUSH2 0x20B6 JUMPI PUSH1 0x1 ADD PUSH2 0x206B JUMP JUMPDEST POP POP POP PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST SWAP2 PUSH2 0x20DD PUSH1 0x9 PUSH2 0x100D PUSH2 0x1B8 SWAP7 SWAP5 SWAP6 PUSH2 0x1033 PUSH1 0x0 SWAP1 JUMP JUMPDEST SWAP3 PUSH2 0x2570 JUMP JUMPDEST PUSH2 0x1B8 PUSH1 0xA0 PUSH2 0xB56 JUMP JUMPDEST PUSH2 0x20F5 PUSH2 0x20E3 JUMP JUMPDEST SWAP1 PUSH1 0x0 DUP3 MSTORE PUSH1 0x20 DUP1 DUP1 DUP1 DUP1 DUP7 ADD PUSH1 0x0 DUP2 MSTORE ADD PUSH1 0x0 DUP2 MSTORE ADD PUSH1 0x0 DUP2 MSTORE ADD PUSH1 0x60 SWAP1 MSTORE POP JUMP JUMPDEST PUSH2 0x1B8 PUSH2 0x20ED JUMP JUMPDEST SWAP3 PUSH2 0x216B SWAP1 PUSH2 0x2164 PUSH2 0x1B8 SWAP5 PUSH2 0x2134 PUSH2 0x2118 JUMP JUMPDEST POP PUSH2 0x215D PUSH2 0x2145 PUSH2 0xCF0 PUSH1 0x0 PUSH2 0x9DD JUMP JUMPDEST SWAP6 PUSH2 0x2156 PUSH2 0x2151 PUSH2 0x20E3 JUMP JUMPDEST SWAP10 DUP11 MSTORE JUMP JUMPDEST PUSH1 0x20 DUP10 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 DUP8 ADD MSTORE JUMP JUMPDEST PUSH1 0x60 DUP6 ADD MSTORE JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE JUMP JUMPDEST PUSH2 0x1A2 SWAP1 PUSH2 0x217E PUSH2 0x21D3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2189 DUP2 PUSH2 0x18D7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EQ PUSH2 0x21AD JUMPI POP POP PUSH2 0x1A2 SWAP1 PUSH2 0x2496 JUMP JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH2 0x1A2 SWAP1 PUSH2 0x2172 JUMP JUMPDEST PUSH2 0x21DB PUSH2 0x1941 JUMP JUMPDEST CALLER SWAP1 PUSH2 0x21E6 DUP3 PUSH2 0x1FF4 JUMP JUMPDEST SUB PUSH2 0x21EE JUMPI POP JUMP JUMPDEST PUSH4 0x118CDAA7 PUSH1 0xE0 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 MSTORE PUSH1 0x24 SUB PUSH1 0x0 REVERT JUMPDEST ISZERO PUSH2 0x2217 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x456D707479206C6561766573206172726179 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x106E JUMPI DIV SWAP1 JUMP JUMPDEST ADD SWAP2 DUP3 MSTORE JUMP JUMPDEST SWAP1 PUSH2 0x2280 PUSH2 0x226D DUP4 MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x227A PUSH2 0xCD0 PUSH1 0x0 PUSH2 0x9DD JUMP JUMPDEST GT PUSH2 0x2210 JUMP JUMPDEST DUP2 MLOAD SWAP2 PUSH1 0x1 SWAP3 PUSH2 0x2292 PUSH2 0xCD0 DUP6 PUSH2 0x9DD JUMP JUMPDEST EQ PUSH2 0x23F2 JUMPI PUSH2 0x22B1 PUSH2 0x22A2 DUP3 MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x22AB DUP6 PUSH2 0x9DD JUMP JUMPDEST SWAP1 PUSH2 0x1129 JUMP JUMPDEST SWAP3 PUSH2 0x22CA PUSH2 0xCF0 PUSH1 0x2 SWAP6 PUSH2 0x22C4 DUP8 PUSH2 0x9DD JUMP JUMPDEST SWAP1 PUSH2 0x2251 JUMP JUMPDEST SWAP2 DUP2 PUSH2 0x22D6 PUSH1 0x0 PUSH2 0x9DD JUMP JUMPDEST SWAP1 JUMPDEST PUSH2 0x22EB JUMPI JUMPDEST POP POP POP PUSH2 0x1B8 SWAP2 SWAP3 POP PUSH2 0x258D JUMP JUMPDEST PUSH2 0x22F6 PUSH2 0x1B8 DUP4 MLOAD SWAP1 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x23ED JUMPI SWAP1 PUSH2 0x23C2 DUP4 SWAP3 PUSH2 0x2315 PUSH2 0x230F DUP6 PUSH2 0x9DD JUMP JUMPDEST DUP3 PUSH2 0x1129 JUMP JUMPDEST PUSH2 0x2323 PUSH2 0xCD0 PUSH2 0x1B8 DUP7 MLOAD SWAP1 JUMP JUMPDEST LT ISZERO PUSH2 0x23C9 JUMPI PUSH2 0x23B9 PUSH2 0x2385 PUSH2 0x2391 PUSH2 0x2343 PUSH2 0x233F DUP6 DUP9 PUSH2 0xC15 JUMP JUMPDEST MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x2361 PUSH2 0x233F PUSH2 0x235B PUSH2 0x2355 DUP12 PUSH2 0x9DD JUMP JUMPDEST DUP9 PUSH2 0x1129 JUMP JUMPDEST DUP10 PUSH2 0xC15 JUMP JUMPDEST SWAP1 PUSH2 0x236B PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP4 DUP5 SWAP3 PUSH1 0x20 DUP5 ADD SWAP3 DUP4 PUSH1 0x20 DUP2 PUSH2 0x225B PUSH2 0x1DD SWAP4 DUP4 SWAP7 SWAP6 SWAP1 MSTORE JUMP JUMPDEST SWAP1 DUP2 SUB DUP3 MSTORE SUB DUP3 PUSH2 0xB2F JUMP JUMPDEST PUSH2 0x23A3 PUSH2 0x239C DUP3 MLOAD SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST KECCAK256 PUSH2 0xD36 PUSH2 0x235B PUSH2 0x23B3 DUP13 PUSH2 0x9DD JUMP JUMPDEST DUP6 PUSH2 0x2251 JUMP JUMPDEST PUSH2 0x22AB DUP9 PUSH2 0x9DD JUMP JUMPDEST SWAP1 SWAP2 PUSH2 0x22D8 JUMP JUMPDEST PUSH2 0x23E8 PUSH2 0x23D9 PUSH2 0x233F DUP4 DUP7 PUSH2 0xC15 JUMP JUMPDEST PUSH2 0xD36 PUSH2 0x235B PUSH2 0x23B3 DUP13 PUSH2 0x9DD JUMP JUMPDEST PUSH2 0x23B9 JUMP JUMPDEST PUSH2 0x22DD JUMP JUMPDEST PUSH2 0x1B8 SWAP2 SWAP3 POP PUSH2 0x233F SWAP1 PUSH2 0x2406 PUSH1 0x0 PUSH2 0x9DD JUMP JUMPDEST SWAP1 PUSH2 0xC15 JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x1114 JUMPI JUMP JUMPDEST PUSH2 0x2461 PUSH2 0x2385 SWAP2 PUSH2 0x2428 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH2 0x243C PUSH2 0x2436 PUSH1 0x1 PUSH2 0x9DD JUMP JUMPDEST NUMBER PUSH2 0x240C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 BLOCKHASH PUSH1 0x20 DUP1 DUP4 ADD SWAP2 DUP3 MSTORE SWAP2 SWAP5 DUP6 SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 PUSH2 0x1DD DUP3 PREVRANDAO PUSH2 0x225B DUP3 TIMESTAMP DUP3 DUP3 DUP12 DUP3 JUMP JUMPDEST PUSH2 0x246C PUSH2 0x239C DUP3 MLOAD SWAP1 JUMP JUMPDEST KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH2 0xAF4 JUMP JUMPDEST SWAP1 PUSH2 0x248F PUSH2 0x1B8 PUSH2 0xB15 SWAP3 PUSH2 0x15E1 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x2470 JUMP JUMPDEST PUSH2 0x24BC PUSH2 0x24B6 PUSH2 0x24A6 PUSH1 0x0 PUSH2 0x1794 JUMP JUMPDEST PUSH2 0x24B1 DUP5 PUSH1 0x0 PUSH2 0x247F JUMP JUMPDEST PUSH2 0x15E1 JUMP JUMPDEST SWAP2 PUSH2 0x15E1 JUMP JUMPDEST SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH2 0x24E7 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x203F JUMP JUMPDEST SWAP2 PUSH2 0x2508 SWAP1 PUSH2 0x2385 SWAP3 PUSH2 0x24FF PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x236B JUMP JUMPDEST PUSH2 0x2513 PUSH2 0x239C DUP3 MLOAD SWAP1 JUMP JUMPDEST KECCAK256 XOR SWAP1 JUMP JUMPDEST SWAP1 SWAP3 SWAP2 SWAP3 PUSH2 0x2528 PUSH2 0xB8F DUP3 PUSH2 0xB6A JUMP JUMPDEST SWAP4 DUP2 DUP6 MSTORE PUSH1 0x20 DUP1 DUP7 ADD SWAP3 MUL DUP4 ADD SWAP3 DUP2 DUP5 GT PUSH2 0x187 JUMPI SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x254C JUMPI POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 SWAP2 PUSH2 0x255A DUP5 DUP7 PUSH2 0x195 JUMP JUMPDEST DUP2 MSTORE ADD SWAP3 ADD SWAP2 PUSH2 0x253F JUMP JUMPDEST PUSH2 0x1B8 SWAP2 CALLDATASIZE SWAP2 PUSH2 0x2518 JUMP JUMPDEST SWAP2 PUSH2 0x2588 SWAP1 PUSH2 0x1B8 SWAP5 SWAP3 PUSH2 0x2582 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH2 0x2565 JUMP JUMPDEST PUSH2 0x260E JUMP JUMPDEST SWAP1 DUP2 MLOAD SWAP2 PUSH1 0x1 SWAP3 PUSH2 0x25A0 PUSH2 0xCD0 DUP6 PUSH2 0x9DD JUMP JUMPDEST EQ PUSH2 0x23F2 JUMPI PUSH2 0x25B0 PUSH2 0x22A2 DUP3 MLOAD SWAP1 JUMP JUMPDEST SWAP3 PUSH2 0x25C3 PUSH2 0xCF0 PUSH1 0x2 SWAP6 PUSH2 0x22C4 DUP8 PUSH2 0x9DD JUMP JUMPDEST SWAP2 DUP2 PUSH2 0x25CF PUSH1 0x0 PUSH2 0x9DD JUMP JUMPDEST SWAP1 JUMPDEST PUSH2 0x25E3 JUMPI POP POP POP PUSH2 0x1B8 SWAP2 SWAP3 POP PUSH2 0x258D JUMP JUMPDEST PUSH2 0x25EE PUSH2 0x1B8 DUP4 MLOAD SWAP1 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x23ED JUMPI SWAP1 PUSH2 0x2607 DUP4 SWAP3 PUSH2 0x2315 PUSH2 0x230F DUP6 PUSH2 0x9DD JUMP JUMPDEST SWAP1 SWAP2 PUSH2 0x25D1 JUMP JUMPDEST PUSH2 0x1130 PUSH2 0x2628 SWAP3 SWAP4 PUSH2 0xCD0 SWAP3 PUSH2 0x2622 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH2 0x262C JUMP JUMPDEST EQ SWAP1 JUMP JUMPDEST PUSH2 0x2636 PUSH1 0x0 PUSH2 0x9DD JUMP JUMPDEST SWAP2 JUMPDEST PUSH2 0x2643 PUSH2 0x1B8 DUP4 MLOAD SWAP1 JUMP JUMPDEST DUP4 LT ISZERO PUSH2 0x2671 JUMPI PUSH2 0x2664 PUSH2 0x266B SWAP2 PUSH2 0x265E PUSH2 0x233F DUP7 DUP7 PUSH2 0xC15 JUMP JUMPDEST SWAP1 PUSH2 0x2677 JUMP JUMPDEST SWAP3 PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST SWAP2 PUSH2 0x2638 JUMP JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2692 JUMPI SWAP1 PUSH2 0x1B8 SWAP2 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x1B8 SWAP2 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LT MOD PUSH0 0xEA CODESIZE LT SWAP12 PUSH28 0xC05423A17DCF9B6CDF9202DD1BD4A57162B2160DA40D401764736F6C PUSH4 0x4300081C STOP CALLER ","sourceMap":"378:14812:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::o;:::-;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;-1:-1:-1;;;;;378:14812:11;;:::o;:::-;-1:-1:-1;;;;;378:14812:11;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;-1:-1:-1;;;;;378:14812:11;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;1767:25::-;;;;;:::i;378:14812::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;378:14812:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;378:14812:11;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;:::i;1500:62:0:-;1554:1;1500:62;;;:::i;:::-;1554:1;:::i;378:14812:11:-;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;-1:-1:-1;;;378:14812:11;;;;;;;;;;;;-1:-1:-1;;;378:14812:11;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;-1:-1:-1;;;378:14812:11;;;;;;;;;;;;-1:-1:-1;;;378:14812:11;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;378:14812:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;378:14812:11;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;;;:::o;:::-;;;;:::o;:::-;;;;;;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;378:14812:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;-1:-1:-1;;378:14812:11;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;6743:927;6819:49;6847:21;;:12;:21;:::i;6819:49::-;6887:14;;;;;6879:43;6887:14;;;:::i;:::-;6879:43;:::i;:::-;6933:60;6941:32;6960:13;;;;;:::i;6941:32::-;:15;:32;;6933:60;:::i;:::-;7104:22;7121:5;7012:22;;;;7004:79;7012:22;;;:::i;:::-;:41;;7038:15;;;:::i;7012:41::-;;378:14812;;7012:41;;;7004:79;:::i;:::-;7104:22;:::i;:::-;7311:16;;;:23;7297:38;7311:23;;378:14812;;;7311:23;7297:38;:::i;:::-;7351:13;;7121:5;7351:13;:::i;:::-;7366:27;7370:23;;378:14812;;;7366:27;;;;;;7431:19;7415:35;7431:19;;7395:3;7431:19;;;:::i;:::-;;;:::i;:::-;7415:35;;;;:::i;:::-;378:14812;;7415:35;378:14812;;;;7395:3;7351:13;;7366:27;;;;;;7628:16;7604:22;7574:88;7366:27;7472:76;:16;7491:57;7574:88;7366:27;7491:57;:::i;:::-;7472:16;;:76;;;:::i;:::-;7604:22;:::i;:::-;7628:16;;:::i;:::-;7574:88;;:::i;:::-;;;;378:14812;;;;7574:88;6941:15;;;;7574:88;;;:::i;:::-;;;;6743:927::o;:::-;;;;:::i;378:14812::-;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;378:14812:11:o;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;9593:131::-;9695:21;9688:28;9593:131;9657:18;;:::i;:::-;9695:21;:12;:21;:::i;:::-;9688:28;:::i;378:14812::-;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;14209:213::-;14381:15;14318:45;14381:33;14209:213;14272:16;378:14812;;;14272:16;14318:45;;:::i;:::-;14381:15;:::i;:::-;14399;;;:::i;:::-;14381:33;;:::i;1500:62:0:-;1554:1;1500:62;;;:::i;:::-;1554:1;:::i;378:14812:11:-;;;;:::o;:::-;;;-1:-1:-1;;;378:14812:11;;;;;;;;;;;;-1:-1:-1;;;378:14812:11;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;378:14812:11;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::o;:::-;;-1:-1:-1;;378:14812:11;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;-1:-1:-1;;;378:14812:11;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;-1:-1:-1;;;378:14812:11;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;:::i;3750:912::-;3843:13;;;;:::i;:::-;3835:41;;;:::i;:::-;3907:14;;;:::i;:::-;;;;:::i;:::-;;;;;:::i;:::-;4056:1;4042:16;;;:::i;:::-;;;;;:::i;:::-;4085;;;;:::i;:::-;4128;;;;:::i;:::-;4227:14;;;:::i;:::-;4209:32;;4170:15;4209:32;:::i;:::-;4286:14;;;:::i;:::-;4268:32;;4170:15;4268:32;:::i;:::-;4303:11;;;:::i;:::-;4268:46;;;:::i;:::-;4436:10;;;;:::i;:::-;3972:486;;;:::i;:::-;;;;;;;378:14812;;3972:486;;;;378:14812;3972:486;;;378:14812;3972:486;;;378:14812;3972:486;4170:15;3972:486;;;378:14812;;3972:486;;;;378:14812;3972:486;;;378:14812;4339:4;3972:486;;;378:14812;;;3972:486;;;378:14812;3972:486;;;378:14812;3972:486;;;378:14812;4479:21;;;:12;:21;:::i;:::-;:32;;;;:::i;:::-;4565:18;;;378:14812;4585:16;;;;378:14812;4603:15;;;:::i;:::-;4537:82;;;;:::i;:::-;;;378:14812;;;;4537:82;;;;;;;;:::i;:::-;;;;;3750:912;:::o;:::-;3807:15;378:14812;3807:15;:::i;378:14812::-;;;;;-1:-1:-1;;;;;378:14812:11;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;:::i;:::-;;;;:::i;10454:124::-;10552:18;10545:25;10454:124;10516:16;378:14812;;;10516:16;10552:18;:11;:18;:::i;:::-;10545:25;:::i;12669:96::-;12745:12;;;:::i;1500:62:0:-;;1554:1;1500:62;;;:::i;:::-;1554:1;:::i;378:14812:11:-;;;;:::o;:::-;;;-1:-1:-1;;;378:14812:11;;;;;;;;;;;;;;;;;;;;2843:159;;2993:1;2843:159;2895:87;2903:51;2922:32;;:21;;:12;:21;:::i;2903:51::-;:15;:51;;2895:87;:::i;:::-;2993:1;:::i;378:14812::-;;;;:::o;:::-;;;-1:-1:-1;;;378:14812:11;;;;;;;;;;;;-1:-1:-1;;;378:14812:11;;;;;;;;;;;;;;;;;;;;;;8896:516;9100:21;9303:60;9255:22;;9072:49;9100:21;;:12;:21;:::i;9072:49::-;9205:23;9224:4;9141:16;;;9132:52;9140:17;9141:16;;;:::i;:::-;9140:17;;378:14812;9140:17;9132:52;:::i;:::-;9205:23;:::i;9255:22::-;9239:38;9303:60;:::i;:::-;;;378:14812;;;;9303:60;9347:15;9303:60;9347:15;9303:60;;;:::i;:::-;;;;8896:516;:::o;:::-;9032:21;;378:14812;9032:21;:::i;378:14812::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;378:14812:11;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;10161:140::-;10267:26;10260:33;10161:140;10231:16;378:14812;;;10231:16;10267:26;:17;:26;:::i;:::-;10260:33;:::i;1500:62:0:-;1554:1;1500:62;;;:::i;:::-;13989:5:11;13956:30;:21;:38;13805:197;13886:59;13894:30;:21;;;:12;:21;:::i;:::-;:30;;:::i;13886:59::-;13894:12;13956:21;:::i;:::-;:30;:38;:::i;13805:197::-;;;;:::i;378:14812::-;;;;:::i;10728:144::-;10832:32;:21;10825:39;10728:144;10796:16;378:14812;;;10832:21;:32;10825:39;:::i;1500:62:0:-;1554:1;1500:62;;;:::i;:::-;13637:23:11;13567:101;13637:23;;:::i;13567:101::-;;;;:::i;1500:62:0:-;;;:::i;:::-;1554:1;;:::i;378:14812:11:-;;;;;;;;;;;:::i;2293:101:0:-;2376:10;;2384:1;2376:10;:::i;:::-;;:::i;2293:101::-;;;:::i;1500:62::-;;1554:1;1500:62;;;;;:::i;:::-;13074:371:11;13323:34;13368:32;13074:371;13278:34;13411:26;13074:371;;13278:34;;:::i;:::-;13323;;:::i;:::-;13368:32;;:::i;:::-;13411:26;;:::i;13074:371::-;;;;;;;:::i;1638:85:0:-;1710:6;;;:::i;378:14812:11:-;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;378:14812:11;;;;;;;;;;:::i;9877:129::-;9977:21;9970:28;9877:129;9941:16;;:::i;:::-;9977:21;:10;:21;:::i;:::-;9970:28;:::i;2703:132::-;;2826:1;2703:132;;;;2756:59;2764:30;;:21;;:12;:21;:::i;2756:59::-;2826:1;:::i;378:14812::-;;;;:::o;:::-;;;-1:-1:-1;;;378:14812:11;;;;;;;;;;;;;;;;;;;;3010:143;;3144:1;3010:143;;;;3070:63;3078:27;3079:26;;;:14;:26;:::i;:::-;;:::i;3078:27::-;3070:63;:::i;:::-;3144:1;:::i;378:14812::-;;;;:::o;:::-;;;-1:-1:-1;;;378:14812:11;;;;;;;;;;;;-1:-1:-1;;;378:14812:11;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;378:14812:11;;;;;;;;;;;;-1:-1:-1;;;378:14812:11;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;378:14812:11;;;;;;;;;;;;-1:-1:-1;;;378:14812:11;;;;;;;;;-1:-1:-1;;;;;378:14812:11;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;378:14812:11;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;-1:-1:-1;;;378:14812:11;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;-1:-1:-1;;;378:14812:11;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;-1:-1:-1;;;;;378:14812:11;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;-1:-1:-1;;;378:14812:11;;;;;;;;;;;;;;;:::i;:::-;;;:::i;4964:1648::-;-1:-1:-1;4964:1648:11;;;5271:21;4964:1648;5271:12;:21;:::i;:::-;5330:13;;;;;:::i;:::-;5311:15;:32;;5303:56;;;:::i;:::-;5378:22;;;;;;;;:::i;:::-;5403:15;;;:::i;:::-;-1:-1:-1;5370:63:11;;;:::i;:::-;5511:41;5541:10;5511:41;;:::i;:::-;5510:42;5502:75;;;:::i;:::-;5640:62;;;;;:::i;:::-;5628:74;5784:273;;:::i;:::-;378:14812;;;5784:273;;;;;378:14812;;5784:273;;;;;;378:14812;;5784:273;;;;;;378:14812;;5784:273;;5311:15;5784:273;;;378:14812;;5784:273;6008:5;5784:273;;;378:14812;5541:10;5784:273;;;378:14812;6078:21;;:10;:21;:::i;:::-;:36;;;;:::i;:::-;6160:32;:16;;;;:32;:::i;:::-;6203:33;:16;5271:12;6203:16;;:33;:::i;:::-;6078:10;6247:16;:31;;;;:::i;:::-;6289:24;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;6324:26;;:17;:26;:::i;:::-;5541:10;6324:43;;;:::i;:::-;5541:10;6378:23;5541:10;6378:11;:23;:::i;:::-;:37;;;;:::i;:::-;6436:26;;:14;:26;:::i;:::-;6465:4;6436:33;;;:::i;:::-;6495:72;;;:::i;:::-;;5541:10;6495:72;:::i;:::-;;;378:14812;;;;6495:72;5311:15;;;6495:72;;;;;:::i;:::-;;;;;4964:1648;:::o;:::-;5207:17;;4964:1648;;;378:14812;5207:17;:::i;2843:159::-;;2993:1;2843:159;;;;2895:87;2903:51;2922:32;;:21;;:12;:21;:::i;2895:87::-;2993:1;:::i;378:14812::-;;;;:::o;:::-;;;-1:-1:-1;;;378:14812:11;;;;;;;;;;;;-1:-1:-1;;;378:14812:11;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;378:14812:11;;;;;;;;;;;;-1:-1:-1;;;378:14812:11;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;378:14812:11;;;;;;;;;;;;-1:-1:-1;;;378:14812:11;;;;;;;7982:741;8592:22;8610:4;8640:75;7982:741;;8514:57;8441:62;8640:75;7982:741;;8259:10;8194:46;8219:21;;:10;:21;:::i;8194:46::-;8259:10;;8251:50;8259:10;;;:::i;:::-;:24;8273:10;8259:24;;-1:-1:-1;;;;;378:14812:11;;;8259:24;;8251:50;:::i;:::-;8312;8320:16;8321:15;;;:::i;8320:16::-;8312:50;:::i;:::-;8441:62;;:::i;:::-;8522:30;;8514:57;:::i;8640:75::-;8273:10;8640:75;8273:10;8640:75;:::i;:::-;;;;378:14812;;;;8640:75;;;;7982:741::o;:::-;;;;;;;;:::i;11641:351::-;11773:26;11741:58;11641:351;11724:4;378:14812;;;11741:58;11815:13;;11827:1;11815:13;:::i;:::-;11830:23;11834:19;;378:14812;;;11830:23;;;;;;11879:15;;;;;:::i;:::-;378:14812;-1:-1:-1;;;;;378:14812:11;;;11879:15;:24;-1:-1:-1;;;;;378:14812:11;;11879:24;378:14812;11879:24;;11875:76;;378:14812;;11815:13;;11875:76;11924:11;;;11931:4;11924:11;:::o;11830:23::-;;;;11827:1;11641:351;:::o;11118:320::-;;11387:32;;:21;11290:140;11118:320;;;11266:4;378:14812;;;11387:32;11290:140;;:::i;378:14812::-;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;378:14812:11:o;:::-;;;:::i;14725:462::-;;14942:214;14725:462;14942:214;;14725:462;14897:24;;:::i;:::-;15128:16;14942:214;15128:16;;15142:1;15128:16;:::i;:::-;14942:214;;;;:::i;:::-;;;378:14812;;14942:214;;;;378:14812;;14942:214;;;;378:14812;;14942:214;;;;378:14812;;14942:214;;;;378:14812;;1500:62:0;1554:1;1500:62;;;:::i;:::-;2647:1;2639:10;;;:::i;:::-;-1:-1:-1;;;;;378:14812:11;;-1:-1:-1;;;;;378:14812:11;;2627:22:0;2623:91;;2742:8;;;;;:::i;2623:91::-;-1:-1:-1;;;2672:31:0;;-1:-1:-1;;;;;378:14812:11;2672:31:0;;;378:14812:11;;;;2543:215:0;;;;:::i;1796:162::-;1855:7;;:::i;:::-;735:10:1;;1855:23:0;735:10:1;1855:23:0;378:14812:11;1855:23:0;;1851:101;;1796:162;:::o;1851:101::-;-1:-1:-1;;;1901:40:0;;;;-1:-1:-1;;;;;378:14812:11;;;1901:40:0;378:14812:11;;1901:40:0;;;378:14812:11;;;;:::o;:::-;;;-1:-1:-1;;;378:14812:11;;;;;;;;;;;;-1:-1:-1;;;378:14812:11;;;;;;;;;;;;;;:::o;:::-;;;;;:::o;7514:748:13:-;;7659:48;7667:13;;378:14812:11;;;7667:13:13;:17;;7683:1;7667:17;:::i;:::-;;7659:48;:::i;:::-;378:14812:11;;7749:1:13;;7732:18;;;;;:::i;:::-;;7728:67;;7862:17;:13;;378:14812:11;;;7862:13:13;:17;;;:::i;:::-;;;:::i;:::-;7883:1;7847:38;7861:23;7883:1;7861:23;;;;:::i;:::-;;;:::i;7847:38::-;7911:13;;;7683:1;7911:13;:::i;:::-;7906:282;7911:13;;;7906:282;8215:39;;;;;;;;:::i;7945:6::-;7926:17;7930:13;;378:14812:11;;;7926:17:13;;;;;;7972:5;7945:6;7972:5;;;;;;:::i;:::-;;;:::i;:::-;:21;;7980:13;;378:14812:11;;;7972:21:13;;7968:209;;;8014:75;8046:42;;8063:9;;;;;:::i;:::-;378:14812:11;;;8063:9:13;8074:13;;8081:5;;;;:::i;:::-;;;:::i;:::-;8074:13;;:::i;:::-;8046:42;;378:14812:11;;;;8046:42:13;;;;;;;;;378:14812:11;;;;;;;;;;;8046:42:13;;;;;;;;;:::i;:::-;8036:53;;;378:14812:11;;;8036:53:13;;378:14812:11;;;;8036:53:13;;8014:75;8027:5;;;;:::i;:::-;;;:::i;8014:75::-;7945:6;;;:::i;:::-;7911:13;;;;7968:209;8130:31;8152:9;;;;;:::i;:::-;8130:31;8143:5;;;;:::i;8130:31::-;7968:209;;7926:17;;;7728:67;7774:9;;;;;;;7683:1;7774:9;:::i;:::-;;;:::i;378:14812:11:-;;;;;;;;;;:::o;9317:311:13:-;9470:149;;9317:311;9414:20;378:14812:11;;;9414:20:13;9511:16;;;9526:1;9511:16;:::i;:::-;:12;:16;:::i;:::-;378:14812:11;;9501:27:13;;9470:149;;;;378:14812:11;;;;;;;9470:149:13;;;;378:14812:11;9470:149:13;9573:16;378:14812:11;9470:149:13;9543:15;378:14812:11;9470:149:13;;378:14812:11;;9470:149:13;9460:160;;;378:14812:11;;;9460:160:13;;9317:311;:::o;378:14812:11:-;;-1:-1:-1;;;;;378:14812:11;;;;;;;;;;:::i;:::-;;;;:::i;2912:187:0:-;3052:40;;3004:6;;;:::i;:::-;3020:17;;;;:::i;:::-;3052:40;:::i;:::-;;;:::i;:::-;;;;378:14812:11;;;;3052:40:0;;;;378:14812:11;4334:380:13;;4595:38;4334:380;4595:38;4334:380;4468:17;378:14812:11;;;4468:17:13;-1:-1:-1;378:14812:11;;4595:38:13;378:14812:11;4595:38:13;4585:49;;;378:14812:11;;;4585:49:13;;4657:22;4334:380;:::o;378:14812:11:-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;6219:215:13:-;;6389:37;6219:215;6389:37;6219:215;;6357:12;378:14812:11;;;6357:12:13;6389:37;;:::i;:::-;;:::i;8425:656::-;;378:14812:11;;8587:1:13;;8571:17;;;;;:::i;:::-;;8567:65;;8696:16;:12;;378:14812:11;;;8696:16:13;8716:1;8681:37;8695:22;8716:1;8695:22;;;;:::i;8681:37::-;8744:13;;;8756:1;8744:13;:::i;:::-;8739:271;8744:13;;;9037:36;;;;;;;;:::i;8777:6::-;8759:16;8763:12;;378:14812:11;;;8759:16:13;;;;;;8804:5;8777:6;8804:5;;;;;;:::i;8777:6::-;8744:13;;;;1902:154:6;2016:25;:33;1902:154;;2016:33;1902:154;1993:4;378:14812:11;;;1993:4:6;2016:25;;:::i;:33::-;;1902:154;:::o;2457:308::-;2601:13;2613:1;2601:13;:::i;:::-;2596:134;2634:3;2616:16;2620:12;;378:14812:11;;;2616:16:6;;;;;;2668:51;2634:3;2710:8;;;;;;:::i;:::-;2668:51;;:::i;:::-;2634:3;378:14812:11;;;;2634:3:6;2601:13;;;2616:16;;;;2457:308;:::o;504:167:5:-;605:5;;;:59;;;613:24;;;378:14812:11;;;;;;;;;605:59:5;640:24;;889:135;;;;;;;791:239;:::o"},"methodIdentifiers":{"completeMixingRound(uint256)":"04dca6fa","createMixingProof(bytes32,bytes32,bytes32,uint256)":"e514ef2e","createMixingRound()":"16a7b4fa","emergencyInvalidateRound(uint256)":"45cba114","generateMixIndex(bytes32)":"10956f27","getMixedVote(bytes32)":"93bfe13e","getMixingParameters()":"d73705e5","getMixingRound(uint256)":"0a232e67","getRoundMixedVotes(uint256)":"47ebc739","getRoundParticipants(uint256)":"37305df5","getTotalRounds()":"1ad1ec22","getVoterRounds(address)":"18ce408f","hasVoterParticipated(uint256,address)":"cc5dd326","mixingEnabled()":"84b3f4cc","owner()":"8da5cb5b","renounceOwnership()":"715018a6","revealMixingRound(uint256)":"2e1ddd08","revealVote(uint256,bytes32,bytes32,bytes32,uint256)":"cb5a974a","setMixingEnabled(bool)":"5b7f1e5d","submitVote(uint256,bytes32,bytes32,uint256)":"b120a58a","transferOwnership(address)":"f2fde38b","updateMixingParameters(uint256,uint256,uint256,uint256)":"8cf723b8","verifyVoteInclusion(uint256,bytes32,bytes32[])":"cfe16223"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_minParticipants\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxParticipants\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_mixingDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_revealDelay\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"participantCount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"MixingRoundCompleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"minParticipants\",\"type\":\"uint256\"}],\"name\":\"MixingRoundCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalVotes\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"MixingRoundRevealed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"originalVote\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"mixedVote\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"VoteRevealed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"mixedVote\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"mixIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"VoteSubmitted\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"}],\"name\":\"completeMixingRound\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"originalVote\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"mixedVote\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"randomness\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"mixIndex\",\"type\":\"uint256\"}],\"name\":\"createMixingProof\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"originalVote\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"mixedVote\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"randomness\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"mixIndex\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"merkleProof\",\"type\":\"bytes32[]\"}],\"internalType\":\"struct VoteMixing.MixingProof\",\"name\":\"proof\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"createMixingRound\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"}],\"name\":\"emergencyInvalidateRound\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"seed\",\"type\":\"bytes32\"}],\"name\":\"generateMixIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"mixIndex\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"mixedVote\",\"type\":\"bytes32\"}],\"name\":\"getMixedVote\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"originalVote\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"mixedVote\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"randomness\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"mixIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isRevealed\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"}],\"internalType\":\"struct VoteMixing.MixedVote\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMixingParameters\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"minParticipants\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxParticipants\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"mixingDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"revealDelay\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"}],\"name\":\"getMixingRound\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"mixedVotes\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"randomness\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256[]\",\"name\":\"mixIndices\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"revealTime\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isRevealed\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"participantCount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"}],\"internalType\":\"struct VoteMixing.MixingRound\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"}],\"name\":\"getRoundMixedVotes\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"}],\"name\":\"getRoundParticipants\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalRounds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"}],\"name\":\"getVoterRounds\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"}],\"name\":\"hasVoterParticipated\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mixingEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"}],\"name\":\"revealMixingRound\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"revealedCount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"mixedVote\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"originalVote\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"randomness\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"mixIndex\",\"type\":\"uint256\"}],\"name\":\"revealVote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"setMixingEnabled\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"originalVote\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"randomness\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"mixIndex\",\"type\":\"uint256\"}],\"name\":\"submitVote\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"mixedVote\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_minParticipants\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxParticipants\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_mixingDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_revealDelay\",\"type\":\"uint256\"}],\"name\":\"updateMixingParameters\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"mixedVote\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"}],\"name\":\"verifyVoteInclusion\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implements Chaum mixing for vote anonymity\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{\"completeMixingRound(uint256)\":{\"details\":\"Completes a mixing round and creates Merkle tree\",\"params\":{\"roundId\":\"The mixing round ID\"}},\"createMixingProof(bytes32,bytes32,bytes32,uint256)\":{\"details\":\"Creates a mixing proof for verification\",\"params\":{\"mixIndex\":\"The mix index used\",\"mixedVote\":\"The mixed vote\",\"originalVote\":\"The original vote\",\"randomness\":\"The randomness used\"},\"returns\":{\"proof\":\"The mixing proof structure\"}},\"createMixingRound()\":{\"details\":\"Creates a new mixing round\",\"returns\":{\"roundId\":\"The ID of the created round\"}},\"emergencyInvalidateRound(uint256)\":{\"details\":\"Emergency function to invalidate a mixing round\",\"params\":{\"roundId\":\"The round ID to invalidate\"}},\"generateMixIndex(bytes32)\":{\"details\":\"Generates a random mixing index\",\"params\":{\"seed\":\"Additional seed for randomness\"},\"returns\":{\"mixIndex\":\"The generated mix index\"}},\"getMixedVote(bytes32)\":{\"details\":\"Gets mixed vote information\",\"params\":{\"mixedVote\":\"The mixed vote hash\"},\"returns\":{\"_0\":\"The mixed vote structure\"}},\"getMixingParameters()\":{\"details\":\"Gets mixing parameters\",\"returns\":{\"maxParticipants\":\"Maximum participants allowed\",\"minParticipants\":\"Minimum participants required\",\"mixingDuration\":\"Duration of mixing phase\",\"revealDelay\":\"Delay before reveal phase\"}},\"getMixingRound(uint256)\":{\"details\":\"Gets mixing round information\",\"params\":{\"roundId\":\"The round ID\"},\"returns\":{\"_0\":\"The mixing round structure\"}},\"getRoundMixedVotes(uint256)\":{\"details\":\"Gets all mixed votes in a round\",\"params\":{\"roundId\":\"The round ID\"},\"returns\":{\"_0\":\"Array of mixed vote hashes\"}},\"getRoundParticipants(uint256)\":{\"details\":\"Gets all participants in a round\",\"params\":{\"roundId\":\"The round ID\"},\"returns\":{\"_0\":\"Array of participant addresses\"}},\"getTotalRounds()\":{\"details\":\"Gets total number of rounds\",\"returns\":{\"_0\":\"Total round count\"}},\"getVoterRounds(address)\":{\"details\":\"Gets all rounds a voter participated in\",\"params\":{\"voter\":\"The voter address\"},\"returns\":{\"_0\":\"Array of round IDs\"}},\"hasVoterParticipated(uint256,address)\":{\"details\":\"Checks if a voter participated in a round\",\"params\":{\"roundId\":\"The round ID\",\"voter\":\"The voter address\"},\"returns\":{\"_0\":\"Whether the voter participated\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"revealMixingRound(uint256)\":{\"details\":\"Reveals all votes in a mixing round\",\"params\":{\"roundId\":\"The mixing round ID\"},\"returns\":{\"revealedCount\":\"Number of votes revealed\"}},\"revealVote(uint256,bytes32,bytes32,bytes32,uint256)\":{\"details\":\"Reveals a vote after mixing round completion\",\"params\":{\"mixIndex\":\"The mix index used\",\"mixedVote\":\"The mixed vote to reveal\",\"originalVote\":\"The original vote\",\"randomness\":\"The randomness used\",\"roundId\":\"The mixing round ID\"}},\"setMixingEnabled(bool)\":{\"details\":\"Enables or disables mixing\",\"params\":{\"enabled\":\"Whether mixing should be enabled\"}},\"submitVote(uint256,bytes32,bytes32,uint256)\":{\"details\":\"Submits a vote to the mixing round\",\"params\":{\"mixIndex\":\"Index for mixing\",\"originalVote\":\"The original vote to mix\",\"randomness\":\"Random value for mixing\",\"roundId\":\"The mixing round ID\"},\"returns\":{\"mixedVote\":\"The mixed vote\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"updateMixingParameters(uint256,uint256,uint256,uint256)\":{\"details\":\"Updates mixing parameters\",\"params\":{\"_maxParticipants\":\"New maximum participants\",\"_minParticipants\":\"New minimum participants\",\"_mixingDuration\":\"New mixing duration\",\"_revealDelay\":\"New reveal delay\"}},\"verifyVoteInclusion(uint256,bytes32,bytes32[])\":{\"details\":\"Verifies a vote's inclusion in the mixing round\",\"params\":{\"mixedVote\":\"The mixed vote\",\"proof\":\"The Merkle proof\",\"roundId\":\"The round ID\"},\"returns\":{\"_0\":\"Whether the vote is included\"}}},\"title\":\"VoteMixing\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Provides vote mixing capabilities to enhance voter privacy\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/VoteMixing.sol\":\"VoteMixing\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]},\"@openzeppelin/contracts/utils/cryptography/Hashes.sol\":{\"keccak256\":\"0x8cbd338f083224b4b6f0ff42cbda641a0a6c31ffcdca197452b97fe4d0918269\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f517dec5ba0c6491395acbf7f1d621f4e89e8f218bf5303c867b1c5ad70c6b11\",\"dweb:/ipfs/QmWmXHRLEw8W6ckth7NyYTU88YfvuS7xSsfae5ksL8qNUe\"]},\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":{\"keccak256\":\"0x36a0c409c437a753cac9b92b75f93b0fbe92803bf2c8ff1517e54b247f166134\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f91ba472de411aa557cdbf6560c40750d87bd11c9060bc04d2ba7119af9d5a6\",\"dweb:/ipfs/QmQjtYo2i7dDvzCEzZ67bDoNSG4RrwMoxPWuqFmX5Xzpuw\"]},\"contracts/VoteMixing.sol\":{\"keccak256\":\"0x49bff1a807df016bcfd12b3909384e62eacce46553c99183aeb6620ac24af0cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://82f8cad382494cfb08a2cee7fd3a7d1899a3ee82182ebb2da05898eada5c5fef\",\"dweb:/ipfs/QmV4vs9s3DZnxsbNir1GRByNmoh3Jn1nskwgYmhZew8nVq\"]},\"contracts/libraries/CryptographicUtils.sol\":{\"keccak256\":\"0x2e560c193276ecc57c28132eee00e6f4d47c44baf4914a66e106947b97799ca0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e5505a80a71dd6846807c2dcb931b7856b3a06374614314a656eff73c530e8a8\",\"dweb:/ipfs/QmfSEFaxFN7BFoV3e3zsVSRAZbUccFfobzbsZriZoKNNj7\"]}},\"version\":1}"}},"contracts/ZKProofVerifier.sol":{"ZKProofVerifier":{"abi":[{"inputs":[{"internalType":"uint256","name":"_verificationThreshold","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"nullifier","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"proofHash","type":"bytes32"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"NullifierUsed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"voter","type":"address"},{"indexed":true,"internalType":"bytes32","name":"voteHash","type":"bytes32"},{"indexed":false,"internalType":"bytes32","name":"proofHash","type":"bytes32"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"VoteProofSubmitted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"proofHash","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"nullifierHash","type":"bytes32"},{"indexed":false,"internalType":"bytes32","name":"commitmentHash","type":"bytes32"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"ZKProofCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"proofHash","type":"bytes32"},{"indexed":false,"internalType":"bool","name":"isValid","type":"bool"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"ZKProofVerified","type":"event"},{"inputs":[{"internalType":"bytes32[]","name":"proofHashes","type":"bytes32[]"},{"internalType":"bytes32[]","name":"voteHashes","type":"bytes32[]"},{"internalType":"bytes32[]","name":"nullifiers","type":"bytes32[]"},{"internalType":"bytes32[]","name":"secrets","type":"bytes32[]"}],"name":"batchVerifyProofs","outputs":[{"internalType":"uint256","name":"validCount","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"voteHash","type":"bytes32"},{"internalType":"bytes32","name":"nullifier","type":"bytes32"},{"internalType":"bytes32","name":"secret","type":"bytes32"},{"internalType":"bytes32","name":"commitmentHash","type":"bytes32"}],"name":"createZKProof","outputs":[{"internalType":"bytes32","name":"proofHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"proofHash","type":"bytes32"}],"name":"emergencyInvalidateProof","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getMerkleRoot","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getProofCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"proofHash","type":"bytes32"}],"name":"getVoteProof","outputs":[{"components":[{"internalType":"address","name":"voter","type":"address"},{"internalType":"bytes32","name":"voteHash","type":"bytes32"},{"internalType":"bytes32","name":"nullifier","type":"bytes32"},{"internalType":"bytes32","name":"secret","type":"bytes32"},{"components":[{"internalType":"bytes32","name":"publicInputs","type":"bytes32"},{"internalType":"bytes32","name":"nullifierHash","type":"bytes32"},{"internalType":"bytes32","name":"commitmentHash","type":"bytes32"},{"internalType":"bytes32","name":"proofHash","type":"bytes32"},{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"bool","name":"verified","type":"bool"}],"internalType":"struct ZKProofVerifier.ZKProof","name":"zkProof","type":"tuple"}],"internalType":"struct ZKProofVerifier.VoteProof","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"voter","type":"address"}],"name":"getVoterProofs","outputs":[{"internalType":"bytes32[]","name":"","type":"bytes32[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"proofHash","type":"bytes32"}],"name":"getZKProof","outputs":[{"components":[{"internalType":"bytes32","name":"publicInputs","type":"bytes32"},{"internalType":"bytes32","name":"nullifierHash","type":"bytes32"},{"internalType":"bytes32","name":"commitmentHash","type":"bytes32"},{"internalType":"bytes32","name":"proofHash","type":"bytes32"},{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"bool","name":"verified","type":"bool"}],"internalType":"struct ZKProofVerifier.ZKProof","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"nullifier","type":"bytes32"}],"name":"isNullifierUsed","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"merkleRoot","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proofCounter","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"voteHash","type":"bytes32"},{"internalType":"bytes32","name":"nullifier","type":"bytes32"},{"internalType":"bytes32","name":"secret","type":"bytes32"},{"internalType":"bytes32","name":"commitmentHash","type":"bytes32"}],"name":"submitVoteProof","outputs":[{"internalType":"bytes32","name":"proofHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"newRoot","type":"bytes32"}],"name":"updateMerkleRoot","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"newThreshold","type":"uint256"}],"name":"updateVerificationThreshold","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"verificationThreshold","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"voter","type":"address"},{"internalType":"bytes32[]","name":"proof","type":"bytes32[]"}],"name":"verifyVoterInclusion","outputs":[{"internalType":"bool","name":"isValid","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"proofHash","type":"bytes32"},{"internalType":"bytes32","name":"voteHash","type":"bytes32"},{"internalType":"bytes32","name":"nullifier","type":"bytes32"},{"internalType":"bytes32","name":"secret","type":"bytes32"}],"name":"verifyZKProof","outputs":[{"internalType":"bool","name":"isValid","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"abi_decode_t_uint256_fromMemory":{"entryPoint":129,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_uint256_fromMemory":{"entryPoint":135,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_address":{"entryPoint":318,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_address":{"entryPoint":331,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":107,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"cleanup_address":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_uint160":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"constructor_Ownable":{"entryPoint":347,"id":50,"parameterSlots":1,"returnSlots":0},"constructor_ZKProofVerifier":{"entryPoint":244,"id":6054,"parameterSlots":1,"returnSlots":0},"convert_address_to_address":{"entryPoint":484,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_by_to_address":{"entryPoint":309,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_by_to_uint160":{"entryPoint":284,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_by_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint160_to_address":{"entryPoint":475,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint160_to_uint160":{"entryPoint":455,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint256_to_uint256":{"entryPoint":204,"id":null,"parameterSlots":1,"returnSlots":1},"copy_arguments_for_constructor_object_ZKProofVerifier":{"entryPoint":158,"id":null,"parameterSlots":0,"returnSlots":1},"extract_from_storage_value_offset_address":{"entryPoint":421,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":69,"id":null,"parameterSlots":2,"returnSlots":0},"fun_transferOwnership":{"entryPoint":516,"id":146,"parameterSlots":1,"returnSlots":0},"panic_error_0x41":{"entryPoint":47,"id":null,"parameterSlots":0,"returnSlots":0},"read_from_storage_split_offset_address":{"entryPoint":430,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_right_unsigned":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"update_byte_slice_shift":{"entryPoint":188,"id":null,"parameterSlots":2,"returnSlots":1},"update_byte_slice_shift_0":{"entryPoint":440,"id":null,"parameterSlots":2,"returnSlots":1},"update_storage_value_offset_address_to_address":{"entryPoint":493,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offset_uint256_to_uint256":{"entryPoint":217,"id":null,"parameterSlots":2,"returnSlots":0},"validator_revert_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[],"linkReferences":{},"object":"60806040523461002a5761001961001461009e565b6100f4565b6040516119c461025c82396119c490f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b90601f01601f191681019081106001600160401b0382111761006657604052565b61002f565b9061007f61007860405190565b9283610045565b565b90505190565b9060208282031261002a5761009b91610081565b90565b61009b611c20803803806100b18161006b565b928339810190610087565b90600019905b9181191691161790565b61009b61009b61009b9290565b906100e961009b6100f0926100cc565b82546100bc565b9055565b610108906101013361015b565b60076100d9565b61007f61011560006100cc565b60056100d9565b61012961009b61009b9290565b6001600160a01b031690565b61009b9061011c565b61014790610129565b9052565b60208101929161007f919061013e565b600061016681610135565b61016f81610129565b61017884610129565b1461018857505061007f90610204565b631e4fbdf760e01b825281906101a1906004830161014b565b0390fd5b61009b90610129565b61009b90546101a5565b906001600160a01b03906100c2565b61009b90610129906001600160a01b031682565b61009b906101c7565b61009b906101db565b906101fd61009b6100f0926101e4565b82546101b8565b61022a61022461021460006101ae565b61021f8460006101ed565b6101e4565b916101e4565b907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e061025560405190565b600090a356fe6080604052600436101561001257600080fd5b60003560e01c8063167feb091461015257806322dc7b4c1461014d5780632607788e146101485780632eb4a7ab14610143578063451b923c1461013e5780634783f0ef1461013957806349590657146101345780635089cec21461012f5780635be4ee1b1461012a5780636d9f437014610125578063715018a61461012057806389aa56a41461011b5780638da5cb5b14610116578063a067228e14610111578063c423f9101461010c578063c943394014610107578063d51b456b14610102578063e6ab8c54146100fd578063e81f927b146100f85763f2fde38b03610157576106f0565b6106d1565b6106b5565b610658565b610629565b610604565b610519565b61043d565b61040c565b6103f4565b6103d9565b6103b2565b61039a565b61037f565b610362565b610343565b6102ec565b6102b9565b6101eb565b610192565b600080fd5b600091031261015757565b610172916008021c81565b90565b906101729154610167565b61017260006007610175565b9052565b565b34610157576101a236600461015c565b6101bd6101ad610180565b6040519182918290815260200190565b0390f35b805b0361015757565b90503590610190826101c1565b9060208282031261015757610172916101ca565b34610157576101bd6102066102013660046101d7565b610730565b60405191829182901515815260200190565b6001600160a01b031690565b6101c381610218565b9050359061019082610224565b90602082820312610157576101729161022d565b0190565b9061027261026b610261845190565b8084529260200190565b9260200190565b9060005b8181106102835750505090565b9091926102a06102996001928651815260200190565b9460200190565b929101610276565b602080825261017292910190610252565b34610157576101bd6102d46102cf36600461023a565b610856565b604051918291826102a8565b61017260006006610175565b34610157576102fc36600461015c565b6101bd6101ad6102e0565b6080818303126101575761031b82826101ca565b9261017261032c84602085016101ca565b93606061033c82604087016101ca565b94016101ca565b34610157576101bd6101ad610359366004610307565b92919091610bfc565b346101575761037a6103753660046101d7565b610d72565b604051005b346101575761038f36600461015c565b6101bd6101ad610d7b565b346101575761037a6103ad3660046101d7565b610eb7565b34610157576103c236600461015c565b6101bd6101ad610ec0565b61017260006005610175565b34610157576103e936600461015c565b6101bd6101ad6103cd565b346101575761040436600461015c565b61037a610f02565b346101575761037a61041f3660046101d7565b610f21565b61018c90610218565b6020810192916101909190610424565b346101575761044d36600461015c565b6101bd610458610f3d565b6040519182918261042d565b80518252610190919060a090819061048160208201516020860152565b61049060408201516040860152565b61049f60608201516060860152565b6104ae60808201516080860152565b01511515910152565b90608080610190936104d160008201516000860190610424565b6104e060208201516020860152565b6104ef60408201516040860152565b6104fe60608201516060860152565b0151910190610464565b6101408101929161019091906104b7565b34610157576101bd61053461052f3660046101d7565b611020565b60405191829182610508565b909182601f830112156101575781359167ffffffffffffffff831161015757602001926020830284011161015757565b909160808284031261015757813567ffffffffffffffff81116101575783610599918401610540565b929093602082013567ffffffffffffffff811161015757816105bc918401610540565b929093604082013567ffffffffffffffff811161015757836105df918401610540565b929093606082013567ffffffffffffffff8111610157576106009201610540565b9091565b34610157576101bd6101ad61061a366004610570565b96959095949194939293611287565b34610157576101bd6101ad61063f366004610307565b92919091611487565b60c0810192916101909190610464565b34610157576101bd61067361066e3660046101d7565b6114cd565b60405191829182610648565b91909160408184031261015757610696838261022d565b92602082013567ffffffffffffffff8111610157576106009201610540565b34610157576101bd6102066106cb36600461067f565b9161150a565b34610157576101bd6102066106e7366004610307565b929190916116fd565b346101575761037a61070336600461023a565b61175d565b9061071290610172565b600052602052604060002090565b60ff1690565b6101729054610720565b6107476101729161073f600090565b506002610708565b610726565b61017290610218906001600160a01b031682565b6101729061074c565b61017290610760565b9061071290610769565b6101729081565b610172905461077c565b906107a861079c610261845490565b92600052602060002090565b9060005b8181106107b95750505090565b9091926107dd6107d66001926107ce87610783565b815260200190565b9460010190565b9291016107ac565b906101729161078d565b634e487b7160e01b600052604160045260246000fd5b90601f01601f1916810190811067ffffffffffffffff82111761082757604052565b6107ef565b906101906108469261083d60405190565b938480926107e5565b0383610805565b6101729061082c565b61086d61017291610865606090565b506003610772565b61084d565b90505190610190826101c1565b906020828203126101575761017291610872565b6108c0610190946108b96060949897956108b2608086019a6000870152565b6020850152565b6040830152565b0152565b6040513d6000823e3d90fd5b906101906108dd60405190565b9283610805565b61017260a06108d0565b9061018c90610218565b61017260c06108d0565b9061019061098260056109136108f8565b9461092461092082610783565b8752565b61093a61093360018301610783565b6020880152565b61095061094960028301610783565b6040880152565b61096661095f60038301610783565b6060880152565b61097c61097560048301610783565b6080880152565b01610726565b151560a0840152565b61017290610902565b634e487b7160e01b600052600060045260246000fd5b6101729051610218565b906001600160a01b03905b9181191691161790565b906109d96101726109e092610769565b82546109b4565b9055565b5190565b90600019906109bf565b90610a07610a026109e092610172565b610172565b82546109e8565b6101726101726101729290565b90610a076101726109e092610a0e565b51151590565b9060ff906109bf565b151590565b90610a4f6101726109e092610a3a565b8254610a31565b6005610adc60a061019094610a76610a70600083016109e4565b866109f2565b610a8e610a85602083016109e4565b600187016109f2565b610aa6610a9d604083016109e4565b600287016109f2565b610abe610ab5606083016109e4565b600387016109f2565b610ad6610acd608083016109e4565b60048701610a1b565b01610a2b565b9101610a3f565b9061019091610a56565b6004610b3f608061019094610b0d610b07600083016109aa565b866109c9565b610b1c610a85602083016109e4565b610b2b610a9d604083016109e4565b610b3a610ab5606083016109e4565b015190565b9101610ae3565b9061019091610aed565b634e487b7160e01b600052603260045260246000fd5b8054821015610b8957610b80600191600052602060002090565b91020190600090565b610b50565b9160001960089290920291821b911b6109bf565b9190610bb3610a026109e093610172565b908354610b8e565b90815491680100000000000000008310156108275782610be391600161019095018155610b66565b90610ba2565b9081526040810192916101909160200152565b916020610c3f600095610c0d600090565b50610c1730610769565b90610c2160405190565b97889384928391906303250ce560e61b8352888a8c60048601610893565b03925af1938415610d5657600094610d17575b5090610ca1610c9a610cb193610c95610c6c886001610708565b91610c8e610c786108e4565b96610c8333896108ee565b6109498a60208a0152565b6060860152565b61098b565b6080830152565b610cac846004610708565b610b46565b610cc882610cc3610172336003610772565b610bbb565b610cda610cd433610769565b91610172565b907ff2a38cb36bcfb3c71a301f45f653f09b07e5579c023684ab0cfdf0c1b0baf557610d0560405190565b80610d11428783610be9565b0390a390565b610cb192919450610c9a610d45610ca19260203d602011610d4f575b610d3d8183610805565b81019061087f565b9592935050610c52565b503d610d33565b6108c4565b61019090610d67611766565b6101909060066109f2565b61019090610d5b565b6101726006610783565b61019090610d91611766565b610e6f565b602080825260149082015273141c9bdbd988191bd95cc81b9bdd08195e1a5cdd60621b604082015260600190565b15610dcb57565b60405162461bcd60e51b815280610de460048201610d96565b0390fd5b61019091600091610ba2565b9190610bb36101726109e093610a0e565b61019091600091610df4565b600090600590610e218382610de8565b610e2e8360018301610de8565b610e3b8360028301610de8565b610e488360038301610de8565b610e558360048301610e05565b0155565b90600003610e6a5761019090610e11565b610994565b6000610eb261019092610eab610e916003610e8b846001610708565b01610783565b610ea4610ea061017287610a0e565b9190565b1415610dc4565b6001610708565b610e59565b61019090610d85565b6101726005610783565b610ed2611766565b610190610ef0565b6102186101726101729290565b61017290610eda565b610190610efd6000610ee7565b6117a8565b610190610eca565b61019090610f16611766565b610190906007610a1b565b61019090610f0a565b61017290610218565b6101729054610f2a565b6101726000610f33565b610f4f6108f8565b906000825260208080808080870160008152016000815201600081520160008152016000905250565b905250565b610172610f47565b610f8d6108e4565b90600082526020808080808601600081520160008152016000815201610f78610f7d565b610172610f85565b906101906110106004610fca6108e4565b94610fdd610fd782610f33565b876108ee565b610fec61093360018301610783565b610ffb61094960028301610783565b61100a61095f60038301610783565b01610902565b6080840152565b61017290610fb9565b6110376101729161102f610fb1565b506004610708565b611017565b906101729897969594939291611050611766565b61111f565b60208082526018908201527f4172726179206c656e67746873206d757374206d617463680000000000000000604082015260600190565b1561109357565b60405162461bcd60e51b815280610de460048201611055565b60010190565b9190811015610b89576020020190565b35610172816101c1565b8015156101c3565b90505190610190826110cc565b9060208282031261015757610172916110d4565b634e487b7160e01b600052601160045260246000fd5b600019811461111a5760010190565b6110f5565b979395929691949097966111308690565b98878a14888161127d575b5080611274575b61114b9061108c565b60009a6111586000610a0e565b8b5b811015611264578080808f818c8f8f908e913061117690610769565b97611181918d6110b2565b61118a906110c2565b97611195918d6110b2565b61119e906110c2565b946111a9918d6110b2565b6111b2906110c2565b916111bd918d6110b2565b6111c6906110c2565b926111d060405190565b9586948593849363e81f927b60e01b85526111ee9360048601610893565b03915a94602095f1908115610d56578e91611236575b5061121d575b61121661115a916110ac565b9050611158565b9961121661122d61115a9261110b565b9b91505061120a565b611257915060203d811161125d575b61124f8183610805565b8101906110e1565b38611204565b503d611245565b509a505050505050505050905090565b50848614611142565b869150143861113b565b6101729796959493929190600061103c565b602080825260169082015275139d5b1b1a599a595c88185b1c9958591e481d5cd95960521b604082015260600190565b156112d057565b60405162461bcd60e51b815280610de460048201611299565b906101729493929161130e611309611305610747866002610708565b1590565b6112c9565b61131e565b61024e816020939052565b61143393836114509493611332935061181b565b936113fe602061134160405190565b61135e818381016113528882611313565b90810382520382610805565b611370611369825190565b9160200190565b2061138b61137c6108f8565b91611385868452565b83830152565b611396846040830152565b6113a1886060830152565b6113ac426080830152565b600060a08201526113c7816113c28a6001610708565b610ae3565b6113dc60016113d7876002610708565b610a3f565b6113f86113f16113ec6005610783565b61110b565b6005610a1b565b016109e4565b7f506b43825c1c1ab28dc92516caa81eca0f380417c6e4317931619fbe39f11f1461144861142b88610172565b968793610172565b9361143d60405190565b918291429083610be9565b0390a3610172565b7fafbae02739cd46b44c3f5e55fad3b8aaacf8acef6bb518bd7a737a2e02157d0461147a60405190565b4281528060208101610d11565b6101729392919060006112e9565b90610172916114bd6114ad6003610e8b856001610708565b610ea4610ea06101726000610a0e565b61017291610c9591506001610708565b610172906114d9610f7d565b611495565b60601b90565b610172906114de565b6114f961018c91610218565b6114e4565b61024e816014936114ed565b610172929061152b61151b60405190565b80926113526020830191826114fe565b611536611369825190565b20916115426006610783565b926118be565b90610172949392916115636114ad6003610e8b856001610708565b61161a565b602080825260169082015275141c9bdbd988185b1c9958591e481d995c9a599a595960521b604082015260600190565b1561159f57565b60405162461bcd60e51b815280610de460048201611568565b602080825260139082015272139d5b1b1a599a595c881b9bdd08199bdd5b99606a1b604082015260600190565b156115ec57565b60405162461bcd60e51b815280610de4600482016115b8565b90151581526040810192916101909160200152565b936116659192945060019360056116346101728688610708565b019561164a61164561130589610726565b611598565b61166061165b610747846002610708565b6115e5565b61181b565b81149283156116bb576116a07fbd1fe7a887205d9ede817440b4fad4e3d32dfac34d415a05fe22a6d6a68cf20792610a02856116b594610a3f565b926116aa60405190565b918291429083611605565b0390a290565b506116c69150610172565b7fbd1fe7a887205d9ede817440b4fad4e3d32dfac34d415a05fe22a6d6a68cf2076116f060405190565b806116b542600083611605565b610172939291906000611548565b61019090611717611766565b600061172281610ee7565b61172b81610218565b61173484610218565b14611744575050610190906117a8565b631e4fbdf760e01b82528190610de4906004830161042d565b6101909061170b565b61176e610f3d565b339061178261177c83610218565b91610218565b0361178a5750565b63118cdaa760e01b6000908152906117a390600461042d565b036000fd5b6117ce6117c86117b86000610f33565b6117c38460006109c9565b610769565b91610769565b907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e06117f960405190565b600090a3565b602093926118158583611815829561024e979052565b01918252565b61183a919061135261182c60405190565b9485936020850193846117ff565b611845611369825190565b2090565b67ffffffffffffffff81116108275760208091020190565b9092919261187661187182611849565b6108d0565b938185526020808601920283019281841161015757915b83831061189a5750505050565b602080916118a884866101ca565b81520192019161188d565b610172913691611861565b916118d69061017294926118d0600090565b506118b3565b6118f06118f49293610ea0926118ea600090565b50611912565b9290565b1490565b90611901825190565b811015610b89576020809102010190565b61191c6000610a0e565b915b611929610172835190565b83101561195b5761194f6119559161194961194486866118f8565b6109e4565b90611961565b926110ac565b9161191e565b91505090565b8181101561197c579061017291600052602052604060002090565b6101729160005260205260406000209056fea264697066735822122062bf991757310df4e45501ca94f832674fd79a66acb8af6a0212e15d145a34f764736f6c634300081c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x2A JUMPI PUSH2 0x19 PUSH2 0x14 PUSH2 0x9E JUMP JUMPDEST PUSH2 0xF4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19C4 PUSH2 0x25C DUP3 CODECOPY PUSH2 0x19C4 SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x66 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x2F JUMP JUMPDEST SWAP1 PUSH2 0x7F PUSH2 0x78 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 PUSH2 0x45 JUMP JUMPDEST JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x2A JUMPI PUSH2 0x9B SWAP2 PUSH2 0x81 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x9B PUSH2 0x1C20 DUP1 CODESIZE SUB DUP1 PUSH2 0xB1 DUP2 PUSH2 0x6B JUMP JUMPDEST SWAP3 DUP4 CODECOPY DUP2 ADD SWAP1 PUSH2 0x87 JUMP JUMPDEST SWAP1 PUSH1 0x0 NOT SWAP1 JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST PUSH2 0x9B PUSH2 0x9B PUSH2 0x9B SWAP3 SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0xE9 PUSH2 0x9B PUSH2 0xF0 SWAP3 PUSH2 0xCC JUMP JUMPDEST DUP3 SLOAD PUSH2 0xBC JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x108 SWAP1 PUSH2 0x101 CALLER PUSH2 0x15B JUMP JUMPDEST PUSH1 0x7 PUSH2 0xD9 JUMP JUMPDEST PUSH2 0x7F PUSH2 0x115 PUSH1 0x0 PUSH2 0xCC JUMP JUMPDEST PUSH1 0x5 PUSH2 0xD9 JUMP JUMPDEST PUSH2 0x129 PUSH2 0x9B PUSH2 0x9B SWAP3 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x9B SWAP1 PUSH2 0x11C JUMP JUMPDEST PUSH2 0x147 SWAP1 PUSH2 0x129 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 ADD SWAP3 SWAP2 PUSH2 0x7F SWAP2 SWAP1 PUSH2 0x13E JUMP JUMPDEST PUSH1 0x0 PUSH2 0x166 DUP2 PUSH2 0x135 JUMP JUMPDEST PUSH2 0x16F DUP2 PUSH2 0x129 JUMP JUMPDEST PUSH2 0x178 DUP5 PUSH2 0x129 JUMP JUMPDEST EQ PUSH2 0x188 JUMPI POP POP PUSH2 0x7F SWAP1 PUSH2 0x204 JUMP JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP3 MSTORE DUP2 SWAP1 PUSH2 0x1A1 SWAP1 PUSH1 0x4 DUP4 ADD PUSH2 0x14B JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x9B SWAP1 PUSH2 0x129 JUMP JUMPDEST PUSH2 0x9B SWAP1 SLOAD PUSH2 0x1A5 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH2 0xC2 JUMP JUMPDEST PUSH2 0x9B SWAP1 PUSH2 0x129 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 JUMP JUMPDEST PUSH2 0x9B SWAP1 PUSH2 0x1C7 JUMP JUMPDEST PUSH2 0x9B SWAP1 PUSH2 0x1DB JUMP JUMPDEST SWAP1 PUSH2 0x1FD PUSH2 0x9B PUSH2 0xF0 SWAP3 PUSH2 0x1E4 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x1B8 JUMP JUMPDEST PUSH2 0x22A PUSH2 0x224 PUSH2 0x214 PUSH1 0x0 PUSH2 0x1AE JUMP JUMPDEST PUSH2 0x21F DUP5 PUSH1 0x0 PUSH2 0x1ED JUMP JUMPDEST PUSH2 0x1E4 JUMP JUMPDEST SWAP2 PUSH2 0x1E4 JUMP JUMPDEST SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH2 0x255 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 LOG3 JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x167FEB09 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x22DC7B4C EQ PUSH2 0x14D JUMPI DUP1 PUSH4 0x2607788E EQ PUSH2 0x148 JUMPI DUP1 PUSH4 0x2EB4A7AB EQ PUSH2 0x143 JUMPI DUP1 PUSH4 0x451B923C EQ PUSH2 0x13E JUMPI DUP1 PUSH4 0x4783F0EF EQ PUSH2 0x139 JUMPI DUP1 PUSH4 0x49590657 EQ PUSH2 0x134 JUMPI DUP1 PUSH4 0x5089CEC2 EQ PUSH2 0x12F JUMPI DUP1 PUSH4 0x5BE4EE1B EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0x6D9F4370 EQ PUSH2 0x125 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x120 JUMPI DUP1 PUSH4 0x89AA56A4 EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x116 JUMPI DUP1 PUSH4 0xA067228E EQ PUSH2 0x111 JUMPI DUP1 PUSH4 0xC423F910 EQ PUSH2 0x10C JUMPI DUP1 PUSH4 0xC9433940 EQ PUSH2 0x107 JUMPI DUP1 PUSH4 0xD51B456B EQ PUSH2 0x102 JUMPI DUP1 PUSH4 0xE6AB8C54 EQ PUSH2 0xFD JUMPI DUP1 PUSH4 0xE81F927B EQ PUSH2 0xF8 JUMPI PUSH4 0xF2FDE38B SUB PUSH2 0x157 JUMPI PUSH2 0x6F0 JUMP JUMPDEST PUSH2 0x6D1 JUMP JUMPDEST PUSH2 0x6B5 JUMP JUMPDEST PUSH2 0x658 JUMP JUMPDEST PUSH2 0x629 JUMP JUMPDEST PUSH2 0x604 JUMP JUMPDEST PUSH2 0x519 JUMP JUMPDEST PUSH2 0x43D JUMP JUMPDEST PUSH2 0x40C JUMP JUMPDEST PUSH2 0x3F4 JUMP JUMPDEST PUSH2 0x3D9 JUMP JUMPDEST PUSH2 0x3B2 JUMP JUMPDEST PUSH2 0x39A JUMP JUMPDEST PUSH2 0x37F JUMP JUMPDEST PUSH2 0x362 JUMP JUMPDEST PUSH2 0x343 JUMP JUMPDEST PUSH2 0x2EC JUMP JUMPDEST PUSH2 0x2B9 JUMP JUMPDEST PUSH2 0x1EB JUMP JUMPDEST PUSH2 0x192 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 SUB SLT PUSH2 0x157 JUMPI JUMP JUMPDEST PUSH2 0x172 SWAP2 PUSH1 0x8 MUL SHR DUP2 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x172 SWAP2 SLOAD PUSH2 0x167 JUMP JUMPDEST PUSH2 0x172 PUSH1 0x0 PUSH1 0x7 PUSH2 0x175 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST JUMP JUMPDEST CALLVALUE PUSH2 0x157 JUMPI PUSH2 0x1A2 CALLDATASIZE PUSH1 0x4 PUSH2 0x15C JUMP JUMPDEST PUSH2 0x1BD PUSH2 0x1AD PUSH2 0x180 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP1 JUMPDEST SUB PUSH2 0x157 JUMPI JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x190 DUP3 PUSH2 0x1C1 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x157 JUMPI PUSH2 0x172 SWAP2 PUSH2 0x1CA JUMP JUMPDEST CALLVALUE PUSH2 0x157 JUMPI PUSH2 0x1BD PUSH2 0x206 PUSH2 0x201 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D7 JUMP JUMPDEST PUSH2 0x730 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x1C3 DUP2 PUSH2 0x218 JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x190 DUP3 PUSH2 0x224 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x157 JUMPI PUSH2 0x172 SWAP2 PUSH2 0x22D JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x272 PUSH2 0x26B PUSH2 0x261 DUP5 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP5 MSTORE SWAP3 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x283 JUMPI POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 PUSH2 0x2A0 PUSH2 0x299 PUSH1 0x1 SWAP3 DUP7 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP5 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 ADD PUSH2 0x276 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH2 0x172 SWAP3 SWAP2 ADD SWAP1 PUSH2 0x252 JUMP JUMPDEST CALLVALUE PUSH2 0x157 JUMPI PUSH2 0x1BD PUSH2 0x2D4 PUSH2 0x2CF CALLDATASIZE PUSH1 0x4 PUSH2 0x23A JUMP JUMPDEST PUSH2 0x856 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x2A8 JUMP JUMPDEST PUSH2 0x172 PUSH1 0x0 PUSH1 0x6 PUSH2 0x175 JUMP JUMPDEST CALLVALUE PUSH2 0x157 JUMPI PUSH2 0x2FC CALLDATASIZE PUSH1 0x4 PUSH2 0x15C JUMP JUMPDEST PUSH2 0x1BD PUSH2 0x1AD PUSH2 0x2E0 JUMP JUMPDEST PUSH1 0x80 DUP2 DUP4 SUB SLT PUSH2 0x157 JUMPI PUSH2 0x31B DUP3 DUP3 PUSH2 0x1CA JUMP JUMPDEST SWAP3 PUSH2 0x172 PUSH2 0x32C DUP5 PUSH1 0x20 DUP6 ADD PUSH2 0x1CA JUMP JUMPDEST SWAP4 PUSH1 0x60 PUSH2 0x33C DUP3 PUSH1 0x40 DUP8 ADD PUSH2 0x1CA JUMP JUMPDEST SWAP5 ADD PUSH2 0x1CA JUMP JUMPDEST CALLVALUE PUSH2 0x157 JUMPI PUSH2 0x1BD PUSH2 0x1AD PUSH2 0x359 CALLDATASIZE PUSH1 0x4 PUSH2 0x307 JUMP JUMPDEST SWAP3 SWAP2 SWAP1 SWAP2 PUSH2 0xBFC JUMP JUMPDEST CALLVALUE PUSH2 0x157 JUMPI PUSH2 0x37A PUSH2 0x375 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D7 JUMP JUMPDEST PUSH2 0xD72 JUMP JUMPDEST PUSH1 0x40 MLOAD STOP JUMPDEST CALLVALUE PUSH2 0x157 JUMPI PUSH2 0x38F CALLDATASIZE PUSH1 0x4 PUSH2 0x15C JUMP JUMPDEST PUSH2 0x1BD PUSH2 0x1AD PUSH2 0xD7B JUMP JUMPDEST CALLVALUE PUSH2 0x157 JUMPI PUSH2 0x37A PUSH2 0x3AD CALLDATASIZE PUSH1 0x4 PUSH2 0x1D7 JUMP JUMPDEST PUSH2 0xEB7 JUMP JUMPDEST CALLVALUE PUSH2 0x157 JUMPI PUSH2 0x3C2 CALLDATASIZE PUSH1 0x4 PUSH2 0x15C JUMP JUMPDEST PUSH2 0x1BD PUSH2 0x1AD PUSH2 0xEC0 JUMP JUMPDEST PUSH2 0x172 PUSH1 0x0 PUSH1 0x5 PUSH2 0x175 JUMP JUMPDEST CALLVALUE PUSH2 0x157 JUMPI PUSH2 0x3E9 CALLDATASIZE PUSH1 0x4 PUSH2 0x15C JUMP JUMPDEST PUSH2 0x1BD PUSH2 0x1AD PUSH2 0x3CD JUMP JUMPDEST CALLVALUE PUSH2 0x157 JUMPI PUSH2 0x404 CALLDATASIZE PUSH1 0x4 PUSH2 0x15C JUMP JUMPDEST PUSH2 0x37A PUSH2 0xF02 JUMP JUMPDEST CALLVALUE PUSH2 0x157 JUMPI PUSH2 0x37A PUSH2 0x41F CALLDATASIZE PUSH1 0x4 PUSH2 0x1D7 JUMP JUMPDEST PUSH2 0xF21 JUMP JUMPDEST PUSH2 0x18C SWAP1 PUSH2 0x218 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD SWAP3 SWAP2 PUSH2 0x190 SWAP2 SWAP1 PUSH2 0x424 JUMP JUMPDEST CALLVALUE PUSH2 0x157 JUMPI PUSH2 0x44D CALLDATASIZE PUSH1 0x4 PUSH2 0x15C JUMP JUMPDEST PUSH2 0x1BD PUSH2 0x458 PUSH2 0xF3D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x42D JUMP JUMPDEST DUP1 MLOAD DUP3 MSTORE PUSH2 0x190 SWAP2 SWAP1 PUSH1 0xA0 SWAP1 DUP2 SWAP1 PUSH2 0x481 PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x20 DUP7 ADD MSTORE JUMP JUMPDEST PUSH2 0x490 PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x40 DUP7 ADD MSTORE JUMP JUMPDEST PUSH2 0x49F PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x60 DUP7 ADD MSTORE JUMP JUMPDEST PUSH2 0x4AE PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0x80 DUP7 ADD MSTORE JUMP JUMPDEST ADD MLOAD ISZERO ISZERO SWAP2 ADD MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x80 DUP1 PUSH2 0x190 SWAP4 PUSH2 0x4D1 PUSH1 0x0 DUP3 ADD MLOAD PUSH1 0x0 DUP7 ADD SWAP1 PUSH2 0x424 JUMP JUMPDEST PUSH2 0x4E0 PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x20 DUP7 ADD MSTORE JUMP JUMPDEST PUSH2 0x4EF PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x40 DUP7 ADD MSTORE JUMP JUMPDEST PUSH2 0x4FE PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x60 DUP7 ADD MSTORE JUMP JUMPDEST ADD MLOAD SWAP2 ADD SWAP1 PUSH2 0x464 JUMP JUMPDEST PUSH2 0x140 DUP2 ADD SWAP3 SWAP2 PUSH2 0x190 SWAP2 SWAP1 PUSH2 0x4B7 JUMP JUMPDEST CALLVALUE PUSH2 0x157 JUMPI PUSH2 0x1BD PUSH2 0x534 PUSH2 0x52F CALLDATASIZE PUSH1 0x4 PUSH2 0x1D7 JUMP JUMPDEST PUSH2 0x1020 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x508 JUMP JUMPDEST SWAP1 SWAP2 DUP3 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x157 JUMPI DUP2 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x157 JUMPI PUSH1 0x20 ADD SWAP3 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH2 0x157 JUMPI JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x80 DUP3 DUP5 SUB SLT PUSH2 0x157 JUMPI DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x157 JUMPI DUP4 PUSH2 0x599 SWAP2 DUP5 ADD PUSH2 0x540 JUMP JUMPDEST SWAP3 SWAP1 SWAP4 PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x157 JUMPI DUP2 PUSH2 0x5BC SWAP2 DUP5 ADD PUSH2 0x540 JUMP JUMPDEST SWAP3 SWAP1 SWAP4 PUSH1 0x40 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x157 JUMPI DUP4 PUSH2 0x5DF SWAP2 DUP5 ADD PUSH2 0x540 JUMP JUMPDEST SWAP3 SWAP1 SWAP4 PUSH1 0x60 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x157 JUMPI PUSH2 0x600 SWAP3 ADD PUSH2 0x540 JUMP JUMPDEST SWAP1 SWAP2 JUMP JUMPDEST CALLVALUE PUSH2 0x157 JUMPI PUSH2 0x1BD PUSH2 0x1AD PUSH2 0x61A CALLDATASIZE PUSH1 0x4 PUSH2 0x570 JUMP JUMPDEST SWAP7 SWAP6 SWAP1 SWAP6 SWAP5 SWAP2 SWAP5 SWAP4 SWAP3 SWAP4 PUSH2 0x1287 JUMP JUMPDEST CALLVALUE PUSH2 0x157 JUMPI PUSH2 0x1BD PUSH2 0x1AD PUSH2 0x63F CALLDATASIZE PUSH1 0x4 PUSH2 0x307 JUMP JUMPDEST SWAP3 SWAP2 SWAP1 SWAP2 PUSH2 0x1487 JUMP JUMPDEST PUSH1 0xC0 DUP2 ADD SWAP3 SWAP2 PUSH2 0x190 SWAP2 SWAP1 PUSH2 0x464 JUMP JUMPDEST CALLVALUE PUSH2 0x157 JUMPI PUSH2 0x1BD PUSH2 0x673 PUSH2 0x66E CALLDATASIZE PUSH1 0x4 PUSH2 0x1D7 JUMP JUMPDEST PUSH2 0x14CD JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x648 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH1 0x40 DUP2 DUP5 SUB SLT PUSH2 0x157 JUMPI PUSH2 0x696 DUP4 DUP3 PUSH2 0x22D JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x157 JUMPI PUSH2 0x600 SWAP3 ADD PUSH2 0x540 JUMP JUMPDEST CALLVALUE PUSH2 0x157 JUMPI PUSH2 0x1BD PUSH2 0x206 PUSH2 0x6CB CALLDATASIZE PUSH1 0x4 PUSH2 0x67F JUMP JUMPDEST SWAP2 PUSH2 0x150A JUMP JUMPDEST CALLVALUE PUSH2 0x157 JUMPI PUSH2 0x1BD PUSH2 0x206 PUSH2 0x6E7 CALLDATASIZE PUSH1 0x4 PUSH2 0x307 JUMP JUMPDEST SWAP3 SWAP2 SWAP1 SWAP2 PUSH2 0x16FD JUMP JUMPDEST CALLVALUE PUSH2 0x157 JUMPI PUSH2 0x37A PUSH2 0x703 CALLDATASIZE PUSH1 0x4 PUSH2 0x23A JUMP JUMPDEST PUSH2 0x175D JUMP JUMPDEST SWAP1 PUSH2 0x712 SWAP1 PUSH2 0x172 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x172 SWAP1 SLOAD PUSH2 0x720 JUMP JUMPDEST PUSH2 0x747 PUSH2 0x172 SWAP2 PUSH2 0x73F PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x2 PUSH2 0x708 JUMP JUMPDEST PUSH2 0x726 JUMP JUMPDEST PUSH2 0x172 SWAP1 PUSH2 0x218 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 JUMP JUMPDEST PUSH2 0x172 SWAP1 PUSH2 0x74C JUMP JUMPDEST PUSH2 0x172 SWAP1 PUSH2 0x760 JUMP JUMPDEST SWAP1 PUSH2 0x712 SWAP1 PUSH2 0x769 JUMP JUMPDEST PUSH2 0x172 SWAP1 DUP2 JUMP JUMPDEST PUSH2 0x172 SWAP1 SLOAD PUSH2 0x77C JUMP JUMPDEST SWAP1 PUSH2 0x7A8 PUSH2 0x79C PUSH2 0x261 DUP5 SLOAD SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x7B9 JUMPI POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 PUSH2 0x7DD PUSH2 0x7D6 PUSH1 0x1 SWAP3 PUSH2 0x7CE DUP8 PUSH2 0x783 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP5 PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 ADD PUSH2 0x7AC JUMP JUMPDEST SWAP1 PUSH2 0x172 SWAP2 PUSH2 0x78D JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x827 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x7EF JUMP JUMPDEST SWAP1 PUSH2 0x190 PUSH2 0x846 SWAP3 PUSH2 0x83D PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP4 DUP5 DUP1 SWAP3 PUSH2 0x7E5 JUMP JUMPDEST SUB DUP4 PUSH2 0x805 JUMP JUMPDEST PUSH2 0x172 SWAP1 PUSH2 0x82C JUMP JUMPDEST PUSH2 0x86D PUSH2 0x172 SWAP2 PUSH2 0x865 PUSH1 0x60 SWAP1 JUMP JUMPDEST POP PUSH1 0x3 PUSH2 0x772 JUMP JUMPDEST PUSH2 0x84D JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0x190 DUP3 PUSH2 0x1C1 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x157 JUMPI PUSH2 0x172 SWAP2 PUSH2 0x872 JUMP JUMPDEST PUSH2 0x8C0 PUSH2 0x190 SWAP5 PUSH2 0x8B9 PUSH1 0x60 SWAP5 SWAP9 SWAP8 SWAP6 PUSH2 0x8B2 PUSH1 0x80 DUP7 ADD SWAP11 PUSH1 0x0 DUP8 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE JUMP JUMPDEST ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x190 PUSH2 0x8DD PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 PUSH2 0x805 JUMP JUMPDEST PUSH2 0x172 PUSH1 0xA0 PUSH2 0x8D0 JUMP JUMPDEST SWAP1 PUSH2 0x18C SWAP1 PUSH2 0x218 JUMP JUMPDEST PUSH2 0x172 PUSH1 0xC0 PUSH2 0x8D0 JUMP JUMPDEST SWAP1 PUSH2 0x190 PUSH2 0x982 PUSH1 0x5 PUSH2 0x913 PUSH2 0x8F8 JUMP JUMPDEST SWAP5 PUSH2 0x924 PUSH2 0x920 DUP3 PUSH2 0x783 JUMP JUMPDEST DUP8 MSTORE JUMP JUMPDEST PUSH2 0x93A PUSH2 0x933 PUSH1 0x1 DUP4 ADD PUSH2 0x783 JUMP JUMPDEST PUSH1 0x20 DUP9 ADD MSTORE JUMP JUMPDEST PUSH2 0x950 PUSH2 0x949 PUSH1 0x2 DUP4 ADD PUSH2 0x783 JUMP JUMPDEST PUSH1 0x40 DUP9 ADD MSTORE JUMP JUMPDEST PUSH2 0x966 PUSH2 0x95F PUSH1 0x3 DUP4 ADD PUSH2 0x783 JUMP JUMPDEST PUSH1 0x60 DUP9 ADD MSTORE JUMP JUMPDEST PUSH2 0x97C PUSH2 0x975 PUSH1 0x4 DUP4 ADD PUSH2 0x783 JUMP JUMPDEST PUSH1 0x80 DUP9 ADD MSTORE JUMP JUMPDEST ADD PUSH2 0x726 JUMP JUMPDEST ISZERO ISZERO PUSH1 0xA0 DUP5 ADD MSTORE JUMP JUMPDEST PUSH2 0x172 SWAP1 PUSH2 0x902 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x172 SWAP1 MLOAD PUSH2 0x218 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x9D9 PUSH2 0x172 PUSH2 0x9E0 SWAP3 PUSH2 0x769 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x9B4 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST MLOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 NOT SWAP1 PUSH2 0x9BF JUMP JUMPDEST SWAP1 PUSH2 0xA07 PUSH2 0xA02 PUSH2 0x9E0 SWAP3 PUSH2 0x172 JUMP JUMPDEST PUSH2 0x172 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x9E8 JUMP JUMPDEST PUSH2 0x172 PUSH2 0x172 PUSH2 0x172 SWAP3 SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0xA07 PUSH2 0x172 PUSH2 0x9E0 SWAP3 PUSH2 0xA0E JUMP JUMPDEST MLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0xFF SWAP1 PUSH2 0x9BF JUMP JUMPDEST ISZERO ISZERO SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0xA4F PUSH2 0x172 PUSH2 0x9E0 SWAP3 PUSH2 0xA3A JUMP JUMPDEST DUP3 SLOAD PUSH2 0xA31 JUMP JUMPDEST PUSH1 0x5 PUSH2 0xADC PUSH1 0xA0 PUSH2 0x190 SWAP5 PUSH2 0xA76 PUSH2 0xA70 PUSH1 0x0 DUP4 ADD PUSH2 0x9E4 JUMP JUMPDEST DUP7 PUSH2 0x9F2 JUMP JUMPDEST PUSH2 0xA8E PUSH2 0xA85 PUSH1 0x20 DUP4 ADD PUSH2 0x9E4 JUMP JUMPDEST PUSH1 0x1 DUP8 ADD PUSH2 0x9F2 JUMP JUMPDEST PUSH2 0xAA6 PUSH2 0xA9D PUSH1 0x40 DUP4 ADD PUSH2 0x9E4 JUMP JUMPDEST PUSH1 0x2 DUP8 ADD PUSH2 0x9F2 JUMP JUMPDEST PUSH2 0xABE PUSH2 0xAB5 PUSH1 0x60 DUP4 ADD PUSH2 0x9E4 JUMP JUMPDEST PUSH1 0x3 DUP8 ADD PUSH2 0x9F2 JUMP JUMPDEST PUSH2 0xAD6 PUSH2 0xACD PUSH1 0x80 DUP4 ADD PUSH2 0x9E4 JUMP JUMPDEST PUSH1 0x4 DUP8 ADD PUSH2 0xA1B JUMP JUMPDEST ADD PUSH2 0xA2B JUMP JUMPDEST SWAP2 ADD PUSH2 0xA3F JUMP JUMPDEST SWAP1 PUSH2 0x190 SWAP2 PUSH2 0xA56 JUMP JUMPDEST PUSH1 0x4 PUSH2 0xB3F PUSH1 0x80 PUSH2 0x190 SWAP5 PUSH2 0xB0D PUSH2 0xB07 PUSH1 0x0 DUP4 ADD PUSH2 0x9AA JUMP JUMPDEST DUP7 PUSH2 0x9C9 JUMP JUMPDEST PUSH2 0xB1C PUSH2 0xA85 PUSH1 0x20 DUP4 ADD PUSH2 0x9E4 JUMP JUMPDEST PUSH2 0xB2B PUSH2 0xA9D PUSH1 0x40 DUP4 ADD PUSH2 0x9E4 JUMP JUMPDEST PUSH2 0xB3A PUSH2 0xAB5 PUSH1 0x60 DUP4 ADD PUSH2 0x9E4 JUMP JUMPDEST ADD MLOAD SWAP1 JUMP JUMPDEST SWAP2 ADD PUSH2 0xAE3 JUMP JUMPDEST SWAP1 PUSH2 0x190 SWAP2 PUSH2 0xAED JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0xB89 JUMPI PUSH2 0xB80 PUSH1 0x1 SWAP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP2 MUL ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0xB50 JUMP JUMPDEST SWAP2 PUSH1 0x0 NOT PUSH1 0x8 SWAP3 SWAP1 SWAP3 MUL SWAP2 DUP3 SHL SWAP2 SHL PUSH2 0x9BF JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0xBB3 PUSH2 0xA02 PUSH2 0x9E0 SWAP4 PUSH2 0x172 JUMP JUMPDEST SWAP1 DUP4 SLOAD PUSH2 0xB8E JUMP JUMPDEST SWAP1 DUP2 SLOAD SWAP2 PUSH9 0x10000000000000000 DUP4 LT ISZERO PUSH2 0x827 JUMPI DUP3 PUSH2 0xBE3 SWAP2 PUSH1 0x1 PUSH2 0x190 SWAP6 ADD DUP2 SSTORE PUSH2 0xB66 JUMP JUMPDEST SWAP1 PUSH2 0xBA2 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP2 ADD SWAP3 SWAP2 PUSH2 0x190 SWAP2 PUSH1 0x20 ADD MSTORE JUMP JUMPDEST SWAP2 PUSH1 0x20 PUSH2 0xC3F PUSH1 0x0 SWAP6 PUSH2 0xC0D PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH2 0xC17 ADDRESS PUSH2 0x769 JUMP JUMPDEST SWAP1 PUSH2 0xC21 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP8 DUP9 SWAP4 DUP5 SWAP3 DUP4 SWAP2 SWAP1 PUSH4 0x3250CE5 PUSH1 0xE6 SHL DUP4 MSTORE DUP9 DUP11 DUP13 PUSH1 0x4 DUP7 ADD PUSH2 0x893 JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP4 DUP5 ISZERO PUSH2 0xD56 JUMPI PUSH1 0x0 SWAP5 PUSH2 0xD17 JUMPI JUMPDEST POP SWAP1 PUSH2 0xCA1 PUSH2 0xC9A PUSH2 0xCB1 SWAP4 PUSH2 0xC95 PUSH2 0xC6C DUP9 PUSH1 0x1 PUSH2 0x708 JUMP JUMPDEST SWAP2 PUSH2 0xC8E PUSH2 0xC78 PUSH2 0x8E4 JUMP JUMPDEST SWAP7 PUSH2 0xC83 CALLER DUP10 PUSH2 0x8EE JUMP JUMPDEST PUSH2 0x949 DUP11 PUSH1 0x20 DUP11 ADD MSTORE JUMP JUMPDEST PUSH1 0x60 DUP7 ADD MSTORE JUMP JUMPDEST PUSH2 0x98B JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE JUMP JUMPDEST PUSH2 0xCAC DUP5 PUSH1 0x4 PUSH2 0x708 JUMP JUMPDEST PUSH2 0xB46 JUMP JUMPDEST PUSH2 0xCC8 DUP3 PUSH2 0xCC3 PUSH2 0x172 CALLER PUSH1 0x3 PUSH2 0x772 JUMP JUMPDEST PUSH2 0xBBB JUMP JUMPDEST PUSH2 0xCDA PUSH2 0xCD4 CALLER PUSH2 0x769 JUMP JUMPDEST SWAP2 PUSH2 0x172 JUMP JUMPDEST SWAP1 PUSH32 0xF2A38CB36BCFB3C71A301F45F653F09B07E5579C023684AB0CFDF0C1B0BAF557 PUSH2 0xD05 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST DUP1 PUSH2 0xD11 TIMESTAMP DUP8 DUP4 PUSH2 0xBE9 JUMP JUMPDEST SUB SWAP1 LOG3 SWAP1 JUMP JUMPDEST PUSH2 0xCB1 SWAP3 SWAP2 SWAP5 POP PUSH2 0xC9A PUSH2 0xD45 PUSH2 0xCA1 SWAP3 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xD4F JUMPI JUMPDEST PUSH2 0xD3D DUP2 DUP4 PUSH2 0x805 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x87F JUMP JUMPDEST SWAP6 SWAP3 SWAP4 POP POP PUSH2 0xC52 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0xD33 JUMP JUMPDEST PUSH2 0x8C4 JUMP JUMPDEST PUSH2 0x190 SWAP1 PUSH2 0xD67 PUSH2 0x1766 JUMP JUMPDEST PUSH2 0x190 SWAP1 PUSH1 0x6 PUSH2 0x9F2 JUMP JUMPDEST PUSH2 0x190 SWAP1 PUSH2 0xD5B JUMP JUMPDEST PUSH2 0x172 PUSH1 0x6 PUSH2 0x783 JUMP JUMPDEST PUSH2 0x190 SWAP1 PUSH2 0xD91 PUSH2 0x1766 JUMP JUMPDEST PUSH2 0xE6F JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x14 SWAP1 DUP3 ADD MSTORE PUSH20 0x141C9BDBD988191BD95CC81B9BDD08195E1A5CDD PUSH1 0x62 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0xDCB JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 PUSH2 0xDE4 PUSH1 0x4 DUP3 ADD PUSH2 0xD96 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x190 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0xBA2 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0xBB3 PUSH2 0x172 PUSH2 0x9E0 SWAP4 PUSH2 0xA0E JUMP JUMPDEST PUSH2 0x190 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0xDF4 JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0x5 SWAP1 PUSH2 0xE21 DUP4 DUP3 PUSH2 0xDE8 JUMP JUMPDEST PUSH2 0xE2E DUP4 PUSH1 0x1 DUP4 ADD PUSH2 0xDE8 JUMP JUMPDEST PUSH2 0xE3B DUP4 PUSH1 0x2 DUP4 ADD PUSH2 0xDE8 JUMP JUMPDEST PUSH2 0xE48 DUP4 PUSH1 0x3 DUP4 ADD PUSH2 0xDE8 JUMP JUMPDEST PUSH2 0xE55 DUP4 PUSH1 0x4 DUP4 ADD PUSH2 0xE05 JUMP JUMPDEST ADD SSTORE JUMP JUMPDEST SWAP1 PUSH1 0x0 SUB PUSH2 0xE6A JUMPI PUSH2 0x190 SWAP1 PUSH2 0xE11 JUMP JUMPDEST PUSH2 0x994 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEB2 PUSH2 0x190 SWAP3 PUSH2 0xEAB PUSH2 0xE91 PUSH1 0x3 PUSH2 0xE8B DUP5 PUSH1 0x1 PUSH2 0x708 JUMP JUMPDEST ADD PUSH2 0x783 JUMP JUMPDEST PUSH2 0xEA4 PUSH2 0xEA0 PUSH2 0x172 DUP8 PUSH2 0xA0E JUMP JUMPDEST SWAP2 SWAP1 JUMP JUMPDEST EQ ISZERO PUSH2 0xDC4 JUMP JUMPDEST PUSH1 0x1 PUSH2 0x708 JUMP JUMPDEST PUSH2 0xE59 JUMP JUMPDEST PUSH2 0x190 SWAP1 PUSH2 0xD85 JUMP JUMPDEST PUSH2 0x172 PUSH1 0x5 PUSH2 0x783 JUMP JUMPDEST PUSH2 0xED2 PUSH2 0x1766 JUMP JUMPDEST PUSH2 0x190 PUSH2 0xEF0 JUMP JUMPDEST PUSH2 0x218 PUSH2 0x172 PUSH2 0x172 SWAP3 SWAP1 JUMP JUMPDEST PUSH2 0x172 SWAP1 PUSH2 0xEDA JUMP JUMPDEST PUSH2 0x190 PUSH2 0xEFD PUSH1 0x0 PUSH2 0xEE7 JUMP JUMPDEST PUSH2 0x17A8 JUMP JUMPDEST PUSH2 0x190 PUSH2 0xECA JUMP JUMPDEST PUSH2 0x190 SWAP1 PUSH2 0xF16 PUSH2 0x1766 JUMP JUMPDEST PUSH2 0x190 SWAP1 PUSH1 0x7 PUSH2 0xA1B JUMP JUMPDEST PUSH2 0x190 SWAP1 PUSH2 0xF0A JUMP JUMPDEST PUSH2 0x172 SWAP1 PUSH2 0x218 JUMP JUMPDEST PUSH2 0x172 SWAP1 SLOAD PUSH2 0xF2A JUMP JUMPDEST PUSH2 0x172 PUSH1 0x0 PUSH2 0xF33 JUMP JUMPDEST PUSH2 0xF4F PUSH2 0x8F8 JUMP JUMPDEST SWAP1 PUSH1 0x0 DUP3 MSTORE PUSH1 0x20 DUP1 DUP1 DUP1 DUP1 DUP1 DUP8 ADD PUSH1 0x0 DUP2 MSTORE ADD PUSH1 0x0 DUP2 MSTORE ADD PUSH1 0x0 DUP2 MSTORE ADD PUSH1 0x0 DUP2 MSTORE ADD PUSH1 0x0 SWAP1 MSTORE POP JUMP JUMPDEST SWAP1 MSTORE POP JUMP JUMPDEST PUSH2 0x172 PUSH2 0xF47 JUMP JUMPDEST PUSH2 0xF8D PUSH2 0x8E4 JUMP JUMPDEST SWAP1 PUSH1 0x0 DUP3 MSTORE PUSH1 0x20 DUP1 DUP1 DUP1 DUP1 DUP7 ADD PUSH1 0x0 DUP2 MSTORE ADD PUSH1 0x0 DUP2 MSTORE ADD PUSH1 0x0 DUP2 MSTORE ADD PUSH2 0xF78 PUSH2 0xF7D JUMP JUMPDEST PUSH2 0x172 PUSH2 0xF85 JUMP JUMPDEST SWAP1 PUSH2 0x190 PUSH2 0x1010 PUSH1 0x4 PUSH2 0xFCA PUSH2 0x8E4 JUMP JUMPDEST SWAP5 PUSH2 0xFDD PUSH2 0xFD7 DUP3 PUSH2 0xF33 JUMP JUMPDEST DUP8 PUSH2 0x8EE JUMP JUMPDEST PUSH2 0xFEC PUSH2 0x933 PUSH1 0x1 DUP4 ADD PUSH2 0x783 JUMP JUMPDEST PUSH2 0xFFB PUSH2 0x949 PUSH1 0x2 DUP4 ADD PUSH2 0x783 JUMP JUMPDEST PUSH2 0x100A PUSH2 0x95F PUSH1 0x3 DUP4 ADD PUSH2 0x783 JUMP JUMPDEST ADD PUSH2 0x902 JUMP JUMPDEST PUSH1 0x80 DUP5 ADD MSTORE JUMP JUMPDEST PUSH2 0x172 SWAP1 PUSH2 0xFB9 JUMP JUMPDEST PUSH2 0x1037 PUSH2 0x172 SWAP2 PUSH2 0x102F PUSH2 0xFB1 JUMP JUMPDEST POP PUSH1 0x4 PUSH2 0x708 JUMP JUMPDEST PUSH2 0x1017 JUMP JUMPDEST SWAP1 PUSH2 0x172 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0x1050 PUSH2 0x1766 JUMP JUMPDEST PUSH2 0x111F JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x18 SWAP1 DUP3 ADD MSTORE PUSH32 0x4172726179206C656E67746873206D757374206D617463680000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x1093 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 PUSH2 0xDE4 PUSH1 0x4 DUP3 ADD PUSH2 0x1055 JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP2 LT ISZERO PUSH2 0xB89 JUMPI PUSH1 0x20 MUL ADD SWAP1 JUMP JUMPDEST CALLDATALOAD PUSH2 0x172 DUP2 PUSH2 0x1C1 JUMP JUMPDEST DUP1 ISZERO ISZERO PUSH2 0x1C3 JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0x190 DUP3 PUSH2 0x10CC JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x157 JUMPI PUSH2 0x172 SWAP2 PUSH2 0x10D4 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x111A JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH2 0x10F5 JUMP JUMPDEST SWAP8 SWAP4 SWAP6 SWAP3 SWAP7 SWAP2 SWAP5 SWAP1 SWAP8 SWAP7 PUSH2 0x1130 DUP7 SWAP1 JUMP JUMPDEST SWAP9 DUP8 DUP11 EQ DUP9 DUP2 PUSH2 0x127D JUMPI JUMPDEST POP DUP1 PUSH2 0x1274 JUMPI JUMPDEST PUSH2 0x114B SWAP1 PUSH2 0x108C JUMP JUMPDEST PUSH1 0x0 SWAP11 PUSH2 0x1158 PUSH1 0x0 PUSH2 0xA0E JUMP JUMPDEST DUP12 JUMPDEST DUP2 LT ISZERO PUSH2 0x1264 JUMPI DUP1 DUP1 DUP1 DUP16 DUP2 DUP13 DUP16 DUP16 SWAP1 DUP15 SWAP2 ADDRESS PUSH2 0x1176 SWAP1 PUSH2 0x769 JUMP JUMPDEST SWAP8 PUSH2 0x1181 SWAP2 DUP14 PUSH2 0x10B2 JUMP JUMPDEST PUSH2 0x118A SWAP1 PUSH2 0x10C2 JUMP JUMPDEST SWAP8 PUSH2 0x1195 SWAP2 DUP14 PUSH2 0x10B2 JUMP JUMPDEST PUSH2 0x119E SWAP1 PUSH2 0x10C2 JUMP JUMPDEST SWAP5 PUSH2 0x11A9 SWAP2 DUP14 PUSH2 0x10B2 JUMP JUMPDEST PUSH2 0x11B2 SWAP1 PUSH2 0x10C2 JUMP JUMPDEST SWAP2 PUSH2 0x11BD SWAP2 DUP14 PUSH2 0x10B2 JUMP JUMPDEST PUSH2 0x11C6 SWAP1 PUSH2 0x10C2 JUMP JUMPDEST SWAP3 PUSH2 0x11D0 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP6 DUP7 SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH4 0xE81F927B PUSH1 0xE0 SHL DUP6 MSTORE PUSH2 0x11EE SWAP4 PUSH1 0x4 DUP7 ADD PUSH2 0x893 JUMP JUMPDEST SUB SWAP2 GAS SWAP5 PUSH1 0x20 SWAP6 CALL SWAP1 DUP2 ISZERO PUSH2 0xD56 JUMPI DUP15 SWAP2 PUSH2 0x1236 JUMPI JUMPDEST POP PUSH2 0x121D JUMPI JUMPDEST PUSH2 0x1216 PUSH2 0x115A SWAP2 PUSH2 0x10AC JUMP JUMPDEST SWAP1 POP PUSH2 0x1158 JUMP JUMPDEST SWAP10 PUSH2 0x1216 PUSH2 0x122D PUSH2 0x115A SWAP3 PUSH2 0x110B JUMP JUMPDEST SWAP12 SWAP2 POP POP PUSH2 0x120A JUMP JUMPDEST PUSH2 0x1257 SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x125D JUMPI JUMPDEST PUSH2 0x124F DUP2 DUP4 PUSH2 0x805 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x10E1 JUMP JUMPDEST CODESIZE PUSH2 0x1204 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1245 JUMP JUMPDEST POP SWAP11 POP POP POP POP POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST POP DUP5 DUP7 EQ PUSH2 0x1142 JUMP JUMPDEST DUP7 SWAP2 POP EQ CODESIZE PUSH2 0x113B JUMP JUMPDEST PUSH2 0x172 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH1 0x0 PUSH2 0x103C JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x16 SWAP1 DUP3 ADD MSTORE PUSH22 0x139D5B1B1A599A595C88185B1C9958591E481D5CD959 PUSH1 0x52 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x12D0 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 PUSH2 0xDE4 PUSH1 0x4 DUP3 ADD PUSH2 0x1299 JUMP JUMPDEST SWAP1 PUSH2 0x172 SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0x130E PUSH2 0x1309 PUSH2 0x1305 PUSH2 0x747 DUP7 PUSH1 0x2 PUSH2 0x708 JUMP JUMPDEST ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x12C9 JUMP JUMPDEST PUSH2 0x131E JUMP JUMPDEST PUSH2 0x24E DUP2 PUSH1 0x20 SWAP4 SWAP1 MSTORE JUMP JUMPDEST PUSH2 0x1433 SWAP4 DUP4 PUSH2 0x1450 SWAP5 SWAP4 PUSH2 0x1332 SWAP4 POP PUSH2 0x181B JUMP JUMPDEST SWAP4 PUSH2 0x13FE PUSH1 0x20 PUSH2 0x1341 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x135E DUP2 DUP4 DUP2 ADD PUSH2 0x1352 DUP9 DUP3 PUSH2 0x1313 JUMP JUMPDEST SWAP1 DUP2 SUB DUP3 MSTORE SUB DUP3 PUSH2 0x805 JUMP JUMPDEST PUSH2 0x1370 PUSH2 0x1369 DUP3 MLOAD SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST KECCAK256 PUSH2 0x138B PUSH2 0x137C PUSH2 0x8F8 JUMP JUMPDEST SWAP2 PUSH2 0x1385 DUP7 DUP5 MSTORE JUMP JUMPDEST DUP4 DUP4 ADD MSTORE JUMP JUMPDEST PUSH2 0x1396 DUP5 PUSH1 0x40 DUP4 ADD MSTORE JUMP JUMPDEST PUSH2 0x13A1 DUP9 PUSH1 0x60 DUP4 ADD MSTORE JUMP JUMPDEST PUSH2 0x13AC TIMESTAMP PUSH1 0x80 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD MSTORE PUSH2 0x13C7 DUP2 PUSH2 0x13C2 DUP11 PUSH1 0x1 PUSH2 0x708 JUMP JUMPDEST PUSH2 0xAE3 JUMP JUMPDEST PUSH2 0x13DC PUSH1 0x1 PUSH2 0x13D7 DUP8 PUSH1 0x2 PUSH2 0x708 JUMP JUMPDEST PUSH2 0xA3F JUMP JUMPDEST PUSH2 0x13F8 PUSH2 0x13F1 PUSH2 0x13EC PUSH1 0x5 PUSH2 0x783 JUMP JUMPDEST PUSH2 0x110B JUMP JUMPDEST PUSH1 0x5 PUSH2 0xA1B JUMP JUMPDEST ADD PUSH2 0x9E4 JUMP JUMPDEST PUSH32 0x506B43825C1C1AB28DC92516CAA81ECA0F380417C6E4317931619FBE39F11F14 PUSH2 0x1448 PUSH2 0x142B DUP9 PUSH2 0x172 JUMP JUMPDEST SWAP7 DUP8 SWAP4 PUSH2 0x172 JUMP JUMPDEST SWAP4 PUSH2 0x143D PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP2 DUP3 SWAP2 TIMESTAMP SWAP1 DUP4 PUSH2 0xBE9 JUMP JUMPDEST SUB SWAP1 LOG3 PUSH2 0x172 JUMP JUMPDEST PUSH32 0xAFBAE02739CD46B44C3F5E55FAD3B8AAACF8ACEF6BB518BD7A737A2E02157D04 PUSH2 0x147A PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST TIMESTAMP DUP2 MSTORE DUP1 PUSH1 0x20 DUP2 ADD PUSH2 0xD11 JUMP JUMPDEST PUSH2 0x172 SWAP4 SWAP3 SWAP2 SWAP1 PUSH1 0x0 PUSH2 0x12E9 JUMP JUMPDEST SWAP1 PUSH2 0x172 SWAP2 PUSH2 0x14BD PUSH2 0x14AD PUSH1 0x3 PUSH2 0xE8B DUP6 PUSH1 0x1 PUSH2 0x708 JUMP JUMPDEST PUSH2 0xEA4 PUSH2 0xEA0 PUSH2 0x172 PUSH1 0x0 PUSH2 0xA0E JUMP JUMPDEST PUSH2 0x172 SWAP2 PUSH2 0xC95 SWAP2 POP PUSH1 0x1 PUSH2 0x708 JUMP JUMPDEST PUSH2 0x172 SWAP1 PUSH2 0x14D9 PUSH2 0xF7D JUMP JUMPDEST PUSH2 0x1495 JUMP JUMPDEST PUSH1 0x60 SHL SWAP1 JUMP JUMPDEST PUSH2 0x172 SWAP1 PUSH2 0x14DE JUMP JUMPDEST PUSH2 0x14F9 PUSH2 0x18C SWAP2 PUSH2 0x218 JUMP JUMPDEST PUSH2 0x14E4 JUMP JUMPDEST PUSH2 0x24E DUP2 PUSH1 0x14 SWAP4 PUSH2 0x14ED JUMP JUMPDEST PUSH2 0x172 SWAP3 SWAP1 PUSH2 0x152B PUSH2 0x151B PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST DUP1 SWAP3 PUSH2 0x1352 PUSH1 0x20 DUP4 ADD SWAP2 DUP3 PUSH2 0x14FE JUMP JUMPDEST PUSH2 0x1536 PUSH2 0x1369 DUP3 MLOAD SWAP1 JUMP JUMPDEST KECCAK256 SWAP2 PUSH2 0x1542 PUSH1 0x6 PUSH2 0x783 JUMP JUMPDEST SWAP3 PUSH2 0x18BE JUMP JUMPDEST SWAP1 PUSH2 0x172 SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0x1563 PUSH2 0x14AD PUSH1 0x3 PUSH2 0xE8B DUP6 PUSH1 0x1 PUSH2 0x708 JUMP JUMPDEST PUSH2 0x161A JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x16 SWAP1 DUP3 ADD MSTORE PUSH22 0x141C9BDBD988185B1C9958591E481D995C9A599A5959 PUSH1 0x52 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x159F JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 PUSH2 0xDE4 PUSH1 0x4 DUP3 ADD PUSH2 0x1568 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x13 SWAP1 DUP3 ADD MSTORE PUSH19 0x139D5B1B1A599A595C881B9BDD08199BDD5B99 PUSH1 0x6A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x15EC JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 PUSH2 0xDE4 PUSH1 0x4 DUP3 ADD PUSH2 0x15B8 JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x40 DUP2 ADD SWAP3 SWAP2 PUSH2 0x190 SWAP2 PUSH1 0x20 ADD MSTORE JUMP JUMPDEST SWAP4 PUSH2 0x1665 SWAP2 SWAP3 SWAP5 POP PUSH1 0x1 SWAP4 PUSH1 0x5 PUSH2 0x1634 PUSH2 0x172 DUP7 DUP9 PUSH2 0x708 JUMP JUMPDEST ADD SWAP6 PUSH2 0x164A PUSH2 0x1645 PUSH2 0x1305 DUP10 PUSH2 0x726 JUMP JUMPDEST PUSH2 0x1598 JUMP JUMPDEST PUSH2 0x1660 PUSH2 0x165B PUSH2 0x747 DUP5 PUSH1 0x2 PUSH2 0x708 JUMP JUMPDEST PUSH2 0x15E5 JUMP JUMPDEST PUSH2 0x181B JUMP JUMPDEST DUP2 EQ SWAP3 DUP4 ISZERO PUSH2 0x16BB JUMPI PUSH2 0x16A0 PUSH32 0xBD1FE7A887205D9EDE817440B4FAD4E3D32DFAC34D415A05FE22A6D6A68CF207 SWAP3 PUSH2 0xA02 DUP6 PUSH2 0x16B5 SWAP5 PUSH2 0xA3F JUMP JUMPDEST SWAP3 PUSH2 0x16AA PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP2 DUP3 SWAP2 TIMESTAMP SWAP1 DUP4 PUSH2 0x1605 JUMP JUMPDEST SUB SWAP1 LOG2 SWAP1 JUMP JUMPDEST POP PUSH2 0x16C6 SWAP2 POP PUSH2 0x172 JUMP JUMPDEST PUSH32 0xBD1FE7A887205D9EDE817440B4FAD4E3D32DFAC34D415A05FE22A6D6A68CF207 PUSH2 0x16F0 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST DUP1 PUSH2 0x16B5 TIMESTAMP PUSH1 0x0 DUP4 PUSH2 0x1605 JUMP JUMPDEST PUSH2 0x172 SWAP4 SWAP3 SWAP2 SWAP1 PUSH1 0x0 PUSH2 0x1548 JUMP JUMPDEST PUSH2 0x190 SWAP1 PUSH2 0x1717 PUSH2 0x1766 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1722 DUP2 PUSH2 0xEE7 JUMP JUMPDEST PUSH2 0x172B DUP2 PUSH2 0x218 JUMP JUMPDEST PUSH2 0x1734 DUP5 PUSH2 0x218 JUMP JUMPDEST EQ PUSH2 0x1744 JUMPI POP POP PUSH2 0x190 SWAP1 PUSH2 0x17A8 JUMP JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP3 MSTORE DUP2 SWAP1 PUSH2 0xDE4 SWAP1 PUSH1 0x4 DUP4 ADD PUSH2 0x42D JUMP JUMPDEST PUSH2 0x190 SWAP1 PUSH2 0x170B JUMP JUMPDEST PUSH2 0x176E PUSH2 0xF3D JUMP JUMPDEST CALLER SWAP1 PUSH2 0x1782 PUSH2 0x177C DUP4 PUSH2 0x218 JUMP JUMPDEST SWAP2 PUSH2 0x218 JUMP JUMPDEST SUB PUSH2 0x178A JUMPI POP JUMP JUMPDEST PUSH4 0x118CDAA7 PUSH1 0xE0 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP1 PUSH2 0x17A3 SWAP1 PUSH1 0x4 PUSH2 0x42D JUMP JUMPDEST SUB PUSH1 0x0 REVERT JUMPDEST PUSH2 0x17CE PUSH2 0x17C8 PUSH2 0x17B8 PUSH1 0x0 PUSH2 0xF33 JUMP JUMPDEST PUSH2 0x17C3 DUP5 PUSH1 0x0 PUSH2 0x9C9 JUMP JUMPDEST PUSH2 0x769 JUMP JUMPDEST SWAP2 PUSH2 0x769 JUMP JUMPDEST SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH2 0x17F9 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 LOG3 JUMP JUMPDEST PUSH1 0x20 SWAP4 SWAP3 PUSH2 0x1815 DUP6 DUP4 PUSH2 0x1815 DUP3 SWAP6 PUSH2 0x24E SWAP8 SWAP1 MSTORE JUMP JUMPDEST ADD SWAP2 DUP3 MSTORE JUMP JUMPDEST PUSH2 0x183A SWAP2 SWAP1 PUSH2 0x1352 PUSH2 0x182C PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP5 DUP6 SWAP4 PUSH1 0x20 DUP6 ADD SWAP4 DUP5 PUSH2 0x17FF JUMP JUMPDEST PUSH2 0x1845 PUSH2 0x1369 DUP3 MLOAD SWAP1 JUMP JUMPDEST KECCAK256 SWAP1 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x827 JUMPI PUSH1 0x20 DUP1 SWAP2 MUL ADD SWAP1 JUMP JUMPDEST SWAP1 SWAP3 SWAP2 SWAP3 PUSH2 0x1876 PUSH2 0x1871 DUP3 PUSH2 0x1849 JUMP JUMPDEST PUSH2 0x8D0 JUMP JUMPDEST SWAP4 DUP2 DUP6 MSTORE PUSH1 0x20 DUP1 DUP7 ADD SWAP3 MUL DUP4 ADD SWAP3 DUP2 DUP5 GT PUSH2 0x157 JUMPI SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x189A JUMPI POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 SWAP2 PUSH2 0x18A8 DUP5 DUP7 PUSH2 0x1CA JUMP JUMPDEST DUP2 MSTORE ADD SWAP3 ADD SWAP2 PUSH2 0x188D JUMP JUMPDEST PUSH2 0x172 SWAP2 CALLDATASIZE SWAP2 PUSH2 0x1861 JUMP JUMPDEST SWAP2 PUSH2 0x18D6 SWAP1 PUSH2 0x172 SWAP5 SWAP3 PUSH2 0x18D0 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH2 0x18B3 JUMP JUMPDEST PUSH2 0x18F0 PUSH2 0x18F4 SWAP3 SWAP4 PUSH2 0xEA0 SWAP3 PUSH2 0x18EA PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH2 0x1912 JUMP JUMPDEST SWAP3 SWAP1 JUMP JUMPDEST EQ SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1901 DUP3 MLOAD SWAP1 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0xB89 JUMPI PUSH1 0x20 DUP1 SWAP2 MUL ADD ADD SWAP1 JUMP JUMPDEST PUSH2 0x191C PUSH1 0x0 PUSH2 0xA0E JUMP JUMPDEST SWAP2 JUMPDEST PUSH2 0x1929 PUSH2 0x172 DUP4 MLOAD SWAP1 JUMP JUMPDEST DUP4 LT ISZERO PUSH2 0x195B JUMPI PUSH2 0x194F PUSH2 0x1955 SWAP2 PUSH2 0x1949 PUSH2 0x1944 DUP7 DUP7 PUSH2 0x18F8 JUMP JUMPDEST PUSH2 0x9E4 JUMP JUMPDEST SWAP1 PUSH2 0x1961 JUMP JUMPDEST SWAP3 PUSH2 0x10AC JUMP JUMPDEST SWAP2 PUSH2 0x191E JUMP JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x197C JUMPI SWAP1 PUSH2 0x172 SWAP2 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x172 SWAP2 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH3 0xBF9917 JUMPI BALANCE 0xD DELEGATECALL 0xE4 SSTORE ADD 0xCA SWAP5 0xF8 ORIGIN PUSH8 0x4FD79A66ACB8AF6A MUL SLT 0xE1 TSTORE EQ GAS CALLVALUE 0xF7 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"339:10607:12:-:0;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;339:10607:12;;;;;;-1:-1:-1;;;;;339:10607:12;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;-1:-1:-1;;339:10607:12;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::o;2581:156::-;2656:46;2581:156;;2633:10;2581:156;:::i;:::-;2656:46;;:::i;:::-;2713:16;;2728:1;2713:16;:::i;:::-;;;:::i;339:10607::-;;;;;;;;-1:-1:-1;;;;;339:10607:12;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;:::i;1225:187:0:-;1297:1;1289:10;;;:::i;:::-;1273:26;;;:::i;:::-;;;;:::i;:::-;;1269:95;;1392:12;;;;;:::i;1269:95::-;-1:-1:-1;;;1322:31:0;;;;;;;;;;:::i;:::-;;;;339:10607:12;;;;;;;;;;:::i;:::-;;-1:-1:-1;;;;;339:10607:12;;;;;;;;-1:-1:-1;;;;;339:10607:12;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;:::i;:::-;;;;:::i;2912:187:0:-;3052:40;;3004:6;;;:::i;:::-;3020:17;;;;:::i;:::-;3052:40;:::i;:::-;;;:::i;:::-;;;;339:10607:12;;;;3052:40:0;;;;2912:187::o"},"deployedBytecode":{"functionDebugData":{"abi_decode":{"entryPoint":348,"id":null,"parameterSlots":2,"returnSlots":0},"abi_decode_address":{"entryPoint":557,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_addresst_array_bytes32_dyn_calldata":{"entryPoint":1663,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_array_bytes32_dyn_calldata":{"entryPoint":1344,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_array_bytes32_dyn_calldatat_array_bytes32_dyn_calldatat_array_bytes32_dyn_calldatat_array_bytes32_dyn_calldata":{"entryPoint":1392,"id":null,"parameterSlots":2,"returnSlots":8},"abi_decode_available_length_array_bytes32_dyn":{"entryPoint":6241,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_bool_fromMemory":{"entryPoint":4321,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_bytes32":{"entryPoint":471,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_bytes32_fromMemory":{"entryPoint":2175,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_bytes32t_bytes32t_bytes32t_bytes32":{"entryPoint":775,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_t_bool_fromMemory":{"entryPoint":4308,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32":{"entryPoint":458,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32_fromMemory":{"entryPoint":2162,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_address":{"entryPoint":570,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_array_bytes32_dyn_storage":{"entryPoint":2021,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_bytes32":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_address":{"entryPoint":1060,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_address_to_address_nonPadded_inplace":{"entryPoint":5357,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_array_bytes32_dyn":{"entryPoint":680,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_bytes32_dyn_memory_ptr":{"entryPoint":594,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_bytes32_dyn_storage":{"entryPoint":1933,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_bool":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_bool_to_bool":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_bool_uint256":{"entryPoint":5637,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_bytes32":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_bytes32_bytes32_bytes32_bytes32":{"entryPoint":2195,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_bytes32_to_bytes32_nonPadded_inplace":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_bytes32_uint256":{"entryPoint":3049,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_packed_address":{"entryPoint":5374,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_packed_bytes32":{"entryPoint":4883,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_packed_bytes32_bytes32_bytes32":{"entryPoint":6143,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_stringliteral":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_75a0":{"entryPoint":3478,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_75a08d511f8296e78d325f4ea3c5048a36bd22550904d4e3937660cd4da45744":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_93f5":{"entryPoint":4761,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_93f5b300854c58f544ebc0d4e0c6674c12b68bf96ce71df3524c19fd2ee61f44":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_ad67":{"entryPoint":4181,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_ad675bd5284d0e4b6ac8e6b09a30c7f01661e52badac4d4e8acf154e437ad93e":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_eca3":{"entryPoint":5480,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_eca3698c5c9d8edcd43b56af6192e93e3352ca84ed0aa9d6ab9412e981da80ed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_struct_VoteProof":{"entryPoint":1288,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_struct_VoteProof_memory_ptr":{"entryPoint":1207,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_struct_ZKProof":{"entryPoint":1124,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_struct_ZKProof_memory_ptr":{"entryPoint":1608,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_address":{"entryPoint":1069,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_bytes32":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_stringliteral":{"entryPoint":5560,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_uint256_to_uint256":{"entryPoint":396,"id":null,"parameterSlots":2,"returnSlots":0},"allocate_and_zero_memory_struct_struct_VoteProof":{"entryPoint":3973,"id":null,"parameterSlots":0,"returnSlots":1},"allocate_and_zero_memory_struct_struct_ZKProof":{"entryPoint":3911,"id":null,"parameterSlots":0,"returnSlots":1},"allocate_memory":{"entryPoint":2256,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_memory_struct_struct_VoteProof_storage_ptr":{"entryPoint":2276,"id":null,"parameterSlots":0,"returnSlots":1},"allocate_memory_struct_struct_ZKProof":{"entryPoint":2296,"id":null,"parameterSlots":0,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_array_bytes32_dyn":{"entryPoint":6217,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_array_bytes32_dyn":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_array_bytes32_dyn_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_array_bytes32_dyn":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_array_bytes32_dyn_calldata":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"array_length_array_bytes32_dyn_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_array_bytes32_dyn":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_array_bytes32_dyn_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_push_from_bytes32_to_array_bytes32_dyn_storage_ptr":{"entryPoint":3003,"id":null,"parameterSlots":2,"returnSlots":0},"array_storeLengthForEncoding_array_bytes32_dyn":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"calldata_array_index_access_bytes32_dyn_calldata":{"entryPoint":4274,"id":null,"parameterSlots":3,"returnSlots":1},"cleanup_address":{"entryPoint":536,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_from_storage_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_from_storage_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_uint160":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"clear_struct_storage_struct_ZKProof":{"entryPoint":3601,"id":null,"parameterSlots":1,"returnSlots":0},"convert_address_to_address":{"entryPoint":1897,"id":null,"parameterSlots":1,"returnSlots":1},"convert_array_array_bytes32_dyn_calldata_to_array_bytes32_dyn":{"entryPoint":6323,"id":null,"parameterSlots":2,"returnSlots":1},"convert_array_array_bytes32_dyn_storage_to_array_bytes32_dyn":{"entryPoint":2125,"id":null,"parameterSlots":1,"returnSlots":1},"convert_bool_to_bool":{"entryPoint":2618,"id":null,"parameterSlots":1,"returnSlots":1},"convert_bytes32_to_bytes32":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_by_to_address":{"entryPoint":3815,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_by_to_bytes32":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_by_to_uint160":{"entryPoint":3802,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_by_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_struct_VoteProof_storage_to_struct_VoteProof":{"entryPoint":4119,"id":null,"parameterSlots":1,"returnSlots":1},"convert_struct_ZKProof_storage_to_struct_ZKProof":{"entryPoint":2443,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint160_to_address":{"entryPoint":1888,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint160_to_uint160":{"entryPoint":1868,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint256_to_uint256":{"entryPoint":2574,"id":null,"parameterSlots":1,"returnSlots":1},"copy_array_from_storage_to_memory_array_bytes32_dyn":{"entryPoint":2092,"id":null,"parameterSlots":1,"returnSlots":1},"copy_struct_to_storage_from_struct_VoteProof_to_struct_VoteProof":{"entryPoint":2797,"id":null,"parameterSlots":2,"returnSlots":0},"copy_struct_to_storage_from_struct_ZKProof_to_struct_ZKProof":{"entryPoint":2646,"id":null,"parameterSlots":2,"returnSlots":0},"external_fun_batchVerifyProofs":{"entryPoint":1540,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_createZKProof":{"entryPoint":1577,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_emergencyInvalidateProof":{"entryPoint":922,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getMerkleRoot":{"entryPoint":895,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getProofCount":{"entryPoint":946,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getVoteProof":{"entryPoint":1305,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getVoterProofs":{"entryPoint":697,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getZKProof":{"entryPoint":1624,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_isNullifierUsed":{"entryPoint":491,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_merkleRoot":{"entryPoint":748,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_owner":{"entryPoint":1085,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_proofCounter":{"entryPoint":985,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_renounceOwnership":{"entryPoint":1012,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_submitVoteProof":{"entryPoint":835,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_transferOwnership":{"entryPoint":1776,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_updateMerkleRoot":{"entryPoint":866,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_updateVerificationThreshold":{"entryPoint":1036,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_verificationThreshold":{"entryPoint":402,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_verifyVoterInclusion":{"entryPoint":1717,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_verifyZKProof":{"entryPoint":1745,"id":null,"parameterSlots":0,"returnSlots":0},"extract_from_storage_value_dynamict_bytes32":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"extract_from_storage_value_dynamict_uint256":{"entryPoint":359,"id":null,"parameterSlots":2,"returnSlots":1},"extract_from_storage_value_offset_address":{"entryPoint":3882,"id":null,"parameterSlots":1,"returnSlots":1},"extract_from_storage_value_offset_bool":{"entryPoint":1824,"id":null,"parameterSlots":1,"returnSlots":1},"extract_from_storage_value_offset_bytes32":{"entryPoint":1916,"id":null,"parameterSlots":1,"returnSlots":1},"extract_from_storage_value_offset_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":2053,"id":null,"parameterSlots":2,"returnSlots":0},"fun__transferOwnership":{"entryPoint":6056,"id":146,"parameterSlots":1,"returnSlots":0},"fun_batchVerifyProofs":{"entryPoint":4743,"id":6484,"parameterSlots":8,"returnSlots":1},"fun_batchVerifyProofs_inner":{"entryPoint":4383,"id":null,"parameterSlots":9,"returnSlots":1},"fun_checkOwner":{"entryPoint":5990,"id":84,"parameterSlots":0,"returnSlots":0},"fun_commutativeKeccak256":{"entryPoint":6497,"id":729,"parameterSlots":2,"returnSlots":1},"fun_createZKProof":{"entryPoint":5255,"id":6132,"parameterSlots":4,"returnSlots":1},"fun_createZKProofHash":{"entryPoint":6171,"id":6847,"parameterSlots":3,"returnSlots":1},"fun_createZKProof_inner":{"entryPoint":4894,"id":null,"parameterSlots":5,"returnSlots":1},"fun_efficientKeccak256":{"entryPoint":null,"id":741,"parameterSlots":2,"returnSlots":1},"fun_emergencyInvalidateProof":{"entryPoint":3767,"id":6511,"parameterSlots":1,"returnSlots":0},"fun_emergencyInvalidateProof_inner":{"entryPoint":3695,"id":null,"parameterSlots":1,"returnSlots":0},"fun_getMerkleRoot":{"entryPoint":3451,"id":6394,"parameterSlots":0,"returnSlots":1},"fun_getProofCount":{"entryPoint":3776,"id":6385,"parameterSlots":0,"returnSlots":1},"fun_getVoteProof":{"entryPoint":4128,"id":6349,"parameterSlots":1,"returnSlots":1},"fun_getVoterProofs":{"entryPoint":2134,"id":6363,"parameterSlots":1,"returnSlots":1},"fun_getZKProof":{"entryPoint":5325,"id":6335,"parameterSlots":1,"returnSlots":1},"fun_getZKProof_inner":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"fun_isNullifierUsed":{"entryPoint":1840,"id":6376,"parameterSlots":1,"returnSlots":1},"fun_msgSender":{"entryPoint":null,"id":159,"parameterSlots":0,"returnSlots":1},"fun_owner":{"entryPoint":3901,"id":67,"parameterSlots":0,"returnSlots":1},"fun_processProof":{"entryPoint":6418,"id":812,"parameterSlots":2,"returnSlots":1},"fun_renounceOwnership":{"entryPoint":3842,"id":98,"parameterSlots":0,"returnSlots":0},"fun_renounceOwnership_inner":{"entryPoint":3824,"id":null,"parameterSlots":0,"returnSlots":0},"fun_submitVoteProof":{"entryPoint":3068,"id":6277,"parameterSlots":4,"returnSlots":1},"fun_transferOwnership":{"entryPoint":5981,"id":126,"parameterSlots":1,"returnSlots":0},"fun_transferOwnership_inner":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"fun_updateMerkleRoot":{"entryPoint":3442,"id":6290,"parameterSlots":1,"returnSlots":0},"fun_updateMerkleRoot_inner":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"fun_updateVerificationThreshold":{"entryPoint":3873,"id":6407,"parameterSlots":1,"returnSlots":0},"fun_updateVerificationThreshold_inner":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"fun_verify":{"entryPoint":null,"id":771,"parameterSlots":3,"returnSlots":1},"fun_verifyMerkleProof":{"entryPoint":6334,"id":6868,"parameterSlots":4,"returnSlots":1},"fun_verifyVoterInclusion":{"entryPoint":5386,"id":6318,"parameterSlots":3,"returnSlots":1},"fun_verifyZKProof":{"entryPoint":5885,"id":6213,"parameterSlots":4,"returnSlots":1},"fun_verifyZKProof_inner":{"entryPoint":5658,"id":null,"parameterSlots":5,"returnSlots":1},"getter_fun_merkleRoot":{"entryPoint":736,"id":5965,"parameterSlots":0,"returnSlots":1},"getter_fun_proofCounter":{"entryPoint":973,"id":5963,"parameterSlots":0,"returnSlots":1},"getter_fun_verificationThreshold":{"entryPoint":384,"id":5967,"parameterSlots":0,"returnSlots":1},"increment_uint256":{"entryPoint":4363,"id":null,"parameterSlots":1,"returnSlots":1},"increment_wrapping_uint256":{"entryPoint":4268,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_address":{"entryPoint":5348,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_uint160":{"entryPoint":5342,"id":null,"parameterSlots":1,"returnSlots":1},"mapping_index_access_mapping_address_array_bytes32_dyn_storage_of_address":{"entryPoint":1906,"id":null,"parameterSlots":2,"returnSlots":1},"mapping_index_access_mapping_bytes32_bool_of_bytes32":{"entryPoint":1800,"id":null,"parameterSlots":2,"returnSlots":1},"memory_array_index_access_bytes32_dyn":{"entryPoint":6392,"id":null,"parameterSlots":2,"returnSlots":1},"modifier_onlyOwner":{"entryPoint":3786,"id":58,"parameterSlots":0,"returnSlots":0},"modifier_onlyOwner_104":{"entryPoint":5899,"id":58,"parameterSlots":1,"returnSlots":0},"modifier_onlyOwner_6283":{"entryPoint":3419,"id":58,"parameterSlots":1,"returnSlots":0},"modifier_onlyOwner_6400":{"entryPoint":3850,"id":58,"parameterSlots":1,"returnSlots":0},"modifier_onlyOwner_6423":{"entryPoint":4156,"id":58,"parameterSlots":9,"returnSlots":1},"modifier_onlyOwner_6490":{"entryPoint":3461,"id":58,"parameterSlots":1,"returnSlots":0},"modifier_onlyUnusedNullifier":{"entryPoint":4841,"id":6036,"parameterSlots":5,"returnSlots":1},"modifier_onlyValidProof":{"entryPoint":5448,"id":6022,"parameterSlots":5,"returnSlots":1},"modifier_onlyValidProof_6325":{"entryPoint":5269,"id":6022,"parameterSlots":2,"returnSlots":1},"panic_error_0x00":{"entryPoint":2452,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x11":{"entryPoint":4341,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":2896,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":2031,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_bytes32":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_calldatat_bytes32":{"entryPoint":4290,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_memoryt_address":{"entryPoint":2474,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_memoryt_bool":{"entryPoint":2603,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_memoryt_bytes32":{"entryPoint":2532,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_memoryt_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_offset_bytes32":{"entryPoint":1923,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_reference_type_struct_VoteProof":{"entryPoint":4025,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_reference_type_struct_ZKProof":{"entryPoint":2306,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_split_dynamic_bytes32":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"read_from_storage_split_dynamic_uint256":{"entryPoint":373,"id":null,"parameterSlots":2,"returnSlots":1},"read_from_storage_split_offset_address":{"entryPoint":3891,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_split_offset_bool":{"entryPoint":1830,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_split_offset_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"require_helper_stringliteral":{"entryPoint":5605,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_75a0":{"entryPoint":3524,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_93f5":{"entryPoint":4809,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_ad67":{"entryPoint":4236,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_eca3":{"entryPoint":5528,"id":null,"parameterSlots":1,"returnSlots":0},"revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb":{"entryPoint":343,"id":null,"parameterSlots":0,"returnSlots":0},"revert_forward":{"entryPoint":2244,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_224":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_96":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_0_unsigned":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_right_unsigned":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"storage_array_index_access_bytes32_dyn_ptr":{"entryPoint":2918,"id":null,"parameterSlots":2,"returnSlots":2},"storage_set_to_zero_bytes32":{"entryPoint":3560,"id":null,"parameterSlots":2,"returnSlots":0},"storage_set_to_zero_struct_ZKProof":{"entryPoint":3673,"id":null,"parameterSlots":2,"returnSlots":0},"storage_set_to_zero_uint256":{"entryPoint":3589,"id":null,"parameterSlots":2,"returnSlots":0},"store_literal_in_memory_1259e4a2d925e8286d10411ca8b89114652f03f6f23cc48047d37dbcda0c522a":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_75a08d511f8296e78d325f4ea3c5048a36bd22550904d4e3937660cd4da45744":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_93f5b300854c58f544ebc0d4e0c6674c12b68bf96ce71df3524c19fd2ee61f44":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_ad675bd5284d0e4b6ac8e6b09a30c7f01661e52badac4d4e8acf154e437ad93e":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_eca3698c5c9d8edcd43b56af6192e93e3352ca84ed0aa9d6ab9412e981da80ed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"update_byte_slice_20_shift":{"entryPoint":2484,"id":null,"parameterSlots":2,"returnSlots":1},"update_byte_slice_dynamic32":{"entryPoint":2958,"id":null,"parameterSlots":3,"returnSlots":1},"update_byte_slice_shift":{"entryPoint":2536,"id":null,"parameterSlots":2,"returnSlots":1},"update_byte_slice_shift_0":{"entryPoint":2609,"id":null,"parameterSlots":2,"returnSlots":1},"update_storage_value_bytes32_to_bytes32":{"entryPoint":2978,"id":null,"parameterSlots":3,"returnSlots":0},"update_storage_value_offset_address_to_address":{"entryPoint":2505,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offset_bool_to_bool":{"entryPoint":2623,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offset_bytes32_to_bytes32":{"entryPoint":2546,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offset_struct_VoteProof_to_struct_VoteProof":{"entryPoint":2886,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offset_struct_ZKProof_to_struct_ZKProof":{"entryPoint":2787,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offset_uint256_to_uint256":{"entryPoint":2587,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_uint256_to_uint256":{"entryPoint":3572,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_address":{"entryPoint":548,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_bool":{"entryPoint":4300,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_bytes32":{"entryPoint":449,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"write_to_memory_address":{"entryPoint":2286,"id":null,"parameterSlots":2,"returnSlots":0},"write_to_memory_bool":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"write_to_memory_bytes32":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"write_to_memory_struct_ZKProof":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"write_to_memory_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"zero_value_for_split_array_bytes32_dyn":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"zero_value_for_split_bool":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"zero_value_for_split_struct_VoteProof":{"entryPoint":4017,"id":null,"parameterSlots":0,"returnSlots":1},"zero_value_for_struct_ZKProof":{"entryPoint":3965,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080604052600436101561001257600080fd5b60003560e01c8063167feb091461015257806322dc7b4c1461014d5780632607788e146101485780632eb4a7ab14610143578063451b923c1461013e5780634783f0ef1461013957806349590657146101345780635089cec21461012f5780635be4ee1b1461012a5780636d9f437014610125578063715018a61461012057806389aa56a41461011b5780638da5cb5b14610116578063a067228e14610111578063c423f9101461010c578063c943394014610107578063d51b456b14610102578063e6ab8c54146100fd578063e81f927b146100f85763f2fde38b03610157576106f0565b6106d1565b6106b5565b610658565b610629565b610604565b610519565b61043d565b61040c565b6103f4565b6103d9565b6103b2565b61039a565b61037f565b610362565b610343565b6102ec565b6102b9565b6101eb565b610192565b600080fd5b600091031261015757565b610172916008021c81565b90565b906101729154610167565b61017260006007610175565b9052565b565b34610157576101a236600461015c565b6101bd6101ad610180565b6040519182918290815260200190565b0390f35b805b0361015757565b90503590610190826101c1565b9060208282031261015757610172916101ca565b34610157576101bd6102066102013660046101d7565b610730565b60405191829182901515815260200190565b6001600160a01b031690565b6101c381610218565b9050359061019082610224565b90602082820312610157576101729161022d565b0190565b9061027261026b610261845190565b8084529260200190565b9260200190565b9060005b8181106102835750505090565b9091926102a06102996001928651815260200190565b9460200190565b929101610276565b602080825261017292910190610252565b34610157576101bd6102d46102cf36600461023a565b610856565b604051918291826102a8565b61017260006006610175565b34610157576102fc36600461015c565b6101bd6101ad6102e0565b6080818303126101575761031b82826101ca565b9261017261032c84602085016101ca565b93606061033c82604087016101ca565b94016101ca565b34610157576101bd6101ad610359366004610307565b92919091610bfc565b346101575761037a6103753660046101d7565b610d72565b604051005b346101575761038f36600461015c565b6101bd6101ad610d7b565b346101575761037a6103ad3660046101d7565b610eb7565b34610157576103c236600461015c565b6101bd6101ad610ec0565b61017260006005610175565b34610157576103e936600461015c565b6101bd6101ad6103cd565b346101575761040436600461015c565b61037a610f02565b346101575761037a61041f3660046101d7565b610f21565b61018c90610218565b6020810192916101909190610424565b346101575761044d36600461015c565b6101bd610458610f3d565b6040519182918261042d565b80518252610190919060a090819061048160208201516020860152565b61049060408201516040860152565b61049f60608201516060860152565b6104ae60808201516080860152565b01511515910152565b90608080610190936104d160008201516000860190610424565b6104e060208201516020860152565b6104ef60408201516040860152565b6104fe60608201516060860152565b0151910190610464565b6101408101929161019091906104b7565b34610157576101bd61053461052f3660046101d7565b611020565b60405191829182610508565b909182601f830112156101575781359167ffffffffffffffff831161015757602001926020830284011161015757565b909160808284031261015757813567ffffffffffffffff81116101575783610599918401610540565b929093602082013567ffffffffffffffff811161015757816105bc918401610540565b929093604082013567ffffffffffffffff811161015757836105df918401610540565b929093606082013567ffffffffffffffff8111610157576106009201610540565b9091565b34610157576101bd6101ad61061a366004610570565b96959095949194939293611287565b34610157576101bd6101ad61063f366004610307565b92919091611487565b60c0810192916101909190610464565b34610157576101bd61067361066e3660046101d7565b6114cd565b60405191829182610648565b91909160408184031261015757610696838261022d565b92602082013567ffffffffffffffff8111610157576106009201610540565b34610157576101bd6102066106cb36600461067f565b9161150a565b34610157576101bd6102066106e7366004610307565b929190916116fd565b346101575761037a61070336600461023a565b61175d565b9061071290610172565b600052602052604060002090565b60ff1690565b6101729054610720565b6107476101729161073f600090565b506002610708565b610726565b61017290610218906001600160a01b031682565b6101729061074c565b61017290610760565b9061071290610769565b6101729081565b610172905461077c565b906107a861079c610261845490565b92600052602060002090565b9060005b8181106107b95750505090565b9091926107dd6107d66001926107ce87610783565b815260200190565b9460010190565b9291016107ac565b906101729161078d565b634e487b7160e01b600052604160045260246000fd5b90601f01601f1916810190811067ffffffffffffffff82111761082757604052565b6107ef565b906101906108469261083d60405190565b938480926107e5565b0383610805565b6101729061082c565b61086d61017291610865606090565b506003610772565b61084d565b90505190610190826101c1565b906020828203126101575761017291610872565b6108c0610190946108b96060949897956108b2608086019a6000870152565b6020850152565b6040830152565b0152565b6040513d6000823e3d90fd5b906101906108dd60405190565b9283610805565b61017260a06108d0565b9061018c90610218565b61017260c06108d0565b9061019061098260056109136108f8565b9461092461092082610783565b8752565b61093a61093360018301610783565b6020880152565b61095061094960028301610783565b6040880152565b61096661095f60038301610783565b6060880152565b61097c61097560048301610783565b6080880152565b01610726565b151560a0840152565b61017290610902565b634e487b7160e01b600052600060045260246000fd5b6101729051610218565b906001600160a01b03905b9181191691161790565b906109d96101726109e092610769565b82546109b4565b9055565b5190565b90600019906109bf565b90610a07610a026109e092610172565b610172565b82546109e8565b6101726101726101729290565b90610a076101726109e092610a0e565b51151590565b9060ff906109bf565b151590565b90610a4f6101726109e092610a3a565b8254610a31565b6005610adc60a061019094610a76610a70600083016109e4565b866109f2565b610a8e610a85602083016109e4565b600187016109f2565b610aa6610a9d604083016109e4565b600287016109f2565b610abe610ab5606083016109e4565b600387016109f2565b610ad6610acd608083016109e4565b60048701610a1b565b01610a2b565b9101610a3f565b9061019091610a56565b6004610b3f608061019094610b0d610b07600083016109aa565b866109c9565b610b1c610a85602083016109e4565b610b2b610a9d604083016109e4565b610b3a610ab5606083016109e4565b015190565b9101610ae3565b9061019091610aed565b634e487b7160e01b600052603260045260246000fd5b8054821015610b8957610b80600191600052602060002090565b91020190600090565b610b50565b9160001960089290920291821b911b6109bf565b9190610bb3610a026109e093610172565b908354610b8e565b90815491680100000000000000008310156108275782610be391600161019095018155610b66565b90610ba2565b9081526040810192916101909160200152565b916020610c3f600095610c0d600090565b50610c1730610769565b90610c2160405190565b97889384928391906303250ce560e61b8352888a8c60048601610893565b03925af1938415610d5657600094610d17575b5090610ca1610c9a610cb193610c95610c6c886001610708565b91610c8e610c786108e4565b96610c8333896108ee565b6109498a60208a0152565b6060860152565b61098b565b6080830152565b610cac846004610708565b610b46565b610cc882610cc3610172336003610772565b610bbb565b610cda610cd433610769565b91610172565b907ff2a38cb36bcfb3c71a301f45f653f09b07e5579c023684ab0cfdf0c1b0baf557610d0560405190565b80610d11428783610be9565b0390a390565b610cb192919450610c9a610d45610ca19260203d602011610d4f575b610d3d8183610805565b81019061087f565b9592935050610c52565b503d610d33565b6108c4565b61019090610d67611766565b6101909060066109f2565b61019090610d5b565b6101726006610783565b61019090610d91611766565b610e6f565b602080825260149082015273141c9bdbd988191bd95cc81b9bdd08195e1a5cdd60621b604082015260600190565b15610dcb57565b60405162461bcd60e51b815280610de460048201610d96565b0390fd5b61019091600091610ba2565b9190610bb36101726109e093610a0e565b61019091600091610df4565b600090600590610e218382610de8565b610e2e8360018301610de8565b610e3b8360028301610de8565b610e488360038301610de8565b610e558360048301610e05565b0155565b90600003610e6a5761019090610e11565b610994565b6000610eb261019092610eab610e916003610e8b846001610708565b01610783565b610ea4610ea061017287610a0e565b9190565b1415610dc4565b6001610708565b610e59565b61019090610d85565b6101726005610783565b610ed2611766565b610190610ef0565b6102186101726101729290565b61017290610eda565b610190610efd6000610ee7565b6117a8565b610190610eca565b61019090610f16611766565b610190906007610a1b565b61019090610f0a565b61017290610218565b6101729054610f2a565b6101726000610f33565b610f4f6108f8565b906000825260208080808080870160008152016000815201600081520160008152016000905250565b905250565b610172610f47565b610f8d6108e4565b90600082526020808080808601600081520160008152016000815201610f78610f7d565b610172610f85565b906101906110106004610fca6108e4565b94610fdd610fd782610f33565b876108ee565b610fec61093360018301610783565b610ffb61094960028301610783565b61100a61095f60038301610783565b01610902565b6080840152565b61017290610fb9565b6110376101729161102f610fb1565b506004610708565b611017565b906101729897969594939291611050611766565b61111f565b60208082526018908201527f4172726179206c656e67746873206d757374206d617463680000000000000000604082015260600190565b1561109357565b60405162461bcd60e51b815280610de460048201611055565b60010190565b9190811015610b89576020020190565b35610172816101c1565b8015156101c3565b90505190610190826110cc565b9060208282031261015757610172916110d4565b634e487b7160e01b600052601160045260246000fd5b600019811461111a5760010190565b6110f5565b979395929691949097966111308690565b98878a14888161127d575b5080611274575b61114b9061108c565b60009a6111586000610a0e565b8b5b811015611264578080808f818c8f8f908e913061117690610769565b97611181918d6110b2565b61118a906110c2565b97611195918d6110b2565b61119e906110c2565b946111a9918d6110b2565b6111b2906110c2565b916111bd918d6110b2565b6111c6906110c2565b926111d060405190565b9586948593849363e81f927b60e01b85526111ee9360048601610893565b03915a94602095f1908115610d56578e91611236575b5061121d575b61121661115a916110ac565b9050611158565b9961121661122d61115a9261110b565b9b91505061120a565b611257915060203d811161125d575b61124f8183610805565b8101906110e1565b38611204565b503d611245565b509a505050505050505050905090565b50848614611142565b869150143861113b565b6101729796959493929190600061103c565b602080825260169082015275139d5b1b1a599a595c88185b1c9958591e481d5cd95960521b604082015260600190565b156112d057565b60405162461bcd60e51b815280610de460048201611299565b906101729493929161130e611309611305610747866002610708565b1590565b6112c9565b61131e565b61024e816020939052565b61143393836114509493611332935061181b565b936113fe602061134160405190565b61135e818381016113528882611313565b90810382520382610805565b611370611369825190565b9160200190565b2061138b61137c6108f8565b91611385868452565b83830152565b611396846040830152565b6113a1886060830152565b6113ac426080830152565b600060a08201526113c7816113c28a6001610708565b610ae3565b6113dc60016113d7876002610708565b610a3f565b6113f86113f16113ec6005610783565b61110b565b6005610a1b565b016109e4565b7f506b43825c1c1ab28dc92516caa81eca0f380417c6e4317931619fbe39f11f1461144861142b88610172565b968793610172565b9361143d60405190565b918291429083610be9565b0390a3610172565b7fafbae02739cd46b44c3f5e55fad3b8aaacf8acef6bb518bd7a737a2e02157d0461147a60405190565b4281528060208101610d11565b6101729392919060006112e9565b90610172916114bd6114ad6003610e8b856001610708565b610ea4610ea06101726000610a0e565b61017291610c9591506001610708565b610172906114d9610f7d565b611495565b60601b90565b610172906114de565b6114f961018c91610218565b6114e4565b61024e816014936114ed565b610172929061152b61151b60405190565b80926113526020830191826114fe565b611536611369825190565b20916115426006610783565b926118be565b90610172949392916115636114ad6003610e8b856001610708565b61161a565b602080825260169082015275141c9bdbd988185b1c9958591e481d995c9a599a595960521b604082015260600190565b1561159f57565b60405162461bcd60e51b815280610de460048201611568565b602080825260139082015272139d5b1b1a599a595c881b9bdd08199bdd5b99606a1b604082015260600190565b156115ec57565b60405162461bcd60e51b815280610de4600482016115b8565b90151581526040810192916101909160200152565b936116659192945060019360056116346101728688610708565b019561164a61164561130589610726565b611598565b61166061165b610747846002610708565b6115e5565b61181b565b81149283156116bb576116a07fbd1fe7a887205d9ede817440b4fad4e3d32dfac34d415a05fe22a6d6a68cf20792610a02856116b594610a3f565b926116aa60405190565b918291429083611605565b0390a290565b506116c69150610172565b7fbd1fe7a887205d9ede817440b4fad4e3d32dfac34d415a05fe22a6d6a68cf2076116f060405190565b806116b542600083611605565b610172939291906000611548565b61019090611717611766565b600061172281610ee7565b61172b81610218565b61173484610218565b14611744575050610190906117a8565b631e4fbdf760e01b82528190610de4906004830161042d565b6101909061170b565b61176e610f3d565b339061178261177c83610218565b91610218565b0361178a5750565b63118cdaa760e01b6000908152906117a390600461042d565b036000fd5b6117ce6117c86117b86000610f33565b6117c38460006109c9565b610769565b91610769565b907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e06117f960405190565b600090a3565b602093926118158583611815829561024e979052565b01918252565b61183a919061135261182c60405190565b9485936020850193846117ff565b611845611369825190565b2090565b67ffffffffffffffff81116108275760208091020190565b9092919261187661187182611849565b6108d0565b938185526020808601920283019281841161015757915b83831061189a5750505050565b602080916118a884866101ca565b81520192019161188d565b610172913691611861565b916118d69061017294926118d0600090565b506118b3565b6118f06118f49293610ea0926118ea600090565b50611912565b9290565b1490565b90611901825190565b811015610b89576020809102010190565b61191c6000610a0e565b915b611929610172835190565b83101561195b5761194f6119559161194961194486866118f8565b6109e4565b90611961565b926110ac565b9161191e565b91505090565b8181101561197c579061017291600052602052604060002090565b6101729160005260205260406000209056fea264697066735822122062bf991757310df4e45501ca94f832674fd79a66acb8af6a0212e15d145a34f764736f6c634300081c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x167FEB09 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x22DC7B4C EQ PUSH2 0x14D JUMPI DUP1 PUSH4 0x2607788E EQ PUSH2 0x148 JUMPI DUP1 PUSH4 0x2EB4A7AB EQ PUSH2 0x143 JUMPI DUP1 PUSH4 0x451B923C EQ PUSH2 0x13E JUMPI DUP1 PUSH4 0x4783F0EF EQ PUSH2 0x139 JUMPI DUP1 PUSH4 0x49590657 EQ PUSH2 0x134 JUMPI DUP1 PUSH4 0x5089CEC2 EQ PUSH2 0x12F JUMPI DUP1 PUSH4 0x5BE4EE1B EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0x6D9F4370 EQ PUSH2 0x125 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x120 JUMPI DUP1 PUSH4 0x89AA56A4 EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x116 JUMPI DUP1 PUSH4 0xA067228E EQ PUSH2 0x111 JUMPI DUP1 PUSH4 0xC423F910 EQ PUSH2 0x10C JUMPI DUP1 PUSH4 0xC9433940 EQ PUSH2 0x107 JUMPI DUP1 PUSH4 0xD51B456B EQ PUSH2 0x102 JUMPI DUP1 PUSH4 0xE6AB8C54 EQ PUSH2 0xFD JUMPI DUP1 PUSH4 0xE81F927B EQ PUSH2 0xF8 JUMPI PUSH4 0xF2FDE38B SUB PUSH2 0x157 JUMPI PUSH2 0x6F0 JUMP JUMPDEST PUSH2 0x6D1 JUMP JUMPDEST PUSH2 0x6B5 JUMP JUMPDEST PUSH2 0x658 JUMP JUMPDEST PUSH2 0x629 JUMP JUMPDEST PUSH2 0x604 JUMP JUMPDEST PUSH2 0x519 JUMP JUMPDEST PUSH2 0x43D JUMP JUMPDEST PUSH2 0x40C JUMP JUMPDEST PUSH2 0x3F4 JUMP JUMPDEST PUSH2 0x3D9 JUMP JUMPDEST PUSH2 0x3B2 JUMP JUMPDEST PUSH2 0x39A JUMP JUMPDEST PUSH2 0x37F JUMP JUMPDEST PUSH2 0x362 JUMP JUMPDEST PUSH2 0x343 JUMP JUMPDEST PUSH2 0x2EC JUMP JUMPDEST PUSH2 0x2B9 JUMP JUMPDEST PUSH2 0x1EB JUMP JUMPDEST PUSH2 0x192 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 SUB SLT PUSH2 0x157 JUMPI JUMP JUMPDEST PUSH2 0x172 SWAP2 PUSH1 0x8 MUL SHR DUP2 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x172 SWAP2 SLOAD PUSH2 0x167 JUMP JUMPDEST PUSH2 0x172 PUSH1 0x0 PUSH1 0x7 PUSH2 0x175 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST JUMP JUMPDEST CALLVALUE PUSH2 0x157 JUMPI PUSH2 0x1A2 CALLDATASIZE PUSH1 0x4 PUSH2 0x15C JUMP JUMPDEST PUSH2 0x1BD PUSH2 0x1AD PUSH2 0x180 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP1 JUMPDEST SUB PUSH2 0x157 JUMPI JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x190 DUP3 PUSH2 0x1C1 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x157 JUMPI PUSH2 0x172 SWAP2 PUSH2 0x1CA JUMP JUMPDEST CALLVALUE PUSH2 0x157 JUMPI PUSH2 0x1BD PUSH2 0x206 PUSH2 0x201 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D7 JUMP JUMPDEST PUSH2 0x730 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x1C3 DUP2 PUSH2 0x218 JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x190 DUP3 PUSH2 0x224 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x157 JUMPI PUSH2 0x172 SWAP2 PUSH2 0x22D JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x272 PUSH2 0x26B PUSH2 0x261 DUP5 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP5 MSTORE SWAP3 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x283 JUMPI POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 PUSH2 0x2A0 PUSH2 0x299 PUSH1 0x1 SWAP3 DUP7 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP5 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 ADD PUSH2 0x276 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH2 0x172 SWAP3 SWAP2 ADD SWAP1 PUSH2 0x252 JUMP JUMPDEST CALLVALUE PUSH2 0x157 JUMPI PUSH2 0x1BD PUSH2 0x2D4 PUSH2 0x2CF CALLDATASIZE PUSH1 0x4 PUSH2 0x23A JUMP JUMPDEST PUSH2 0x856 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x2A8 JUMP JUMPDEST PUSH2 0x172 PUSH1 0x0 PUSH1 0x6 PUSH2 0x175 JUMP JUMPDEST CALLVALUE PUSH2 0x157 JUMPI PUSH2 0x2FC CALLDATASIZE PUSH1 0x4 PUSH2 0x15C JUMP JUMPDEST PUSH2 0x1BD PUSH2 0x1AD PUSH2 0x2E0 JUMP JUMPDEST PUSH1 0x80 DUP2 DUP4 SUB SLT PUSH2 0x157 JUMPI PUSH2 0x31B DUP3 DUP3 PUSH2 0x1CA JUMP JUMPDEST SWAP3 PUSH2 0x172 PUSH2 0x32C DUP5 PUSH1 0x20 DUP6 ADD PUSH2 0x1CA JUMP JUMPDEST SWAP4 PUSH1 0x60 PUSH2 0x33C DUP3 PUSH1 0x40 DUP8 ADD PUSH2 0x1CA JUMP JUMPDEST SWAP5 ADD PUSH2 0x1CA JUMP JUMPDEST CALLVALUE PUSH2 0x157 JUMPI PUSH2 0x1BD PUSH2 0x1AD PUSH2 0x359 CALLDATASIZE PUSH1 0x4 PUSH2 0x307 JUMP JUMPDEST SWAP3 SWAP2 SWAP1 SWAP2 PUSH2 0xBFC JUMP JUMPDEST CALLVALUE PUSH2 0x157 JUMPI PUSH2 0x37A PUSH2 0x375 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D7 JUMP JUMPDEST PUSH2 0xD72 JUMP JUMPDEST PUSH1 0x40 MLOAD STOP JUMPDEST CALLVALUE PUSH2 0x157 JUMPI PUSH2 0x38F CALLDATASIZE PUSH1 0x4 PUSH2 0x15C JUMP JUMPDEST PUSH2 0x1BD PUSH2 0x1AD PUSH2 0xD7B JUMP JUMPDEST CALLVALUE PUSH2 0x157 JUMPI PUSH2 0x37A PUSH2 0x3AD CALLDATASIZE PUSH1 0x4 PUSH2 0x1D7 JUMP JUMPDEST PUSH2 0xEB7 JUMP JUMPDEST CALLVALUE PUSH2 0x157 JUMPI PUSH2 0x3C2 CALLDATASIZE PUSH1 0x4 PUSH2 0x15C JUMP JUMPDEST PUSH2 0x1BD PUSH2 0x1AD PUSH2 0xEC0 JUMP JUMPDEST PUSH2 0x172 PUSH1 0x0 PUSH1 0x5 PUSH2 0x175 JUMP JUMPDEST CALLVALUE PUSH2 0x157 JUMPI PUSH2 0x3E9 CALLDATASIZE PUSH1 0x4 PUSH2 0x15C JUMP JUMPDEST PUSH2 0x1BD PUSH2 0x1AD PUSH2 0x3CD JUMP JUMPDEST CALLVALUE PUSH2 0x157 JUMPI PUSH2 0x404 CALLDATASIZE PUSH1 0x4 PUSH2 0x15C JUMP JUMPDEST PUSH2 0x37A PUSH2 0xF02 JUMP JUMPDEST CALLVALUE PUSH2 0x157 JUMPI PUSH2 0x37A PUSH2 0x41F CALLDATASIZE PUSH1 0x4 PUSH2 0x1D7 JUMP JUMPDEST PUSH2 0xF21 JUMP JUMPDEST PUSH2 0x18C SWAP1 PUSH2 0x218 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD SWAP3 SWAP2 PUSH2 0x190 SWAP2 SWAP1 PUSH2 0x424 JUMP JUMPDEST CALLVALUE PUSH2 0x157 JUMPI PUSH2 0x44D CALLDATASIZE PUSH1 0x4 PUSH2 0x15C JUMP JUMPDEST PUSH2 0x1BD PUSH2 0x458 PUSH2 0xF3D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x42D JUMP JUMPDEST DUP1 MLOAD DUP3 MSTORE PUSH2 0x190 SWAP2 SWAP1 PUSH1 0xA0 SWAP1 DUP2 SWAP1 PUSH2 0x481 PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x20 DUP7 ADD MSTORE JUMP JUMPDEST PUSH2 0x490 PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x40 DUP7 ADD MSTORE JUMP JUMPDEST PUSH2 0x49F PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x60 DUP7 ADD MSTORE JUMP JUMPDEST PUSH2 0x4AE PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0x80 DUP7 ADD MSTORE JUMP JUMPDEST ADD MLOAD ISZERO ISZERO SWAP2 ADD MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x80 DUP1 PUSH2 0x190 SWAP4 PUSH2 0x4D1 PUSH1 0x0 DUP3 ADD MLOAD PUSH1 0x0 DUP7 ADD SWAP1 PUSH2 0x424 JUMP JUMPDEST PUSH2 0x4E0 PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x20 DUP7 ADD MSTORE JUMP JUMPDEST PUSH2 0x4EF PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x40 DUP7 ADD MSTORE JUMP JUMPDEST PUSH2 0x4FE PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x60 DUP7 ADD MSTORE JUMP JUMPDEST ADD MLOAD SWAP2 ADD SWAP1 PUSH2 0x464 JUMP JUMPDEST PUSH2 0x140 DUP2 ADD SWAP3 SWAP2 PUSH2 0x190 SWAP2 SWAP1 PUSH2 0x4B7 JUMP JUMPDEST CALLVALUE PUSH2 0x157 JUMPI PUSH2 0x1BD PUSH2 0x534 PUSH2 0x52F CALLDATASIZE PUSH1 0x4 PUSH2 0x1D7 JUMP JUMPDEST PUSH2 0x1020 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x508 JUMP JUMPDEST SWAP1 SWAP2 DUP3 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x157 JUMPI DUP2 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x157 JUMPI PUSH1 0x20 ADD SWAP3 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH2 0x157 JUMPI JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x80 DUP3 DUP5 SUB SLT PUSH2 0x157 JUMPI DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x157 JUMPI DUP4 PUSH2 0x599 SWAP2 DUP5 ADD PUSH2 0x540 JUMP JUMPDEST SWAP3 SWAP1 SWAP4 PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x157 JUMPI DUP2 PUSH2 0x5BC SWAP2 DUP5 ADD PUSH2 0x540 JUMP JUMPDEST SWAP3 SWAP1 SWAP4 PUSH1 0x40 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x157 JUMPI DUP4 PUSH2 0x5DF SWAP2 DUP5 ADD PUSH2 0x540 JUMP JUMPDEST SWAP3 SWAP1 SWAP4 PUSH1 0x60 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x157 JUMPI PUSH2 0x600 SWAP3 ADD PUSH2 0x540 JUMP JUMPDEST SWAP1 SWAP2 JUMP JUMPDEST CALLVALUE PUSH2 0x157 JUMPI PUSH2 0x1BD PUSH2 0x1AD PUSH2 0x61A CALLDATASIZE PUSH1 0x4 PUSH2 0x570 JUMP JUMPDEST SWAP7 SWAP6 SWAP1 SWAP6 SWAP5 SWAP2 SWAP5 SWAP4 SWAP3 SWAP4 PUSH2 0x1287 JUMP JUMPDEST CALLVALUE PUSH2 0x157 JUMPI PUSH2 0x1BD PUSH2 0x1AD PUSH2 0x63F CALLDATASIZE PUSH1 0x4 PUSH2 0x307 JUMP JUMPDEST SWAP3 SWAP2 SWAP1 SWAP2 PUSH2 0x1487 JUMP JUMPDEST PUSH1 0xC0 DUP2 ADD SWAP3 SWAP2 PUSH2 0x190 SWAP2 SWAP1 PUSH2 0x464 JUMP JUMPDEST CALLVALUE PUSH2 0x157 JUMPI PUSH2 0x1BD PUSH2 0x673 PUSH2 0x66E CALLDATASIZE PUSH1 0x4 PUSH2 0x1D7 JUMP JUMPDEST PUSH2 0x14CD JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x648 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH1 0x40 DUP2 DUP5 SUB SLT PUSH2 0x157 JUMPI PUSH2 0x696 DUP4 DUP3 PUSH2 0x22D JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x157 JUMPI PUSH2 0x600 SWAP3 ADD PUSH2 0x540 JUMP JUMPDEST CALLVALUE PUSH2 0x157 JUMPI PUSH2 0x1BD PUSH2 0x206 PUSH2 0x6CB CALLDATASIZE PUSH1 0x4 PUSH2 0x67F JUMP JUMPDEST SWAP2 PUSH2 0x150A JUMP JUMPDEST CALLVALUE PUSH2 0x157 JUMPI PUSH2 0x1BD PUSH2 0x206 PUSH2 0x6E7 CALLDATASIZE PUSH1 0x4 PUSH2 0x307 JUMP JUMPDEST SWAP3 SWAP2 SWAP1 SWAP2 PUSH2 0x16FD JUMP JUMPDEST CALLVALUE PUSH2 0x157 JUMPI PUSH2 0x37A PUSH2 0x703 CALLDATASIZE PUSH1 0x4 PUSH2 0x23A JUMP JUMPDEST PUSH2 0x175D JUMP JUMPDEST SWAP1 PUSH2 0x712 SWAP1 PUSH2 0x172 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x172 SWAP1 SLOAD PUSH2 0x720 JUMP JUMPDEST PUSH2 0x747 PUSH2 0x172 SWAP2 PUSH2 0x73F PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x2 PUSH2 0x708 JUMP JUMPDEST PUSH2 0x726 JUMP JUMPDEST PUSH2 0x172 SWAP1 PUSH2 0x218 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 JUMP JUMPDEST PUSH2 0x172 SWAP1 PUSH2 0x74C JUMP JUMPDEST PUSH2 0x172 SWAP1 PUSH2 0x760 JUMP JUMPDEST SWAP1 PUSH2 0x712 SWAP1 PUSH2 0x769 JUMP JUMPDEST PUSH2 0x172 SWAP1 DUP2 JUMP JUMPDEST PUSH2 0x172 SWAP1 SLOAD PUSH2 0x77C JUMP JUMPDEST SWAP1 PUSH2 0x7A8 PUSH2 0x79C PUSH2 0x261 DUP5 SLOAD SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x7B9 JUMPI POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 PUSH2 0x7DD PUSH2 0x7D6 PUSH1 0x1 SWAP3 PUSH2 0x7CE DUP8 PUSH2 0x783 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP5 PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 ADD PUSH2 0x7AC JUMP JUMPDEST SWAP1 PUSH2 0x172 SWAP2 PUSH2 0x78D JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x827 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x7EF JUMP JUMPDEST SWAP1 PUSH2 0x190 PUSH2 0x846 SWAP3 PUSH2 0x83D PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP4 DUP5 DUP1 SWAP3 PUSH2 0x7E5 JUMP JUMPDEST SUB DUP4 PUSH2 0x805 JUMP JUMPDEST PUSH2 0x172 SWAP1 PUSH2 0x82C JUMP JUMPDEST PUSH2 0x86D PUSH2 0x172 SWAP2 PUSH2 0x865 PUSH1 0x60 SWAP1 JUMP JUMPDEST POP PUSH1 0x3 PUSH2 0x772 JUMP JUMPDEST PUSH2 0x84D JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0x190 DUP3 PUSH2 0x1C1 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x157 JUMPI PUSH2 0x172 SWAP2 PUSH2 0x872 JUMP JUMPDEST PUSH2 0x8C0 PUSH2 0x190 SWAP5 PUSH2 0x8B9 PUSH1 0x60 SWAP5 SWAP9 SWAP8 SWAP6 PUSH2 0x8B2 PUSH1 0x80 DUP7 ADD SWAP11 PUSH1 0x0 DUP8 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE JUMP JUMPDEST ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x190 PUSH2 0x8DD PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 PUSH2 0x805 JUMP JUMPDEST PUSH2 0x172 PUSH1 0xA0 PUSH2 0x8D0 JUMP JUMPDEST SWAP1 PUSH2 0x18C SWAP1 PUSH2 0x218 JUMP JUMPDEST PUSH2 0x172 PUSH1 0xC0 PUSH2 0x8D0 JUMP JUMPDEST SWAP1 PUSH2 0x190 PUSH2 0x982 PUSH1 0x5 PUSH2 0x913 PUSH2 0x8F8 JUMP JUMPDEST SWAP5 PUSH2 0x924 PUSH2 0x920 DUP3 PUSH2 0x783 JUMP JUMPDEST DUP8 MSTORE JUMP JUMPDEST PUSH2 0x93A PUSH2 0x933 PUSH1 0x1 DUP4 ADD PUSH2 0x783 JUMP JUMPDEST PUSH1 0x20 DUP9 ADD MSTORE JUMP JUMPDEST PUSH2 0x950 PUSH2 0x949 PUSH1 0x2 DUP4 ADD PUSH2 0x783 JUMP JUMPDEST PUSH1 0x40 DUP9 ADD MSTORE JUMP JUMPDEST PUSH2 0x966 PUSH2 0x95F PUSH1 0x3 DUP4 ADD PUSH2 0x783 JUMP JUMPDEST PUSH1 0x60 DUP9 ADD MSTORE JUMP JUMPDEST PUSH2 0x97C PUSH2 0x975 PUSH1 0x4 DUP4 ADD PUSH2 0x783 JUMP JUMPDEST PUSH1 0x80 DUP9 ADD MSTORE JUMP JUMPDEST ADD PUSH2 0x726 JUMP JUMPDEST ISZERO ISZERO PUSH1 0xA0 DUP5 ADD MSTORE JUMP JUMPDEST PUSH2 0x172 SWAP1 PUSH2 0x902 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x172 SWAP1 MLOAD PUSH2 0x218 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x9D9 PUSH2 0x172 PUSH2 0x9E0 SWAP3 PUSH2 0x769 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x9B4 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST MLOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 NOT SWAP1 PUSH2 0x9BF JUMP JUMPDEST SWAP1 PUSH2 0xA07 PUSH2 0xA02 PUSH2 0x9E0 SWAP3 PUSH2 0x172 JUMP JUMPDEST PUSH2 0x172 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x9E8 JUMP JUMPDEST PUSH2 0x172 PUSH2 0x172 PUSH2 0x172 SWAP3 SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0xA07 PUSH2 0x172 PUSH2 0x9E0 SWAP3 PUSH2 0xA0E JUMP JUMPDEST MLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0xFF SWAP1 PUSH2 0x9BF JUMP JUMPDEST ISZERO ISZERO SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0xA4F PUSH2 0x172 PUSH2 0x9E0 SWAP3 PUSH2 0xA3A JUMP JUMPDEST DUP3 SLOAD PUSH2 0xA31 JUMP JUMPDEST PUSH1 0x5 PUSH2 0xADC PUSH1 0xA0 PUSH2 0x190 SWAP5 PUSH2 0xA76 PUSH2 0xA70 PUSH1 0x0 DUP4 ADD PUSH2 0x9E4 JUMP JUMPDEST DUP7 PUSH2 0x9F2 JUMP JUMPDEST PUSH2 0xA8E PUSH2 0xA85 PUSH1 0x20 DUP4 ADD PUSH2 0x9E4 JUMP JUMPDEST PUSH1 0x1 DUP8 ADD PUSH2 0x9F2 JUMP JUMPDEST PUSH2 0xAA6 PUSH2 0xA9D PUSH1 0x40 DUP4 ADD PUSH2 0x9E4 JUMP JUMPDEST PUSH1 0x2 DUP8 ADD PUSH2 0x9F2 JUMP JUMPDEST PUSH2 0xABE PUSH2 0xAB5 PUSH1 0x60 DUP4 ADD PUSH2 0x9E4 JUMP JUMPDEST PUSH1 0x3 DUP8 ADD PUSH2 0x9F2 JUMP JUMPDEST PUSH2 0xAD6 PUSH2 0xACD PUSH1 0x80 DUP4 ADD PUSH2 0x9E4 JUMP JUMPDEST PUSH1 0x4 DUP8 ADD PUSH2 0xA1B JUMP JUMPDEST ADD PUSH2 0xA2B JUMP JUMPDEST SWAP2 ADD PUSH2 0xA3F JUMP JUMPDEST SWAP1 PUSH2 0x190 SWAP2 PUSH2 0xA56 JUMP JUMPDEST PUSH1 0x4 PUSH2 0xB3F PUSH1 0x80 PUSH2 0x190 SWAP5 PUSH2 0xB0D PUSH2 0xB07 PUSH1 0x0 DUP4 ADD PUSH2 0x9AA JUMP JUMPDEST DUP7 PUSH2 0x9C9 JUMP JUMPDEST PUSH2 0xB1C PUSH2 0xA85 PUSH1 0x20 DUP4 ADD PUSH2 0x9E4 JUMP JUMPDEST PUSH2 0xB2B PUSH2 0xA9D PUSH1 0x40 DUP4 ADD PUSH2 0x9E4 JUMP JUMPDEST PUSH2 0xB3A PUSH2 0xAB5 PUSH1 0x60 DUP4 ADD PUSH2 0x9E4 JUMP JUMPDEST ADD MLOAD SWAP1 JUMP JUMPDEST SWAP2 ADD PUSH2 0xAE3 JUMP JUMPDEST SWAP1 PUSH2 0x190 SWAP2 PUSH2 0xAED JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0xB89 JUMPI PUSH2 0xB80 PUSH1 0x1 SWAP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP2 MUL ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0xB50 JUMP JUMPDEST SWAP2 PUSH1 0x0 NOT PUSH1 0x8 SWAP3 SWAP1 SWAP3 MUL SWAP2 DUP3 SHL SWAP2 SHL PUSH2 0x9BF JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0xBB3 PUSH2 0xA02 PUSH2 0x9E0 SWAP4 PUSH2 0x172 JUMP JUMPDEST SWAP1 DUP4 SLOAD PUSH2 0xB8E JUMP JUMPDEST SWAP1 DUP2 SLOAD SWAP2 PUSH9 0x10000000000000000 DUP4 LT ISZERO PUSH2 0x827 JUMPI DUP3 PUSH2 0xBE3 SWAP2 PUSH1 0x1 PUSH2 0x190 SWAP6 ADD DUP2 SSTORE PUSH2 0xB66 JUMP JUMPDEST SWAP1 PUSH2 0xBA2 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP2 ADD SWAP3 SWAP2 PUSH2 0x190 SWAP2 PUSH1 0x20 ADD MSTORE JUMP JUMPDEST SWAP2 PUSH1 0x20 PUSH2 0xC3F PUSH1 0x0 SWAP6 PUSH2 0xC0D PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH2 0xC17 ADDRESS PUSH2 0x769 JUMP JUMPDEST SWAP1 PUSH2 0xC21 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP8 DUP9 SWAP4 DUP5 SWAP3 DUP4 SWAP2 SWAP1 PUSH4 0x3250CE5 PUSH1 0xE6 SHL DUP4 MSTORE DUP9 DUP11 DUP13 PUSH1 0x4 DUP7 ADD PUSH2 0x893 JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP4 DUP5 ISZERO PUSH2 0xD56 JUMPI PUSH1 0x0 SWAP5 PUSH2 0xD17 JUMPI JUMPDEST POP SWAP1 PUSH2 0xCA1 PUSH2 0xC9A PUSH2 0xCB1 SWAP4 PUSH2 0xC95 PUSH2 0xC6C DUP9 PUSH1 0x1 PUSH2 0x708 JUMP JUMPDEST SWAP2 PUSH2 0xC8E PUSH2 0xC78 PUSH2 0x8E4 JUMP JUMPDEST SWAP7 PUSH2 0xC83 CALLER DUP10 PUSH2 0x8EE JUMP JUMPDEST PUSH2 0x949 DUP11 PUSH1 0x20 DUP11 ADD MSTORE JUMP JUMPDEST PUSH1 0x60 DUP7 ADD MSTORE JUMP JUMPDEST PUSH2 0x98B JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE JUMP JUMPDEST PUSH2 0xCAC DUP5 PUSH1 0x4 PUSH2 0x708 JUMP JUMPDEST PUSH2 0xB46 JUMP JUMPDEST PUSH2 0xCC8 DUP3 PUSH2 0xCC3 PUSH2 0x172 CALLER PUSH1 0x3 PUSH2 0x772 JUMP JUMPDEST PUSH2 0xBBB JUMP JUMPDEST PUSH2 0xCDA PUSH2 0xCD4 CALLER PUSH2 0x769 JUMP JUMPDEST SWAP2 PUSH2 0x172 JUMP JUMPDEST SWAP1 PUSH32 0xF2A38CB36BCFB3C71A301F45F653F09B07E5579C023684AB0CFDF0C1B0BAF557 PUSH2 0xD05 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST DUP1 PUSH2 0xD11 TIMESTAMP DUP8 DUP4 PUSH2 0xBE9 JUMP JUMPDEST SUB SWAP1 LOG3 SWAP1 JUMP JUMPDEST PUSH2 0xCB1 SWAP3 SWAP2 SWAP5 POP PUSH2 0xC9A PUSH2 0xD45 PUSH2 0xCA1 SWAP3 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xD4F JUMPI JUMPDEST PUSH2 0xD3D DUP2 DUP4 PUSH2 0x805 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x87F JUMP JUMPDEST SWAP6 SWAP3 SWAP4 POP POP PUSH2 0xC52 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0xD33 JUMP JUMPDEST PUSH2 0x8C4 JUMP JUMPDEST PUSH2 0x190 SWAP1 PUSH2 0xD67 PUSH2 0x1766 JUMP JUMPDEST PUSH2 0x190 SWAP1 PUSH1 0x6 PUSH2 0x9F2 JUMP JUMPDEST PUSH2 0x190 SWAP1 PUSH2 0xD5B JUMP JUMPDEST PUSH2 0x172 PUSH1 0x6 PUSH2 0x783 JUMP JUMPDEST PUSH2 0x190 SWAP1 PUSH2 0xD91 PUSH2 0x1766 JUMP JUMPDEST PUSH2 0xE6F JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x14 SWAP1 DUP3 ADD MSTORE PUSH20 0x141C9BDBD988191BD95CC81B9BDD08195E1A5CDD PUSH1 0x62 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0xDCB JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 PUSH2 0xDE4 PUSH1 0x4 DUP3 ADD PUSH2 0xD96 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x190 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0xBA2 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0xBB3 PUSH2 0x172 PUSH2 0x9E0 SWAP4 PUSH2 0xA0E JUMP JUMPDEST PUSH2 0x190 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0xDF4 JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0x5 SWAP1 PUSH2 0xE21 DUP4 DUP3 PUSH2 0xDE8 JUMP JUMPDEST PUSH2 0xE2E DUP4 PUSH1 0x1 DUP4 ADD PUSH2 0xDE8 JUMP JUMPDEST PUSH2 0xE3B DUP4 PUSH1 0x2 DUP4 ADD PUSH2 0xDE8 JUMP JUMPDEST PUSH2 0xE48 DUP4 PUSH1 0x3 DUP4 ADD PUSH2 0xDE8 JUMP JUMPDEST PUSH2 0xE55 DUP4 PUSH1 0x4 DUP4 ADD PUSH2 0xE05 JUMP JUMPDEST ADD SSTORE JUMP JUMPDEST SWAP1 PUSH1 0x0 SUB PUSH2 0xE6A JUMPI PUSH2 0x190 SWAP1 PUSH2 0xE11 JUMP JUMPDEST PUSH2 0x994 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEB2 PUSH2 0x190 SWAP3 PUSH2 0xEAB PUSH2 0xE91 PUSH1 0x3 PUSH2 0xE8B DUP5 PUSH1 0x1 PUSH2 0x708 JUMP JUMPDEST ADD PUSH2 0x783 JUMP JUMPDEST PUSH2 0xEA4 PUSH2 0xEA0 PUSH2 0x172 DUP8 PUSH2 0xA0E JUMP JUMPDEST SWAP2 SWAP1 JUMP JUMPDEST EQ ISZERO PUSH2 0xDC4 JUMP JUMPDEST PUSH1 0x1 PUSH2 0x708 JUMP JUMPDEST PUSH2 0xE59 JUMP JUMPDEST PUSH2 0x190 SWAP1 PUSH2 0xD85 JUMP JUMPDEST PUSH2 0x172 PUSH1 0x5 PUSH2 0x783 JUMP JUMPDEST PUSH2 0xED2 PUSH2 0x1766 JUMP JUMPDEST PUSH2 0x190 PUSH2 0xEF0 JUMP JUMPDEST PUSH2 0x218 PUSH2 0x172 PUSH2 0x172 SWAP3 SWAP1 JUMP JUMPDEST PUSH2 0x172 SWAP1 PUSH2 0xEDA JUMP JUMPDEST PUSH2 0x190 PUSH2 0xEFD PUSH1 0x0 PUSH2 0xEE7 JUMP JUMPDEST PUSH2 0x17A8 JUMP JUMPDEST PUSH2 0x190 PUSH2 0xECA JUMP JUMPDEST PUSH2 0x190 SWAP1 PUSH2 0xF16 PUSH2 0x1766 JUMP JUMPDEST PUSH2 0x190 SWAP1 PUSH1 0x7 PUSH2 0xA1B JUMP JUMPDEST PUSH2 0x190 SWAP1 PUSH2 0xF0A JUMP JUMPDEST PUSH2 0x172 SWAP1 PUSH2 0x218 JUMP JUMPDEST PUSH2 0x172 SWAP1 SLOAD PUSH2 0xF2A JUMP JUMPDEST PUSH2 0x172 PUSH1 0x0 PUSH2 0xF33 JUMP JUMPDEST PUSH2 0xF4F PUSH2 0x8F8 JUMP JUMPDEST SWAP1 PUSH1 0x0 DUP3 MSTORE PUSH1 0x20 DUP1 DUP1 DUP1 DUP1 DUP1 DUP8 ADD PUSH1 0x0 DUP2 MSTORE ADD PUSH1 0x0 DUP2 MSTORE ADD PUSH1 0x0 DUP2 MSTORE ADD PUSH1 0x0 DUP2 MSTORE ADD PUSH1 0x0 SWAP1 MSTORE POP JUMP JUMPDEST SWAP1 MSTORE POP JUMP JUMPDEST PUSH2 0x172 PUSH2 0xF47 JUMP JUMPDEST PUSH2 0xF8D PUSH2 0x8E4 JUMP JUMPDEST SWAP1 PUSH1 0x0 DUP3 MSTORE PUSH1 0x20 DUP1 DUP1 DUP1 DUP1 DUP7 ADD PUSH1 0x0 DUP2 MSTORE ADD PUSH1 0x0 DUP2 MSTORE ADD PUSH1 0x0 DUP2 MSTORE ADD PUSH2 0xF78 PUSH2 0xF7D JUMP JUMPDEST PUSH2 0x172 PUSH2 0xF85 JUMP JUMPDEST SWAP1 PUSH2 0x190 PUSH2 0x1010 PUSH1 0x4 PUSH2 0xFCA PUSH2 0x8E4 JUMP JUMPDEST SWAP5 PUSH2 0xFDD PUSH2 0xFD7 DUP3 PUSH2 0xF33 JUMP JUMPDEST DUP8 PUSH2 0x8EE JUMP JUMPDEST PUSH2 0xFEC PUSH2 0x933 PUSH1 0x1 DUP4 ADD PUSH2 0x783 JUMP JUMPDEST PUSH2 0xFFB PUSH2 0x949 PUSH1 0x2 DUP4 ADD PUSH2 0x783 JUMP JUMPDEST PUSH2 0x100A PUSH2 0x95F PUSH1 0x3 DUP4 ADD PUSH2 0x783 JUMP JUMPDEST ADD PUSH2 0x902 JUMP JUMPDEST PUSH1 0x80 DUP5 ADD MSTORE JUMP JUMPDEST PUSH2 0x172 SWAP1 PUSH2 0xFB9 JUMP JUMPDEST PUSH2 0x1037 PUSH2 0x172 SWAP2 PUSH2 0x102F PUSH2 0xFB1 JUMP JUMPDEST POP PUSH1 0x4 PUSH2 0x708 JUMP JUMPDEST PUSH2 0x1017 JUMP JUMPDEST SWAP1 PUSH2 0x172 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0x1050 PUSH2 0x1766 JUMP JUMPDEST PUSH2 0x111F JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x18 SWAP1 DUP3 ADD MSTORE PUSH32 0x4172726179206C656E67746873206D757374206D617463680000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x1093 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 PUSH2 0xDE4 PUSH1 0x4 DUP3 ADD PUSH2 0x1055 JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP2 LT ISZERO PUSH2 0xB89 JUMPI PUSH1 0x20 MUL ADD SWAP1 JUMP JUMPDEST CALLDATALOAD PUSH2 0x172 DUP2 PUSH2 0x1C1 JUMP JUMPDEST DUP1 ISZERO ISZERO PUSH2 0x1C3 JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0x190 DUP3 PUSH2 0x10CC JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x157 JUMPI PUSH2 0x172 SWAP2 PUSH2 0x10D4 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x111A JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH2 0x10F5 JUMP JUMPDEST SWAP8 SWAP4 SWAP6 SWAP3 SWAP7 SWAP2 SWAP5 SWAP1 SWAP8 SWAP7 PUSH2 0x1130 DUP7 SWAP1 JUMP JUMPDEST SWAP9 DUP8 DUP11 EQ DUP9 DUP2 PUSH2 0x127D JUMPI JUMPDEST POP DUP1 PUSH2 0x1274 JUMPI JUMPDEST PUSH2 0x114B SWAP1 PUSH2 0x108C JUMP JUMPDEST PUSH1 0x0 SWAP11 PUSH2 0x1158 PUSH1 0x0 PUSH2 0xA0E JUMP JUMPDEST DUP12 JUMPDEST DUP2 LT ISZERO PUSH2 0x1264 JUMPI DUP1 DUP1 DUP1 DUP16 DUP2 DUP13 DUP16 DUP16 SWAP1 DUP15 SWAP2 ADDRESS PUSH2 0x1176 SWAP1 PUSH2 0x769 JUMP JUMPDEST SWAP8 PUSH2 0x1181 SWAP2 DUP14 PUSH2 0x10B2 JUMP JUMPDEST PUSH2 0x118A SWAP1 PUSH2 0x10C2 JUMP JUMPDEST SWAP8 PUSH2 0x1195 SWAP2 DUP14 PUSH2 0x10B2 JUMP JUMPDEST PUSH2 0x119E SWAP1 PUSH2 0x10C2 JUMP JUMPDEST SWAP5 PUSH2 0x11A9 SWAP2 DUP14 PUSH2 0x10B2 JUMP JUMPDEST PUSH2 0x11B2 SWAP1 PUSH2 0x10C2 JUMP JUMPDEST SWAP2 PUSH2 0x11BD SWAP2 DUP14 PUSH2 0x10B2 JUMP JUMPDEST PUSH2 0x11C6 SWAP1 PUSH2 0x10C2 JUMP JUMPDEST SWAP3 PUSH2 0x11D0 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP6 DUP7 SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH4 0xE81F927B PUSH1 0xE0 SHL DUP6 MSTORE PUSH2 0x11EE SWAP4 PUSH1 0x4 DUP7 ADD PUSH2 0x893 JUMP JUMPDEST SUB SWAP2 GAS SWAP5 PUSH1 0x20 SWAP6 CALL SWAP1 DUP2 ISZERO PUSH2 0xD56 JUMPI DUP15 SWAP2 PUSH2 0x1236 JUMPI JUMPDEST POP PUSH2 0x121D JUMPI JUMPDEST PUSH2 0x1216 PUSH2 0x115A SWAP2 PUSH2 0x10AC JUMP JUMPDEST SWAP1 POP PUSH2 0x1158 JUMP JUMPDEST SWAP10 PUSH2 0x1216 PUSH2 0x122D PUSH2 0x115A SWAP3 PUSH2 0x110B JUMP JUMPDEST SWAP12 SWAP2 POP POP PUSH2 0x120A JUMP JUMPDEST PUSH2 0x1257 SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x125D JUMPI JUMPDEST PUSH2 0x124F DUP2 DUP4 PUSH2 0x805 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x10E1 JUMP JUMPDEST CODESIZE PUSH2 0x1204 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1245 JUMP JUMPDEST POP SWAP11 POP POP POP POP POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST POP DUP5 DUP7 EQ PUSH2 0x1142 JUMP JUMPDEST DUP7 SWAP2 POP EQ CODESIZE PUSH2 0x113B JUMP JUMPDEST PUSH2 0x172 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH1 0x0 PUSH2 0x103C JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x16 SWAP1 DUP3 ADD MSTORE PUSH22 0x139D5B1B1A599A595C88185B1C9958591E481D5CD959 PUSH1 0x52 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x12D0 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 PUSH2 0xDE4 PUSH1 0x4 DUP3 ADD PUSH2 0x1299 JUMP JUMPDEST SWAP1 PUSH2 0x172 SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0x130E PUSH2 0x1309 PUSH2 0x1305 PUSH2 0x747 DUP7 PUSH1 0x2 PUSH2 0x708 JUMP JUMPDEST ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x12C9 JUMP JUMPDEST PUSH2 0x131E JUMP JUMPDEST PUSH2 0x24E DUP2 PUSH1 0x20 SWAP4 SWAP1 MSTORE JUMP JUMPDEST PUSH2 0x1433 SWAP4 DUP4 PUSH2 0x1450 SWAP5 SWAP4 PUSH2 0x1332 SWAP4 POP PUSH2 0x181B JUMP JUMPDEST SWAP4 PUSH2 0x13FE PUSH1 0x20 PUSH2 0x1341 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x135E DUP2 DUP4 DUP2 ADD PUSH2 0x1352 DUP9 DUP3 PUSH2 0x1313 JUMP JUMPDEST SWAP1 DUP2 SUB DUP3 MSTORE SUB DUP3 PUSH2 0x805 JUMP JUMPDEST PUSH2 0x1370 PUSH2 0x1369 DUP3 MLOAD SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST KECCAK256 PUSH2 0x138B PUSH2 0x137C PUSH2 0x8F8 JUMP JUMPDEST SWAP2 PUSH2 0x1385 DUP7 DUP5 MSTORE JUMP JUMPDEST DUP4 DUP4 ADD MSTORE JUMP JUMPDEST PUSH2 0x1396 DUP5 PUSH1 0x40 DUP4 ADD MSTORE JUMP JUMPDEST PUSH2 0x13A1 DUP9 PUSH1 0x60 DUP4 ADD MSTORE JUMP JUMPDEST PUSH2 0x13AC TIMESTAMP PUSH1 0x80 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD MSTORE PUSH2 0x13C7 DUP2 PUSH2 0x13C2 DUP11 PUSH1 0x1 PUSH2 0x708 JUMP JUMPDEST PUSH2 0xAE3 JUMP JUMPDEST PUSH2 0x13DC PUSH1 0x1 PUSH2 0x13D7 DUP8 PUSH1 0x2 PUSH2 0x708 JUMP JUMPDEST PUSH2 0xA3F JUMP JUMPDEST PUSH2 0x13F8 PUSH2 0x13F1 PUSH2 0x13EC PUSH1 0x5 PUSH2 0x783 JUMP JUMPDEST PUSH2 0x110B JUMP JUMPDEST PUSH1 0x5 PUSH2 0xA1B JUMP JUMPDEST ADD PUSH2 0x9E4 JUMP JUMPDEST PUSH32 0x506B43825C1C1AB28DC92516CAA81ECA0F380417C6E4317931619FBE39F11F14 PUSH2 0x1448 PUSH2 0x142B DUP9 PUSH2 0x172 JUMP JUMPDEST SWAP7 DUP8 SWAP4 PUSH2 0x172 JUMP JUMPDEST SWAP4 PUSH2 0x143D PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP2 DUP3 SWAP2 TIMESTAMP SWAP1 DUP4 PUSH2 0xBE9 JUMP JUMPDEST SUB SWAP1 LOG3 PUSH2 0x172 JUMP JUMPDEST PUSH32 0xAFBAE02739CD46B44C3F5E55FAD3B8AAACF8ACEF6BB518BD7A737A2E02157D04 PUSH2 0x147A PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST TIMESTAMP DUP2 MSTORE DUP1 PUSH1 0x20 DUP2 ADD PUSH2 0xD11 JUMP JUMPDEST PUSH2 0x172 SWAP4 SWAP3 SWAP2 SWAP1 PUSH1 0x0 PUSH2 0x12E9 JUMP JUMPDEST SWAP1 PUSH2 0x172 SWAP2 PUSH2 0x14BD PUSH2 0x14AD PUSH1 0x3 PUSH2 0xE8B DUP6 PUSH1 0x1 PUSH2 0x708 JUMP JUMPDEST PUSH2 0xEA4 PUSH2 0xEA0 PUSH2 0x172 PUSH1 0x0 PUSH2 0xA0E JUMP JUMPDEST PUSH2 0x172 SWAP2 PUSH2 0xC95 SWAP2 POP PUSH1 0x1 PUSH2 0x708 JUMP JUMPDEST PUSH2 0x172 SWAP1 PUSH2 0x14D9 PUSH2 0xF7D JUMP JUMPDEST PUSH2 0x1495 JUMP JUMPDEST PUSH1 0x60 SHL SWAP1 JUMP JUMPDEST PUSH2 0x172 SWAP1 PUSH2 0x14DE JUMP JUMPDEST PUSH2 0x14F9 PUSH2 0x18C SWAP2 PUSH2 0x218 JUMP JUMPDEST PUSH2 0x14E4 JUMP JUMPDEST PUSH2 0x24E DUP2 PUSH1 0x14 SWAP4 PUSH2 0x14ED JUMP JUMPDEST PUSH2 0x172 SWAP3 SWAP1 PUSH2 0x152B PUSH2 0x151B PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST DUP1 SWAP3 PUSH2 0x1352 PUSH1 0x20 DUP4 ADD SWAP2 DUP3 PUSH2 0x14FE JUMP JUMPDEST PUSH2 0x1536 PUSH2 0x1369 DUP3 MLOAD SWAP1 JUMP JUMPDEST KECCAK256 SWAP2 PUSH2 0x1542 PUSH1 0x6 PUSH2 0x783 JUMP JUMPDEST SWAP3 PUSH2 0x18BE JUMP JUMPDEST SWAP1 PUSH2 0x172 SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0x1563 PUSH2 0x14AD PUSH1 0x3 PUSH2 0xE8B DUP6 PUSH1 0x1 PUSH2 0x708 JUMP JUMPDEST PUSH2 0x161A JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x16 SWAP1 DUP3 ADD MSTORE PUSH22 0x141C9BDBD988185B1C9958591E481D995C9A599A5959 PUSH1 0x52 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x159F JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 PUSH2 0xDE4 PUSH1 0x4 DUP3 ADD PUSH2 0x1568 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x13 SWAP1 DUP3 ADD MSTORE PUSH19 0x139D5B1B1A599A595C881B9BDD08199BDD5B99 PUSH1 0x6A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x15EC JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 PUSH2 0xDE4 PUSH1 0x4 DUP3 ADD PUSH2 0x15B8 JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x40 DUP2 ADD SWAP3 SWAP2 PUSH2 0x190 SWAP2 PUSH1 0x20 ADD MSTORE JUMP JUMPDEST SWAP4 PUSH2 0x1665 SWAP2 SWAP3 SWAP5 POP PUSH1 0x1 SWAP4 PUSH1 0x5 PUSH2 0x1634 PUSH2 0x172 DUP7 DUP9 PUSH2 0x708 JUMP JUMPDEST ADD SWAP6 PUSH2 0x164A PUSH2 0x1645 PUSH2 0x1305 DUP10 PUSH2 0x726 JUMP JUMPDEST PUSH2 0x1598 JUMP JUMPDEST PUSH2 0x1660 PUSH2 0x165B PUSH2 0x747 DUP5 PUSH1 0x2 PUSH2 0x708 JUMP JUMPDEST PUSH2 0x15E5 JUMP JUMPDEST PUSH2 0x181B JUMP JUMPDEST DUP2 EQ SWAP3 DUP4 ISZERO PUSH2 0x16BB JUMPI PUSH2 0x16A0 PUSH32 0xBD1FE7A887205D9EDE817440B4FAD4E3D32DFAC34D415A05FE22A6D6A68CF207 SWAP3 PUSH2 0xA02 DUP6 PUSH2 0x16B5 SWAP5 PUSH2 0xA3F JUMP JUMPDEST SWAP3 PUSH2 0x16AA PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP2 DUP3 SWAP2 TIMESTAMP SWAP1 DUP4 PUSH2 0x1605 JUMP JUMPDEST SUB SWAP1 LOG2 SWAP1 JUMP JUMPDEST POP PUSH2 0x16C6 SWAP2 POP PUSH2 0x172 JUMP JUMPDEST PUSH32 0xBD1FE7A887205D9EDE817440B4FAD4E3D32DFAC34D415A05FE22A6D6A68CF207 PUSH2 0x16F0 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST DUP1 PUSH2 0x16B5 TIMESTAMP PUSH1 0x0 DUP4 PUSH2 0x1605 JUMP JUMPDEST PUSH2 0x172 SWAP4 SWAP3 SWAP2 SWAP1 PUSH1 0x0 PUSH2 0x1548 JUMP JUMPDEST PUSH2 0x190 SWAP1 PUSH2 0x1717 PUSH2 0x1766 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1722 DUP2 PUSH2 0xEE7 JUMP JUMPDEST PUSH2 0x172B DUP2 PUSH2 0x218 JUMP JUMPDEST PUSH2 0x1734 DUP5 PUSH2 0x218 JUMP JUMPDEST EQ PUSH2 0x1744 JUMPI POP POP PUSH2 0x190 SWAP1 PUSH2 0x17A8 JUMP JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP3 MSTORE DUP2 SWAP1 PUSH2 0xDE4 SWAP1 PUSH1 0x4 DUP4 ADD PUSH2 0x42D JUMP JUMPDEST PUSH2 0x190 SWAP1 PUSH2 0x170B JUMP JUMPDEST PUSH2 0x176E PUSH2 0xF3D JUMP JUMPDEST CALLER SWAP1 PUSH2 0x1782 PUSH2 0x177C DUP4 PUSH2 0x218 JUMP JUMPDEST SWAP2 PUSH2 0x218 JUMP JUMPDEST SUB PUSH2 0x178A JUMPI POP JUMP JUMPDEST PUSH4 0x118CDAA7 PUSH1 0xE0 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP1 PUSH2 0x17A3 SWAP1 PUSH1 0x4 PUSH2 0x42D JUMP JUMPDEST SUB PUSH1 0x0 REVERT JUMPDEST PUSH2 0x17CE PUSH2 0x17C8 PUSH2 0x17B8 PUSH1 0x0 PUSH2 0xF33 JUMP JUMPDEST PUSH2 0x17C3 DUP5 PUSH1 0x0 PUSH2 0x9C9 JUMP JUMPDEST PUSH2 0x769 JUMP JUMPDEST SWAP2 PUSH2 0x769 JUMP JUMPDEST SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH2 0x17F9 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 LOG3 JUMP JUMPDEST PUSH1 0x20 SWAP4 SWAP3 PUSH2 0x1815 DUP6 DUP4 PUSH2 0x1815 DUP3 SWAP6 PUSH2 0x24E SWAP8 SWAP1 MSTORE JUMP JUMPDEST ADD SWAP2 DUP3 MSTORE JUMP JUMPDEST PUSH2 0x183A SWAP2 SWAP1 PUSH2 0x1352 PUSH2 0x182C PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP5 DUP6 SWAP4 PUSH1 0x20 DUP6 ADD SWAP4 DUP5 PUSH2 0x17FF JUMP JUMPDEST PUSH2 0x1845 PUSH2 0x1369 DUP3 MLOAD SWAP1 JUMP JUMPDEST KECCAK256 SWAP1 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x827 JUMPI PUSH1 0x20 DUP1 SWAP2 MUL ADD SWAP1 JUMP JUMPDEST SWAP1 SWAP3 SWAP2 SWAP3 PUSH2 0x1876 PUSH2 0x1871 DUP3 PUSH2 0x1849 JUMP JUMPDEST PUSH2 0x8D0 JUMP JUMPDEST SWAP4 DUP2 DUP6 MSTORE PUSH1 0x20 DUP1 DUP7 ADD SWAP3 MUL DUP4 ADD SWAP3 DUP2 DUP5 GT PUSH2 0x157 JUMPI SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x189A JUMPI POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 SWAP2 PUSH2 0x18A8 DUP5 DUP7 PUSH2 0x1CA JUMP JUMPDEST DUP2 MSTORE ADD SWAP3 ADD SWAP2 PUSH2 0x188D JUMP JUMPDEST PUSH2 0x172 SWAP2 CALLDATASIZE SWAP2 PUSH2 0x1861 JUMP JUMPDEST SWAP2 PUSH2 0x18D6 SWAP1 PUSH2 0x172 SWAP5 SWAP3 PUSH2 0x18D0 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH2 0x18B3 JUMP JUMPDEST PUSH2 0x18F0 PUSH2 0x18F4 SWAP3 SWAP4 PUSH2 0xEA0 SWAP3 PUSH2 0x18EA PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH2 0x1912 JUMP JUMPDEST SWAP3 SWAP1 JUMP JUMPDEST EQ SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1901 DUP3 MLOAD SWAP1 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0xB89 JUMPI PUSH1 0x20 DUP1 SWAP2 MUL ADD ADD SWAP1 JUMP JUMPDEST PUSH2 0x191C PUSH1 0x0 PUSH2 0xA0E JUMP JUMPDEST SWAP2 JUMPDEST PUSH2 0x1929 PUSH2 0x172 DUP4 MLOAD SWAP1 JUMP JUMPDEST DUP4 LT ISZERO PUSH2 0x195B JUMPI PUSH2 0x194F PUSH2 0x1955 SWAP2 PUSH2 0x1949 PUSH2 0x1944 DUP7 DUP7 PUSH2 0x18F8 JUMP JUMPDEST PUSH2 0x9E4 JUMP JUMPDEST SWAP1 PUSH2 0x1961 JUMP JUMPDEST SWAP3 PUSH2 0x10AC JUMP JUMPDEST SWAP2 PUSH2 0x191E JUMP JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x197C JUMPI SWAP1 PUSH2 0x172 SWAP2 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x172 SWAP2 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH3 0xBF9917 JUMPI BALANCE 0xD DELEGATECALL 0xE4 SSTORE ADD 0xCA SWAP5 0xF8 ORIGIN PUSH8 0x4FD79A66ACB8AF6A MUL SLT 0xE1 TSTORE EQ GAS CALLVALUE 0xF7 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"339:10607:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;:::i;1548:36::-;;;;;:::i;339:10607::-;;;:::o;:::-;:::o;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;339:10607:12;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;1516:25::-;;;;;:::i;339:10607::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;339:10607:12;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;:::i;1482:27::-;;;;;:::i;339:10607::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;:::i;:::-;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;;;;;;;:::i;8691:120::-;8782:21;;8691:120;8758:4;339:10607;;;8758:4;8782:21;:10;:21;:::i;:::-;;:::i;339:10607::-;;;;;-1:-1:-1;;;;;339:10607:12;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;339:10607:12;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;8356:160::-;8490:18;8483:25;8356:160;8448:16;339:10607;;;8448:16;8490:18;:11;:18;:::i;:::-;8483:25;:::i;339:10607::-;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;-1:-1:-1;;;;;339:10607:12;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;;-1:-1:-1;;339:10607:12;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;:::i;:::-;;;:::i;:::-;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;-1:-1:-1;;339:10607:12;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;5907:858;;6144:63;;;5907:858;6070:17;339:10607;;;6070:17;6144:4;:18;:4;:18;:::i;:::-;:63;;339:10607;;;;6144:63;;;;;;;;;-1:-1:-1;;;6144:63:12;;;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;6144:63:12;;;5907:858;6132:75;;6297:192;;6543:33;6132:75;6297:192;6460:17;;:6;:17;:::i;:::-;6297:192;;;;:::i;:::-;6329:10;6297:192;6329:10;;6297:192;:::i;:::-;;;;;;339:10607;;6297:192;;;;339:10607;;6297:192;;:::i;:::-;;;;339:10607;;6297:192;6543:21;;:10;:21;:::i;:::-;:33;:::i;:::-;6587:39;6329:10;6587:28;:23;6329:10;6587:11;:23;:::i;:28::-;:39;:::i;:::-;6652:68;;6329:10;6652:68;:::i;:::-;;;:::i;:::-;;;;339:10607;;;;6652:68;6704:15;6652:68;6704:15;6652:68;;;:::i;:::-;;;;5907:858;:::o;6144:63::-;6543:33;6144:63;;;;6297:192;6144:63;6297:192;6144:63;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;1500:62:0:-;1554:1;1500:62;;;:::i;:::-;7007:20:12;6934:101;7007:20;;:::i;6934:101::-;;;;:::i;9119:93::-;9194:10;;;:::i;1500:62:0:-;1554:1;1500:62;;;:::i;:::-;1554:1;:::i;339:10607:12:-;;;;;;;;;;-1:-1:-1;;;339:10607:12;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;339:10607:12;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;:::i;:::-;;:::i;10743:200::-;10873:1;10918:17;10911:24;10743:200;10826:74;10834:27;;:17;;:6;:17;:::i;:::-;:27;;:::i;:::-;:41;;10865:10;;;:::i;10834:41::-;;339:10607;;10834:41;;;10826:74;:::i;:::-;10834:6;10918:17;:::i;:::-;10911:24;:::i;10743:200::-;;;;:::i;8924:95::-;8999:12;;;:::i;1500:62:0:-;;;:::i;:::-;1554:1;;:::i;339:10607:12:-;;;;;;;;;;;:::i;2293:101:0:-;2376:10;;2384:1;2376:10;:::i;:::-;;:::i;2293:101::-;;;:::i;1500:62::-;1554:1;1500:62;;;:::i;:::-;9461:36:12;9372:133;9461:36;;:::i;9372:133::-;;;;:::i;339:10607::-;;;;;;;;;;:::i;1638:85:0:-;1710:6;;;:::i;339:10607:12:-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;339:10607:12:o;:::-;;;-1:-1:-1;339:10607:12:o;:::-;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;:::i;8047:165::-;8183:21;8176:28;8047:165;8141:16;;:::i;:::-;8183:21;:10;:21;:::i;:::-;8176:28;:::i;1500:62:0:-;;1554:1;1500:62;;;;;;;;;;:::i;:::-;1554:1;:::i;339:10607:12:-;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;339:10607:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::o;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;339:10607:12;;;;;;;:::o;:::-;;:::i;9817:741::-;;;;;;;;;;10090:18;;;339:10607;;10090:18;10112:17;10090:39;;;10112:17;10090:39;:94;;9817:741;10090:146;;;;9817:741;10068:220;;;:::i;:::-;10326:1;10314:13;;10326:1;10314:13;:::i;:::-;10329:22;;;;;;;10377:4;;;;;;;;;;;;:18;;;:::i;:::-;10396:14;;;;;:::i;:::-;;;;:::i;:::-;10412:13;;;;;:::i;:::-;;;;:::i;:::-;10427;;;;;:::i;:::-;;;;:::i;:::-;10442:10;;;;;:::i;:::-;;;;:::i;:::-;10377:76;;339:10607;;;;10377:76;;;;;;;;-1:-1:-1;;;10377:76:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;10353:3;10373:129;;;10353:3;;10329:22;10353:3;;:::i;:::-;10314:13;;;;10373:129;10474:12;10353:3;10474:12;10329:22;10474:12;;:::i;:::-;10373:129;;;;;;10377:76;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;10329:22;;;;;;;;;;;;;;9817:741;:::o;10090:146::-;-1:-1:-1;10201:35:12;;;10090:146;;:94;10167:17;;-1:-1:-1;10146:38:12;10090:94;;;9817:741;10037:18;;9817:741;;;;;;;339:10607;10037:18;:::i;339:10607::-;;;;;;;;;;-1:-1:-1;;;339:10607:12;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;339:10607:12;;;;;;;;:::i;2409:136::-;;2536:1;2409:136;;;;2468:57;2476:22;2477:21;;;:10;:21;:::i;:::-;2476:22;;339:10607;2476:22;2468:57;:::i;:::-;2536:1;:::i;339:10607::-;;;;;;;;3148:1061;4014:82;3148:1061;;4112:52;3148:1061;;3415:65;3148:1061;3415:65;;:::i;:::-;3403:77;4040:22;;3656:27;339:10607;;;;3656:27;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;3646:38;;;339:10607;;;3646:38;;339:10607;;;;3646:38;;3565:282;;;:::i;:::-;;;;;339:10607;;3565:282;;;;339:10607;;3565:282;;;;;;339:10607;;3565:282;;;;;;339:10607;;3565:282;;3790:15;3565:282;;;339:10607;;3565:282;3830:5;3565:282;;;339:10607;3896:28;:17;;;:6;:17;:::i;:::-;:28;:::i;:::-;3935;3896:6;3935:21;;:10;:21;:::i;:::-;:28;:::i;:::-;3974:14;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;4040:22;;:::i;:::-;4014:82;;;;;:::i;:::-;;;;;:::i;:::-;;;339:10607;;;;4014:82;3790:15;;;;4014:82;;;:::i;:::-;;;;4112:52;:::i;:::-;;;339:10607;;;;4112:52;3790:15;339:10607;;3790:15;339:10607;;;4112:52;339:10607;3148:1061;3340:17;;3148:1061;;;339:10607;3340:17;:::i;2253:148::-;;2392:1;2253:148;2307:74;2315:27;;:17;;:6;:17;:::i;:27::-;:41;;2346:10;2354:1;2346:10;:::i;2307:74::-;7869:24;7708:193;7876:17;7708:193;7876:17;:6;:17;:::i;7708:193::-;7836:14;7708:193;7836:14;;:::i;:::-;;:::i;339:10607::-;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;:::i;:::-;;;;;;:::i;7253:280::-;7464:61;;7253:280;7422:23;;339:10607;;;;7422:23;;;;;;;;;;:::i;:::-;7412:34;;;339:10607;;;7412:34;;7514:10;;;;:::i;:::-;7464:61;;:::i;2253:148::-;;2392:1;2253:148;;;;2307:74;2315:27;;:17;;:6;:17;:::i;2307:74::-;2392:1;:::i;339:10607::-;;;;;;;;;;-1:-1:-1;;;339:10607:12;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;339:10607:12;;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;;339:10607:12;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;339:10607:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;4540:1042;;5131:65;4540:1042;;;4771:6;;:17;4871:14;4747:41;4771:17;;;;:::i;4747:41::-;4871:14;;4862:50;4870:15;4871:14;;;:::i;4870:15::-;4862:50;:::i;:::-;4983:53;4991:21;;;:10;:21;:::i;:::-;4983:53;:::i;:::-;5131:65;:::i;:::-;5270:30;;;5322:218;;;;5391:49;;5350:21;;;5391:49;5350:21;;:::i;5391:49::-;;;339:10607;;;;5391:49;5424:15;;;;5391:49;;;:::i;:::-;;;;4540:1042;:::o;5322:218::-;5478:50;;;;;:::i;:::-;;;339:10607;;;;5478:50;5512:15;5478:50;5512:15;5505:5;5478:50;;:::i;4540:1042::-;4722:12;;4540:1042;;;339:10607;4722:12;:::i;1500:62:0:-;1554:1;1500:62;;;:::i;:::-;2647:1;2639:10;;;:::i;:::-;2627:22;;;:::i;:::-;;;;:::i;:::-;;2623:91;;2742:8;;;;;:::i;2623:91::-;-1:-1:-1;;;2672:31:0;;;;;;;;;;:::i;2543:215::-;;;;:::i;1796:162::-;1855:7;;:::i;:::-;735:10:1;1855:23:0;;;;;:::i;:::-;;;:::i;:::-;;1851:101;;1796:162;:::o;1851:101::-;-1:-1:-1;;;1901:40:0;;;;;;;;;:::i;:::-;;;;2912:187;3052:40;;3004:6;;;:::i;:::-;3020:17;;;;:::i;:::-;3052:40;:::i;:::-;;;:::i;:::-;;;;339:10607:12;;;;3052:40:0;;;;2912:187::o;339:10607:12:-;;;;;;;;;;;;;;;;;;;;;5721:262:13;5906:41;;5721:262;5906:41;;339:10607:12;;;;5906:41:13;;;;;;;;;;:::i;:::-;5896:52;;;339:10607:12;;;5896:52:13;;5721:262;:::o;339:10607:12:-;;;;;;;;;;;;:::o;:::-;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;6219:215:13:-;;6389:37;6219:215;6389:37;6219:215;;6357:12;339:10607:12;;;6357:12:13;6389:37;;:::i;:::-;2016:25:6;:33;1902:154;;2016:33;1902:154;1993:4;339:10607:12;;;1993:4:6;2016:25;;:::i;:::-;:33;339:10607:12;;2016:33:6;;1902:154;:::o;339:10607:12:-;;;;;;;;;;;;;;;;;;;;:::o;2457:308:6:-;2601:13;2613:1;2601:13;:::i;:::-;2596:134;2634:3;2616:16;2620:12;;339:10607:12;;;2616:16:6;;;;;;2668:51;2634:3;2710:8;;;;;;:::i;:::-;;:::i;:::-;2668:51;;:::i;:::-;2634:3;;:::i;:::-;2601:13;;;2616:16;;;;2457:308;:::o;504:167:5:-;605:5;;;:59;;;613:24;;;339:10607:12;;;;;;;;;605:59:5;640:24;;889:135;;;;;;;791:239;:::o"},"methodIdentifiers":{"batchVerifyProofs(bytes32[],bytes32[],bytes32[],bytes32[])":"c423f910","createZKProof(bytes32,bytes32,bytes32,bytes32)":"c9433940","emergencyInvalidateProof(bytes32)":"5089cec2","getMerkleRoot()":"49590657","getProofCount()":"5be4ee1b","getVoteProof(bytes32)":"a067228e","getVoterProofs(address)":"2607788e","getZKProof(bytes32)":"d51b456b","isNullifierUsed(bytes32)":"22dc7b4c","merkleRoot()":"2eb4a7ab","owner()":"8da5cb5b","proofCounter()":"6d9f4370","renounceOwnership()":"715018a6","submitVoteProof(bytes32,bytes32,bytes32,bytes32)":"451b923c","transferOwnership(address)":"f2fde38b","updateMerkleRoot(bytes32)":"4783f0ef","updateVerificationThreshold(uint256)":"89aa56a4","verificationThreshold()":"167feb09","verifyVoterInclusion(address,bytes32[])":"e6ab8c54","verifyZKProof(bytes32,bytes32,bytes32,bytes32)":"e81f927b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_verificationThreshold\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"nullifier\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"proofHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"NullifierUsed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"voteHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"proofHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"VoteProofSubmitted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"proofHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"nullifierHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"commitmentHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"ZKProofCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"proofHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isValid\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"ZKProofVerified\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"proofHashes\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"voteHashes\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"nullifiers\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"secrets\",\"type\":\"bytes32[]\"}],\"name\":\"batchVerifyProofs\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"validCount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"voteHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"nullifier\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"secret\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"commitmentHash\",\"type\":\"bytes32\"}],\"name\":\"createZKProof\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"proofHash\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"proofHash\",\"type\":\"bytes32\"}],\"name\":\"emergencyInvalidateProof\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMerkleRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getProofCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"proofHash\",\"type\":\"bytes32\"}],\"name\":\"getVoteProof\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"voteHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"nullifier\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"secret\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"publicInputs\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"nullifierHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"commitmentHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"proofHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"verified\",\"type\":\"bool\"}],\"internalType\":\"struct ZKProofVerifier.ZKProof\",\"name\":\"zkProof\",\"type\":\"tuple\"}],\"internalType\":\"struct ZKProofVerifier.VoteProof\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"}],\"name\":\"getVoterProofs\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"proofHash\",\"type\":\"bytes32\"}],\"name\":\"getZKProof\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"publicInputs\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"nullifierHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"commitmentHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"proofHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"verified\",\"type\":\"bool\"}],\"internalType\":\"struct ZKProofVerifier.ZKProof\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"nullifier\",\"type\":\"bytes32\"}],\"name\":\"isNullifierUsed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"merkleRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proofCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"voteHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"nullifier\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"secret\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"commitmentHash\",\"type\":\"bytes32\"}],\"name\":\"submitVoteProof\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"proofHash\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"newRoot\",\"type\":\"bytes32\"}],\"name\":\"updateMerkleRoot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newThreshold\",\"type\":\"uint256\"}],\"name\":\"updateVerificationThreshold\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"verificationThreshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"}],\"name\":\"verifyVoterInclusion\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isValid\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"proofHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"voteHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"nullifier\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"secret\",\"type\":\"bytes32\"}],\"name\":\"verifyZKProof\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isValid\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Zero-Knowledge Proof verification for vote privacy and verifiability\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"batchVerifyProofs(bytes32[],bytes32[],bytes32[],bytes32[])\":{\"details\":\"Batch verifies multiple proofs\",\"params\":{\"nullifiers\":\"Array of nullifiers\",\"proofHashes\":\"Array of proof hashes to verify\",\"secrets\":\"Array of secrets\",\"voteHashes\":\"Array of vote hashes\"},\"returns\":{\"validCount\":\"Number of valid proofs\"}},\"createZKProof(bytes32,bytes32,bytes32,bytes32)\":{\"details\":\"Creates a zero-knowledge proof for vote verification\",\"params\":{\"commitmentHash\":\"Commitment to the vote\",\"nullifier\":\"Unique nullifier to prevent double-spending\",\"secret\":\"Secret value for proof generation\",\"voteHash\":\"Hash of the vote to prove\"},\"returns\":{\"proofHash\":\"The created proof hash\"}},\"emergencyInvalidateProof(bytes32)\":{\"details\":\"Emergency function to invalidate a proof (admin only)\",\"params\":{\"proofHash\":\"The proof hash to invalidate\"}},\"getMerkleRoot()\":{\"details\":\"Gets the current Merkle root\",\"returns\":{\"_0\":\"The Merkle root\"}},\"getProofCount()\":{\"details\":\"Gets the total number of proofs created\",\"returns\":{\"_0\":\"The proof counter\"}},\"getVoteProof(bytes32)\":{\"details\":\"Gets a vote proof by hash\",\"params\":{\"proofHash\":\"The proof hash\"},\"returns\":{\"_0\":\"The vote proof structure\"}},\"getVoterProofs(address)\":{\"details\":\"Gets all proofs for a voter\",\"params\":{\"voter\":\"The voter address\"},\"returns\":{\"_0\":\"Array of proof hashes\"}},\"getZKProof(bytes32)\":{\"details\":\"Gets a ZK proof by hash\",\"params\":{\"proofHash\":\"The proof hash\"},\"returns\":{\"_0\":\"The ZK proof structure\"}},\"isNullifierUsed(bytes32)\":{\"details\":\"Checks if a nullifier has been used\",\"params\":{\"nullifier\":\"The nullifier to check\"},\"returns\":{\"_0\":\"Whether the nullifier has been used\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"submitVoteProof(bytes32,bytes32,bytes32,bytes32)\":{\"details\":\"Submits a complete vote proof with ZK verification\",\"params\":{\"commitmentHash\":\"Commitment to the vote\",\"nullifier\":\"Unique nullifier\",\"secret\":\"Secret for proof generation\",\"voteHash\":\"Hash of the vote\"},\"returns\":{\"proofHash\":\"The created proof hash\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"updateMerkleRoot(bytes32)\":{\"details\":\"Updates the Merkle root for voter verification\",\"params\":{\"newRoot\":\"The new Merkle root\"}},\"updateVerificationThreshold(uint256)\":{\"details\":\"Updates the verification threshold\",\"params\":{\"newThreshold\":\"The new threshold value\"}},\"verifyVoterInclusion(address,bytes32[])\":{\"details\":\"Verifies a voter's inclusion in the Merkle tree\",\"params\":{\"proof\":\"The Merkle proof\",\"voter\":\"The voter address\"},\"returns\":{\"isValid\":\"Whether the voter is included\"}},\"verifyZKProof(bytes32,bytes32,bytes32,bytes32)\":{\"details\":\"Verifies a zero-knowledge proof\",\"params\":{\"nullifier\":\"The nullifier used in the proof\",\"proofHash\":\"The proof hash to verify\",\"secret\":\"The secret used in the proof\",\"voteHash\":\"The vote hash being proved\"},\"returns\":{\"isValid\":\"Whether the proof is valid\"}}},\"title\":\"ZKProofVerifier\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Implements zk-SNARKs principles for secure voting\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ZKProofVerifier.sol\":\"ZKProofVerifier\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]},\"@openzeppelin/contracts/utils/cryptography/Hashes.sol\":{\"keccak256\":\"0x8cbd338f083224b4b6f0ff42cbda641a0a6c31ffcdca197452b97fe4d0918269\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f517dec5ba0c6491395acbf7f1d621f4e89e8f218bf5303c867b1c5ad70c6b11\",\"dweb:/ipfs/QmWmXHRLEw8W6ckth7NyYTU88YfvuS7xSsfae5ksL8qNUe\"]},\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":{\"keccak256\":\"0x36a0c409c437a753cac9b92b75f93b0fbe92803bf2c8ff1517e54b247f166134\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f91ba472de411aa557cdbf6560c40750d87bd11c9060bc04d2ba7119af9d5a6\",\"dweb:/ipfs/QmQjtYo2i7dDvzCEzZ67bDoNSG4RrwMoxPWuqFmX5Xzpuw\"]},\"contracts/ZKProofVerifier.sol\":{\"keccak256\":\"0x6160fd8945810fe1654fb889aa63a8dbf92b0884df70264d0c535ff4f066e706\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b5089786ae8e174af8819da01f0ccf1d66613715c25de27bbc580583c9fef264\",\"dweb:/ipfs/QmPgTDezG3LZ7HsYCK4r4cxNknPurrCjHp3wtYf5YZPXqi\"]},\"contracts/libraries/CryptographicUtils.sol\":{\"keccak256\":\"0x2e560c193276ecc57c28132eee00e6f4d47c44baf4914a66e106947b97799ca0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e5505a80a71dd6846807c2dcb931b7856b3a06374614314a656eff73c530e8a8\",\"dweb:/ipfs/QmfSEFaxFN7BFoV3e3zsVSRAZbUccFfobzbsZriZoKNNj7\"]}},\"version\":1}"}},"contracts/libraries/CryptographicUtils.sol":{"CryptographicUtils":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"voter","type":"address"},{"indexed":false,"internalType":"bytes32","name":"commitmentHash","type":"bytes32"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"CommitmentCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"voter","type":"address"},{"indexed":false,"internalType":"bytes32","name":"originalValue","type":"bytes32"},{"indexed":false,"internalType":"bytes32","name":"commitmentHash","type":"bytes32"}],"name":"CommitmentRevealed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"messageHash","type":"bytes32"},{"indexed":false,"internalType":"uint256","name":"threshold","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"totalSigners","type":"uint256"}],"name":"ThresholdSignatureCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"originalVote","type":"bytes32"},{"indexed":false,"internalType":"bytes32","name":"mixedVote","type":"bytes32"},{"indexed":false,"internalType":"uint256","name":"mixIndex","type":"uint256"}],"name":"VoteMixed","type":"event"}],"evm":{"bytecode":{"functionDebugData":{"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"linkReferences":{},"object":"608060405234601a57604051603f6020823930815050603f90f35b600080fdfe6080604052600080fdfea2646970667358221220bf61458545865114b43cc3d6e0482777de8585fabca03aa70a955a14990ed0a164736f6c634300081c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x1A JUMPI PUSH1 0x40 MLOAD PUSH1 0x3F PUSH1 0x20 DUP3 CODECOPY ADDRESS DUP2 POP POP PUSH1 0x3F SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBF PUSH2 0x4585 GASLIMIT DUP7 MLOAD EQ 0xB4 EXTCODECOPY 0xC3 0xD6 0xE0 BASEFEE 0x27 PUSH24 0xDE8585FABCA03AA70A955A14990ED0A164736F6C63430008 SHR STOP CALLER ","sourceMap":"377:9763:13:-:0;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"revert_error_42b3090547df1d2001c96683413b8cf91c1b902ef5e3cb8d9f6f304cf7446f74":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080604052600080fdfea2646970667358221220bf61458545865114b43cc3d6e0482777de8585fabca03aa70a955a14990ed0a164736f6c634300081c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBF PUSH2 0x4585 GASLIMIT DUP7 MLOAD EQ 0xB4 EXTCODECOPY 0xC3 0xD6 0xE0 BASEFEE 0x27 PUSH24 0xDE8585FABCA03AA70A955A14990ED0A164736F6C63430008 SHR STOP CALLER ","sourceMap":"377:9763:13:-:0;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"commitmentHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"CommitmentCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"originalValue\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"commitmentHash\",\"type\":\"bytes32\"}],\"name\":\"CommitmentRevealed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"messageHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalSigners\",\"type\":\"uint256\"}],\"name\":\"ThresholdSignatureCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"originalVote\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"mixedVote\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"mixIndex\",\"type\":\"uint256\"}],\"name\":\"VoteMixed\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Advanced cryptographic utilities for secure voting\",\"kind\":\"dev\",\"methods\":{},\"title\":\"CryptographicUtils\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Provides commitment schemes, threshold cryptography, and vote mixing\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/CryptographicUtils.sol\":\"CryptographicUtils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]},\"@openzeppelin/contracts/utils/cryptography/Hashes.sol\":{\"keccak256\":\"0x8cbd338f083224b4b6f0ff42cbda641a0a6c31ffcdca197452b97fe4d0918269\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f517dec5ba0c6491395acbf7f1d621f4e89e8f218bf5303c867b1c5ad70c6b11\",\"dweb:/ipfs/QmWmXHRLEw8W6ckth7NyYTU88YfvuS7xSsfae5ksL8qNUe\"]},\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":{\"keccak256\":\"0x36a0c409c437a753cac9b92b75f93b0fbe92803bf2c8ff1517e54b247f166134\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f91ba472de411aa557cdbf6560c40750d87bd11c9060bc04d2ba7119af9d5a6\",\"dweb:/ipfs/QmQjtYo2i7dDvzCEzZ67bDoNSG4RrwMoxPWuqFmX5Xzpuw\"]},\"contracts/libraries/CryptographicUtils.sol\":{\"keccak256\":\"0x2e560c193276ecc57c28132eee00e6f4d47c44baf4914a66e106947b97799ca0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e5505a80a71dd6846807c2dcb931b7856b3a06374614314a656eff73c530e8a8\",\"dweb:/ipfs/QmfSEFaxFN7BFoV3e3zsVSRAZbUccFfobzbsZriZoKNNj7\"]}},\"version\":1}"}}}}}